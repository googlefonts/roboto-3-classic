<?xml version="1.0" encoding="UTF-8"?>
<ttFont sfntVersion="\x00\x01\x00\x00" ttLibVersion="4.40">

  <TSI1>

    <glyphProgram name=".notdef">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name=".null">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 8, 114
SHP[2], 5
CALL[], 3, 2, 114
SHP[2], 8
SRP1[], 2
IP[], 12
MDAP[R], 12
SHP[1], 11
IP[], 0
IP[], 6
SHP[1], 13
SRP1[], 13
SHP[1], 10
SHP[2], 7
SRP1[], 7
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="A.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 5
MIAP[R], 3, 125
SHP[1], 7
SRP2[], 1
IP[], 12
MDAP[R], 12
SRP2[], 3
IP[], 6
IP[], 0
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="A.unic">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 15, 3, 114
SHP[2], 5
MIAP[R], 25, 18
CALL[], 50, 9, 114
SHP[2], 39
SRP2[], 15
IP[], 30
MDAP[R], 30
SHP[1], 59
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="AE">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 8, 114
SHP[2], 14
SHP[2], 11
SRP1[], 11
SHP[1], 12
CALL[], 24, 2, 114
SHP[2], 3
SHP[2], 13
SRP1[], 2
IP[], 19
IP[], 7
MDAP[R], 19
MDAP[R], 7
SRP1[], 19
SHP[1], 20
SRP1[], 7
SHP[1], 8
SHP[2], 23
SRP1[], 23
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="AE.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 13, 10
SHP[1], 23
SRP1[], 23
SHP[1], 2
SRP1[], 2
SHP[1], 3
MIAP[R], 15, 125
SRP2[], 13
IP[], 19
IP[], 6
MDAP[R], 19
MDAP[R], 6
SRP1[], 19
SHP[1], 20
SRP1[], 6
SHP[1], 7
SRP1[], 15
SHP[1], 24
SRP1[], 24
SHP[1], 11
SRP1[], 11
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="AEacute">
/* VTTTalk Unicode 0x1fc */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 118, 714, 322
SVTCA[Y]
CALL[], 25, 3, 1, 1, 108, 86
SHC[2], 6

    </glyphProgram>

    <glyphProgram name="AEacute.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2252, 0, 0
OFFSET[R], 118, 671, 0



SVTCA[Y]
CALL[], 25, 15, 1, 1, 77, 86
SHC[2], 6

    </glyphProgram>

    <glyphProgram name="AEmacron">
/* VTTTalk Unicode 0x1e2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 113, 466, 330
SVTCA[Y]
CALL[], 27, 3, 1, 1, 177, 86
SHC[2], 6

    </glyphProgram>

    <glyphProgram name="Aacute">
/* VTTTalk Unicode 0xc1 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 118, 447, 311
SVTCA[Y]
CALL[], 14, 3, 1, 1, 97, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Aacute.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1973, 0, 0
OFFSET[R], 118, 356, 30

SVTCA[Y]
CALL[], 14, 3, 1, 1, 107, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Aacute.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2022, 0, 0
OFFSET[R], 118, 476, 342



SVTCA[Y]
CALL[], 60, 15, 1, 1, 108, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Abreve">
/* VTTTalk Unicode 0x102 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 393, 243, 311
SVTCA[Y]
CALL[], 19, 7, 1, 1, 83, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Abreve.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1973, 0, 0
OFFSET[R], 393, 152, 30



SVTCA[Y]
CALL[], 19, 3, 1, 1, 93, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Abreve.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2022, 0, 0
OFFSET[R], 393, 272, 342


SVTCA[Y]
CALL[], 65, 15, 1, 1, 94, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Acaron">
/* VTTTalk Unicode 0x1cd */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 376, 222, 311
SVTCA[Y]
CALL[], 20, 7, 1, 1, 106, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Acircumflex">
/* VTTTalk Unicode 0xc2 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 375, 201, 311
SVTCA[Y]
CALL[], 17, 7, 1, 1, 108, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Acircumflex.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1973, 0, 0
OFFSET[R], 375, 110, 30

SVTCA[Y]
CALL[], 19, 3, 1, 1, 107, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Acircumflex.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2022, 0, 0
OFFSET[R], 375, 230, 342



SVTCA[Y]
CALL[], 65, 15, 1, 1, 108, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Adieresis">
/* VTTTalk Unicode 0xc4 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 107, 249, 311
SVTCA[Y]
CALL[], 35, 7, 1, 1, 120, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Adieresis.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1973, 0, 0
OFFSET[R], 107, 158, 30

SVTCA[Y]
CALL[], 23, 3, 1, 1, 107, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Adieresis.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2022, 0, 0
OFFSET[R], 107, 278, 342



SVTCA[Y]
CALL[], 69, 15, 1, 1, 108, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Agrave">
/* VTTTalk Unicode 0xc0 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 69, 303, 311
SVTCA[Y]
CALL[], 16, 7, 1, 1, 97, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Agrave.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1973, 0, 0
OFFSET[R], 69, 212, 30

SVTCA[Y]
CALL[], 16, 7, 1, 1, 107, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Agrave.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2022, 0, 0
OFFSET[R], 69, 332, 342



SVTCA[Y]
CALL[], 62, 15, 1, 1, 108, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Alpha">
/* VTTTalk Unicode 0x391 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0

    </glyphProgram>

    <glyphProgram name="Alpha.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1973, 0, 0

    </glyphProgram>

    <glyphProgram name="Alphatonos">
/* VTTTalk Unicode 0x386 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 557, 3, -1
SVTCA[Y]
CALL[], 14, 3, 0, 0, -194, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Alphatonos.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1973, 0, 0
OFFSET[R], 557, -37, -292

    </glyphProgram>

    <glyphProgram name="Amacron">
/* VTTTalk Unicode 0x100 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 113, 199, 319
SVTCA[Y]
CALL[], 16, 3, 1, 1, 166, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Amacron.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1973, 0, 0
OFFSET[R], 113, 108, 38



SVTCA[Y]
CALL[], 16, 3, 1, 1, 176, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Amacron.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2022, 0, 0
OFFSET[R], 113, 228, 350


SVTCA[Y]
CALL[], 62, 15, 1, 1, 177, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Aogonek">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 8, 114
SHP[2], 5
SRP1[], 5
SHP[1], 15
SRP1[], 15
SHP[1], 14
CALL[], 3, 2, 114
SHP[2], 7
SRP2[], 2
IP[], 0
IP[], 6
MDAP[R], 29
SHP[1], 22
SRP2[], 3
IP[], 12
MDAP[R], 12
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Aogonek.NAV">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 396, 380, 0
SVTCA[Y]
CALL[], 14, 5, 1, 1, 57, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Aogonek.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 1, 18
SHP[1], 5
SRP1[], 5
SHP[1], 14
SHP[1], 15
MIAP[R], 3, 125
SHP[1], 8
MDAP[R], 29
SHP[1], 22
SRP2[], 3
IP[], 12
MDAP[R], 12
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Aogonek.smcp.NAV">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1973, 0, 0
OFFSET[R], 396, 286, 0

    </glyphProgram>

    <glyphProgram name="Aogonek.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2022, 0, 0
OFFSET[R], 396, 796, 0

    </glyphProgram>

    <glyphProgram name="Aring">
/* VTTTalk Unicode 0xc5 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 395, 336, 322
SVTCA[Y]
CALL[], 25, 7, 1, 1, 71, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Aring.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1973, 0, 0
OFFSET[R], 395, 245, 41


SVTCA[Y]
CALL[], 25, 3, 1, 1, 81, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Aring.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2022, 0, 0
OFFSET[R], 395, 365, 353


SVTCA[Y]
CALL[], 71, 15, 1, 1, 108, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Aringacute">
/* VTTTalk Unicode 0x1fa */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1961, 345, 290
SVTCA[Y]
CALL[], 27, 7, 1, 0, -78, 86
SHC[2], 3
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="Aringacute.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1973, 0, 0
OFFSET[R], 1961, 254, 9

    </glyphProgram>

    <glyphProgram name="Aringacute.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2022, 0, 0
OFFSET[R], 1961, 374, 321

    </glyphProgram>

    <glyphProgram name="Atilde">
/* VTTTalk Unicode 0xc3 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 397, 196, 315
SVTCA[Y]
CALL[], 28, 3, 1, 1, 107, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Atilde.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1973, 0, 0
OFFSET[R], 397, 105, 34
SVTCA[Y]
CALL[], 27, 3, 1, 1, 107, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Atilde.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2022, 0, 0
OFFSET[R], 397, 225, 346



SVTCA[Y]
CALL[], 65, 15, 1, 1, 108, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 8, 114
SHP[2], 27
SRP1[], 27
SHP[1], 28
CALL[], 15, 2, 114
SHP[2], 12
SRP1[], 14
IP[], 38
MDAP[R], 38
SHP[1], 1
SHP[1], 39
SRP1[], 39
SHP[1], 2
SRP2[], 38
IP[], 41
IP[], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="B.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 13
MIAP[R], 15, 125
SHP[1], 12
SRP2[], 13
SLOOP[], 3
IP[], 1, 38, 27
MDAP[R], 1
MDAP[R], 38
MDAP[R], 27
SRP1[], 1
SHP[1], 2
SRP2[], 2
IP[], 25
IP[], 41
SRP1[], 27
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Beta">
/* VTTTalk Unicode 0x392 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0

    </glyphProgram>

    <glyphProgram name="Beta.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1972, 0, 0

    </glyphProgram>

    <glyphProgram name="Bhook">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 31
MIAP[R], 33, 2
SHP[1], 8
MDAP[R], 8
SRP1[], 33
SHP[1], 1
SRP1[], 1
SHP[1], 30
SRP1[], 33
SHP[1], 16
MDAP[R], 16
SRP2[], 31
IP[], 19
IP[], 45
MDAP[R], 19
MDAP[R], 45
SRP1[], 19
SHP[1], 56
SHP[1], 20
SRP1[], 20
SHP[1], 57
SRP2[], 19
SLOOP[], 3
IP[], 43, 59, 58
SRP1[], 45
SHP[1], 46
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Btopbar">
/* VTTTalk Unicode 0x182 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 560, -15, 0
OFFSET[R], 636, 0, 0

    </glyphProgram>

    <glyphProgram name="C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 9, 114
MDRP[m&gt;RGr], 0
SHP[1], 36
CALL[], 16, 3, 114
MDRP[m&gt;RGr], 21
SHP[1], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="C.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RGr], 0
SHP[1], 36
MIAP[R], 16, 126
MDRP[m&gt;RGr], 21
SHP[1], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="C.ss06">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 9, 114
MDRP[m&gt;RGr], 0
SHP[1], 38
CALL[], 17, 3, 114
MDRP[m&gt;RGr], 22
SHP[1], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="CR">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="Cacute">
/* VTTTalk Unicode 0x106 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 40, 0, 0
OFFSET[R], 118, 455, 343
SVTCA[Y]
CALL[], 40, 16, 1, 1, 109, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Cacute.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1971, 0, 0
OFFSET[R], 118, 362, 30





SVTCA[Y]
CALL[], 40, 16, 1, 1, 91, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ccaron">
/* VTTTalk Unicode 0x10c */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 40, 0, 0
OFFSET[R], 376, 230, 343
SVTCA[Y]
CALL[], 46, 16, 1, 1, 118, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ccaron.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1971, 0, 0
OFFSET[R], 376, 137, 30



SVTCA[Y]
CALL[], 46, 16, 1, 1, 100, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ccedilla">
/* VTTTalk Unicode 0xc7 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 40, 0, 0
OFFSET[R], 122, 467, -10
SVTCA[Y]
CALL[], 40, 5, 0, 0, 10, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ccedilla.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1971, 0, 0
OFFSET[R], 122, 373, -4

    </glyphProgram>

    <glyphProgram name="Ccircumflex">
/* VTTTalk Unicode 0x108 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 40, 0, 0
OFFSET[R], 375, 209, 343
SVTCA[Y]
CALL[], 43, 16, 1, 1, 120, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ccircumflex.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1971, 0, 0
OFFSET[R], 375, 116, 30


SVTCA[Y]
CALL[], 45, 16, 1, 1, 91, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Chi">
/* VTTTalk Unicode 0x3a7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 61, 0, 0

    </glyphProgram>

    <glyphProgram name="Chi.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1876, 0, 0

    </glyphProgram>

    <glyphProgram name="Chook">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 24, 9, 114
SHP[2], 19
MDAP[R], 19
SHP[2], 55
CALL[], 35, 3, 114
SHP[2], 1
MDAP[R], 1
SHP[1], 40
SHP[2], 7
MDAP[R], 7
SHP[1], 14
SHP[2], 44
SRP1[], 1
SRP2[], 44
IP[], 18
IP[], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 29, 8, 114
CALL[], 30, 2, 114
SHP[2], 15
SRP1[], 15
SHP[1], 14
SRP1[], 29
SHP[1], 1
SRP1[], 1
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="D.cn">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 30, 18
SHP[1], 1
SHP[1], 2
CALL[], 31, 2, 114
SHP[2], 15
SHP[2], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="D.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MIAP[R], 15, 125
SHP[1], 14
SRP1[], 1
SHP[1], 2
SRP1[], 15
SHP[1], 26
SHP[2], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="D.ss06">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 29
SHP[2], 2
CALL[], 16, 2, 114
SHP[2], 15
SHP[2], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Dbar1">
/* VTTTalk Unicode 0x189 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 41, 71, 0
OFFSET[R], 1960, -103, 0
SVTCA[Y]
CALL[], 33, 29, 2, 0, 651, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Dcaron">
/* VTTTalk Unicode 0x10e */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 376, 159, 322
SVTCA[Y]
CALL[], 37, 30, 1, 1, 117, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Dcaron.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1970, 0, 0
OFFSET[R], 376, 50, 30


SVTCA[Y]
CALL[], 36, 29, 1, 1, 116, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Dcroat">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 29, 8, 114
CALL[], 30, 2, 114
SHP[2], 15
SRP1[], 15
SHP[1], 14
SRP1[], 29
IP[], 33
MDAP[R], 33
SHP[1], 34
SRP1[], 29
SHP[1], 1
SRP1[], 1
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Dcroat.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1970, 0, 0
OFFSET[R], 1960, -210, -138

    </glyphProgram>

    <glyphProgram name="Delta">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 18, 114
SHP[2], 5
SHP[2], 12
SRP1[], 12
SHP[1], 13
CALL[], 3, 2, 114
SHP[2], 7
SRP2[], 2
IP[], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Delta.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 9, 10
SHP[1], 3
SRP1[], 3
SHP[1], 2
SRP1[], 9
SHP[1], 5
SRP1[], 5
SHP[1], 0
MIAP[R], 12, 125
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Dhook">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 16, 2, 114
SHP[2], 33
SRP1[], 33
SHP[1], 1
SHP[2], 46
SRP1[], 46
SHP[1], 8
MDAP[R], 8
SRP1[], 46
SHP[1], 34
MDAP[R], 18
SHP[1], 47
MDAP[R], 19
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Digamma">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 8, 114
CALL[], 7, 2, 114
SRP1[], 6
IP[], 10
MDAP[R], 10
MDRP[m&gt;RGr], 2
SHP[1], 11
SRP1[], 11
SHP[1], 3
SRP1[], 7
SHP[1], 15
SRP1[], 15
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Dtopbar">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
CALL[], 14, 2, 114
SHP[2], 13
SRP1[], 1
IP[], 18
MDAP[R], 18
SHP[1], 10
SRP1[], 1
SHP[1], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="E">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 8, 114
SHP[2], 2
SHP[2], 3
CALL[], 7, 2, 114
SHP[2], 14
SHP[2], 15
SRP1[], 6
IP[], 10
MDAP[R], 10
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="E.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 10
SHP[1], 2
SHP[1], 3
MIAP[R], 7, 125
SHP[1], 14
SHP[1], 15
SRP2[], 6
IP[], 10
MDAP[R], 10
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="E.unic">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 37
CALL[], 11, 3, 114
SHP[2], 26
SRP1[], 0
IP[], 18
MDAP[R], 18
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Eacute">
/* VTTTalk Unicode 0xc9 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 118, 394, 322
SVTCA[Y]
CALL[], 16, 7, 1, 1, 108, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Eacute.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1962, 0, 0
OFFSET[R], 118, 312, 30

SVTCA[Y]
CALL[], 16, 7, 1, 1, 108, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Eacute.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2023, 0, 0
OFFSET[R], 118, 510, 353


SVTCA[Y]
CALL[], 45, 11, 1, 1, 121, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ebreve">
/* VTTTalk Unicode 0x114 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 393, 190, 322
SVTCA[Y]
CALL[], 21, 7, 1, 1, 94, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Ebreve.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1962, 0, 0
OFFSET[R], 393, 108, 30

SVTCA[Y]
CALL[], 21, 7, 1, 1, 94, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Ebreve.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2023, 0, 0
OFFSET[R], 393, 306, 353



SVTCA[Y]
CALL[], 50, 11, 1, 1, 132, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ecaron">
/* VTTTalk Unicode 0x11a */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 376, 169, 322
SVTCA[Y]
CALL[], 22, 7, 1, 1, 117, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Ecaron.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1962, 0, 0
OFFSET[R], 376, 87, 30



SVTCA[Y]
CALL[], 22, 7, 1, 1, 116, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Ecaron.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2023, 0, 0
OFFSET[R], 376, 285, 353



SVTCA[Y]
CALL[], 51, 11, 1, 1, 132, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ecircumflex">
/* VTTTalk Unicode 0xca */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 375, 148, 322
SVTCA[Y]
CALL[], 19, 7, 1, 1, 119, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Ecircumflex.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1962, 0, 0
OFFSET[R], 375, 66, 30
SVTCA[Y]
CALL[], 22, 7, 1, 1, 108, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Ecircumflex.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2023, 0, 0
OFFSET[R], 375, 264, 353


SVTCA[Y]
CALL[], 50, 11, 1, 1, 132, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Edieresis">
/* VTTTalk Unicode 0xcb */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 107, 196, 322
SVTCA[Y]
CALL[], 37, 7, 1, 1, 131, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="Edieresis.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1962, 0, 0
OFFSET[R], 107, 114, 30


SVTCA[Y]
CALL[], 25, 7, 1, 1, 132, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="Edieresis.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2023, 0, 0
OFFSET[R], 107, 312, 353

SVTCA[Y]
CALL[], 54, 11, 1, 1, 108, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Edotaccent">
/* VTTTalk Unicode 0x116 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 394, 368, 322
SVTCA[Y]
CALL[], 25, 7, 1, 1, 129, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Edotaccent.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1962, 0, 0
OFFSET[R], 394, 286, 30



SVTCA[Y]
CALL[], 25, 7, 1, 1, 128, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Edotaccent.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2023, 0, 0
OFFSET[R], 394, 484, 353



SVTCA[Y]
CALL[], 54, 11, 1, 1, 142, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Egrave">
/* VTTTalk Unicode 0xc8 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 69, 250, 322
SVTCA[Y]
CALL[], 18, 7, 1, 1, 108, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Egrave.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1962, 0, 0
OFFSET[R], 69, 168, 30

SVTCA[Y]
CALL[], 18, 7, 1, 1, 108, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Egrave.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2023, 0, 0
OFFSET[R], 69, 366, 353


SVTCA[Y]
CALL[], 47, 11, 1, 1, 121, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Emacron">
/* VTTTalk Unicode 0x112 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 113, 146, 330
SVTCA[Y]
CALL[], 18, 7, 1, 1, 177, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Emacron.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1962, 0, 0
OFFSET[R], 113, 64, 38


SVTCA[Y]
CALL[], 18, 7, 1, 1, 176, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Emacron.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2023, 0, 0
OFFSET[R], 113, 262, 361

SVTCA[Y]
CALL[], 47, 11, 1, 1, 190, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Eng">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 4
SHP[2], 5
SHP[2], 9
CALL[], 3, 8, 114
SHP[2], 7
SRP1[], 7
SHP[1], 6
MDAP[R], 14
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Eng.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 5, 10
SHP[1], 2
SRP1[], 2
SHP[1], 10
SRP1[], 10
SHP[1], 8
MIAP[R], 6, 125
SHP[1], 3
SHP[1], 9
CALL[], 16, 15, 114
SHP[2], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Eogonek">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 8, 114
SHP[2], 2
SRP1[], 2
SHP[1], 3
SHP[2], 17
SRP1[], 17
SHP[1], 16
CALL[], 7, 2, 114
SHP[2], 15
SRP1[], 15
SHP[1], 14
MDAP[R], 31
SHP[1], 24
IP[], 11
MDAP[R], 11
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Eogonek.NAV">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 396, 313, 10
SVTCA[Y]
CALL[], 16, 2, 0, 0, 67, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Eogonek.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 18
SHP[1], 5
SHP[1], 16
SRP1[], 16
SHP[1], 17
MIAP[R], 7, 125
SHP[1], 14
SHP[1], 15
SRP2[], 6
IP[], 10
MDAP[R], 10
SHP[1], 11
MDAP[R], 31
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Eogonek.smcp.NAV">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1962, 0, 0
OFFSET[R], 396, 231, 8

    </glyphProgram>

    <glyphProgram name="Eogonek.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2023, 0, 0
OFFSET[R], 396, 518, 0

    </glyphProgram>

    <glyphProgram name="Epsilon">
/* VTTTalk Unicode 0x395 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0

    </glyphProgram>

    <glyphProgram name="Epsilon.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1962, 0, 0

    </glyphProgram>

    <glyphProgram name="Epsilon1">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 11, 3, 114
MDRP[m&lt;RGr], 16
SHP[1], 20
MDAP[R], 52
SHP[1], 42
MDRP[m&lt;RGr], 46
SRP2[], 11
IP[], 33
MDAP[R], 33
SHP[1], 30
SRP2[], 30
IP[], 1
IP[], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Epsilontonos">
/* VTTTalk Unicode 0x388 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 42, 100, 0
OFFSET[R], 557, -300, 0
SVTCA[Y]
CALL[], 16, 7, 0, 0, -193, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Epsilontonos.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1962, 60, 0
OFFSET[R], 557, -281, -289

    </glyphProgram>

    <glyphProgram name="Esh">
/* VTTTalk Unicode 0x1a9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 566, 0, 0

    </glyphProgram>

    <glyphProgram name="Eta">
/* VTTTalk Unicode 0x397 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0

    </glyphProgram>

    <glyphProgram name="Eta.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1892, 0, 0

    </glyphProgram>

    <glyphProgram name="Etatonos">
/* VTTTalk Unicode 0x389 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 45, 100, 0
OFFSET[R], 557, -286, 2

    </glyphProgram>

    <glyphProgram name="Etatonos.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1892, 60, 0
OFFSET[R], 557, -253, -292

    </glyphProgram>

    <glyphProgram name="Eth">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 29, 8, 114
CALL[], 30, 2, 114
SHP[2], 15
SRP1[], 15
SHP[1], 14
SRP1[], 29
IP[], 33
MDAP[R], 33
SHP[1], 34
SRP1[], 29
SHP[1], 1
SRP1[], 1
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Eth.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1970, 0, 0
OFFSET[R], 1960, -210, -138

    </glyphProgram>

    <glyphProgram name="Eturn">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 2, 114
SHP[2], 0
SHP[2], 5
SRP1[], 5
SHP[1], 2
CALL[], 12, 8, 114
SHP[2], 13
SHP[2], 4
SRP1[], 4
SHP[1], 15
SRP1[], 1
IP[], 8
MDAP[R], 8
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Euro">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 7, 13, 114
SHP[2], 0
CALL[], 18, 5, 114
SHP[2], 25
SRP2[], 7
IP[], 38
MDAP[R], 38
SHP[1], 39
MDRP[m&gt;RWh], 43
SHP[2], 42
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Euro.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 7, 11
SHP[1], 0
MIAP[R], 18, 126
SHP[1], 25
SRP2[], 7
IP[], 43
MDAP[R], 43
SHP[1], 42
SHP[1], 38
MDAP[R], 38
SHP[1], 39
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="F">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 8, 114
CALL[], 3, 2, 114
SHP[2], 11
SRP1[], 11
SHP[1], 10
SRP1[], 2
IP[], 6
MDAP[R], 6
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="F.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MIAP[R], 0, 125
SRP1[], 1
IP[], 11
MDAP[R], 11
SHP[1], 10
SRP1[], 1
IP[], 6
MDAP[R], 6
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Fhook">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 13
CALL[], 18, 2, 114
SHP[2], 28
SHP[2], 29
SRP2[], 6
IP[], 24
MDAP[R], 24
SHP[1], 25
SRP1[], 25
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Fturn">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 2, 114
MIAP[R], 3, 8
SHP[1], 0
SHP[1], 10
IP[], 7
MDAP[R], 7
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="G">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 9, 114
SHP[2], 36
CALL[], 16, 3, 114
MDRP[m&gt;RGr], 21
SHP[1], 25
SRP2[], 5
IP[], 42
MDAP[R], 42
SHP[1], 43
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="G.alt">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 9, 114
SHP[2], 37
CALL[], 17, 3, 114
MDRP[m&gt;RGr], 22
SHP[1], 26
SRP2[], 6
IP[], 44
MDAP[R], 44
SHP[1], 45
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="G.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 36
MIAP[R], 16, 126
SHP[1], 25
SRP2[], 5
IP[], 42
MDAP[R], 42
SHP[1], 41
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="G.ss06">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 9, 114
SHP[2], 38
CALL[], 17, 3, 114
MDRP[m&gt;RGr], 22
SHP[1], 26
SRP2[], 5
IP[], 44
MDAP[R], 44
SHP[1], 45
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Gacute">
/* VTTTalk Unicode 0x1f4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 44, 0, 0
OFFSET[R], 118, 447, 343
SVTCA[Y]
CALL[], 44, 16, 1, 1, 109, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Gamma">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 8, 114
CALL[], 5, 2, 114
SHP[2], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Gamma.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
MIAP[R], 3, 125
SHP[1], 6
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Gamma1">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 15
CALL[], 0, 2, 114
SRP1[], 15
SHP[1], 38
SHP[2], 31
SHP[2], 25
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Gbar">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 9, 114
SHP[2], 41
CALL[], 20, 3, 114
SHP[2], 29
SRP1[], 9
IP[], 47
MDAP[R], 47
SHP[1], 48
MDRP[m&gt;RWh], 3
SHP[2], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Gbreve">
/* VTTTalk Unicode 0x11e */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 44, 0, 0
OFFSET[R], 393, 243, 343
SVTCA[Y]
CALL[], 49, 16, 1, 1, 95, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Gbreve.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1893, 0, 0
OFFSET[R], 393, 155, 30



SVTCA[Y]
CALL[], 48, 16, 1, 1, 77, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Gcaron">
/* VTTTalk Unicode 0x1e6 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 44, 0, 0
OFFSET[R], 376, 222, 343
SVTCA[Y]
CALL[], 50, 16, 1, 1, 118, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Gcircumflex">
/* VTTTalk Unicode 0x11c */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 44, 0, 0
OFFSET[R], 375, 201, 343
SVTCA[Y]
CALL[], 47, 16, 1, 1, 120, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Gcircumflex.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1893, 0, 0
OFFSET[R], 375, 113, 30



SVTCA[Y]
CALL[], 48, 16, 1, 1, 102, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Gcommaaccent">
/* VTTTalk Unicode 0x122 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 44, 0, 0
OFFSET[R], 1832, 474, -363
SVTCA[Y]
CALL[], 53, 5, 1, 1, -104, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Gcommaaccent.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1893, 0, 0
OFFSET[R], 1832, 335, -358


SVTCA[Y]
CALL[], 52, 5, 1, 1, -103, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Germandbls">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 8
CALL[], 10, 3, 114
SHP[2], 20
CALL[], 48, 9, 114
SHP[2], 29
SRP1[], 10
IP[], 37
MDAP[R], 37
SRP2[], 10
IP[], 4
IP[], 0
SHP[1], 15
SHP[1], 39
SRP1[], 39
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Germandbls.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
MIAP[R], 9, 126
SHP[1], 19
SRP2[], 2
IP[], 0
MDAP[R], 0
SHP[1], 4
CALL[], 47, 11, 114
SHP[2], 27
SRP1[], 9
IP[], 35
MDAP[R], 35
SHP[1], 13
SHP[1], 38
SRP1[], 38
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Ghook">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 24, 9, 114
SHP[2], 55
SRP2[], 7
IP[], 61
MDAP[R], 61
SHP[1], 62
CALL[], 35, 3, 114
SHP[2], 44
SHP[2], 1
MDAP[R], 1
SHP[1], 40
SHP[2], 7
MDAP[R], 7
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Gsmallcap">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 11, 114
SHP[2], 30
CALL[], 14, 7, 114
SHP[2], 21
SRP1[], 5
IP[], 35
MDAP[R], 35
SHP[1], 36
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Gsmallcaphook">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 13
CALL[], 23, 11, 114
SHP[2], 48
CALL[], 32, 7, 114
SHP[2], 39
SHP[2], 36
SRP1[], 36
SHP[1], 1
SRP1[], 23
IP[], 53
MDAP[R], 53
SHP[1], 54
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="H">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 8, 114
CALL[], 7, 2, 114
SRP1[], 6
IP[], 2
MDAP[R], 2
SHP[1], 3
SHP[2], 8
SRP1[], 6
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="H.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
MIAP[R], 4, 125
SHP[1], 8
SRP1[], 5
SHP[1], 9
SRP2[], 4
IP[], 3
MDAP[R], 3
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Hbar">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 8, 114
SHP[2], 13
CALL[], 11, 2, 114
SHP[2], 12
SRP1[], 10
IP[], 6
MDAP[R], 6
SHP[1], 7
SMD[], 128
MDRP[m&gt;RGr], 2
SHP[2], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Hbar.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 10
SHP[1], 10
MIAP[R], 7, 125
SHP[1], 11
SHP[1], 15
MDAP[R], 15
SHP[1], 14
SMD[], 128
MDRP[m&gt;RGr], 3
SHP[2], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Hcircumflex">
/* VTTTalk Unicode 0x124 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 375, 241, 322
SVTCA[Y]
CALL[], 15, 11, 1, 1, 119, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Hcircumflex.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1892, 0, 0
OFFSET[R], 375, 144, 30



SVTCA[Y]
CALL[], 17, 7, 1, 1, 118, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="I">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 8, 114
CALL[], 0, 2, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="I.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MIAP[R], 0, 125
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="IJ">
/* VTTTalk Unicode 0x132 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 46, 0, 0
OFFSET[R], 47, 557, 0

    </glyphProgram>

    <glyphProgram name="IJ.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1891, 0, 0
OFFSET[R], 1890, 489, 0

    </glyphProgram>

    <glyphProgram name="Iacute">
/* VTTTalk Unicode 0xcd */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 118, 54, 322
SVTCA[Y]
CALL[], 4, 3, 1, 1, 108, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Iacute.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1891, 0, 0
OFFSET[R], 118, 19, 30



SVTCA[Y]
CALL[], 4, 3, 1, 1, 107, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ibar">
/* VTTTalk Unicode 0x197 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 46, 55, 0
OFFSET[R], 1960, -123, 0
SVTCA[Y]
CALL[], 6, 2, 2, 0, 651, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ibreve">
/* VTTTalk Unicode 0x12c */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 393, -150, 322
SVTCA[Y]
CALL[], 9, 3, 1, 1, 94, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ibreve.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1891, 0, 0
OFFSET[R], 393, -185, 30


SVTCA[Y]
CALL[], 9, 3, 1, 1, 93, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Icaron">
/* VTTTalk Unicode 0x1cf */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 376, -171, 322
SVTCA[Y]
CALL[], 10, 3, 1, 1, 117, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Icircumflex">
/* VTTTalk Unicode 0xce */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 375, -192, 322
SVTCA[Y]
CALL[], 7, 3, 1, 1, 119, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Icircumflex.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1891, 0, 0
OFFSET[R], 375, -227, 30



SVTCA[Y]
CALL[], 9, 3, 1, 1, 118, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Idieresis">
/* VTTTalk Unicode 0xcf */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 107, -144, 322
SVTCA[Y]
CALL[], 25, 3, 1, 1, 131, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Idieresis.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1891, 0, 0
OFFSET[R], 107, -179, 30



SVTCA[Y]
CALL[], 13, 3, 1, 1, 132, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Idotaccent">
/* VTTTalk Unicode 0x130 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 394, 28, 322
SVTCA[Y]
CALL[], 13, 3, 1, 1, 129, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Idotaccent.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1891, 0, 0
OFFSET[R], 394, -7, 30


SVTCA[Y]
CALL[], 13, 3, 1, 1, 128, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Igrave">
/* VTTTalk Unicode 0xcc */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 69, -90, 322
SVTCA[Y]
CALL[], 6, 3, 1, 1, 108, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Igrave.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1891, 0, 0
OFFSET[R], 69, -125, 30


SVTCA[Y]
CALL[], 6, 3, 1, 1, 107, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Imacron">
/* VTTTalk Unicode 0x12a */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 113, -194, 330
SVTCA[Y]
CALL[], 6, 3, 1, 1, 177, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Imacron.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1891, 0, 0
OFFSET[R], 113, -229, 38


SVTCA[Y]
CALL[], 6, 3, 1, 1, 176, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Iogonek">
/* VTTTalk Unicode 0x12e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 396, -27, 9
SVTCA[Y]
CALL[], 5, 2, 0, 0, 0, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Iogonek.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1891, 0, 0
OFFSET[R], 396, -45, 0

    </glyphProgram>

    <glyphProgram name="Iota">
/* VTTTalk Unicode 0x399 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0

    </glyphProgram>

    <glyphProgram name="Iota.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1891, 0, 0

    </glyphProgram>

    <glyphProgram name="Iota1">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 0, 114
CALL[], 12, 11, 114
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Iotadieresis">
/* VTTTalk Unicode 0x3aa */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 107, -144, 322
SVTCA[Y]
CALL[], 25, 3, 1, 1, 131, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Iotadieresis.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1891, 0, 0
OFFSET[R], 107, -179, 30

SVTCA[Y]
CALL[], 13, 3, 1, 1, 132, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Iotatonos">
/* VTTTalk Unicode 0x38a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 46, 100, 0
OFFSET[R], 557, -280, 2
SVTCA[Y]
CALL[], 4, 3, 0, 0, -191, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Iotatonos.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1891, 60, 0
OFFSET[R], 557, -248, -289

    </glyphProgram>

    <glyphProgram name="Ismallcap">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 10
SHP[1], 11
CALL[], 7, 6, 114
SHP[2], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Itilde">
/* VTTTalk Unicode 0x128 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 397, -197, 326
SVTCA[Y]
CALL[], 18, 3, 1, 1, 118, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Itilde.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1891, 0, 0
OFFSET[R], 397, -232, 34


SVTCA[Y]
CALL[], 9, 3, 1, 1, 127, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="J">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 2, 114
CALL[], 7, 9, 114
SHP[2], 12
MDAP[R], 12
SHP[2], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="J.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 1, 125
MDAP[R], 7
MDRP[m&gt;RGr], 12
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Jcircumflex">
/* VTTTalk Unicode 0x134 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 47, 0, 0
OFFSET[R], 375, 381, 309
SVTCA[Y]
CALL[], 23, 1, 1, 1, 106, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Jcircumflex.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1890, 0, 0
OFFSET[R], 375, 263, 30


SVTCA[Y]
CALL[], 25, 1, 1, 1, 118, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="K">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 8, 114
SHP[2], 10
CALL[], 3, 2, 114
SHP[2], 4
SRP2[], 2
SLOOP[], 6
IP[], 6, 7, 11, 5, 12, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="K.alt">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 8
CALL[], 3, 2, 114
SRP2[], 2
IP[], 6
MDAP[R], 6
SHP[1], 7
SHP[1], 11
SRP1[], 11
SHP[1], 12
MIAP[R], 9, 2
MIAP[R], 10, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="K.alt2">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 8
SHP[1], 10
CALL[], 3, 2, 114
SHP[2], 9
SRP2[], 2
SLOOP[], 5
IP[], 6, 11, 7, 8, 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="K.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 125
SHP[2], 4
MDAP[R], 1
SHP[1], 10
SLOOP[], 6
IP[], 6, 7, 11, 5, 12, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Kappa">
/* VTTTalk Unicode 0x39a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 48, 0, 0

    </glyphProgram>

    <glyphProgram name="Kappa.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1889, 0, 0

    </glyphProgram>

    <glyphProgram name="Kcaron">
/* VTTTalk Unicode 0x1e8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 48, 0, 0
OFFSET[R], 376, 155, 305
SVTCA[Y]
CALL[], 20, 3, 1, 1, 100, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Kcommaaccent">
/* VTTTalk Unicode 0x136 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

OFFSET[R], 48, 0, 0
OFFSET[R], 1832, 404, -264
SVTCA[Y]
CALL[], 23, 2, 1, 0, -25, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Kcommaaccent.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1889, 0, 0
OFFSET[R], 1832, 276, -348

    </glyphProgram>

    <glyphProgram name="Khook">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 18
CALL[], 3, 2, 114
SRP2[], 2
SLOOP[], 3
IP[], 5, 24, 6
MIAP[R], 4, 18
CALL[], 12, 3, 114
SHP[2], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Koppa">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 15, 3, 114
SHP[2], 22
CALL[], 39, 9, 114
SRP1[], 15
IP[], 5
IP[], 2
SRP1[], 5
SHP[1], 3
SHP[1], 4
SHP[1], 6
SHP[1], 7
SRP1[], 2
SHP[1], 1
SRP1[], 1
SHP[1], 30
SRP1[], 2
SHP[1], 31
SRP1[], 31
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="L">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 8, 114
CALL[], 7, 2, 114
SRP1[], 6
SHP[1], 2
SRP1[], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="L.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MIAP[R], 4, 125
SRP1[], 2
SHP[1], 3
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="LJ">
/* VTTTalk Unicode 0x1c7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 49, 0, 0
OFFSET[R], 47, 1103, 0

    </glyphProgram>

    <glyphProgram name="Lacute">
/* VTTTalk Unicode 0x139 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 118, 39, 306
SVTCA[Y]
CALL[], 8, 7, 1, 1, 92, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Lacute.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1888, 0, 0
OFFSET[R], 118, 8, 30



SVTCA[Y]
CALL[], 8, 7, 1, 1, 107, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Lambda">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 8, 114
SHP[2], 5
CALL[], 3, 2, 114
SHP[2], 7
SRP2[], 2
IP[], 0
IP[], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Lambda.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 8, 125
SHP[1], 4
MIAP[R], 9, 10
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Lcaron">
/* VTTTalk Unicode 0x13d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 1832, 470, 1218
SVTCA[Y]
CALL[], 17, 7, 0, 0, 1, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Lcaron.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1888, 0, 0
OFFSET[R], 1832, 382, 928

    </glyphProgram>

    <glyphProgram name="Lcommaaccent">
/* VTTTalk Unicode 0x13b */
/* ACT generated Fri Mar 27 17:57:47 2020 */

OFFSET[R], 49, 0, 0
OFFSET[R], 1832, 364, -344
SVTCA[Y]
CALL[], 17, 2, 1, 1, -105, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Lcommaaccent.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1888, 0, 0
OFFSET[R], 1832, 271, -346


SVTCA[Y]
CALL[], 17, 6, 1, 1, -107, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Ldot">
/* VTTTalk Unicode 0x13f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 394, 444, -572

    </glyphProgram>

    <glyphProgram name="Ldot.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1888, 0, 0
OFFSET[R], 394, 358, -715

    </glyphProgram>

    <glyphProgram name="Lj">
/* VTTTalk Unicode 0x1c8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 49, 0, 0
OFFSET[R], 79, 1103, 0

    </glyphProgram>

    <glyphProgram name="Lslash">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 8, 114
CALL[], 11, 2, 114
SRP1[], 10
SHP[1], 6
SRP1[], 6
SHP[1], 7
SHP[2], 0
SRP1[], 10
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Lslash.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 10
SHP[1], 2
SHP[1], 3
MIAP[R], 7, 125
SRP2[], 6
IP[], 10
MDAP[R], 10
SHP[1], 11
SHP[1], 9
MDAP[R], 9
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Lsmallcap">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
SHP[1], 6
CALL[], 4, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="M">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 7, 2, 114
SHP[2], 0
SHP[2], 4
SHP[2], 12
CALL[], 11, 8, 114
SHP[2], 5
SHP[2], 14
SRP1[], 7
IP[], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="M.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 125
SHP[2], 4
SHP[2], 7
SHP[2], 12
MDAP[R], 5
SHP[1], 10
SHP[1], 14
IP[], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="M.unic">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 3, 114
SHP[2], 19
CALL[], 30, 3, 114
SHP[2], 43
CALL[], 51, 2, 114
MDAP[R], 12
SHP[1], 37
SHP[1], 49
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Mu">
/* VTTTalk Unicode 0x39c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 50, 0, 0

    </glyphProgram>

    <glyphProgram name="Mu.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1887, 0, 0

    </glyphProgram>

    <glyphProgram name="N">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 8, 114
SHP[2], 2
CALL[], 7, 2, 114
SHP[2], 9
SRP2[], 5
IP[], 8
IP[], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="N.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 125
SHP[2], 7
MDAP[R], 1
SHP[1], 5
IP[], 8
IP[], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="N.unic">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 3, 114
SHP[2], 19
MDAP[R], 12
SHP[1], 25
CALL[], 27, 2, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="NJ">
/* VTTTalk Unicode 0x1ca */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 51, 0, 0
OFFSET[R], 47, 1461, 0

    </glyphProgram>

    <glyphProgram name="Nacute">
/* VTTTalk Unicode 0x143 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 51, 0, 0
OFFSET[R], 118, 501, 311
SVTCA[Y]
CALL[], 10, 6, 1, 1, 97, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Nacute.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1886, 0, 0
OFFSET[R], 118, 399, 30




SVTCA[Y]
CALL[], 10, 6, 1, 1, 107, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Nacute.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2020, 0, 0
OFFSET[R], 118, 501, 342


SVTCA[Y]
CALL[], 32, 6, 1, 1, 108, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Ncaron">
/* VTTTalk Unicode 0x147 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 51, 0, 0
OFFSET[R], 376, 276, 311
SVTCA[Y]
CALL[], 16, 9, 1, 1, 106, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ncaron.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1886, 0, 0
OFFSET[R], 376, 174, 30




SVTCA[Y]
CALL[], 16, 6, 1, 1, 116, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ncaron.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2020, 0, 0
OFFSET[R], 376, 276, 342


SVTCA[Y]
CALL[], 34, 6, 1, 1, 108, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Ncommaaccent">
/* VTTTalk Unicode 0x145 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

OFFSET[R], 51, 0, 0
OFFSET[R], 1832, 464, -344
SVTCA[Y]
CALL[], 19, 5, 1, 1, -105, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ncommaaccent.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1886, 0, 0
OFFSET[R], 1832, 363, -350

    </glyphProgram>

    <glyphProgram name="Ncommaaccent.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2020, 0, 0
OFFSET[R], 1832, 464, -344

    </glyphProgram>

    <glyphProgram name="Nhook">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 13
CALL[], 18, 2, 114
SHP[2], 25
MIAP[R], 20, 18
IP[], 26
IP[], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Nj">
/* VTTTalk Unicode 0x1cb */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 51, 0, 0
OFFSET[R], 79, 1461, 0

    </glyphProgram>

    <glyphProgram name="Nsmallcap">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 6, 114
SHP[2], 0
SHP[2], 1
MIAP[R], 7, 10
MIAP[R], 8, 10
SHP[1], 2
SHP[1], 3
CALL[], 9, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Ntilde">
/* VTTTalk Unicode 0xd1 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 51, 0, 0
OFFSET[R], 397, 250, 315
SVTCA[Y]
CALL[], 24, 6, 1, 1, 107, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ntilde.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1886, 0, 0
OFFSET[R], 397, 148, 34




SVTCA[Y]
CALL[], 24, 6, 1, 1, 118, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ntilde.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2020, 0, 0
OFFSET[R], 397, 250, 346


SVTCA[Y]
CALL[], 34, 6, 1, 1, 128, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Nu">
/* VTTTalk Unicode 0x39d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 51, 0, 0

    </glyphProgram>

    <glyphProgram name="Nu.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1886, 0, 0

    </glyphProgram>

    <glyphProgram name="O">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 9, 114
CALL[], 17, 3, 114
SHP[2], 28
SRP1[], 6
SHP[1], 39
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="O.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 11
MIAP[R], 17, 126
SHP[1], 28
SRP1[], 6
SHP[1], 39
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="O.ss06">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 7, 9, 114
SHP[2], 45
CALL[], 20, 3, 114
SHP[2], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="OE">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 3
SHP[2], 3
SHP[2], 7
SRP1[], 7
SHP[1], 4
MIAP[R], 25, 9
SHP[1], 22
SHP[1], 18
SRP1[], 18
SHP[1], 21
CALL[], 38, 8, 114
SHP[2], 39
SHP[2], 41
CALL[], 51, 2, 114
SHP[2], 40
SHP[2], 50
SRP1[], 38
IP[], 46
MDAP[R], 46
SHP[1], 47
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="OE.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 27, 11
SHP[1], 17
MIAP[R], 38, 126
SHP[1], 6
SRP1[], 6
SHP[1], 1
SRP1[], 27
SRP2[], 38
IP[], 52
MDAP[R], 52
SHP[1], 53
MIAP[R], 48, 10
SHP[1], 23
SHP[1], 45
SRP1[], 45
SHP[1], 22
MIAP[R], 49, 125
SHP[1], 57
SRP1[], 57
SHP[1], 56
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="OEsmallcap">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
SHP[1], 3
CALL[], 4, 6, 114
MIAP[R], 5, 10
CALL[], 12, 6, 114
CALL[], 16, 11, 114
SHP[2], 47
CALL[], 27, 7, 114
SHP[2], 36
CALL[], 31, 6, 114
SHP[2], 32
SRP2[], 5
IP[], 10
MDAP[R], 10
SHP[1], 11
MIAP[R], 52, 10
SHP[1], 51
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="OI">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 9, 114
SHP[2], 18
CALL[], 44, 3, 114
SHP[2], 31
SRP2[], 5
IP[], 26
IP[], 23
MDAP[R], 49
CALL[], 54, 2, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Oacute">
/* VTTTalk Unicode 0xd3 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 118, 482, 313
SVTCA[Y]
CALL[], 44, 17, 1, 1, 79, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Oacute.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1885, 0, 0
OFFSET[R], 118, 381, 30



SVTCA[Y]
CALL[], 44, 17, 1, 1, 91, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Obar">
/* VTTTalk Unicode 0x19f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 685, 0, 0

    </glyphProgram>

    <glyphProgram name="Obreve">
/* VTTTalk Unicode 0x14e */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 393, 278, 313
SVTCA[Y]
CALL[], 49, 17, 1, 1, 65, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Obreve.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1885, 0, 0
OFFSET[R], 393, 177, 30





SVTCA[Y]
CALL[], 49, 17, 1, 1, 77, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Ocaron">
/* VTTTalk Unicode 0x1d1 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 376, 257, 313
SVTCA[Y]
CALL[], 50, 17, 1, 1, 88, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Ocircumflex">
/* VTTTalk Unicode 0xd4 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 375, 236, 313
SVTCA[Y]
CALL[], 47, 17, 1, 1, 90, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Ocircumflex.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1885, 0, 0
OFFSET[R], 375, 135, 30




SVTCA[Y]
CALL[], 49, 17, 1, 1, 91, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Odieresis">
/* VTTTalk Unicode 0xd6 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 107, 284, 313
SVTCA[Y]
CALL[], 65, 17, 1, 1, 102, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Odieresis.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1885, 0, 0
OFFSET[R], 107, 183, 30




SVTCA[Y]
CALL[], 53, 17, 1, 1, 116, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Ograve">
/* VTTTalk Unicode 0xd2 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 69, 338, 313
SVTCA[Y]
CALL[], 46, 17, 1, 1, 79, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Ograve.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1885, 0, 0
OFFSET[R], 69, 237, 30



SVTCA[Y]
CALL[], 46, 17, 1, 1, 91, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Ohorn">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 16, 9, 114
SHP[2], 53
CALL[], 28, 3, 114
SHP[2], 0
MDAP[R], 0
SHP[2], 41
SRP1[], 41
IP[], 6
SRP1[], 6
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Ohungarumlaut">
/* VTTTalk Unicode 0x150 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 398, 363, 313
SVTCA[Y]
CALL[], 44, 17, 1, 1, 69, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Ohungarumlaut.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1885, 0, 0
OFFSET[R], 398, 262, 30





SVTCA[Y]
CALL[], 48, 17, 1, 1, 81, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Omacron">
/* VTTTalk Unicode 0x14c */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 113, 234, 321
SVTCA[Y]
CALL[], 46, 17, 1, 1, 148, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Omacron.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1885, 0, 0
OFFSET[R], 113, 133, 38




SVTCA[Y]
CALL[], 46, 17, 1, 1, 160, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Omega">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 29, 3, 114
SHP[2], 6
CALL[], 50, 18, 114
SHP[2], 46
SHP[2], 51
SHP[2], 17
SRP1[], 17
SHP[1], 52
SHP[1], 41
SRP1[], 41
SHP[1], 47
SHP[2], 18
SRP1[], 18
SHP[1], 40
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Omega.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 29, 126
SHP[1], 6
MIAP[R], 49, 10
SHP[1], 50
SRP1[], 50
SHP[1], 17
SRP1[], 17
SHP[1], 41
SHP[1], 18
SRP1[], 18
SHP[1], 40
MIAP[R], 51, 10
SHP[1], 46
MIAP[R], 52, 10
SHP[1], 45
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Omegatonos">
/* VTTTalk Unicode 0x38f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 569, 20, 0
OFFSET[R], 557, -188, -1

SVTCA[Y]
CALL[], 54, 29, 0, 0, -214, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Omegatonos.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1907, 10, 0
OFFSET[R], 557, -193, -293

    </glyphProgram>

    <glyphProgram name="Omicron">
/* VTTTalk Unicode 0x39f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0

    </glyphProgram>

    <glyphProgram name="Omicron.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1885, 0, 0

    </glyphProgram>

    <glyphProgram name="Omicrontonos">
/* VTTTalk Unicode 0x38c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 52, 20, 0
OFFSET[R], 557, -190, -1
SVTCA[Y]
CALL[], 44, 17, 0, 0, -214, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Omicrontonos.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1885, 10, 0
OFFSET[R], 557, -217, -292

    </glyphProgram>

    <glyphProgram name="Oogonek">
/* VTTTalk Unicode 0x1ea */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 396, 401, 0
SVTCA[Y]
CALL[], 44, 6, 0, 0, 77, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Oogonek.NAV">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 396, 401, 0
SVTCA[Y]
CALL[], 44, 6, 0, 0, 77, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Oogonek.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1885, 0, 0
OFFSET[R], 396, 325, 0

    </glyphProgram>

    <glyphProgram name="Oogonek.smcp.NAV">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1885, 0, 0
OFFSET[R], 396, 325, 0

    </glyphProgram>

    <glyphProgram name="Oopen">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 25, 3, 114
SHP[2], 16
SHP[2], 20
MDAP[R], 20
CALL[], 36, 9, 114
SHP[2], 1
MDAP[R], 1
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Oslash">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 9, 114
CALL[], 22, 3, 114
SHP[2], 35
SRP1[], 10
SHP[1], 47
SHP[2], 0
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Oslash.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 11, 114
SHP[2], 39
SHP[2], 45
RUTG[]
MDAP[R], 45
RTG[]
MIAP[R], 17, 126
SHP[1], 28
SHP[1], 47
RUTG[]
MDAP[R], 47
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Oslashacute">
/* VTTTalk Unicode 0x1fe */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 132, 0, 0
OFFSET[R], 118, 490, 384
SVTCA[Y]
CALL[], 52, 22, 1, 1, 150, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Oslashacute.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2254, 0, 0
OFFSET[R], 118, 381, 30




SVTCA[Y]
CALL[], 48, 17, 1, 1, 91, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Otilde">
/* VTTTalk Unicode 0xd5 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 397, 231, 317
SVTCA[Y]
CALL[], 58, 17, 1, 1, 89, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Otilde.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1885, 0, 0
OFFSET[R], 397, 130, 34




SVTCA[Y]
CALL[], 49, 17, 1, 1, 111, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="P">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 8, 114
CALL[], 15, 2, 114
SHP[2], 12
SRP1[], 14
IP[], 1
MDAP[R], 1
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="P.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 13
MIAP[R], 15, 125
SHP[1], 12
SRP2[], 13
IP[], 1
MDAP[R], 1
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Phi">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 40, 2, 114
MDRP[m&gt;RBl], 11
SHP[2], 10
SHP[2], 30
SRP1[], 30
SHP[1], 31
CALL[], 41, 8, 114
MDRP[m&gt;RBl], 0
SHP[2], 1
SHP[2], 21
SRP1[], 21
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Phi.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 42, 10
MDRP[m&gt;RBl], 12
SHP[2], 30
MIAP[R], 43, 125
SHP[1], 0
MDAP[R], 0
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Phook">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 31
CALL[], 33, 2, 114
SHP[2], 8
MDAP[R], 8
SHP[2], 34
SHP[2], 1
SRP1[], 1
SHP[1], 30
SRP1[], 31
IP[], 19
MDAP[R], 19
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Pi">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 8, 114
CALL[], 7, 2, 114
SHP[2], 4
SRP1[], 6
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Pi.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 3, 125
SHP[1], 0
SHP[1], 2
SHP[1], 7
SHP[1], 11
MDAP[R], 5
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Psi">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 13, 2, 114
SHP[2], 1
SHP[2], 29
CALL[], 28, 8, 114
SRP1[], 13
IP[], 7
SRP1[], 7
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Psi.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 13, 125
SHP[1], 29
SRP1[], 29
SHP[1], 0
MIAP[R], 28, 14
SRP2[], 13
IP[], 7
SRP1[], 7
SHP[1], 6
SHP[1], 20
SRP1[], 20
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Q">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
CALL[], 10, 9, 114
SHP[2], 3
SHP[2], 43
SRP1[], 43
SHP[1], 0
CALL[], 21, 3, 114
SHP[2], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Q.cn">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 1
CALL[], 10, 9, 114
SHP[2], 3
SHP[2], 47
SRP1[], 47
SHP[1], 0
CALL[], 22, 3, 114
SHP[2], 35
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Q.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MIAP[R], 21, 126
SHP[1], 32
SRP2[], 2
IP[], 10
MDAP[R], 10
SHP[1], 43
SRP2[], 43
IP[], 3
SRP1[], 3
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Q.ss06">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 1
CALL[], 11, 9, 114
SHP[2], 49
SHP[2], 3
SRP1[], 3
SHP[1], 0
CALL[], 24, 3, 114
SHP[2], 37
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="R">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 22
CALL[], 24, 8, 114
SHP[2], 25
SHP[2], 28
SRP2[], 0
IP[], 11
MDAP[R], 11
SHP[1], 12
SRP2[], 12
SLOOP[], 3
IP[], 27, 26, 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="R.alt">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 14, 8
CALL[], 15, 2, 114
SHP[2], 12
SRP2[], 14
IP[], 1
MDAP[R], 1
SHP[1], 2
SHP[1], 26
SRP1[], 26
SHP[1], 27
MIAP[R], 38, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="R.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 125
SHP[2], 23
MDAP[R], 24
SHP[1], 26
IP[], 12
MDAP[R], 12
SHP[1], 13
SRP2[], 13
IP[], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Racute">
/* VTTTalk Unicode 0x154 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 55, 0, 0
OFFSET[R], 118, 385, 311
SVTCA[Y]
CALL[], 30, 0, 1, 1, 97, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Racute.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1882, 0, 0
OFFSET[R], 118, 295, 30





SVTCA[Y]
CALL[], 31, 0, 1, 1, 107, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Rcaron">
/* VTTTalk Unicode 0x158 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 55, 0, 0
OFFSET[R], 376, 160, 311
SVTCA[Y]
CALL[], 36, 0, 1, 1, 106, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Rcaron.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1882, 0, 0
OFFSET[R], 376, 70, 30



SVTCA[Y]
CALL[], 37, 0, 1, 1, 116, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Rcommaaccent">
/* VTTTalk Unicode 0x156 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

OFFSET[R], 55, 0, 0
OFFSET[R], 1832, 355, -344
SVTCA[Y]
CALL[], 39, 24, 1, 1, -105, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Rcommaaccent.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1882, 0, 0
OFFSET[R], 1832, 269, -346

    </glyphProgram>

    <glyphProgram name="Rho">
/* VTTTalk Unicode 0x3a1 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 53, 0, 0

    </glyphProgram>

    <glyphProgram name="Rho.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1884, 0, 0

    </glyphProgram>

    <glyphProgram name="Rsmallcap">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 28
CALL[], 4, 6, 114
SHP[2], 26
SRP1[], 2
IP[], 15
MDAP[R], 15
SHP[1], 16
SRP2[], 16
IP[], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Rsmallcapinv">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 6, 114
SHP[2], 7
MDAP[R], 5
SHP[1], 8
IP[], 18
MDAP[R], 18
SHP[1], 19
SRP2[], 19
IP[], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Rturnsuper">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 8
MIAP[R], 6, 2
SHP[1], 2
SRP2[], 5
IP[], 16
MDAP[R], 16
SHP[1], 1
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Rx">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 2, 114
SHP[2], 32
MIAP[R], 34, 8
SHP[1], 6
SRP1[], 6
SHP[1], 0
SRP1[], 34
IP[], 21
MDAP[R], 21
SHP[1], 22
SHP[1], 1
SRP1[], 1
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="S">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 15, 3, 114
SHP[2], 20
MDAP[R], 20
SHP[2], 24
CALL[], 43, 9, 114
SHP[2], 49
MDAP[R], 49
SHP[2], 54
SRP1[], 15
IP[], 38
IP[], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="S.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 15, 126
MDRP[m&gt;RGr], 20
SHP[1], 24
MDAP[R], 43
MDRP[m&gt;RGr], 49
SHP[1], 54
SRP2[], 15
IP[], 38
IP[], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Sacute">
/* VTTTalk Unicode 0x15a */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 56, 0, 0
OFFSET[R], 118, 397, 313
SVTCA[Y]
CALL[], 58, 15, 1, 1, 79, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Sacute.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1881, 0, 0
OFFSET[R], 118, 318, 30



SVTCA[Y]
CALL[], 58, 15, 1, 1, 91, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Sampi">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 3, 114
MDRP[m&gt;RGr], 0
SHP[1], 33
MDAP[R], 19
SHP[1], 20
SRP2[], 6
SLOOP[], 8
IP[], 45, 42, 44, 41, 43, 38, 40, 39
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Scaron">
/* VTTTalk Unicode 0x160 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 56, 0, 0
OFFSET[R], 376, 172, 313
SVTCA[Y]
CALL[], 64, 15, 1, 1, 88, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Scaron.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1881, 0, 0
OFFSET[R], 376, 93, 30



SVTCA[Y]
CALL[], 64, 15, 1, 1, 102, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Scedilla">
/* VTTTalk Unicode 0x15e */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 56, 0, 0
OFFSET[R], 122, 415, -1
SVTCA[Y]
CALL[], 58, 43, 0, 0, 19, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Scedilla.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1881, 0, 0
OFFSET[R], 122, 339, 0

    </glyphProgram>

    <glyphProgram name="Schwa">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
CALL[], 34, 3, 114
SHP[2], 26
SRP1[], 0
IP[], 9
MDAP[R], 9
SHP[1], 6
SRP1[], 0
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Scircumflex">
/* VTTTalk Unicode 0x15c */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 56, 0, 0
OFFSET[R], 375, 151, 313
SVTCA[Y]
CALL[], 61, 15, 1, 1, 90, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Scircumflex.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1881, 0, 0
OFFSET[R], 375, 72, 30



SVTCA[Y]
CALL[], 63, 15, 1, 1, 102, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Scommaaccent.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1881, 0, 0
OFFSET[R], 1832, 296, -354

    </glyphProgram>

    <glyphProgram name="Sigma">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 11, 8, 114
SHP[2], 2
SRP1[], 2
SHP[1], 3
SRP1[], 3
SHP[1], 12
CALL[], 15, 2, 114
SHP[2], 7
SRP1[], 7
SHP[1], 6
SRP1[], 6
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Sigma.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
SHP[1], 3
SRP1[], 3
SHP[1], 12
SRP1[], 2
SHP[1], 10
MIAP[R], 7, 125
SHP[1], 14
SHP[1], 16
SRP1[], 16
SHP[1], 6
SRP2[], 10
SLOOP[], 3
IP[], 13, 8, 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Stigma">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
CALL[], 20, 3, 114
MDRP[m&gt;RGr], 25
SHP[1], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="T">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 8, 114
CALL[], 7, 2, 114
SHP[2], 6
SHP[2], 3
SRP1[], 3
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="T.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MIAP[R], 0, 125
SRP1[], 1
IP[], 7
MDAP[R], 7
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Tau">
/* VTTTalk Unicode 0x3a4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 57, 0, 0

    </glyphProgram>

    <glyphProgram name="Tau.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1880, 0, 0

    </glyphProgram>

    <glyphProgram name="Tbar">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 8, 114
CALL[], 7, 2, 114
SHP[2], 6
MDAP[R], 11
SHP[1], 10
SHP[2], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Tbar.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1880, 0, 0
OFFSET[R], 1960, 70, -33

    </glyphProgram>

    <glyphProgram name="Tcaron">
/* VTTTalk Unicode 0x164 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 57, 0, 0
OFFSET[R], 376, 162, 310
SVTCA[Y]
CALL[], 14, 3, 1, 1, 105, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Tcaron.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1880, 0, 0
OFFSET[R], 376, 80, 30


SVTCA[Y]
CALL[], 14, 7, 1, 1, 116, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Tcommaaccent.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1880, 0, 0
OFFSET[R], 1832, 275, -351


SVTCA[Y]
CALL[], 17, 2, 1, 1, -112, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Theta">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 9, 114
CALL[], 22, 3, 114
SHP[2], 35
SRP1[], 10
IP[], 2
MDAP[R], 2
SHP[1], 3
SRP1[], 10
SHP[1], 47
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Theta.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 10, 11
SHP[1], 43
MIAP[R], 21, 126
SHP[1], 32
SRP2[], 10
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Thook">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
CALL[], 7, 2, 114
SHP[2], 3
SHP[2], 16
MDAP[R], 16
SHP[2], 25
SHP[2], 8
SRP1[], 8
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Thorn">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 8, 114
CALL[], 0, 2, 114
SRP1[], 3
IP[], 4
MDAP[R], 4
SHP[1], 25
SRP1[], 3
IP[], 14
MDAP[R], 14
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Thorn.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 10
SHP[2], 4
MDAP[R], 4
SHP[1], 5
MIAP[R], 1, 125
SHP[1], 16
MDAP[R], 16
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Tonefive">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 4, 114
MDAP[R], 23
MDRP[m&gt;RGr], 29
SHP[1], 33
SRP2[], 0
IP[], 6
IP[], 13
MDAP[R], 6
MDAP[R], 13
SRP1[], 6
SHP[1], 2
SRP1[], 2
SHP[1], 9
SRP1[], 13
SHP[1], 43
SRP1[], 43
SHP[1], 4
SRP1[], 4
SHP[1], 5
SRP1[], 43
SRP2[], 13
IP[], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Tonesix">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 29, 18
SHP[1], 32
CALL[], 31, 2, 114
SHP[2], 1
SRP2[], 29
IP[], 18
MDAP[R], 18
SHP[1], 42
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Tonetwo">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 16, 9, 114
SHP[2], 5
SHP[2], 10
MDAP[R], 10
CALL[], 46, 3, 114
SHP[2], 36
SHP[2], 40
MDAP[R], 40
SRP1[], 16
IP[], 21
IP[], 51
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Trthook">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 2, 114
SHP[2], 2
SHP[2], 14
MDAP[R], 7
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="U">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 9, 114
CALL[], 11, 2, 114
SRP1[], 6
SHP[1], 17
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="U.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
MIAP[R], 0, 125
SRP1[], 6
SHP[1], 17
SHP[2], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="U.unic">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 2, 114
SHP[2], 18
MIAP[R], 4, 18
CALL[], 11, 9, 114
SHP[2], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Uacute">
/* VTTTalk Unicode 0xda */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0
OFFSET[R], 118, 442, 311
SVTCA[Y]
CALL[], 22, 11, 1, 1, 97, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Uacute.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1879, 0, 0
OFFSET[R], 118, 351, 30


SVTCA[Y]
CALL[], 22, 11, 1, 1, 107, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Uacute.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2021, 0, 0
OFFSET[R], 118, 497, 342



SVTCA[Y]
CALL[], 29, 17, 1, 1, 128, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Ubreve">
/* VTTTalk Unicode 0x16c */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0
OFFSET[R], 393, 238, 311
SVTCA[Y]
CALL[], 27, 0, 1, 1, 83, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ubreve.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1879, 0, 0
OFFSET[R], 393, 147, 30


SVTCA[Y]
CALL[], 27, 11, 1, 1, 93, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ubreve.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2021, 0, 0
OFFSET[R], 393, 293, 342



SVTCA[Y]
CALL[], 34, 17, 1, 1, 114, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Ucaron">
/* VTTTalk Unicode 0x1d3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0
OFFSET[R], 376, 217, 311
SVTCA[Y]
CALL[], 28, 0, 1, 1, 106, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ucircumflex">
/* VTTTalk Unicode 0xdb */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0
OFFSET[R], 375, 196, 311
SVTCA[Y]
CALL[], 25, 0, 1, 1, 108, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ucircumflex.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1879, 0, 0
OFFSET[R], 375, 105, 30



SVTCA[Y]
CALL[], 27, 11, 1, 1, 107, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Udieresis">
/* VTTTalk Unicode 0xdc */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0
OFFSET[R], 107, 244, 311
SVTCA[Y]
CALL[], 43, 0, 1, 1, 120, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Udieresis.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1879, 0, 0
OFFSET[R], 107, 153, 30





SVTCA[Y]
CALL[], 31, 11, 1, 1, 132, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Udieresis.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2021, 0, 0
OFFSET[R], 107, 299, 342



SVTCA[Y]
CALL[], 38, 17, 1, 1, 153, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Ugrave">
/* VTTTalk Unicode 0xd9 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0
OFFSET[R], 69, 298, 311
SVTCA[Y]
CALL[], 24, 0, 1, 1, 97, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ugrave.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1879, 0, 0
OFFSET[R], 69, 207, 30


SVTCA[Y]
CALL[], 24, 11, 1, 1, 107, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ugrave.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2021, 0, 0
OFFSET[R], 69, 353, 342



SVTCA[Y]
CALL[], 31, 17, 1, 1, 128, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Uhorn">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 16, 9, 114
SHP[2], 27
CALL[], 21, 2, 114
SHP[2], 0
MDAP[R], 0
SHP[2], 10
SRP1[], 10
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Uhungarumlaut">
/* VTTTalk Unicode 0x170 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0
OFFSET[R], 398, 323, 311
SVTCA[Y]
CALL[], 22, 0, 1, 1, 87, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Uhungarumlaut.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1879, 0, 0
OFFSET[R], 398, 232, 30



SVTCA[Y]
CALL[], 26, 11, 1, 1, 97, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Uhungarumlaut.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2021, 0, 0
OFFSET[R], 398, 378, 342



SVTCA[Y]
CALL[], 33, 17, 1, 1, 118, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Umacron">
/* VTTTalk Unicode 0x16a */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0
OFFSET[R], 113, 194, 319
SVTCA[Y]
CALL[], 24, 11, 1, 1, 166, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Umacron.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1879, 0, 0
OFFSET[R], 113, 103, 38


SVTCA[Y]
CALL[], 24, 11, 1, 1, 176, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Umacron.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2021, 0, 0
OFFSET[R], 113, 249, 350



SVTCA[Y]
CALL[], 31, 17, 1, 1, 197, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Uogonek">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 9, 114
SHP[2], 17
SRP2[], 17
IP[], 22
IP[], 23
CALL[], 11, 2, 114
SHP[2], 1
MDAP[R], 37
SHP[1], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Uogonek.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 125
SHP[2], 12
CALL[], 6, 11, 114
SHP[2], 17
SHP[2], 22
SRP1[], 22
SHP[1], 23
MDAP[R], 37
SHP[1], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Uogonek.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2021, 0, 0
OFFSET[R], 396, 842, 3

    </glyphProgram>

    <glyphProgram name="Upsilon">
/* VTTTalk Unicode 0x3a5 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 62, 0, 0

    </glyphProgram>

    <glyphProgram name="Upsilon.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1875, 0, 0

    </glyphProgram>

    <glyphProgram name="Upsilon2">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 29, 9, 114
SHP[2], 6
CALL[], 46, 2, 114
SHP[2], 18
SHP[2], 40
SHP[2], 53
SHP[2], 41
SRP1[], 41
SHP[1], 17
SHP[1], 47
SHP[1], 52
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Upsilondieresis">
/* VTTTalk Unicode 0x3ab */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 62, 0, 0
OFFSET[R], 107, 195, 310
SVTCA[Y]
CALL[], 30, 2, 1, 1, 119, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Upsilondieresis.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1875, 0, 0
OFFSET[R], 107, 110, 30


SVTCA[Y]
CALL[], 23, 9, 1, 1, 131, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Upsilontonos">
/* VTTTalk Unicode 0x38e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 62, 100, 0
OFFSET[R], 557, -322, -1
SVTCA[Y]
CALL[], 10, 8, 0, 0, 142, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Upsilontonos.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1875, 60, 0
OFFSET[R], 557, -355, -292

    </glyphProgram>

    <glyphProgram name="Uring">
/* VTTTalk Unicode 0x16e */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0
OFFSET[R], 395, 331, 322
SVTCA[Y]
CALL[], 33, 0, 1, 1, 71, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Uring.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1879, 0, 0
OFFSET[R], 395, 240, 41


SVTCA[Y]
CALL[], 33, 11, 1, 1, 81, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Uring.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2021, 0, 0
OFFSET[R], 395, 386, 353

    </glyphProgram>

    <glyphProgram name="Utilde">
/* VTTTalk Unicode 0x168 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0
OFFSET[R], 397, 191, 315
SVTCA[Y]
CALL[], 36, 11, 1, 1, 107, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Utilde.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1879, 0, 0
OFFSET[R], 397, 100, 34



SVTCA[Y]
CALL[], 27, 11, 1, 1, 127, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Utilde.unic">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2021, 0, 0
OFFSET[R], 397, 246, 346



SVTCA[Y]
CALL[], 43, 17, 1, 1, 138, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="V">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 8, 8, 114
SHP[2], 3
CALL[], 9, 2, 114
SHP[2], 1
SRP2[], 8
IP[], 6
IP[], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="V.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
MIAP[R], 1, 125
SHP[1], 5
SRP1[], 3
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Vcursive">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 11
CALL[], 28, 3, 114
CALL[], 6, 2, 114
SRP1[], 28
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="W">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 8, 114
SHP[2], 4
SHP[2], 14
SHP[2], 18
SHP[2], 19
CALL[], 10, 2, 114
SHP[2], 1
SHP[2], 12
SHP[2], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="W.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
MIAP[R], 1, 125
SHP[1], 6
SRP1[], 4
SHP[1], 8
SRP1[], 1
SHP[1], 12
SRP1[], 4
SHP[1], 14
SRP1[], 1
SHP[1], 16
SRP1[], 4
SHP[1], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Wacute">
/* VTTTalk Unicode 0x1e82 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 60, 0, 0
OFFSET[R], 118, 699, 311
SVTCA[Y]
CALL[], 22, 1, 1, 1, 97, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Wacute.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1877, 0, 0
OFFSET[R], 118, 561, 30


SVTCA[Y]
CALL[], 22, 10, 1, 1, 107, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Wcircumflex">
/* VTTTalk Unicode 0x174 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 60, 0, 0
OFFSET[R], 375, 453, 311
SVTCA[Y]
CALL[], 25, 21, 1, 1, 108, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Wcircumflex.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1877, 0, 0
OFFSET[R], 375, 315, 30



SVTCA[Y]
CALL[], 27, 10, 1, 1, 118, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Wdieresis">
/* VTTTalk Unicode 0x1e84 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 60, 0, 0
OFFSET[R], 107, 501, 311
SVTCA[Y]
CALL[], 43, 21, 1, 1, 120, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="Wdieresis.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1877, 0, 0
OFFSET[R], 107, 363, 30


SVTCA[Y]
CALL[], 31, 10, 1, 1, 132, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="Wgrave">
/* VTTTalk Unicode 0x1e80 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 60, 0, 0
OFFSET[R], 69, 555, 311
SVTCA[Y]
CALL[], 24, 21, 1, 1, 97, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Wgrave.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1877, 0, 0
OFFSET[R], 69, 417, 30

SVTCA[Y]
CALL[], 24, 10, 1, 1, 107, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="X">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 8, 114
SHP[2], 6
CALL[], 11, 2, 114
SHP[2], 3
SRP2[], 9
SLOOP[], 4
IP[], 7, 4, 10, 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="X.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 125
SHP[2], 3
MDAP[R], 5
SHP[1], 9
SLOOP[], 4
IP[], 7, 10, 4, 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Xi">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 9, 2, 114
SHP[2], 8
SRP1[], 0
IP[], 4
MDAP[R], 4
SHP[1], 5
SRP1[], 0
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Xi.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
SHP[1], 3
MIAP[R], 11, 125
SHP[1], 10
SRP2[], 2
IP[], 6
MDAP[R], 6
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Y">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 8, 114
CALL[], 8, 2, 114
SHP[2], 3
SRP2[], 6
SLOOP[], 3
IP[], 4, 7, 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Y.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 1, 125
SHP[1], 5
CALL[], 12, 10, 114
SRP1[], 1
SLOOP[], 8
IP[], 8, 7, 3, 4, 6, 0, 10, 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="YR">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 2, 114
SHP[2], 0
MDRP[m&gt;RWh], 1
SHP[1], 26
SRP2[], 28
IP[], 15
MDAP[R], 15
SHP[1], 16
SRP2[], 16
IP[], 30
MIAP[R], 28, 18
MDAP[R], 29
SHP[1], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Yacute">
/* VTTTalk Unicode 0xdd */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 62, 0, 0
OFFSET[R], 118, 393, 310
SVTCA[Y]
CALL[], 9, 2, 1, 1, 96, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Yacute.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1875, 0, 0
OFFSET[R], 118, 308, 30



SVTCA[Y]
CALL[], 14, 9, 1, 1, 107, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Ycircumflex">
/* VTTTalk Unicode 0x176 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 62, 0, 0
OFFSET[R], 375, 147, 310
SVTCA[Y]
CALL[], 12, 2, 1, 1, 107, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ycircumflex.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1875, 0, 0
OFFSET[R], 375, 62, 30



SVTCA[Y]
CALL[], 19, 9, 1, 1, 118, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Ydieresis">
/* VTTTalk Unicode 0x178 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 62, 0, 0
OFFSET[R], 107, 195, 310
SVTCA[Y]
CALL[], 30, 2, 1, 1, 119, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Ydieresis.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1875, 0, 0
OFFSET[R], 107, 110, 30



SVTCA[Y]
CALL[], 23, 9, 1, 1, 132, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Ygrave">
/* VTTTalk Unicode 0x1ef2 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 62, 0, 0
OFFSET[R], 69, 249, 310
SVTCA[Y]
CALL[], 11, 2, 1, 1, 96, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ygrave.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1875, 0, 0
OFFSET[R], 69, 164, 30

    </glyphProgram>

    <glyphProgram name="Yhook">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 3, 114
SHP[2], 13
CALL[], 21, 2, 114
MDAP[R], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Ysmallcap">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 5
MIAP[R], 12, 10
SRP2[], 1
SLOOP[], 3
IP[], 4, 8, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Z">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 8, 114
SHP[2], 2
SRP1[], 2
SHP[1], 3
SRP1[], 3
SHP[1], 7
CALL[], 13, 2, 114
SHP[2], 9
SHP[2], 12
SRP1[], 12
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Z.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 6
SHP[1], 3
SRP1[], 3
SHP[1], 7
MIAP[R], 8, 125
SHP[1], 13
MDAP[R], 13
SHP[1], 12
SRP1[], 12
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Zacute">
/* VTTTalk Unicode 0x179 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 63, 0, 0
OFFSET[R], 118, 391, 311
SVTCA[Y]
CALL[], 14, 13, 1, 1, 97, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Zacute.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1874, 0, 0
OFFSET[R], 118, 308, 30




SVTCA[Y]
CALL[], 14, 13, 1, 1, 107, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Zbar">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 10
SHP[1], 7
SRP1[], 7
SHP[1], 11
CALL[], 12, 2, 114
SRP1[], 6
IP[], 17
IP[], 2
MDAP[R], 17
MDAP[R], 2
SRP1[], 17
SHP[1], 16
SRP1[], 16
SHP[1], 8
SRP1[], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Zcaron">
/* VTTTalk Unicode 0x17d */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 63, 0, 0
OFFSET[R], 376, 166, 311
SVTCA[Y]
CALL[], 20, 8, 1, 1, 106, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Zcaron.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1874, 0, 0
OFFSET[R], 376, 83, 30



SVTCA[Y]
CALL[], 20, 13, 1, 1, 116, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Zdotaccent">
/* VTTTalk Unicode 0x17b */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 63, 0, 0
OFFSET[R], 394, 365, 311
SVTCA[Y]
CALL[], 23, 8, 1, 1, 118, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Zdotaccent.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1874, 0, 0
OFFSET[R], 394, 282, 30





SVTCA[Y]
CALL[], 23, 13, 1, 1, 128, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Zeta">
/* VTTTalk Unicode 0x396 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 63, 0, 0

    </glyphProgram>

    <glyphProgram name="Zeta.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1874, 0, 0

    </glyphProgram>

    <glyphProgram name="a">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 15, 7, 114
SHP[2], 5
SHP[2], 9
CALL[], 25, 10, 114
SHP[2], 24
CALL[], 49, 11, 114
SHP[2], 39
SRP2[], 15
IP[], 58
MDAP[R], 58
SHP[1], 30
SRP1[], 39
SRP2[], 30
IP[], 44
IP[], 43
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="a.cn">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 15, 6, 114
SHP[2], 5
MIAP[R], 25, 18
CALL[], 48, 11, 114
SHP[2], 38
SRP2[], 15
IP[], 30
MDAP[R], 30
SHP[1], 57
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="a_uni02DE">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 70, 0, 0
OFFSET[R], 399, 1076, 0
SVTCA[Y]
CALL[], 73, 43, 1, 0, -12, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="aacute">
/* VTTTalk Unicode 0xe1 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 118, 357, 0
SVTCA[Y]
CALL[], 59, 15, 1, 1, 140, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="abreve">
/* VTTTalk Unicode 0x103 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 393, 153, 0
SVTCA[Y]
CALL[], 64, 15, 1, 1, 126, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="acaron">
/* VTTTalk Unicode 0x1ce */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 376, 132, 0
SVTCA[Y]
CALL[], 65, 15, 1, 1, 149, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="accountof">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 12, 3
SHP[1], 4
SHP[1], 24
MDAP[R], 24
SHP[1], 21
MDAP[R], 21
SRP1[], 24
SRP2[], 12
IP[], 33
MDAP[R], 33
SHP[1], 32
SHP[2], 86
MDAP[R], 86
SHP[1], 83
MIAP[R], 49, 9
SHP[1], 75
SHP[1], 58
MDAP[R], 58
SHP[1], 66
SRP1[], 49
SHP[1], 84
MDAP[R], 84
SHP[1], 85
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="acircumflex">
/* VTTTalk Unicode 0xe2 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 375, 111, 0
SVTCA[Y]
CALL[], 62, 15, 1, 1, 151, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="acute">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="acutecomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="acutedblnosp">
/* VTTTalk Unicode 0x30b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 118, -1109, 0
OFFSET[R], 118, -729, 0

    </glyphProgram>

    <glyphProgram name="acutedotcomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 1
SMD[], 64
MDRP[m&gt;RWh], 13
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="acutedotcomb.lc">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 1
SMD[], 64
MDRP[m&gt;RWh], 13
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="acuterightnosp">
/* VTTTalk Unicode 0x341 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 118, -336, 0

    </glyphProgram>

    <glyphProgram name="acutesubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SMD[], 128
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="addresssubject">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 12, 3
SHP[1], 4
SHP[1], 24
MDAP[R], 24
SHP[1], 21
SHP[1], 41
SRP1[], 12
SHP[1], 97
MDAP[R], 97
SHP[1], 94
MIAP[R], 49, 9
SHP[1], 57
SHP[1], 72
MDAP[R], 72
SHP[1], 79
SRP1[], 49
SHP[1], 95
MDAP[R], 95
SHP[1], 96
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="adieresis">
/* VTTTalk Unicode 0xe4 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 107, 159, 0
SVTCA[Y]
CALL[], 80, 15, 1, 1, 163, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="ae">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 15, 7, 114
SHP[2], 5
SHP[2], 62
SRP1[], 62
SHP[1], 76
CALL[], 41, 11, 114
SHP[2], 31
SRP2[], 15
IP[], 69
IP[], 23
MDAP[R], 69
MDAP[R], 23
SRP2[], 41
SLOOP[], 3
IP[], 20, 37, 0
SRP1[], 69
SHP[1], 70
SRP1[], 23
SHP[1], 50
SHP[2], 51
SRP1[], 51
SHP[1], 87
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="aeacute">
/* VTTTalk Unicode 0x1fd */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 135, 0, 0
OFFSET[R], 118, 634, 1
SVTCA[Y]
CALL[], 95, 15, 1, 1, 141, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="aemacron">
/* VTTTalk Unicode 0x1e3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 135, 0, 0
OFFSET[R], 113, 386, 9
SVTCA[Y]
CALL[], 97, 15, 1, 1, 210, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="afii300">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 14
SHP[1], 1
SHP[1], 8
SHP[1], 0
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="afii57596">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 14
SHP[1], 1
SHP[1], 8
SHP[1], 0
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="afii57598">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
SHP[1], 10
MDRP[m&gt;RGr], 8
SHP[2], 5
SLOOP[], 6
IP[], 4, 9, 2, 1, 11, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="afii57636">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
SHP[2], 15
SHP[2], 28
MIAP[R], 17, 10
IP[], 8
IP[], 20
MDAP[R], 8
MDAP[R], 20
SRP1[], 17
SHP[1], 19
SRP1[], 19
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="afii61664">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="agrave">
/* VTTTalk Unicode 0xe0 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 69, 213, 0
SVTCA[Y]
CALL[], 61, 15, 1, 1, 140, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="alpha">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 7, 114
SHP[2], 40
CALL[], 18, 11, 114
SHP[2], 29
SHP[2], 59
SRP1[], 59
SHP[1], 52
MIAP[R], 46, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="alpha.alt">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 7, 114
SHP[2], 39
CALL[], 17, 11, 114
SHP[2], 28
MIAP[R], 45, 6
MIAP[R], 48, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="alphatonos">
/* VTTTalk Unicode 0x3ac */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 557, 373, -7
SVTCA[Y]
CALL[], 66, 6, 1, 1, 154, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="amacron">
/* VTTTalk Unicode 0x101 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 113, 109, 8
SVTCA[Y]
CALL[], 61, 15, 1, 1, 209, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="ampersand">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 26, 3, 114
SHP[2], 7
CALL[], 59, 19, 114
SHP[2], 17
MDAP[R], 17
SHP[2], 43
SHP[2], 48
MDAP[R], 48
SRP1[], 26
SLOOP[], 6
IP[], 35, 18, 0, 15, 34, 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ampersand.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 51
MIAP[R], 25, 10
MIAP[R], 34, 126
SHP[1], 16
IP[], 56
MDAP[R], 56
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="anglesupnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 2
SHP[1], 3
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="angstrom">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 1, 8
CALL[], 3, 2, 114
SHP[2], 7
SRP1[], 7
SHP[1], 6
SRP1[], 6
SHP[1], 0
SRP1[], 1
IP[], 12
MDAP[R], 12
SHP[1], 13
SHP[2], 24
RUTG[]
MDAP[R], 24
SHP[1], 30
SHP[1], 18
RTG[]
MDAP[R], 18
SHP[1], 36
MIAP[R], 5, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="anoteleia">
/* VTTTalk Unicode 0x387 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 121, 0, 0

    </glyphProgram>

    <glyphProgram name="aogonek">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 15, 7, 114
SHP[2], 5
SHP[2], 9
CALL[], 25, 10, 114
SHP[2], 60
SRP1[], 60
SHP[1], 59
CALL[], 49, 11, 114
SHP[2], 39
CALL[], 74, 15, 114
SHP[2], 67
SRP2[], 15
IP[], 58
MDAP[R], 58
SHP[1], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="aogonek.NAV">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 396, 196, 0
SVTCA[Y]
CALL[], 59, 49, 0, 0, 77, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="approxequal">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 43
SHP[1], 36
SMD[], 128
MDRP[M&gt;RBl], 30
SHP[2], 49
SMD[], 64
MDRP[M&gt;RWh], 17
SHP[2], 10
SMD[], 128
MDRP[m&gt;RBl], 4
SHP[2], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="archdblsubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 12
SHP[1], 4
SMD[], 128
MDRP[m&gt;RGr], 1
SHP[2], 7
SHP[2], 16
SHP[2], 23
MDAP[R], 23
SRP1[], 12
SHP[1], 28
MDAP[R], 28
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="aring">
/* VTTTalk Unicode 0xe5 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 395, 246, 11
SVTCA[Y]
CALL[], 70, 15, 1, 1, 114, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="aringacute">
/* VTTTalk Unicode 0x1fb */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 1961, 255, -21
SVTCA[Y]
CALL[], 72, 15, 0, 0, -35, 86
SHC[2], 2
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="arrowdown">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 2
MDAP[R], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="arrowup">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 2
MDAP[R], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="asciicircum">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 3, 2
MDRP[m&gt;RBl], 2
SHP[2], 5
IP[], 0
IP[], 6
SHP[1], 7
SRP1[], 7
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="asciitilde">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 16
MDAP[R], 16
SRP1[], 6
SHP[1], 28
SMD[], 128
SRP0[], 6
MDRP[m&gt;RBl], 22
SHP[2], 0
MDAP[R], 0
SHP[2], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ascript">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 7, 114
SHP[2], 40
CALL[], 18, 11, 114
SHP[2], 29
CALL[], 45, 6, 114
CALL[], 59, 11, 114
SHP[2], 52
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ascript_uni02DE">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 262, 0, 0
OFFSET[R], 399, 1117, 0

    </glyphProgram>

    <glyphProgram name="ascriptturn">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 11, 114
SHP[2], 40
CALL[], 18, 6, 114
SHP[2], 29
MDAP[R], 45
CALL[], 59, 6, 114
SHP[2], 52
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ascriptturn_uni02DE">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 263, 0, 0
OFFSET[R], 399, 1210, 0

    </glyphProgram>

    <glyphProgram name="asterisk">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 2, 114
MDRP[m&lt;RGr], 12
SHP[2], 14
SLOOP[], 4
IP[], 13, 1, 7, 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="asterism">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="at">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 48
SHP[1], 41
MDAP[R], 60
SHP[1], 29
SRP1[], 29
SHP[1], 93
MDAP[R], 93
SHP[1], 11
SHP[1], 100
SRP1[], 100
SHP[1], 97
CALL[], 82, 19, 114
SHP[2], 71
SHP[2], 5
SRP1[], 5
SHP[1], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="atilde">
/* VTTTalk Unicode 0xe3 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 397, 106, 4
SVTCA[Y]
CALL[], 73, 15, 1, 1, 150, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="aturn">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 15, 11, 114
SHP[2], 5
CALL[], 25, 6, 114
CALL[], 49, 7, 114
SHP[2], 39
SRP1[], 15
IP[], 28
MDAP[R], 28
SHP[1], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="aturn_uni02DE">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 261, 0, 0
OFFSET[R], 399, 1087, 0

    </glyphProgram>

    <glyphProgram name="b">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 0, 114
CALL[], 4, 10, 114
CALL[], 11, 11, 114
SHP[2], 43
CALL[], 22, 7, 114
SHP[2], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="b.ss06">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 0, 114
CALL[], 4, 10, 114
CALL[], 11, 11, 114
SHP[2], 43
CALL[], 22, 7, 114
SHP[2], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="babygamma">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 7, 114
SHP[2], 32
CALL[], 67, 7, 114
SHP[2], 39
CALL[], 18, 11, 114
SHP[2], 53
SHP[2], 19
SHP[2], 52
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="backslash">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 1, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="bar">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MIAP[R], 0, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="barmidlongnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="barmidshortnosp">
/* VTTTalk Unicode 0x335 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1960, -1047, -189

    </glyphProgram>

    <glyphProgram name="bbar">
/* VTTTalk Unicode 0x180 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 71, 83, 0
OFFSET[R], 1960, -111, 575

    </glyphProgram>

    <glyphProgram name="bbar_uni1ABE">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 0, 114
MIAP[R], 4, 10
CALL[], 11, 11, 114
SHP[2], 44
CALL[], 22, 7, 114
SHP[2], 33
SHP[2], 50
MDAP[R], 50
SHP[1], 49
SHP[2], 84
RUTG[]
MDAP[R], 84
SHP[1], 69
SHP[1], 53
SRP1[], 53
SHP[1], 68
SRP1[], 84
SHP[1], 76
RTG[]
MDAP[R], 76
SHP[1], 75
SHP[1], 61
MDAP[R], 61
SHP[1], 62
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="beta">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 11, 114
SHP[2], 19
MIAP[R], 29, 3
SHP[1], 48
IP[], 28
MDAP[R], 28
SHP[1], 39
SRP2[], 39
IP[], 38
IP[], 0
MDAP[R], 53
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="beta1">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 55
MDRP[m&gt;RWh], 32
SHP[2], 39
CALL[], 10, 11, 114
SHP[2], 64
CALL[], 23, 1, 114
SHP[2], 46
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="bhook">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 7, 1, 114
SHP[2], 14
MDAP[R], 23
CALL[], 30, 11, 114
SHP[2], 62
CALL[], 41, 7, 114
SHP[2], 52
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="blackCircle">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="blackSquare">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 18, 114
MDAP[R], 1

    </glyphProgram>

    <glyphProgram name="braceleft">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
MDAP[R], 19
SHP[1], 18
IP[], 28
MDAP[R], 28
SHP[1], 10
SRP2[], 10
IP[], 9
IP[], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="braceright">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
MDAP[R], 20
SHP[1], 21
SRP2[], 1
IP[], 31
MDAP[R], 31
SHP[1], 10
SRP2[], 10
IP[], 11
IP[], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="bracketleft">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
MDAP[R], 7
SHP[1], 2
SRP1[], 6
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="bracketright">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 1
SHP[1], 0
SRP1[], 4
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="breve">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 12
SMD[], 128
MDRP[m&gt;RGr], 9
SHP[2], 1
MDAP[R], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="breveacutecomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 13
RUTG[]
MDRP[M&gt;RGr], 10
SHP[2], 0
RTG[]
MDRP[M&lt;RWh], 19
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="brevegravecomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 13
RUTG[]
MDRP[M&gt;RGr], 0
SHP[2], 10
MDRP[M&lt;RWh], 19
RTG[]
MDRP[m&gt;RBl], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="brevehookcomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 5, 16
SHP[1], 9
RUTG[]
MDAP[R], 9
SHP[1], 0
SRP1[], 5
SHP[1], 13
SRP1[], 9
SHP[1], 17
RTG[]
MDAP[R], 17
SHP[1], 18
SRP1[], 18
SHP[1], 37
SRP1[], 17
SHP[1], 28
MDAP[R], 28
SHP[1], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="breveinvnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDRP[m&lt;RGr], 8
SMD[], 128
MDRP[m&gt;RGr], 13
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="breveinvsubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 13
SHP[1], 5
SMD[], 128
MDRP[m&gt;RGr], 1
SHP[2], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="breveinvsubnosp_uni1ABD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 45
SHP[1], 37
SHP[1], 8
SRP1[], 8
SHP[1], 24
SRP1[], 45
SHP[1], 40
MDAP[R], 40
SHP[1], 0
SHP[1], 33
SRP1[], 33
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="brevenosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 13
SMD[], 128
MDRP[m&gt;RBl], 8
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="brevesubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 13
SMD[], 128
MDRP[m&gt;RGr], 0
SHP[2], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="brevetildecomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 13
MDRP[m&gt;RBl], 9
SHP[2], 0
SHP[2], 21
RUTG[]
MDAP[R], 21
SHP[1], 37
SHP[1], 28
SRP1[], 28
SHP[1], 29
SRP1[], 21
SHP[1], 33
RTG[]
MDAP[R], 33
SHP[1], 25
SHP[1], 16
SRP1[], 16
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="bridgeinvsubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 3
SHP[1], 2
MDAP[R], 2
SHP[1], 10
MDAP[R], 10
SMD[], 128
SRP0[], 6
MDRP[m&gt;RBl], 7
SHP[2], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="bridgesubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 2
MDAP[R], 2
SRP1[], 6
SHP[1], 1
SHP[1], 10
MDAP[R], 10
SRP0[], 6
MDRP[m&gt;RBl], 4
SHP[2], 9
MDAP[R], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="brokenbar">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 7, 2
MDRP[M&gt;RBl], 6
MDRP[M&gt;RWh], 2
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="btopbar">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
MDAP[R], 3
SHP[1], 2
CALL[], 15, 9, 114
SHP[2], 7
MDAP[R], 7
SHP[2], 48
SRP1[], 3
IP[], 26
MDAP[R], 26
SHP[1], 37
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="bullet">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="bullseye">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 18, 9, 114
SHP[2], 55
CALL[], 30, 3, 114
SHP[2], 43
SRP1[], 18
IP[], 9
MDAP[R], 9
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="c">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 11, 114
SHP[2], 0
SHP[2], 4
MDAP[R], 4
CALL[], 20, 7, 114
SHP[2], 25
MDAP[R], 25
SHP[2], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="c.ss06">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 11, 114
SHP[2], 0
SHP[2], 4
MDAP[R], 4
CALL[], 20, 7, 114
SHP[2], 25
MDAP[R], 25
SHP[2], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="c.ss07">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 11, 114
SHP[2], 0
SHP[2], 4
MDAP[R], 4
SHP[1], 5
CALL[], 20, 7, 114
SHP[2], 29
SHP[2], 25
MDAP[R], 25
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="cacute">
/* VTTTalk Unicode 0x107 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 72, 0, 0
OFFSET[R], 118, 308, 0
SVTCA[Y]
CALL[], 40, 20, 1, 1, 140, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="cadauna">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 5, 114
SHP[2], 17
SHP[2], 63
MDAP[R], 63
SRP0[], 9
MDRP[m&gt;RGr], 0
SHP[2], 26
CALL[], 34, 13, 114
SHP[2], 45
SHP[2], 59
MDAP[R], 59
SHP[2], 61
MDAP[R], 61
SRP0[], 34
MDRP[m&gt;RGr], 39
SHP[2], 56
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="candrabindunosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 5, 16
SMD[], 128
MDRP[m&gt;RGr], 9
SHP[2], 0
SHP[1], 13
SRP1[], 13
SHP[1], 25
RUTG[]
MDAP[R], 25
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="caret">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 3
SHP[1], 1
MDAP[R], 1
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="caretinsertionpoint">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 0
MDAP[R], 4
SHP[1], 7
SHP[1], 1
SRP1[], 1
SHP[1], 2
SRP1[], 4
SRP2[], 3
IP[], 5
IP[], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="caron">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 2
SHP[2], 4
SHP[2], 7
SMD[], 128
MDRP[m&gt;RBl], 6
IP[], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="carondotcomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 18
SMD[], 128
MDRP[m&gt;RBl], 20
SHP[2], 19
IP[], 13
SHP[2], 14
SRP1[], 14
SHP[1], 16
SHP[1], 9
MDAP[R], 9
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="carondotcomb.lc">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 0
MDAP[R], 0
SHP[2], 2
SRP2[], 6
IP[], 1
SHP[1], 18
RUTG[]
MDAP[R], 18
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="caronnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SMD[], 128
MDRP[m&gt;RBl], 0
SHP[2], 2
IP[], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="caronsubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
CALL[], 6, -64, 9, 12, 72
SMD[], 128
MDRP[m&gt;RBl], 0
SHP[2], 2
IP[], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ccaron">
/* VTTTalk Unicode 0x10d */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 72, 0, 0
OFFSET[R], 376, 83, 0
SVTCA[Y]
CALL[], 46, 20, 1, 1, 149, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="ccedilla">
/* VTTTalk Unicode 0xe7 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 72, 0, 0
OFFSET[R], 122, 320, -10
SVTCA[Y]
CALL[], 40, 9, 0, 0, 10, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="ccircumflex">
/* VTTTalk Unicode 0x109 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 72, 0, 0
OFFSET[R], 375, 62, 0
SVTCA[Y]
CALL[], 43, 20, 1, 1, 151, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="ccurl">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 30, 11, 114
SHP[2], 0
SHP[2], 14
MDAP[R], 14
SHP[1], 15
CALL[], 41, 7, 114
MDRP[m&lt;RGr], 46
SHP[1], 50
SRP2[], 30
IP[], 7
MDAP[R], 7
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="cedilla">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 18
SHP[2], 2
SHP[2], 19
SMD[], 128
MDRP[m&gt;RGr], 10
SHP[2], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="cedillanosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 10
CALL[], 0, 18, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="cent">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 17, 13, 114
MDRP[m&gt;RBl], 6
MDRP[m&gt;RGr], 12
SHP[1], 8
SRP2[], 8
IP[], 4
IP[], 7
CALL[], 28, 7, 114
MDRP[m&gt;RBl], 3
MDRP[m&gt;RGr], 33
SHP[1], 37
SRP2[], 37
IP[], 1
IP[], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="charactertie">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
SHP[1], 0
MDRP[m&gt;RGr], 3
SHP[2], 4
SHP[2], 14
MDAP[R], 14
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="chi">
/* VTTTalk Unicode 0x3c7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 2240, 0, 0

    </glyphProgram>

    <glyphProgram name="chi.alt">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 6, 114
CALL[], 4, 7, 114
SHP[2], 31
MDAP[R], 21
SHP[1], 1
MDAP[R], 1
SRP1[], 21
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="chook">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 27, 11, 114
SHP[2], 18
SHP[2], 22
MDAP[R], 22
CALL[], 38, 7, 114
SHP[2], 47
SHP[2], 1
MDAP[R], 1
SHP[1], 43
SHP[2], 6
MDAP[R], 6
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="circumflex">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 8
SMD[], 128
MDRP[m&gt;RBl], 3
SHP[2], 1
IP[], 4
SHP[2], 5
SRP1[], 5
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="circumflexacutecomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 4
SMD[], 128
MDRP[m&gt;RBl], 1
IP[], 5
SHP[1], 7
MDAP[R], 7
MDRP[m&gt;RBl], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="circumflexgravecomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
SHP[1], 2
SMD[], 128
MDRP[m&gt;RBl], 6
IP[], 3
SHP[1], 8
MDAP[R], 8
SMD[], 64
MDRP[m&gt;RBl], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="circumflexhookcomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
SHP[1], 2
SMD[], 128
MDRP[m&gt;RBl], 6
IP[], 3
SHP[1], 8
SRP1[], 8
SHP[1], 9
SHP[1], 26
SMD[], 64
SRP0[], 8
MDRP[m&gt;RGr], 18
SHP[2], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="circumflexnosp">
/* VTTTalk Unicode 0x302 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 375, -1060, 0

    </glyphProgram>

    <glyphProgram name="circumflexsubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 8
SMD[], 128
MDRP[m&gt;RBl], 3
SHP[2], 1
IP[], 4
SHP[2], 5
SRP1[], 5
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="circumflextildecomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
SMD[], 128
MDRP[m&gt;RBl], 6
SHP[2], 12
SRP1[], 12
SHP[1], 28
SHP[1], 19
SRP1[], 19
SHP[1], 20
SMD[], 64
SRP0[], 12
MDRP[m&gt;RBl], 24
SHP[2], 16
SHP[2], 7
SRP1[], 7
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="colon">
/* VTTTalk Unicode 0x3a (:) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 19, -11, 0
OFFSET[R], 19, -10, 883

    </glyphProgram>

    <glyphProgram name="colon.pnum">
/* VTTTalk Unicode 0xee01 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 19, 37, 178
OFFSET[R], 19, 37, 1060

    </glyphProgram>

    <glyphProgram name="coloncurrency">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 13, 13, 114
MDRP[m&gt;RGr], 8
SHP[1], 45
MDRP[m&gt;RWh], 1
SHP[2], 5
CALL[], 24, 5, 114
MDRP[m&gt;RGr], 29
SHP[1], 33
MDRP[m&gt;RBl], 7
SHP[2], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="comma">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="commaaboverightcomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 10
SMD[], 192
MDRP[m&gt;RBl], 5
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="commaaccent">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
SMD[], 128
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="commaaccentrotate">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="commasuprevnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SMD[], 128
MDRP[m&gt;RBl], 0
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="commaturnsupnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 5
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="copyright">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 57, 3, 114
SHP[2], 47
SRP1[], 47
SHP[1], 13
SRP1[], 13
SHP[1], 20
MDAP[R], 67
SHP[1], 37
SRP1[], 37
SHP[1], 4
SRP1[], 4
SHP[1], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="crossbar">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="cruzeiro">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 28, 13, 114
SHP[2], 1
MDRP[m&gt;RGr], 23
SHP[1], 60
CALL[], 39, 5, 114
MDRP[m&gt;RGr], 44
SHP[1], 48
SRP2[], 28
IP[], 3
MDAP[R], 3
SHP[1], 20
MDAP[R], 20
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="cstretch">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 15, 114
SHP[2], 0
MDRP[m&gt;RGr], 4
CALL[], 20, 7, 114
MDRP[m&gt;RGr], 25
SHP[1], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="currency">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 35, 13, 114
SHP[2], 5
MDAP[R], 25
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="cyrillicbreve">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 393, 0, 0

    </glyphProgram>

    <glyphProgram name="cyrillichook">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RGr], 6
SHP[2], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="cyrillichookleft">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RGr], 8
SHP[2], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="cyrillictic">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="d">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 0, 114
CALL[], 11, 7, 114
SHP[2], 43
CALL[], 22, 11, 114
SHP[2], 4
MDAP[R], 4
SHP[2], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="d.ss06">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 0, 114
CALL[], 11, 7, 114
SHP[2], 43
CALL[], 22, 11, 114
SHP[2], 4
MDAP[R], 4
SHP[2], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dagger">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 18, 114
CALL[], 3, 2, 114
SRP1[], 2
IP[], 7
MDAP[R], 7
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="daggerdbl">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
CALL[], 3, 2, 114
CALL[], 10, 18, 114
SRP1[], 3
SRP2[], 1
IP[], 7
MDAP[R], 7
SHP[1], 6
SRP1[], 10
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dasiaoxia">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 15
SHP[1], 0
MDAP[R], 0
SMD[], 128
SRP0[], 15
MDRP[m&gt;RGr], 10
SHP[2], 2
MDAP[R], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dblapostrophe">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
MDAP[R], 0
SHP[2], 11
SRP1[], 5
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dcaron">
/* VTTTalk Unicode 0x10f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 73, 0, 0
OFFSET[R], 1832, 981, 1299
SVTCA[Y]
CALL[], 57, 1, 1, 0, 0, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="dcroat">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 0, 114
CALL[], 11, 7, 114
SHP[2], 43
MDRP[m&gt;RWh], 50
SHP[2], 51
CALL[], 22, 11, 114
SHP[2], 4
MDAP[R], 4
SHP[2], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dcroat_uni1ABE">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 0, 114
MIAP[R], 4, 10
CALL[], 11, 7, 114
SHP[2], 43
MDRP[m&lt;RWh], 50
SHP[2], 51
MDRP[M&lt;RWh], 52
SHP[2], 67
MDRP[m&gt;RGr], 60
SHP[2], 61
SHP[1], 83
SRP1[], 83
SHP[1], 68
SRP0[], 83
MDRP[m&gt;RGr], 75
SHP[2], 74
CALL[], 22, 11, 114
SHP[2], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="degree">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 4, 3
SHP[1], 25
SMD[], 192
MDRP[m&gt;RGr], 12
SHP[2], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="degreecentigrade">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 34, 13, 114
MDRP[m&gt;RGr], 29
SHP[1], 66
CALL[], 45, 5, 114
MDRP[m&gt;RGr], 50
SHP[1], 54
SHP[1], 4
SRP1[], 4
SHP[1], 26
SRP0[], 4
MDRP[m&gt;RGr], 12
SHP[2], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="degreefarenheit">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 31, 12
CALL[], 32, 4, 114
SHP[2], 40
SHP[2], 4
MDAP[R], 4
SHP[1], 26
MDRP[m&gt;RGr], 12
SHP[2], 19
SRP1[], 31
SRP2[], 32
IP[], 36
MDAP[R], 36
SHP[1], 35
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="degreekelvin">
/* VTTTalk Unicode 0x212a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 48, 0, 0

    </glyphProgram>

    <glyphProgram name="delta">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 1, 114
SHP[2], 11
CALL[], 30, 11, 114
SHP[2], 51
SRP2[], 4
SLOOP[], 3
IP[], 20, 40, 62
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="delta.alt">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 3
CALL[], 17, 11, 114
SHP[2], 43
SRP1[], 0
IP[], 28
MDAP[R], 28
SHP[1], 31
SHP[1], 56
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="deltaturn">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 2
SRP1[], 2
SHP[1], 36
CALL[], 17, 7, 114
SHP[2], 43
SRP2[], 1
IP[], 28
MDAP[R], 28
SHP[1], 31
SHP[1], 56
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dhook">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 55, 1, 114
SHP[2], 62
MDAP[R], 4
CALL[], 11, 7, 114
SHP[2], 43
SHP[2], 49
SRP1[], 49
SHP[1], 1
CALL[], 22, 11, 114
SHP[2], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="diaeresistonosnosp">
/* VTTTalk Unicode 0x344 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 558, -1096, 0

    </glyphProgram>

    <glyphProgram name="dieresis">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 21
SHP[1], 15
SHP[1], 9
MDAP[R], 9
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dieresisacutecomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 13
SHP[1], 7
RUTG[]
MDRP[M&gt;RGr], 3
SMD[], 128
RTG[]
MDRP[m&gt;RBl], 1
SRP1[], 13
SHP[1], 25
MDAP[R], 25
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dieresisacutecomb.lc">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 21
SHP[1], 15
SHP[1], 9
SRP1[], 9
SHP[1], 3
SRP1[], 3
SHP[1], 24
RUTG[]
MDAP[R], 24
SMD[], 128
RTG[]
MDRP[m&gt;RBl], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dieresiscaroncomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 9
SHP[1], 15
SRP1[], 15
SHP[1], 21
SRP1[], 3
SHP[1], 30
MDAP[R], 30
SMD[], 128
MDRP[m&gt;RBl], 24
SHP[2], 31
IP[], 25
SHP[2], 26
SRP1[], 26
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dieresiscaroncomb.lc">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 9
SHP[1], 15
SRP1[], 15
SHP[1], 21
SRP1[], 3
SHP[1], 30
RUTG[]
MDAP[R], 30
SMD[], 128
RTG[]
MDRP[m&gt;RBl], 24
SHP[2], 32
IP[], 25
SHP[2], 26
SRP1[], 26
SHP[1], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dieresisgravecomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 13
SHP[1], 2
MDAP[R], 2
SMD[], 128
MDRP[m&gt;RBl], 3
SRP1[], 7
SHP[1], 19
SRP1[], 19
SHP[1], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dieresisgravecomb.lc">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 9
SHP[1], 15
SRP1[], 15
SHP[1], 21
SRP1[], 3
SHP[1], 26
RUTG[]
MDAP[R], 26
SMD[], 128
RTG[]
MDRP[m&gt;RBl], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dieresismacroncomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 13
MDRP[m&gt;RWh], 2
SHP[2], 3
MDRP[m&lt;RGr], 19
SHP[2], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dieresismacroncomb.lc">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 9
MDRP[m&lt;RGr], 15
SHP[2], 21
MDRP[m&gt;RWh], 26
SHP[2], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dieresisnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
SHP[1], 3
SHP[1], 21
SRP1[], 21
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dieresisnosp_uni1ABB">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 41
SHP[1], 0
SHP[2], 16
SHP[1], 35
SRP1[], 35
SHP[1], 8
SRP1[], 8
SHP[1], 24
SRP1[], 41
SHP[1], 53
SRP1[], 53
SHP[1], 47
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dieresistonos">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 13
SHP[1], 7
SHP[1], 0
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 1
SRP1[], 13
SHP[1], 25
SRP1[], 25
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="digamma">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 14, 114
CALL[], 3, 6, 114
SRP1[], 2
IP[], 7
MDAP[R], 7
SHP[1], 14
SHP[1], 6
SRP1[], 6
SHP[1], 13
MDAP[R], 13
SHP[2], 11
SRP1[], 11
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="divide">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 18
MDRP[M&gt;RBl], 3
MDRP[m&lt;RWh], 13
SHP[2], 7
SRP0[], 2
MDRP[m&lt;RWh], 19
SHP[2], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dollar">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 20, 5, 114
MDRP[m&gt;RBl], 3
SHP[1], 26
MDAP[R], 26
SRP1[], 20
SHP[1], 31
SRP2[], 31
IP[], 2
IP[], 1
CALL[], 47, 13, 114
MDRP[m&gt;RBl], 6
SHP[1], 53
MDAP[R], 53
SRP1[], 47
SRP2[], 20
SLOOP[], 4
IP[], 8, 43, 16, 35
SHP[1], 58
SRP2[], 58
IP[], 7
IP[], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dollar.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 23, 126
SHP[1], 0
MDAP[R], 0
SRP1[], 23
SHP[1], 32
SRP1[], 32
SHP[1], 2
MIAP[R], 51, 11
SHP[1], 6
MDAP[R], 6
SRP1[], 51
SRP2[], 23
IP[], 8
IP[], 36
SHP[1], 62
SRP1[], 62
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dotaccent">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 9, 16
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dotbelow">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dotbelow_uni1ABD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 41
SHP[1], 0
SHP[1], 16
SHP[1], 35
SRP1[], 35
SHP[1], 8
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dotdblsubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
SHP[1], 3
SHP[1], 21
MDAP[R], 21
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dotdblsubnosp_uni1ABD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 41
SHP[1], 0
SHP[1], 35
SRP1[], 35
SHP[1], 8
SHP[1], 24
SRP1[], 41
SHP[1], 53
SRP1[], 53
SHP[1], 16
SHP[1], 47
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dotlessi">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 10, 114
CALL[], 3, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dotmacroncomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 9
MDRP[m&gt;RWh], 14
SHP[2], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dotmacroncomb.lc">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 9
SHP[1], 13
RUTG[]
MDAP[R], 13
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dotnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="drthook">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 15, 114
SHP[2], 7
CALL[], 21, 0, 114
CALL[], 31, 7, 114
SHP[2], 63
CALL[], 42, 11, 114
SHP[2], 53
SRP1[], 53
SHP[1], 0
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dtopbar">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 0, 114
SHP[2], 2
SHP[2], 5
CALL[], 26, 11, 114
SHP[2], 7
MDAP[R], 7
SHP[2], 37
CALL[], 15, 7, 114
SHP[2], 47
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dyogh">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
SHP[2], 7
SRP1[], 7
SHP[1], 2
CALL[], 18, 15, 114
SHP[2], 27
CALL[], 38, 0, 114
CALL[], 40, 10, 114
SHP[2], 23
CALL[], 48, 7, 114
SHP[2], 80
CALL[], 59, 11, 114
SHP[2], 70
SRP1[], 0
IP[], 36
MDAP[R], 36
SHP[1], 4
SHP[1], 5
SRP1[], 5
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dz">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
SHP[1], 5
SHP[1], 3
SRP1[], 3
SHP[1], 7
CALL[], 13, 6, 114
SHP[2], 8
SHP[2], 12
SRP1[], 12
SHP[1], 4
CALL[], 15, 0, 114
MIAP[R], 18, 10
CALL[], 25, 7, 114
SHP[2], 57
CALL[], 36, 11, 114
SHP[2], 47
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dzcurl">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 44, 6, 114
SHP[2], 39
SHP[2], 43
SRP1[], 43
SHP[1], 35
CALL[], 46, 0, 114
MIAP[R], 49, 10
SHP[1], 33
SRP1[], 33
SHP[1], 30
SRP1[], 30
SHP[1], 0
SRP1[], 33
SHP[1], 34
SRP1[], 34
SHP[1], 16
SHP[1], 38
SHP[1], 6
MDAP[R], 6
SHP[1], 24
CALL[], 56, 7, 114
SHP[2], 88
CALL[], 67, 11, 114
SHP[2], 78
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="e">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 36
CALL[], 11, 7, 114
SHP[2], 25
SRP1[], 0
IP[], 18
MDAP[R], 18
SHP[1], 19
SDS[], 6
DLTP1[(19 @6 -1)]
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="e.ss07">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 36
CALL[], 11, 7, 114
SHP[2], 25
SRP1[], 0
IP[], 18
MDAP[R], 18
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eacute">
/* VTTTalk Unicode 0xe9 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 118, 340, 0
SVTCA[Y]
CALL[], 44, 11, 1, 1, 140, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="ebreve">
/* VTTTalk Unicode 0x115 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 393, 136, 0
SVTCA[Y]
CALL[], 49, 11, 1, 1, 126, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="ecaron">
/* VTTTalk Unicode 0x11b */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 376, 115, 0
SVTCA[Y]
CALL[], 50, 11, 1, 1, 149, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="ecircumflex">
/* VTTTalk Unicode 0xea */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 375, 94, 0
SVTCA[Y]
CALL[], 47, 11, 1, 1, 151, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="edieresis">
/* VTTTalk Unicode 0xeb */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 107, 142, 0
SVTCA[Y]
CALL[], 65, 11, 1, 1, 163, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="edotaccent">
/* VTTTalk Unicode 0x117 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 394, 314, 0
SVTCA[Y]
CALL[], 53, 11, 1, 1, 161, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="egrave">
/* VTTTalk Unicode 0xe8 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 69, 196, 0
SVTCA[Y]
CALL[], 46, 11, 1, 1, 140, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="eight">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 13, 114
SHP[2], 29
CALL[], 45, 5, 114
SHP[2], 53
SRP2[], 4
IP[], 21
MDAP[R], 21
SRP2[], 45
IP[], 37
SHP[1], 61
SRP2[], 61
IP[], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eight.frac">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1958, 0, 664

    </glyphProgram>

    <glyphProgram name="eight.pnum">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 29, 20, 0

    </glyphProgram>

    <glyphProgram name="eight.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 5, 11
SHP[1], 31
MIAP[R], 49, 126
SHP[1], 57
SRP2[], 5
IP[], 14
MDAP[R], 14
SHP[1], 65
SHP[1], 23
SRP1[], 23
SHP[1], 40
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eight.sup">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
SHP[1], 28
MDRP[m&gt;RGr], 44
SHP[2], 52
IP[], 20
MDAP[R], 20
SLOOP[], 3
SHP[1], 12, 36, 59
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eight.tnum">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 29, 0, 0

    </glyphProgram>

    <glyphProgram name="eightsub">
/* VTTTalk Unicode 0x2088 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1958, 0, -367

    </glyphProgram>

    <glyphProgram name="eightsuperior">
/* VTTTalk Unicode 0x2078 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1958, 0, 667

    </glyphProgram>

    <glyphProgram name="ellipsis">
/* VTTTalk Unicode 0x2026 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 19, 4, 0
OFFSET[R], 19, 441, 0
OFFSET[R], 19, 856, 0

    </glyphProgram>

    <glyphProgram name="emacron">
/* VTTTalk Unicode 0x113 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 113, 92, 8
SVTCA[Y]
CALL[], 46, 11, 1, 1, 209, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="emdash">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="endash">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eng">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 10, 114
CALL[], 3, 6, 114
CALL[], 11, 7, 114
SHP[2], 38
CALL[], 21, 15, 114
SHP[2], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eng_uni1ABE">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 1, 10
CALL[], 4, 6, 114
CALL[], 11, 7, 114
SHP[2], 38
MIAP[R], 21, 15
SHP[1], 28
SHP[1], 43
MDAP[R], 43
SHP[1], 58
SHP[1], 51
MDAP[R], 51
SHP[1], 52
SHP[1], 67
SRP1[], 67
SHP[1], 66
SRP1[], 43
SHP[1], 59
SRP1[], 59
SHP[1], 60
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eogonek">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 36
SRP1[], 36
IP[], 45
IP[], 44
CALL[], 11, 7, 114
SHP[2], 25
CALL[], 59, 14, 114
SHP[2], 52
SRP2[], 11
IP[], 19
MDAP[R], 19
SHP[1], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eogonek.NAV">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 396, 262, 0
SVTCA[Y]
CALL[], 44, 0, 0, 0, 77, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="epsilon">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 22, 11, 114
SHP[2], 12
CALL[], 43, 7, 114
SHP[2], 53
SRP2[], 22
IP[], 3
MDAP[R], 3
SHP[1], 62
SRP2[], 62
IP[], 33
IP[], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="epsilon1">
/* VTTTalk Unicode 0x25b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 574, 0, 0

    </glyphProgram>

    <glyphProgram name="epsilon1rev">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 11, 11, 114
MDRP[m&gt;RGr], 17
SHP[1], 21
CALL[], 54, 7, 114
SHP[2], 44
MDRP[m&gt;RGr], 48
SRP2[], 11
IP[], 31
MDAP[R], 31
SHP[1], 34
SRP2[], 34
IP[], 33
IP[], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="epsilon1revclosed">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 22, 7, 114
SHP[2], 11
CALL[], 43, 11, 114
SHP[2], 55
SRP1[], 22
IP[], 64
MDAP[R], 64
SHP[1], 2
SRP2[], 2
IP[], 1
IP[], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="epsilon1revclosed_uni02DE">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 275, 0, 0
OFFSET[R], 399, 965, 0

    </glyphProgram>

    <glyphProgram name="epsilon1revhook">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 31, 11, 114
MDRP[m&gt;RGr], 37
SHP[1], 41
CALL[], 74, 7, 114
SHP[2], 64
MDRP[m&gt;RGr], 68
SRP2[], 31
IP[], 51
IP[], 0
MDAP[R], 51
MDAP[R], 0
SRP1[], 51
SHP[1], 54
SRP2[], 54
IP[], 53
IP[], 20
SRP1[], 0
SHP[1], 19
SHP[1], 1
SRP1[], 1
SHP[1], 2
MDRP[m&gt;RGr], 14
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="epsilonclosed">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 11, 7, 114
SHP[2], 22
SRP1[], 22
SHP[1], 17
SRP1[], 17
SHP[1], 47
CALL[], 53, 11, 114
SHP[2], 42
SRP1[], 11
IP[], 33
MDAP[R], 33
SHP[1], 0
SHP[1], 30
SHP[1], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="epsilontonos">
/* VTTTalk Unicode 0x3ad */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 574, 0, 0
OFFSET[R], 557, 299, -8
SVTCA[Y]
CALL[], 64, 43, 1, 1, 154, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="equal">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 16
SHP[1], 3
MIAP[R], 7, 18
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="equalsub">
/* VTTTalk Unicode 0x208c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1189, 0, -998

    </glyphProgram>

    <glyphProgram name="equalsuperior">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 7
MDRP[m&gt;RWh], 3
SHP[2], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="erev">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 7
CALL[], 33, 7, 114
SHP[2], 18
SRP1[], 0
IP[], 27
MDAP[R], 27
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="esh">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 1, 114
SHP[2], 13
MDAP[R], 24
SHP[1], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eshcurl">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 15, 114
SHP[2], 26
SHP[2], 38
MDRP[m&gt;RGr], 18
SHP[2], 47
SHP[2], 32
SRP1[], 32
SHP[1], 55
CALL[], 60, 1, 114
SHP[2], 67
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eshlooprev">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 14
SHP[1], 7
MDAP[R], 24
SRP2[], 14
IP[], 36
MDAP[R], 36
SHP[1], 32
SRP1[], 24
SHP[1], 44
SRP1[], 36
SRP2[], 44
IP[], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eshshortrev">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 13, 7, 114
SHP[2], 6
CALL[], 31, 15, 114
SHP[2], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="estimated">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 4, 11
SHP[1], 27
MIAP[R], 14, 7
SHP[1], 30
SRP2[], 4
IP[], 23
MDAP[R], 23
SHP[1], 34
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eta">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 17
CALL[], 11, 7, 114
CALL[], 2, 10, 114
CALL[], 3, 6, 114
SRP1[], 11
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="etatonos">
/* VTTTalk Unicode 0x3ae */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 557, 326, -7
SVTCA[Y]
CALL[], 29, 3, 1, 1, 174, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="eth">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 56
CALL[], 12, 11, 114
SHP[2], 42
SRP2[], 1
IP[], 22
MDAP[R], 22
SHP[1], 32
SHP[1], 54
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eturn">
/* VTTTalk Unicode 0x1dd */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 270, 0, 0

    </glyphProgram>

    <glyphProgram name="eurocurrency">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 12, 5
SHP[1], 21
SHP[1], 1
MDAP[R], 1
SHP[1], 0
MIAP[R], 34, 12
SHP[1], 35
SHP[1], 38
MIAP[R], 39, 4
SHP[1], 36
SHP[1], 46
SRP2[], 34
IP[], 42
MDAP[R], 42
SHP[1], 43
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="exclam">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
CALL[], 13, 11, 114
MDRP[M&gt;RBl], 7
MDRP[m&gt;RWh], 2
MDAP[R], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="exclam1">
/* VTTTalk Unicode 0x1c3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 6, 0, 0

    </glyphProgram>

    <glyphProgram name="exclamdbl">
/* VTTTalk Unicode 0x203c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 6, 0, 0
OFFSET[R], 6, 528, 0

    </glyphProgram>

    <glyphProgram name="exclamdown">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 13
MDRP[M&gt;RBl], 7
MDRP[m&gt;RWh], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="f">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 10, 114
CALL[], 6, 1, 114
SHP[2], 13
CALL[], 21, 6, 114
SHP[2], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="f_f">
/* VTTTalk Unicode 0xfb00 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 75, 0, 0
OFFSET[R], 75, 556, 0

    </glyphProgram>

    <glyphProgram name="f_f_i">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 10, 114
SHP[2], 23
SRP1[], 23
SHP[1], 45
CALL[], 6, 1, 114
SHP[2], 13
CALL[], 21, 6, 114
SHP[2], 20
SHP[2], 42
SHP[2], 46
CALL[], 28, 1, 114
SHP[2], 35
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="f_f_l">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 10, 114
SHP[2], 23
SHP[2], 41
CALL[], 6, 1, 114
SHP[2], 13
CALL[], 21, 6, 114
SHP[2], 45
SHP[2], 20
SRP1[], 20
SHP[1], 46
CALL[], 28, 1, 114
SHP[2], 36
CALL[], 43, 0, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="f_l">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 10, 114
SHP[2], 19
CALL[], 6, 1, 114
SHP[2], 14
CALL[], 20, 0, 114
CALL[], 26, 6, 114
SHP[2], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="fi">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 1, 10
CALL[], 6, 1, 114
SHP[2], 13
CALL[], 20, 6, 114
SHP[2], 19
CALL[], 23, 10, 114
MIAP[R], 24, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="figuredash">
/* VTTTalk Unicode 0x2012 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1341, 0, 0

    </glyphProgram>

    <glyphProgram name="finalkaf">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 7, 114
MDRP[m&gt;RGr], 19
SHP[1], 23
CALL[], 41, 11, 114
SHP[2], 50
SRP1[], 14
IP[], 0
IP[], 27
MIAP[R], 56, 10
CALL[], 57, 0, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="finalmem">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 18
SHP[1], 10
MDRP[m&gt;RBl], 7
SHP[2], 3
SRP1[], 3
SHP[1], 2
SHP[1], 8
MIAP[R], 19, 2
SHP[1], 14
SHP[1], 16
SRP1[], 16
SHP[1], 20
MDRP[m&gt;RBl], 17
SHP[2], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="finalnun">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 6, 114
CALL[], 10, 11, 114
SHP[2], 23
CALL[], 42, 7, 114
SHP[2], 35
CALL[], 62, 15, 114
SHP[2], 55
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="finaltsadi">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 14
SHP[1], 4
MDAP[R], 20
SHP[1], 30
MIAP[R], 25, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="five">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 4, 114
SHP[2], 5
CALL[], 19, 13, 114
SHP[2], 25
MDAP[R], 25
SHP[2], 29
SRP1[], 2
IP[], 9
MDAP[R], 9
SHP[1], 39
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="five.frac">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1955, 0, 664

    </glyphProgram>

    <glyphProgram name="five.onum">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 125
SHP[1], 5
MDAP[R], 19
SHP[1], 26
SRP2[], 2
IP[], 9
MDAP[R], 9
SHP[1], 36
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="five.pnum">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 26, 0, 0

    </glyphProgram>

    <glyphProgram name="five.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 125
SHP[1], 5
MIAP[R], 17, 11
SHP[1], 25
SRP2[], 2
IP[], 9
MDAP[R], 9
SHP[1], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="five.sup">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 17
SHP[1], 25
MDRP[m&gt;RGr], 3
SHP[2], 4
IP[], 9
MDAP[R], 9
SHP[1], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="five.tnum">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 2014, 14, 0

    </glyphProgram>

    <glyphProgram name="fiveeighths">
/* VTTTalk Unicode 0x215d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1955, 8, 655
OFFSET[R], 1155, 387, 0
OFFSET[R], 1958, 938, 0



SVTCA[Y]
MIAP[R], 2, 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="fivesub">
/* VTTTalk Unicode 0x2085 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1955, 0, -367

    </glyphProgram>

    <glyphProgram name="fivesuperior">
/* VTTTalk Unicode 0x2075 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1955, 0, 667

    </glyphProgram>

    <glyphProgram name="florin">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 7, 15, 114
SHP[2], 10
SHP[2], 14
SRP1[], 14
SHP[1], 11
CALL[], 27, 1, 114
SHP[2], 30
SHP[2], 34
SRP1[], 34
SHP[1], 31
CALL[], 39, 6, 114
SHP[2], 21
SHP[2], 2
SRP1[], 2
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="four">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 4, 114
SHP[2], 11
CALL[], 9, 12, 114
SRP2[], 5
IP[], 2
MDAP[R], 2
IP[], 6
SHP[1], 7
SRP2[], 7
IP[], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="four.frac">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1954, 0, 664

    </glyphProgram>

    <glyphProgram name="four.onum">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 7
SRP1[], 7
SHP[1], 3
MDAP[R], 10
MIAP[R], 11, 125
SHP[1], 4
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="four.pnum">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 25, 0, 0

    </glyphProgram>

    <glyphProgram name="four.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 10, 18
MIAP[R], 11, 125
SHP[1], 4
SRP2[], 10
IP[], 1
MDAP[R], 1
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="four.sup">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 10
MDRP[m&gt;RGr], 8
SHP[2], 5
SHP[2], 6
IP[], 1
MDAP[R], 1
SHP[1], 7
SRP1[], 7
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="four.tnum">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 2013, -28, 0

    </glyphProgram>

    <glyphProgram name="foursub">
/* VTTTalk Unicode 0x2084 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1954, 0, -367

    </glyphProgram>

    <glyphProgram name="fraction">
/* VTT 6.35 compiler */
SVTCA[Y]
RUTG[]
MDAP[R], 1
SHP[1], 2
RTG[]
MDAP[R], 3
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="franc">
/* VTTTalk Unicode 0x20a3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 43, 0, 0
OFFSET[R], 1960, -125, -387
SVTCA[Y]
CALL[], 14, 2, 2, 0, 264, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="g">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
CALL[], 6, 15, 114
SHP[2], 14
CALL[], 26, 7, 114
SHP[2], 58
CALL[], 37, 11, 114
SHP[2], 48
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="g.alt">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 7, 114
SHP[2], 33
CALL[], 55, 15, 114
SHP[2], 74
SRP1[], 5
IP[], 15
MDAP[R], 15
IP[], 83
SRP1[], 83
SHP[1], 46
SHP[1], 65
SRP1[], 65
SHP[1], 64
SRP1[], 15
SHP[1], 24
SRP2[], 24
IP[], 38
IP[], 37
CALL[], 95, 6, 114
SHP[2], 93
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="g.ss06">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
CALL[], 6, 15, 114
SHP[2], 14
CALL[], 26, 7, 114
SHP[2], 58
CALL[], 37, 11, 114
SHP[2], 48
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="g.ss07">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
CALL[], 6, 15, 114
SHP[2], 13
CALL[], 25, 7, 114
SHP[2], 57
CALL[], 36, 11, 114
SHP[2], 47
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gacute">
/* VTTTalk Unicode 0x1f5 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 76, 0, 0
OFFSET[R], 118, 331, 0
SVTCA[Y]
CALL[], 63, 26, 1, 1, 140, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="gamma">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 14, 114
CALL[], 13, 6, 114
SHP[2], 5
SRP2[], 1
SLOOP[], 5
IP[], 8, 12, 3, 4, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gamma1">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 15, 114
SHP[2], 22
CALL[], 34, 6, 114
SHP[2], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gammasuper">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 5, 2
SHP[1], 1
MDRP[m&gt;RGr], 10
SHP[2], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gbar">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 10
SHP[1], 18
CALL[], 30, 7, 114
CALL[], 4, 6, 114
SRP1[], 30
SHP[1], 62
CALL[], 41, 11, 114
SHP[2], 52
SRP1[], 10
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gbar_uni1ABE">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 220, 143, 0
OFFSET[R], 814, 1294, -706

    </glyphProgram>

    <glyphProgram name="gbreve">
/* VTTTalk Unicode 0x11f */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 76, 0, 0
OFFSET[R], 393, 127, 0
SVTCA[Y]
CALL[], 68, 26, 1, 1, 126, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="gcaron">
/* VTTTalk Unicode 0x1e7 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

OFFSET[R], 76, 0, 0
OFFSET[R], 376, 106, 0
SVTCA[Y]
CALL[], 69, 26, 1, 1, 149, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="gcircumflex">
/* VTTTalk Unicode 0x11d */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 76, 0, 0
OFFSET[R], 375, 85, 0
SVTCA[Y]
CALL[], 66, 26, 1, 1, 151, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="gcommaaccent">
/* VTTTalk Unicode 0x123 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

OFFSET[R], 76, 0, 0
OFFSET[R], 1974, 299, 87
SVTCA[Y]
CALL[], 63, 26, 1, 1, 152, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="gcursive">
/* VTTTalk Unicode 0x261 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 76, 0, 0

    </glyphProgram>

    <glyphProgram name="germandbls">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 27, 11, 114
CALL[], 8, 1, 114
CALL[], 2, 10, 114
SRP1[], 8
SHP[1], 54
SRP1[], 27
SHP[1], 35
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ghook">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 25, 15, 114
SHP[2], 33
CALL[], 45, 7, 114
SHP[2], 1
SHP[2], 19
SHP[2], 77
CALL[], 56, 11, 114
SHP[2], 67
SRP0[], 45
MDRP[m&lt;RGr], 7
SHP[2], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="glottalstop">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 21, 1, 114
SHP[2], 12
MDRP[m&gt;RGr], 16
MDAP[R], 33
SHP[1], 0
SHP[1], 37
MDAP[R], 36
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="glottalstopbar">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 25
SHP[1], 16
MDAP[R], 39
SRP2[], 25
IP[], 2
MDAP[R], 2
SHP[1], 3
SRP1[], 3
SHP[1], 37
MDAP[R], 37
SHP[1], 5
SRP1[], 5
SHP[1], 41
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="glottalstopbarinv">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 22
MDRP[m&gt;RGr], 27
SHP[1], 31
CALL[], 38, 6, 114
MDRP[m&gt;RWh], 8
SHP[1], 37
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="glottalstopbarrev">
/* VTTTalk Unicode 0x2a2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 329, 0, 0
OFFSET[R], 1960, 105, -499

    </glyphProgram>

    <glyphProgram name="glottalstopinv">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 1
SHP[1], 36
CALL[], 14, 11, 114
MDRP[m&gt;RGr], 19
SHP[1], 23
MIAP[R], 37, 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="glottalstoprevinv">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 1
SRP1[], 1
SHP[1], 36
CALL[], 14, 1, 114
MDRP[m&gt;RGr], 19
SHP[1], 23
MDAP[R], 34
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="grave">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SMD[], 128
MDRP[m&gt;RBl], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gravecomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SMD[], 128
MDRP[m&gt;RBl], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="graveleftnosp">
/* VTTTalk Unicode 0x340 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 69, -282, 0

    </glyphProgram>

    <glyphProgram name="gravesubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SMD[], 128
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="greater">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MDAP[R], 9
SRP2[], 2
SLOOP[], 7
IP[], 5, 8, 4, 0, 6, 3, 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="greaterequal">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 12
SHP[1], 13
RUTG[]
SRP0[], 13
MDRP[m&gt;RWh], 9
MDAP[R], 9
SHP[2], 5
SHP[2], 2
RTG[]
MDAP[R], 2
SHP[1], 1
SLOOP[], 6
IP[], 3, 7, 6, 0, 4, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="guillemotleft">
/* VTTTalk Unicode 0xab */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1145, -7, -3
OFFSET[R], 1145, 324, -3

    </glyphProgram>

    <glyphProgram name="guillemotright">
/* VTTTalk Unicode 0xbb */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1146, 13, 0
OFFSET[R], 1146, 362, 0

    </glyphProgram>

    <glyphProgram name="guilsinglleft">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
SLOOP[], 6
IP[], 1, 5, 3, 9, 2, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="guilsinglright">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
IP[], 8
MDAP[R], 8
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="h">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 10, 114
CALL[], 3, 0, 114
CALL[], 10, 7, 114
SHP[2], 22
SRP1[], 2
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hbar">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 10, 114
SHP[2], 17
CALL[], 3, 0, 114
CALL[], 10, 7, 114
SHP[2], 22
MDRP[m&lt;RGr], 29
SHP[2], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hcircumflex">
/* VTTTalk Unicode 0x125 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 77, 0, 0
OFFSET[R], 375, 30, 321
SVTCA[Y]
CALL[], 30, 3, 1, 1, 38, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="henghook">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 14
CALL[], 29, 7, 114
SHP[2], 41
CALL[], 53, 1, 114
SHP[2], 60
MDAP[R], 21
SRP1[], 20
SHP[1], 0
SHP[1], 36
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hhook">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 17
CALL[], 34, 1, 114
SHP[2], 41
CALL[], 10, 7, 114
SHP[2], 0
SHP[2], 22
SHP[2], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hhooksuper">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 29
MIAP[R], 23, 2
SHP[1], 34
SHP[1], 7
MDAP[R], 7
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hook">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 12
SHP[1], 11
SMD[], 128
MDRP[m&gt;RGr], 0
SHP[2], 2
SHP[2], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hooksubpalatnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hooksubretronosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 13
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hornnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hsuper">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 16
MIAP[R], 10, 2
MDRP[m&gt;RWh], 0
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hturn">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 14, 114
CALL[], 1, 6, 114
SHP[2], 17
CALL[], 10, 11, 114
SHP[2], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hungarumlaut">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
SHP[1], 0
SMD[], 128
MDRP[m&gt;RBl], 5
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hv">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
CALL[], 3, 0, 114
CALL[], 10, 7, 114
SHP[2], 22
CALL[], 27, 11, 114
SHP[2], 40
SRP1[], 10
SLOOP[], 4
IP[], 16, 17, 34, 33
CALL[], 46, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hyphen">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hyphen__">
/* VTTTalk Unicode 0x2010 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 18, 0, 0

    </glyphProgram>

    <glyphProgram name="hyphenbullet">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hyphendot">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RBl], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hyphennobreak">
/* VTTTalk Unicode 0x2011 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 18, 0, 0

    </glyphProgram>

    <glyphProgram name="i">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 10, 114
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 13
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="iacute">
/* VTTTalk Unicode 0xed */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 142, 0, 0
OFFSET[R], 118, 27, -2
SVTCA[Y]
CALL[], 4, 3, 1, 1, 158, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="ibar">
/* VTTTalk Unicode 0x268 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 78, 90, 0
OFFSET[R], 1960, -121, -121

    </glyphProgram>

    <glyphProgram name="ibreve">
/* VTTTalk Unicode 0x12d */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 142, 0, 0
OFFSET[R], 393, -177, -2
SVTCA[Y]
CALL[], 9, 3, 1, 1, 144, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="icaron">
/* VTTTalk Unicode 0x1d0 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 142, 0, 0
OFFSET[R], 376, -198, -2
SVTCA[Y]
CALL[], 10, 3, 1, 1, 167, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="icircumflex">
/* VTTTalk Unicode 0xee */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 142, 0, 0
OFFSET[R], 375, -219, -2
SVTCA[Y]
CALL[], 7, 3, 1, 1, 169, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="idieresis">
/* VTTTalk Unicode 0xef */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 142, 0, 0
OFFSET[R], 107, -171, -2
SVTCA[Y]
CALL[], 25, 3, 1, 1, 181, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="igrave">
/* VTTTalk Unicode 0xec */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 142, 0, 0
OFFSET[R], 69, -117, -2
SVTCA[Y]
CALL[], 6, 3, 1, 1, 158, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="ij">
/* VTTTalk Unicode 0x133 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 78, 0, 0
OFFSET[R], 79, 498, 0

    </glyphProgram>

    <glyphProgram name="imacron">
/* VTTTalk Unicode 0x12b */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 142, 0, 0
OFFSET[R], 113, -221, 6
SVTCA[Y]
CALL[], 6, 3, 1, 1, 227, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="infinity">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 7, 114
SHP[2], 43
SHP[2], 67
SRP1[], 67
SHP[1], 78
CALL[], 19, 11, 114
SHP[2], 30
SHP[2], 54
SRP1[], 54
SHP[1], 91
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="integral">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 15, 114
SHP[2], 11
CALL[], 20, 1, 114
SHP[2], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="interrobang">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 26, 3
MDRP[m&gt;RBl], 3
SHP[1], 17
SHP[1], 22
CALL[], 46, 11, 114
SHP[2], 40
SRP1[], 40
SHP[1], 2
MDAP[R], 2
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="iogonek">
/* VTTTalk Unicode 0x12f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 78, 0, 0
OFFSET[R], 396, -56, 0
SVTCA[Y]
CALL[], 17, 2, 0, 0, 0, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="iota">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
CALL[], 13, 11, 114
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="iota1">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
CALL[], 14, 11, 114
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="iota1_uni02DE">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 286, 0, 0
OFFSET[R], 399, 448, 0

    </glyphProgram>

    <glyphProgram name="iotadieresis">
/* VTTTalk Unicode 0x3ca */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 578, 0, 0
OFFSET[R], 107, -129, -21
SVTCA[Y]
CALL[], 39, 0, 1, 1, 162, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="iotadieresistonos">
/* VTTTalk Unicode 0x390 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 578, 0, 0
OFFSET[R], 558, -215, -21
SVTCA[Y]
CALL[], 43, 0, 1, 1, 162, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="iotasubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 13
MDAP[R], 0
SRP1[], 13
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="iotasubnosp_uni1ABD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 32
SHP[1], 8
SHP[1], 24
SHP[1], 45
MDAP[R], 45
SHP[1], 0
SHP[1], 16
SHP[1], 38
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="iotatonos">
/* VTTTalk Unicode 0x3af */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 578, 0, 0
OFFSET[R], 557, 42, -28
SVTCA[Y]
CALL[], 18, 0, 1, 1, 153, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="itilde">
/* VTTTalk Unicode 0x129 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 142, 0, 0
OFFSET[R], 397, -224, 2
SVTCA[Y]
CALL[], 18, 3, 1, 1, 168, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="j">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
MDRP[m&gt;RWh], 27
SHP[2], 21
CALL[], 6, 15, 114
SHP[2], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="jcircumflex">
/* VTTTalk Unicode 0x135 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 236, 0, 0
OFFSET[R], 375, -205, -41
SVTCA[Y]
CALL[], 21, 0, 1, 1, 130, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="jcrosstail">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 33, 15, 114
SHP[2], 12
SHP[2], 6
MDAP[R], 6
SHP[1], 41
SRP1[], 41
SHP[1], 44
SRP1[], 44
SHP[1], 17
CALL[], 45, 6, 114
MDRP[m&gt;RWh], 55
SHP[2], 49
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="jdotlessbar">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 6, 114
CALL[], 10, 15, 114
SHP[2], 17
SRP2[], 4
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="jhookdblbar">
/* VTTTalk Unicode 0x284 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 311, 0, 0
OFFSET[R], 1960, -39, -652

    </glyphProgram>

    <glyphProgram name="jsuper">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 2
SHP[2], 27
MDAP[R], 27
SHP[1], 21
MDAP[R], 6
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="k">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 10, 114
SHP[2], 10
CALL[], 3, 0, 114
MIAP[R], 9, 6
SRP2[], 2
SLOOP[], 6
IP[], 6, 7, 11, 5, 12, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="k.alt">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
SHP[1], 10
CALL[], 3, 0, 114
CALL[], 9, 6, 114
SRP2[], 2
IP[], 6
MDAP[R], 6
SHP[1], 7
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="k.alt2">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
SHP[1], 10
CALL[], 3, 1, 114
CALL[], 9, 6, 114
SRP2[], 2
IP[], 6
MDAP[R], 6
SHP[1], 7
SHP[1], 11
SRP1[], 11
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="kappa">
/* VTTTalk Unicode 0x3ba */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 143, 0, 0

    </glyphProgram>

    <glyphProgram name="kappa1">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 6, 114
SHP[2], 24
SRP1[], 24
SHP[1], 25
CALL[], 11, 7, 114
SHP[2], 14
SHP[2], 18
CALL[], 31, 11, 114
SHP[2], 34
SHP[2], 38
SHP[2], 0
MDAP[R], 0
SHP[1], 4
SRP1[], 4
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="kcaron">
/* VTTTalk Unicode 0x1e9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 80, 0, 0
OFFSET[R], 376, 99, 321
SVTCA[Y]
CALL[], 20, 3, 1, 1, 36, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="kcommaaccent">
/* VTTTalk Unicode 0x137 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 80, 0, 0
OFFSET[R], 1832, 273, -283
SVTCA[Y]
CALL[], 23, 2, 1, 1, -44, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="kgreenlandic">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 10, 114
SHP[2], 10
CALL[], 3, 6, 114
SHP[2], 9
SRP1[], 2
IP[], 6
MDAP[R], 6
SHP[1], 11
SHP[1], 7
SRP1[], 7
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="khook">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 18, 114
CALL[], 9, 6, 114
SRP2[], 1
SLOOP[], 4
IP[], 11, 5, 12, 8
MIAP[R], 10, 18
MIAP[R], 20, 1
SHP[1], 27
SRP2[], 9
IP[], 14
IP[], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="koppa">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 2, 114
CALL[], 10, 10, 114
SRP2[], 4
IP[], 2
MDAP[R], 2
SHP[1], 5
SHP[1], 3
SRP1[], 3
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="kturn">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 14, 114
CALL[], 1, 6, 114
MIAP[R], 9, 10
CALL[], 13, 6, 114
SRP2[], 9
SLOOP[], 6
IP[], 8, 12, 5, 11, 7, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="l">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 10, 114
CALL[], 3, 0, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="lacute">
/* VTTTalk Unicode 0x13a */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 118, 24, 407
SVTCA[Y]
CALL[], 4, 3, 1, 1, 113, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="lambda">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 10, 114
SHP[2], 22
MDAP[R], 22
SHP[1], 15
CALL[], 5, 0, 114
SHP[2], 32
SRP2[], 2
SLOOP[], 4
IP[], 0, 27, 4, 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="lambdabar">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 1, 114
SHP[2], 36
MDAP[R], 26
SHP[1], 5
MDAP[R], 5
SRP1[], 26
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="largerighthook">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
MDAP[R], 12
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="lbar">
/* VTTTalk Unicode 0x19a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 81, 88, 0
OFFSET[R], 1960, -123, 69
SVTCA[Y]
CALL[], 7, 3, 2, 0, -664, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="lbelt">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 28, 0, 114
MDAP[R], 29
IP[], 24
IP[], 16
MDAP[R], 24
MDAP[R], 16
SRP1[], 24
SHP[1], 7
SRP1[], 16
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="lcaron">
/* VTTTalk Unicode 0x13e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 81, 0, 0
OFFSET[R], 1832, 342, 1299
SVTCA[Y]
CALL[], 13, 3, 0, 0, 2, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="lcommaaccent">
/* VTTTalk Unicode 0x13c */
/* ACT generated Fri Mar 27 17:57:47 2020 */

OFFSET[R], 81, 0, 0
OFFSET[R], 1832, -7, -344
SVTCA[Y]
CALL[], 13, 2, 1, 1, -105, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="ldot">
/* VTTTalk Unicode 0x140 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 81, 0, 0
OFFSET[R], 394, 313, -587

    </glyphProgram>

    <glyphProgram name="less">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MDAP[R], 9
SRP2[], 2
SLOOP[], 8
IP[], 1, 3, 7, 6, 0, 4, 8, 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="lessequal">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 12
SHP[1], 13
RUTG[]
SRP0[], 13
MDRP[m&gt;RWh], 2
MDAP[R], 2
SHP[2], 1
SHP[2], 9
RTG[]
MDAP[R], 9
SHP[1], 5
SLOOP[], 6
IP[], 3, 7, 6, 0, 4, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="linevert">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="linevertdblnosp">
/* VTTTalk Unicode 0x30e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 377, -830, 0
OFFSET[R], 377, -591, 0

    </glyphProgram>

    <glyphProgram name="linevertnosp">
/* VTTTalk Unicode 0x30d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 377, -709, 0

    </glyphProgram>

    <glyphProgram name="linevertsubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="linevertsubnosp_uni1ABD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 35
SHP[1], 8
SHP[1], 24
SHP[1], 34
SRP1[], 34
SHP[1], 0
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="lira">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 1, 12
SHP[1], 2
SRP1[], 2
SHP[1], 9
CALL[], 18, 5, 114
MDRP[m&gt;RGr], 23
SHP[1], 27
SRP2[], 1
IP[], 38
MDAP[R], 38
SHP[1], 37
MDRP[m&gt;RWh], 33
SHP[2], 34
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="lira.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 9, 18
SHP[1], 17
SHP[1], 10
SRP1[], 10
SHP[1], 18
MIAP[R], 29, 126
SHP[1], 38
SRP2[], 9
IP[], 2
MDAP[R], 2
SHP[1], 3
MDRP[m&gt;RWh], 7
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="lj">
/* VTTTalk Unicode 0x1c9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 81, 0, 0
OFFSET[R], 79, 498, 0

    </glyphProgram>

    <glyphProgram name="lmidtilde">
/* VTTTalk Unicode 0x26b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 81, 112, 0
OFFSET[R], 397, -111, -598

    </glyphProgram>

    <glyphProgram name="lmidtilde_uni1ABE">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
CALL[], 3, 0, 114
SRP2[], 2
IP[], 9
MDAP[R], 9
SHP[1], 27
SHP[1], 17
SRP1[], 17
SHP[1], 18
SRP1[], 9
SHP[1], 22
MDAP[R], 22
SHP[1], 14
SHP[1], 4
SRP1[], 4
SHP[1], 5
SRP1[], 22
SHP[1], 38
MDAP[R], 38
SHP[1], 39
SHP[1], 30
MDAP[R], 30
SHP[1], 45
SHP[1], 46
SRP1[], 46
SHP[1], 47
SRP1[], 38
SHP[1], 54
SRP1[], 54
SHP[1], 53
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="logicalnot">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 2
SRP1[], 2
SHP[1], 6
SRP2[], 3
IP[], 7
MDAP[R], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="longs">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 10, 114
CALL[], 6, 1, 114
SHP[2], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="longst">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 6, 114
SHP[2], 2
SHP[2], 24
CALL[], 4, 1, 114
SHP[2], 13
SRP1[], 13
SHP[1], 28
SRP1[], 28
SHP[1], 9
CALL[], 19, 10, 114
CALL[], 41, 11, 114
SHP[2], 34
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="lozenge">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 2, 114
SHP[2], 11
SHP[2], 10
SRP1[], 10
SHP[1], 3
CALL[], 7, 18, 114
SHP[2], 14
SHP[2], 8
SRP1[], 8
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="lrthook">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 0, 114
CALL[], 14, 15, 114
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="lslash">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 10, 114
CALL[], 7, 0, 114
SHP[2], 0
SRP1[], 6
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="lyogh">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
SHP[2], 7
CALL[], 18, 15, 114
SHP[2], 27
SRP2[], 0
IP[], 36
MDAP[R], 36
SHP[1], 5
SRP2[], 5
IP[], 4
IP[], 8
CALL[], 37, 0, 114
MDAP[R], 39
MDRP[m&gt;RWh], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="m">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 10, 114
CALL[], 11, 7, 114
CALL[], 3, 6, 114
SRP1[], 11
SHP[1], 23
SHP[1], 34
SRP1[], 34
SHP[1], 46
SRP1[], 2
SHP[1], 18
SHP[1], 41
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="macron">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="macronacutecomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 2
SHP[1], 4
RUTG[]
MDAP[R], 4
SMD[], 128
RTG[]
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="macronacutecomb.lc">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 2
MDRP[M&gt;RWh], 4
SMD[], 128
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="macroncomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="macroncomb_uni1ABB">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 33
SHP[1], 16
SRP1[], 16
SHP[1], 17
MIAP[R], 34, 16
SHP[1], 0
SHP[2], 15
SHP[1], 35
SRP1[], 35
SHP[1], 8
SRP1[], 8
SHP[1], 9
SHP[1], 24
SRP1[], 24
SHP[1], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="macrondieresiscomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 2
MDRP[m&gt;RWh], 13
SHP[2], 7
SHP[2], 25
SRP1[], 25
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="macrondieresiscomb.lc">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 2
MDRP[m&gt;RWh], 13
SHP[2], 7
SHP[2], 25
SRP1[], 25
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="macrongravecomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 6
SHP[1], 2
RUTG[]
MDAP[R], 2
SMD[], 128
RTG[]
MDRP[m&gt;RBl], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="macrongravecomb.lc">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 2
SHP[1], 6
RUTG[]
MDAP[R], 6
SMD[], 128
RTG[]
MDRP[m&gt;RBl], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="macronsub">
/* VTTTalk Unicode 0x2cd */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 113, -68, -1600

    </glyphProgram>

    <glyphProgram name="macronsubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="mcapturn">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 2, 114
SHP[2], 18
SHP[2], 42
MIAP[R], 4, 18
MDAP[R], 11
SHP[1], 24
IP[], 35
MDAP[R], 35
SHP[1], 48
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="mhook">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 14
MDAP[R], 20
CALL[], 22, 6, 114
CALL[], 30, 7, 114
SHP[2], 42
CALL[], 53, 7, 114
SHP[2], 65
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="mill">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 10
MDRP[m&gt;RWh], 2
SHP[1], 22
SRP1[], 22
SHP[1], 45
CALL[], 7, 6, 114
CALL[], 15, 7, 114
MDRP[m&gt;RWh], 3
SHP[1], 27
CALL[], 38, 7, 114
SHP[2], 50
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="minus">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="minussub">
/* VTTTalk Unicode 0x208b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1188, 0, -998

    </glyphProgram>

    <glyphProgram name="minussubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="minussuperior">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="minute">
/* VTTTalk Unicode 0x2032 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 12, 0, 0

    </glyphProgram>

    <glyphProgram name="mturn">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 12
CALL[], 23, 11, 114
SHP[2], 35
CALL[], 6, 6, 114
SHP[2], 30
SHP[2], 47
MDAP[R], 50
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="mturndescend">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 6, 114
SHP[2], 18
SHP[2], 41
MDAP[R], 3
CALL[], 11, 11, 114
SHP[2], 23
CALL[], 34, 11, 114
SHP[2], 46
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="mu">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 28
CALL[], 3, 18, 114
CALL[], 11, 19, 114
SHP[2], 22
SRP1[], 0
IP[], 5
MDAP[R], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="multiply">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
SHP[1], 6
SHP[2], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="n">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 10, 114
CALL[], 11, 7, 114
CALL[], 3, 6, 114
SRP1[], 11
SHP[1], 23
SRP1[], 2
SHP[1], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="nacute">
/* VTTTalk Unicode 0x144 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 83, 0, 0
OFFSET[R], 118, 348, 0
SVTCA[Y]
CALL[], 28, 3, 1, 1, 160, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="naira">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 13, 12
SHP[1], 10
CALL[], 14, 4, 114
SHP[2], 17
SRP2[], 13
IP[], 7
MDAP[R], 7
IP[], 16
SRP2[], 14
IP[], 11
SHP[1], 6
MDRP[m&gt;RWh], 2
SHP[2], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="napostrophe">
/* VTTTalk Unicode 0x149 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 83, 0, 0
OFFSET[R], 1832, -162, 1302
SVTCA[Y]
CALL[], 32, 3, 1, 1, 58, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="nbspace">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="ncaron">
/* VTTTalk Unicode 0x148 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 83, 0, 0
OFFSET[R], 376, 123, 0
SVTCA[Y]
CALL[], 34, 3, 1, 1, 169, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="ncommaaccent">
/* VTTTalk Unicode 0x146 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

OFFSET[R], 83, 0, 0
OFFSET[R], 1832, 307, -344
SVTCA[Y]
CALL[], 37, 2, 1, 1, -105, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="nine">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 56, 12, 114
CALL[], 43, 5, 114
SHP[2], 12
SRP1[], 56
IP[], 33
MDAP[R], 33
SHP[1], 22
SRP1[], 56
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="nine.alt">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 42, 5, 114
SHP[2], 11
CALL[], 53, 13, 114
SHP[2], 0
SRP1[], 42
IP[], 32
MDAP[R], 32
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="nine.frac">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1959, 0, 664

    </glyphProgram>

    <glyphProgram name="nine.onum">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 53
MDAP[R], 41
SHP[1], 11
SRP2[], 53
IP[], 31
MDAP[R], 31
SHP[1], 21
SHP[2], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="nine.pnum">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 30, 0, 0

    </glyphProgram>

    <glyphProgram name="nine.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 38, 126
SHP[1], 12
MIAP[R], 49, 10
SHP[1], 1
SRP2[], 38
IP[], 30
MDAP[R], 30
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="nine.sup">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 45
SHP[1], 1
MDRP[m&gt;RGr], 35
SHP[2], 10
IP[], 27
RUTG[]
MDAP[R], 27
SHP[1], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="nine.tnum">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 2019, -36, 0

    </glyphProgram>

    <glyphProgram name="nineinferior">
/* VTTTalk Unicode 0x2089 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1959, 0, -367

    </glyphProgram>

    <glyphProgram name="ninesuperior">
/* VTTTalk Unicode 0x2079 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1959, 0, 667

    </glyphProgram>

    <glyphProgram name="nj">
/* VTTTalk Unicode 0x1cc */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 83, 0, 0
OFFSET[R], 79, 1131, 0

    </glyphProgram>

    <glyphProgram name="nlfthook">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 14
CALL[], 22, 6, 114
SRP2[], 7
IP[], 21
IP[], 0
CALL[], 30, 7, 114
SHP[2], 42
MIAP[R], 37, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="notequal">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
MDRP[m&gt;RWh], 6
SHP[2], 7
SRP1[], 7
SHP[1], 3
SRP1[], 3
SHP[1], 0
SRP1[], 11
SHP[1], 10
SRP1[], 10
SHP[1], 1
SRP1[], 1
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="nrthook">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 14
SHP[1], 7
MIAP[R], 21, 10
CALL[], 23, 6, 114
CALL[], 31, 7, 114
SHP[2], 43
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="nsuperior">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 17
MIAP[R], 11, 2
SHP[1], 4
MDAP[R], 4
SRP1[], 11
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ntilde">
/* VTTTalk Unicode 0xf1 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 83, 0, 0
OFFSET[R], 397, 97, 4
SVTCA[Y]
CALL[], 42, 3, 1, 1, 170, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="nu">
/* VTTTalk Unicode 0x3bd */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 91, 0, 0

    </glyphProgram>

    <glyphProgram name="numbersign">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 18, 114
CALL[], 2, 2, 114
SRP1[], 0
IP[], 9
MDAP[R], 9
SHP[1], 10
SRP1[], 0
IP[], 14
MDAP[R], 14
SHP[1], 13
SHP[2], 5
SRP1[], 0
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="numeralgreek">
/* VTTTalk Unicode 0x374 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 363, 63, 0

    </glyphProgram>

    <glyphProgram name="numeralgreeksub">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="o">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 7, 114
SHP[2], 39
CALL[], 17, 11, 114
SHP[2], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="o.ss06">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 7, 114
SHP[2], 39
CALL[], 17, 11, 114
SHP[2], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="o_uni02DE">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 84, 0, 0
OFFSET[R], 399, 1174, 0
SVTCA[Y]
CALL[], 46, 6, 2, 0, -308, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="oacute">
/* VTTTalk Unicode 0xf3 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 118, 350, 0
SVTCA[Y]
CALL[], 44, 6, 1, 1, 140, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="obar">
/* VTTTalk Unicode 0x275 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 686, 0, 0

    </glyphProgram>

    <glyphProgram name="obreve">
/* VTTTalk Unicode 0x14f */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 393, 146, 0
SVTCA[Y]
CALL[], 49, 6, 1, 1, 126, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="ocaron">
/* VTTTalk Unicode 0x1d2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 376, 125, 0
SVTCA[Y]
CALL[], 50, 6, 1, 1, 149, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="ocircumflex">
/* VTTTalk Unicode 0xf4 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 375, 104, 0
SVTCA[Y]
CALL[], 47, 6, 1, 1, 151, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="odieresis">
/* VTTTalk Unicode 0xf6 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 107, 152, 0
SVTCA[Y]
CALL[], 65, 6, 1, 1, 163, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="oe">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 60, 11, 114
CALL[], 49, 7, 114
SHP[2], 11
SRP1[], 11
SHP[1], 25
SHP[2], 82
SRP1[], 60
IP[], 18
MDAP[R], 18
SHP[1], 19
SRP1[], 60
SHP[1], 71
SHP[1], 0
SRP1[], 0
SHP[1], 36
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ogonek">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
SMD[], 128
MDRP[m&gt;RGr], 15
SHP[2], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ogoneknosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 15
MDAP[R], 0
SRP1[], 15
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ograve">
/* VTTTalk Unicode 0xf2 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 69, 206, 0
SVTCA[Y]
CALL[], 46, 6, 1, 1, 140, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="ohorn">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 16, 7, 114
SHP[2], 0
MDAP[R], 0
SHP[2], 49
CALL[], 27, 11, 114
SHP[2], 38
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ohungarumlaut">
/* VTTTalk Unicode 0x151 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 398, 231, 0
SVTCA[Y]
CALL[], 44, 6, 1, 1, 130, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="oi">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 11, 114
SHP[2], 0
CALL[], 21, 7, 114
SHP[2], 31
SRP2[], 10
IP[], 27
IP[], 4
MDAP[R], 43
MIAP[R], 48, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="omacron">
/* VTTTalk Unicode 0x14d */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 113, 102, 8
SVTCA[Y]
CALL[], 46, 6, 1, 1, 209, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="omega">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 54, 11, 114
CALL[], 31, 6, 114
SRP1[], 54
SHP[1], 41
SHP[1], 10
SRP1[], 10
SHP[1], 23
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="omegaclosed">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 24, 11
SHP[1], 11
CALL[], 35, 7, 114
SHP[2], 0
SHP[2], 34
SRP1[], 34
SHP[1], 1
SHP[1], 17
MDAP[R], 17
SHP[1], 51
MIAP[R], 45, 11
SHP[1], 58
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="omegatonos">
/* VTTTalk Unicode 0x3ce */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 557, 596, -31
SVTCA[Y]
CALL[], 64, 31, 1, 1, 150, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="omicron">
/* VTTTalk Unicode 0x3bf */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0

    </glyphProgram>

    <glyphProgram name="omicrontonos">
/* VTTTalk Unicode 0x3cc */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 557, 323, -7
SVTCA[Y]
CALL[], 44, 6, 1, 1, 154, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="one">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 12, 114
CALL[], 6, 4, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="one.onum">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
MIAP[R], 6, 125
SHP[1], 5
MDAP[R], 5
SHP[1], 4
SRP1[], 4
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="one.pnum">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 22, -84, 0

    </glyphProgram>

    <glyphProgram name="one.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
MIAP[R], 6, 125
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="one.sup">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RBl], 0
DLTP1[(0 @0 8)(0 @5 8)(0 @10 8)(0 @15 8)]
DLTP2[(0 @2 8)(0 @7 8)]
SHP[2], 3
SRP1[], 3
SHP[1], 5
SRP1[], 5
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="one.tnum">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 2010, 84, 0

    </glyphProgram>

    <glyphProgram name="onedotleader">
/* VTTTalk Unicode 0x2024 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 19, -4, 0

    </glyphProgram>

    <glyphProgram name="oneeighth">
/* VTTTalk Unicode 0x215b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1862, -39, 646
OFFSET[R], 1155, 230, 0
OFFSET[R], 1958, 788, 0



SVTCA[Y]
MIAP[R], 6, 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="onehalf">
/* VTTTalk Unicode 0xbd */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1155, 236, 8
OFFSET[R], 1862, -43, 664
OFFSET[R], 1861, 798, 0

    </glyphProgram>

    <glyphProgram name="oneinferior">
/* VTTTalk Unicode 0x2081 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1862, 0, -367

    </glyphProgram>

    <glyphProgram name="onequarter">
/* VTTTalk Unicode 0xbc */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1862, -38, 664
OFFSET[R], 1155, 280, 8
OFFSET[R], 1954, 726, 0

    </glyphProgram>

    <glyphProgram name="onesuperior">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
CALL[], 6, 2, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="onethird">
/* VTTTalk Unicode 0x2153 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1862, 17, 664
OFFSET[R], 1953, 963, 0
OFFSET[R], 1155, 322, 0


SVTCA[Y]
MIAP[R], 6, 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="oogonek">
/* VTTTalk Unicode 0x1eb */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 396, 278, -1
SVTCA[Y]
CALL[], 44, 17, 0, 0, 76, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="oogonek.NAV">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 396, 278, -1
SVTCA[Y]
CALL[], 44, 17, 0, 0, 76, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="oopen">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 25, 7, 114
SHP[2], 16
MDRP[m&lt;RGr], 20
CALL[], 36, 11, 114
MDRP[m&lt;RGr], 1
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="oopen_uni02DE">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 265, 0, 0
OFFSET[R], 399, 1077, 0

    </glyphProgram>

    <glyphProgram name="ordfeminine">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 13, 3
SHP[1], 8
SMD[], 256
MDRP[M&gt;RGr], 42
MDRP[m&lt;RGr], 22
SRP2[], 13
IP[], 26
MDAP[R], 26
SHP[1], 49
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ordmasculine">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 14
CALL[], 5, 3, 114
SHP[2], 32
SRP1[], 14
SHP[1], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="oslash">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 7, 114
SHP[2], 0
MDAP[R], 0
SHP[2], 43
CALL[], 21, 11, 114
SHP[2], 1
MDAP[R], 1
SHP[2], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="oslashacute">
/* VTTTalk Unicode 0x1ff */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 138, 0, 0
OFFSET[R], 118, 312, -1
SVTCA[Y]
CALL[], 48, 10, 1, 1, 139, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="otilde">
/* VTTTalk Unicode 0xf5 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 397, 99, 4
SVTCA[Y]
CALL[], 58, 6, 1, 1, 150, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="ounce">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 18
MDRP[m&gt;RGr], 24
SHP[1], 28
CALL[], 38, 2, 114
SHP[2], 45
SRP2[], 18
IP[], 36
MDAP[R], 36
SRP2[], 38
IP[], 7
SHP[1], 4
SHP[1], 5
SRP1[], 5
SHP[1], 9
SRP1[], 7
SHP[1], 42
SHP[1], 0
SRP1[], 0
SHP[1], 43
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="overline">
/* VTTTalk Unicode 0x203e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 68, 14, 1735

    </glyphProgram>

    <glyphProgram name="overscoredblnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 7
MDRP[m&gt;RWh], 3
SHP[2], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="overscorenosp">
/* VTTTalk Unicode 0x305 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 68, -1048, 1741

    </glyphProgram>

    <glyphProgram name="p">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 14, 114
CALL[], 3, 6, 114
CALL[], 11, 11, 114
SHP[2], 43
CALL[], 22, 7, 114
SHP[2], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="p.ss06">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 14, 114
CALL[], 3, 6, 114
CALL[], 11, 11, 114
SHP[2], 43
CALL[], 22, 7, 114
SHP[2], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="paragraph">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 18, 114
CALL[], 11, 2, 114
MDRP[m&gt;RBl], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="parenleft">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 19
MDAP[R], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="parenleftinferior">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 16
MDAP[R], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="parenleftsuperior">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 6
MDAP[R], 17
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="parenright">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
MDAP[R], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="parenrightsub">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
MDAP[R], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="parenrightsuperior">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 6
MDAP[R], 17
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="partialdiff">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 18, 0, 114
SHP[2], 9
CALL[], 31, 11, 114
SHP[2], 53
SRP1[], 18
IP[], 0
MDAP[R], 0
SHP[1], 42
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="percent">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 50, 13, 114
CALL[], 5, 5, 114
SHP[2], 32
MDRP[m&lt;RGr], 14
SHP[2], 23
SRP0[], 50
MDRP[m&lt;RGr], 41
SHP[2], 68
SHP[1], 59
SRP1[], 5
SHP[1], 75
SRP1[], 50
SHP[1], 73
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="period">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 11, 114
SHP[2], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="periodcentered">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="periodcentered.tnum">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 121, 306, 0

    </glyphProgram>

    <glyphProgram name="pertenthousand">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 5, 5
SHP[1], 32
SHP[1], 14
MDAP[R], 14
SHP[1], 23
MIAP[R], 50, 13
SHP[1], 59
SHP[1], 41
SRP1[], 41
SHP[1], 68
SHP[1], 77
SRP1[], 77
SHP[1], 104
SHP[1], 113
SRP1[], 113
SHP[1], 140
SRP1[], 50
SHP[1], 86
SRP1[], 86
SHP[1], 95
SHP[1], 122
SRP1[], 122
SHP[1], 131
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="perthousand">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 5, 5
SHP[1], 32
SHP[1], 14
MDAP[R], 14
SHP[1], 23
MIAP[R], 50, 13
SHP[1], 59
SHP[1], 41
MDAP[R], 41
SHP[1], 68
SHP[1], 77
MDAP[R], 77
SHP[1], 104
SRP1[], 50
SHP[1], 86
MDAP[R], 86
SHP[1], 95
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="peseta">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 14, 12
CALL[], 15, 4, 114
SHP[2], 12
SRP2[], 14
IP[], 1
MDAP[R], 1
SHP[1], 2
CALL[], 24, 6, 114
SHP[2], 25
MDRP[m&gt;RGr], 28
MIAP[R], 41, 13
SHP[1], 34
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="phi">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
CALL[], 15, 11, 114
SHP[2], 34
CALL[], 24, 6, 114
SHP[2], 25
SHP[2], 5
SRP1[], 5
SHP[1], 43
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="phi1">
/* VTTTalk Unicode 0x3d5 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 653, 0, 0

    </glyphProgram>

    <glyphProgram name="philatin">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 7, 114
SHP[2], 39
MDRP[m&gt;RBl], 45
CALL[], 17, 11, 114
SHP[2], 28
MDRP[m&gt;RBl], 44
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="phook">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 20
CALL[], 30, 11, 114
SHP[2], 62
CALL[], 41, 7, 114
SHP[2], 52
MDRP[m&lt;RWh], 14
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="pi">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 6, 114
SHP[2], 2
SHP[2], 7
SHP[2], 9
CALL[], 6, 10, 114
CALL[], 21, 11, 114
SHP[2], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="pipe">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
CALL[], 0, 2, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="pipedbl">
/* VTTTalk Unicode 0x1c1 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 212, 0, 0
OFFSET[R], 212, 258, 0

    </glyphProgram>

    <glyphProgram name="pipedblbar">
/* VTTTalk Unicode 0x1c2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 212, 86, 0
OFFSET[R], 1960, -121, 278
OFFSET[R], 1960, -121, -230

    </glyphProgram>

    <glyphProgram name="plus">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MDRP[m&lt;RWh], 6
SHP[1], 3
SRP0[], 3
MDRP[m&lt;RWh], 7
MDAP[R], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="plusminus">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 18, 114
MDAP[R], 4
IP[], 3
MDAP[R], 3
SHP[1], 2
SHP[2], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="plussub">
/* VTTTalk Unicode 0x208a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1187, 0, -998

    </glyphProgram>

    <glyphProgram name="plussubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
MDRP[M&gt;RBl], 7
MDRP[m&gt;RWh], 2
SRP0[], 4
MDRP[m&gt;RWh], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="plussuperior">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 7
MDAP[R], 7
SRP1[], 3
SHP[1], 2
SRP1[], 2
SHP[1], 6
RDTG[]
MDAP[R], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="primerev1">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 2
MDAP[R], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="primetripl1">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
MDAP[R], 0
SHP[2], 4
SRP1[], 4
SHP[1], 8
SRP1[], 1
SHP[1], 5
SRP1[], 5
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="primetriplerev1">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
SHP[1], 7
SRP1[], 7
SHP[1], 3
SRP1[], 11
SHP[1], 10
MDAP[R], 10
SHP[1], 6
SRP1[], 6
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="product">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 2
CALL[], 7, 2, 114
SHP[2], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="psi">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
SHP[2], 16
SHP[2], 32
CALL[], 25, 11, 114
SHP[2], 7
MDAP[R], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="published">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 20, 9, 114
SHP[2], 0
SRP1[], 0
SHP[1], 51
CALL[], 30, 3, 114
SHP[2], 10
SRP1[], 10
SHP[1], 53
MDAP[R], 53
SHP[1], 50
SRP2[], 51
IP[], 41
MDAP[R], 41
SHP[1], 42
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="q">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 6, 114
CALL[], 4, 14, 114
CALL[], 11, 7, 114
SHP[2], 43
CALL[], 22, 11, 114
SHP[2], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="q.ss06">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 6, 114
CALL[], 4, 14, 114
CALL[], 11, 7, 114
SHP[2], 43
CALL[], 22, 11, 114
SHP[2], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="qhook">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 7, 0
SHP[1], 14
SHP[1], 1
SRP1[], 1
SHP[1], 21
CALL[], 19, 14, 114
CALL[], 30, 7, 114
SHP[2], 62
CALL[], 41, 11, 114
SHP[2], 52
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="qofdagesh">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 2
MDRP[m&gt;RGr], 4
SHP[2], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="question">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 22, 3, 114
SHP[2], 13
SHP[2], 17
MDAP[R], 17
CALL[], 42, 11, 114
SHP[2], 36
SRP1[], 36
SHP[1], 1
MDAP[R], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="questiondown">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 22
SHP[1], 13
SHP[1], 17
MDAP[R], 17
MIAP[R], 43, 16
SHP[1], 37
MDAP[R], 37
SHP[1], 0
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="questiongreek">
/* VTTTalk Unicode 0x37e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 19, -1, 883
OFFSET[R], 17, 45, 0

    </glyphProgram>

    <glyphProgram name="quotedbl">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 11
MDRP[m&gt;RBl], 3
SHP[2], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="quotedblbase">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 11
MDRP[m&gt;RBl], 5
SHP[2], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="quotedblleft">
/* VTTTalk Unicode 0x201c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1122, 8, 0
OFFSET[R], 1122, 323, 0

    </glyphProgram>

    <glyphProgram name="quotedblreversed">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 11
MDRP[m&gt;RBl], 5
SHP[2], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="quotedblright">
/* VTTTalk Unicode 0x201d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1123, 12, 0
OFFSET[R], 1123, 319, 0

    </glyphProgram>

    <glyphProgram name="quotedblx">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 6, 114
SHP[2], 7
SHP[2], 2
SRP1[], 2
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="quoteleft">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="quotereversed">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="quoteright">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="quotesinglbase">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="quotesingle">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
MDRP[m&lt;RWh], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="r">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 10, 114
CALL[], 3, 6, 114
CALL[], 20, 7, 114
SHP[2], 5
SHP[2], 9
SRP1[], 9
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="racute">
/* VTTTalk Unicode 0x155 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 118, 183, 0
SVTCA[Y]
CALL[], 23, 3, 1, 1, 160, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="radical">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 2, 114
MIAP[R], 8, 8
SHP[1], 4
MDAP[R], 10
SHP[1], 11
SRP1[], 11
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="rcaron">
/* VTTTalk Unicode 0x159 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 376, -42, 0
SVTCA[Y]
CALL[], 29, 3, 1, 1, 169, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="rcommaaccent">
/* VTTTalk Unicode 0x157 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

OFFSET[R], 87, 0, 0
OFFSET[R], 1832, -10, -343
SVTCA[Y]
CALL[], 32, 2, 1, 1, -104, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="rdescend">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 14, 114
CALL[], 20, 7, 114
SHP[2], 9
CALL[], 4, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="referencemark">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="registered">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 73, 3, 114
SHP[2], 63
CALL[], 83, 19, 114
SRP2[], 73
IP[], 15
MDAP[R], 15
SHP[1], 12
SRP1[], 83
SHP[1], 53
SRP1[], 53
SHP[1], 13
MDAP[R], 13
SHP[1], 41
SRP2[], 15
IP[], 1
RDTG[]
MDAP[R], 1
SHP[1], 2
SRP2[], 2
SLOOP[], 4
IP[], 31, 27, 24, 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="response">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 2, 114
SHP[2], 28
MDRP[m&gt;RWh], 5
SHP[2], 0
SHP[2], 4
SRP1[], 4
SHP[1], 3
CALL[], 30, 8, 114
MDRP[m&gt;RWh], 2
SHP[1], 31
SRP2[], 6
IP[], 17
MDAP[R], 17
SHP[1], 18
SHP[1], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="reverseddblprime">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 3
SHP[1], 6
MDAP[R], 6
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="rfishhook">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
CALL[], 7, 7, 114
SHP[2], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="rfishhookrev">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
CALL[], 14, 7, 114
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="rho">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 14, 114
CALL[], 6, 7, 114
CALL[], 17, 11, 114
SRP1[], 6
SHP[1], 41
SHP[2], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="rho1">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
CALL[], 40, 7, 114
SHP[2], 61
SRP2[], 0
IP[], 26
MDAP[R], 26
SHP[1], 51
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ring">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
SHP[1], 17
SMD[], 128
MDRP[m&gt;RGr], 4
SHP[2], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ringacute">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 25
SHP[1], 3
RUTG[]
MDAP[R], 3
RTG[]
MDRP[m&gt;RBl], 1
SRP1[], 7
SHP[1], 13
SRP1[], 13
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ringlefthalfsubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 7
SMD[], 128
MDRP[m&gt;RWh], 0
SHP[2], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ringnosp">
/* VTTTalk Unicode 0x30a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 395, -925, 0

    </glyphProgram>

    <glyphProgram name="ringrighthalfsubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
MDAP[R], 8
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ringsubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
MDAP[R], 4
SHP[1], 23
SRP1[], 11
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ringsubnosp_uni1ABD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 43
SHP[1], 0
SHP[1], 16
SHP[1], 49
SHP[1], 36
SRP1[], 36
SHP[1], 8
SHP[1], 24
SHP[1], 55
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="romaneight">
/* VTTTalk Unicode 0x2167 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 59, 0, 0
OFFSET[R], 46, 1290, 0
OFFSET[R], 46, 1807, 0
OFFSET[R], 46, 2324, 0

    </glyphProgram>

    <glyphProgram name="romaneleven">
/* VTTTalk Unicode 0x216a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 61, 0, 0
OFFSET[R], 46, 1290, 0

    </glyphProgram>

    <glyphProgram name="romanfifty">
/* VTTTalk Unicode 0x216c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 49, 14, 0

    </glyphProgram>

    <glyphProgram name="romanfive">
/* VTTTalk Unicode 0x2164 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 59, 0, 0

    </glyphProgram>

    <glyphProgram name="romanfivehundred">
/* VTTTalk Unicode 0x216e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 41, 14, 0

    </glyphProgram>

    <glyphProgram name="romanfour">
/* VTTTalk Unicode 0x2163 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 46, 0, 0
OFFSET[R], 59, 543, 0

    </glyphProgram>

    <glyphProgram name="romanhundred">
/* VTTTalk Unicode 0x216d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 40, 0, 0

    </glyphProgram>

    <glyphProgram name="romannine">
/* VTTTalk Unicode 0x2168 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 46, 0, 0
OFFSET[R], 61, 552, 0

    </glyphProgram>

    <glyphProgram name="romanone">
/* VTTTalk Unicode 0x2160 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 46, 0, 0

    </glyphProgram>

    <glyphProgram name="romanseven">
/* VTTTalk Unicode 0x2166 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 59, 0, 0
OFFSET[R], 46, 1290, 0
OFFSET[R], 46, 1807, 0

    </glyphProgram>

    <glyphProgram name="romansix">
/* VTTTalk Unicode 0x2165 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 59, 0, 0
OFFSET[R], 46, 1290, 0

    </glyphProgram>

    <glyphProgram name="romanten">
/* VTTTalk Unicode 0x2169 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 61, 0, 0

    </glyphProgram>

    <glyphProgram name="romanthousand">
/* VTTTalk Unicode 0x216f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 50, 14, 0

    </glyphProgram>

    <glyphProgram name="romanthree">
/* VTTTalk Unicode 0x2162 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 46, 0, 0
OFFSET[R], 46, 517, 0
OFFSET[R], 46, 1034, 0

    </glyphProgram>

    <glyphProgram name="romantwelve">
/* VTTTalk Unicode 0x216b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 61, 0, 0
OFFSET[R], 46, 1290, 0
OFFSET[R], 46, 1807, 0

    </glyphProgram>

    <glyphProgram name="romantwo">
/* VTTTalk Unicode 0x2161 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 46, 0, 0
OFFSET[R], 46, 517, 0

    </glyphProgram>

    <glyphProgram name="rrthook">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 14
SHP[1], 7
CALL[], 40, 7, 114
SHP[2], 29
CALL[], 23, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="rrthook_uni1ABE">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 15, 114
SHP[2], 7
SHP[2], 43
MDAP[R], 43
SHP[1], 58
SHP[1], 51
MDAP[R], 51
SHP[1], 52
SHP[1], 67
SRP1[], 67
SHP[1], 66
SRP1[], 43
SHP[1], 59
SRP1[], 59
SHP[1], 60
CALL[], 23, 6, 114
CALL[], 40, 7, 114
SHP[2], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="rsuper">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MIAP[R], 19, 2
SHP[1], 4
MDAP[R], 4
SRP1[], 19
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="rturn">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 7
CALL[], 19, 6, 114
MIAP[R], 22, 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="rturnascend">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 0, 114
MIAP[R], 4, 18
CALL[], 20, 11, 114
SHP[2], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="rturnrthook">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 15, 114
SHP[2], 7
CALL[], 21, 6, 114
CALL[], 40, 11, 114
SHP[2], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="rturnsuper">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 14
SHP[1], 4
SHP[1], 21
MDAP[R], 21
MIAP[R], 18, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="rupee">
/* VTTTalk Unicode 0x20a8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 55, 0, 0
OFFSET[R], 88, 1109, 0

    </glyphProgram>

    <glyphProgram name="s">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 7, 114
SHP[2], 23
CALL[], 41, 11, 114
SHP[2], 50
SRP1[], 14
IP[], 0
IP[], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="sacute">
/* VTTTalk Unicode 0x15b */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 88, 0, 0
OFFSET[R], 118, 337, 0
SVTCA[Y]
CALL[], 54, 14, 1, 1, 140, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="sampi">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 8, 15, 114
CALL[], 1, 1, 114
SHP[2], 17
SRP1[], 8
SHP[1], 15
SHP[2], 21
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="scaron">
/* VTTTalk Unicode 0x161 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 88, 0, 0
OFFSET[R], 376, 112, 0
SVTCA[Y]
CALL[], 60, 14, 1, 1, 149, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="scedilla">
/* VTTTalk Unicode 0x15f */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 88, 0, 0
OFFSET[R], 122, 349, -10
SVTCA[Y]
CALL[], 54, 41, 0, 0, 10, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="schwa">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 7, 114
SHP[2], 36
CALL[], 11, 11, 114
SHP[2], 25
SRP2[], 0
IP[], 20
MDAP[R], 20
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="schwahook">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 7, 114
SHP[2], 37
CALL[], 11, 11, 114
SHP[2], 26
SRP2[], 0
IP[], 18
IP[], 59
MDAP[R], 18
MDAP[R], 59
SRP1[], 18
SHP[1], 19
SHP[1], 17
SHP[1], 46
SRP1[], 46
SHP[1], 47
SRP1[], 19
SHP[1], 45
SRP1[], 45
SHP[1], 64
SRP1[], 59
SHP[1], 52
SRP1[], 19
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="scircumflex">
/* VTTTalk Unicode 0x15d */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 88, 0, 0
OFFSET[R], 375, 91, 0
SVTCA[Y]
CALL[], 57, 14, 1, 1, 151, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="seagullsubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
SHP[1], 12
SMD[], 128
MDRP[m&gt;RBl], 0
SHP[2], 9
MDAP[R], 9
SHP[1], 16
SHP[1], 25
MDAP[R], 25
SRP1[], 4
SHP[1], 20
MDAP[R], 20
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="second">
/* VTTTalk Unicode 0x2033 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 7, 0, 0

    </glyphProgram>

    <glyphProgram name="section">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 20, 17, 114
SHP[2], 29
MDAP[R], 68
SHP[1], 79
SLOOP[], 12
IP[], 83, 63, 0, 1, 5, 43, 93, 53, 49, 48, 15, 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="semicolon">
/* VTTTalk Unicode 0x3b (;) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 19, -34, 883
OFFSET[R], 17, 12, 0

    </glyphProgram>

    <glyphProgram name="servicemark">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 27, 2
SHP[1], 34
SHP[1], 10
SRP1[], 10
SHP[1], 5
SHP[1], 6
SHP[1], 7
SHP[1], 1
MDAP[R], 1
SHP[1], 2
SHP[1], 12
MDAP[R], 49
SHP[1], 57
SRP2[], 27
SLOOP[], 3
IP[], 0, 15, 23
SHP[1], 9
MDAP[R], 9
SHP[1], 4
MDAP[R], 4
SHP[1], 11
MDAP[R], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="seven">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 12, 114
CALL[], 6, 4, 114
SHP[2], 5
SRP1[], 5
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="seven.alt">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 8, 12
CALL[], 16, 4, 114
SHP[2], 15
SRP1[], 15
SHP[1], 0
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="seven.frac">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1957, 0, 664

    </glyphProgram>

    <glyphProgram name="seven.onum">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
MIAP[R], 6, 125
SHP[1], 5
SRP1[], 5
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="seven.pnum">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 12, 114
CALL[], 6, 4, 114
SHP[2], 5
SRP1[], 5
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="seven.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 3, 10
MIAP[R], 6, 125
SHP[1], 1
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="seven.sup">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MDRP[m&gt;RGr], 6
SHP[2], 1
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="seven.tnum">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 2015, 44, 0

    </glyphProgram>

    <glyphProgram name="seveneighths">
/* VTTTalk Unicode 0x215e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1957, 31, 655
OFFSET[R], 1155, 288, 0
OFFSET[R], 1958, 862, 0


SVTCA[Y]
MIAP[R], 6, 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="sevensub">
/* VTTTalk Unicode 0x2087 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1957, 0, -367

    </glyphProgram>

    <glyphProgram name="sevensuperior">
/* VTTTalk Unicode 0x2077 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1957, 0, 667

    </glyphProgram>

    <glyphProgram name="shindagesh">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="sigma">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 20, 11, 114
SHP[2], 31
CALL[], 50, 6, 114
SHP[2], 6
SHP[2], 42
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="sigma1">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 7, 114
MDRP[m&gt;RGr], 5
SHP[1], 9
MDAP[R], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="six">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 44, 13, 114
CALL[], 0, 4, 114
SHP[2], 3
SRP1[], 44
IP[], 34
MDAP[R], 34
SHP[1], 24
SRP1[], 44
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="six.alt">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 5, 114
SHP[2], 7
CALL[], 48, 13, 114
SHP[2], 18
SRP1[], 0
IP[], 38
MDAP[R], 38
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="six.frac">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1956, 0, 664

    </glyphProgram>

    <glyphProgram name="six.pnum">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 27, 20, 0

    </glyphProgram>

    <glyphProgram name="six.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 126
SHP[2], 3
MIAP[R], 39, 11
SHP[1], 14
IP[], 31
MDAP[R], 31
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="six.sup">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 36
SHP[1], 12
MDRP[m&gt;RGr], 0
SHP[2], 3
IP[], 28
RDTG[]
MDAP[R], 28
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="six.tnum">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 27, -7, 0

    </glyphProgram>

    <glyphProgram name="sixinferior">
/* VTTTalk Unicode 0x2086 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1956, 0, -367

    </glyphProgram>

    <glyphProgram name="sixsuperior">
/* VTTTalk Unicode 0x2076 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1956, 0, 667

    </glyphProgram>

    <glyphProgram name="slash">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MIAP[R], 0, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="slashlongnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="slashshortnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="space">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="spaceopenbox">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 2
MDRP[m&gt;RBl], 0
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="squaresubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 4
SMD[], 192
MDRP[m&gt;RBl], 0
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="srthook">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 14
SHP[1], 7
CALL[], 34, 7, 114
SHP[2], 43
CALL[], 61, 11, 114
SHP[2], 70
SHP[2], 66
MDAP[R], 66
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="st">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 1, 114
SHP[2], 20
CALL[], 31, 6, 114
SHP[2], 16
SHP[2], 30
CALL[], 45, 11, 114
SHP[2], 38
CALL[], 64, 7, 114
SHP[2], 73
MDRP[m&gt;RGr], 69
SHP[2], 1
CALL[], 91, 11, 114
MDRP[m&gt;RGr], 96
SHP[1], 100
SRP2[], 64
IP[], 50
IP[], 59
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="sterling">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 12, 114
SHP[2], 2
SRP1[], 2
SHP[1], 13
SRP1[], 13
SHP[1], 12
CALL[], 22, 5, 114
SHP[2], 31
SRP1[], 1
IP[], 5
MDAP[R], 5
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="sterling.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 1, 10
SHP[1], 13
SHP[1], 2
SRP1[], 2
SHP[1], 14
MIAP[R], 25, 126
SHP[1], 34
SRP2[], 1
IP[], 5
MDAP[R], 5
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="stigma">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
CALL[], 20, 7, 114
MDRP[m&gt;RGr], 25
SHP[1], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="summation">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
SHP[1], 2
SHP[1], 10
SHP[1], 3
SRP1[], 3
SHP[1], 12
CALL[], 15, 2, 114
SHP[2], 7
SRP1[], 7
SHP[1], 6
SRP1[], 6
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="t">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 6, 114
SHP[2], 2
MDAP[R], 4
CALL[], 17, 11, 114
SHP[2], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tackdownsubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 2
SMD[], 128
MDRP[m&gt;RGr], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tackleftsubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SMD[], 192
MDRP[m&gt;RBl], 2
IP[], 6
MDAP[R], 6
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tackrightsubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SMD[], 192
MDRP[m&gt;RBl], 3
IP[], 6
MDAP[R], 6
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tackupsubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RGr], 7
SHP[2], 2
SHP[2], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tau">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 17, 11, 114
CALL[], 3, 6, 114
SHP[2], 2
SRP1[], 17
SHP[1], 10
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tavdages">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 12, 3, 114
SHP[2], 20
MDRP[m&lt;RGr], 35
SHP[2], 44
IP[], 0
IP[], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tbar">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 6, 114
SHP[2], 4
MDAP[R], 4
SHP[2], 2
SRP1[], 2
SHP[1], 25
MDAP[R], 25
SHP[1], 24
CALL[], 17, 11, 114
SHP[2], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tcaron">
/* VTTTalk Unicode 0x165 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 89, 0, 0
OFFSET[R], 1832, 405, 1419
SVTCA[Y]
CALL[], 26, 4, 1, 0, -88, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="tccurl">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 29, 11, 114
SHP[2], 0
SRP1[], 0
SHP[1], 7
MDAP[R], 7
SHP[1], 20
CALL[], 40, 7, 114
MDRP[m&gt;RGr], 45
SHP[1], 49
CALL[], 63, 6, 114
SHP[2], 62
MDRP[m&gt;RWh], 64
CALL[], 71, 11, 114
SHP[2], 13
SHP[2], 70
SRP1[], 70
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tel">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 18
SRP1[], 18
SHP[1], 10
SRP1[], 10
SHP[1], 19
SHP[1], 30
SRP1[], 30
SHP[1], 26
SRP1[], 26
SHP[1], 31
MIAP[R], 7, 2
SHP[1], 3
SHP[1], 6
SHP[1], 11
SRP1[], 11
SHP[1], 14
SHP[1], 15
SHP[1], 27
SRP2[], 10
IP[], 22
MDAP[R], 22
SHP[1], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tesh">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 6, 114
SHP[2], 2
MDRP[m&gt;RWh], 4
SHP[1], 40
SRP1[], 40
SHP[1], 24
CALL[], 17, 11, 114
SHP[2], 10
SHP[2], 23
CALL[], 28, 1, 114
SHP[2], 35
CALL[], 46, 15, 114
SHP[2], 53
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="theta">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 13, 11, 114
MDAP[R], 0
CALL[], 0, 26, 106
SRP2[], 13
IP[], 48
MDAP[R], 48
CALL[], 48, 32, 106
CALL[], 13, 40, 106
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="thook">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 7, 1, 114
SHP[2], 14
CALL[], 22, 6, 114
SHP[2], 21
SRP1[], 7
SLOOP[], 6
IP[], 0, 1, 24, 23, 18, 2
MDAP[R], 36
SHP[1], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="thorn">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 14, 114
CALL[], 3, 0, 114
CALL[], 10, 11, 114
CALL[], 21, 7, 114
SHP[2], 32
SRP1[], 10
SHP[1], 43
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="three">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 18, 5, 114
SHP[2], 9
SHP[2], 13
MDAP[R], 13
CALL[], 41, 13, 114
SHP[2], 47
MDAP[R], 47
SHP[2], 51
SRP1[], 18
IP[], 29
MDAP[R], 29
SHP[1], 0
SRP2[], 0
SLOOP[], 4
IP[], 27, 28, 30, 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="three.onum">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 3, 125
SHP[1], 2
SHP[1], 5
MDAP[R], 15
SHP[1], 22
SRP2[], 3
IP[], 30
MDAP[R], 30
SHP[1], 0
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="three.pnum">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 24, 0, 0

    </glyphProgram>

    <glyphProgram name="three.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 18, 126
SHP[1], 9
MIAP[R], 42, 11
SHP[1], 52
SRP2[], 18
IP[], 30
MDAP[R], 30
SHP[1], 29
SHP[1], 0
SRP1[], 0
SHP[1], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="three.sup">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 36
SHP[1], 44
MDRP[m&gt;RGr], 16
SHP[2], 8
IP[], 26
MDAP[R], 26
SHP[1], 25
SHP[1], 0
SRP1[], 0
SHP[1], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="three.tnum">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 2012, 44, 0

    </glyphProgram>

    <glyphProgram name="threeeighths">
/* VTTTalk Unicode 0x215c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1953, 38, 660
OFFSET[R], 1155, 421, 0
OFFSET[R], 1958, 948, 0

    </glyphProgram>

    <glyphProgram name="threequarters">
/* VTTTalk Unicode 0xbe */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1155, 407, 8
OFFSET[R], 1954, 818, 0
OFFSET[R], 1953, 49, 667

    </glyphProgram>

    <glyphProgram name="threesub">
/* VTTTalk Unicode 0x2083 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1953, 0, -367

    </glyphProgram>

    <glyphProgram name="threesuperior">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 16, 3, 114
SHP[2], 8
SHP[2], 11
MDAP[R], 11
SMD[], 256
SRP0[], 16
MDRP[m&gt;RGr], 36
SHP[2], 41
MDAP[R], 41
SHP[2], 44
SRP1[], 16
IP[], 26
MDAP[R], 26
SHP[1], 0
SRP2[], 0
IP[], 24
IP[], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tilde">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 23
SHP[1], 14
MDAP[R], 14
SHP[1], 13
MDAP[R], 13
SMD[], 128
SRP0[], 5
MDRP[m&gt;RBl], 18
CALL[], 18, 64, 15, 26, 72
SHP[2], 10
SHP[2], 1
MDAP[R], 1
SHP[1], 0
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tildeacutecomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 12
SHP[1], 17
SRP1[], 17
SHP[1], 9
SHP[1], 27
MDAP[R], 27
SHP[1], 25
SRP1[], 5
SHP[1], 21
SRP1[], 21
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tildeacutecomb.lc">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 13
SHP[1], 23
SHP[1], 18
MDAP[R], 18
SHP[1], 0
SHP[1], 10
SHP[1], 29
RUTG[]
MDAP[R], 29
SHP[1], 27
RTG[]
MDAP[R], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tildecomb">
/* VTTTalk Unicode 0x303 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 397, -1009, 0

    </glyphProgram>

    <glyphProgram name="tildecomb_uni1ABB">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 37
SHP[1], 55
SHP[1], 45
SRP1[], 45
SHP[1], 0
SHP[2], 15
SHP[2], 16
SRP1[], 16
SHP[1], 17
SRP1[], 37
SHP[1], 50
MDAP[R], 50
SHP[1], 32
SHP[1], 42
SHP[1], 8
SRP1[], 8
SHP[1], 9
SHP[1], 24
SRP1[], 24
SHP[1], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tildecomb_uni1ABC">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 69
SHP[1], 87
SHP[1], 32
SRP1[], 32
SHP[1], 48
SHP[1], 16
SRP1[], 16
SHP[1], 0
SRP1[], 69
SHP[1], 82
MDAP[R], 82
SHP[1], 74
SHP[1], 8
SRP1[], 8
SHP[1], 24
SRP1[], 24
SHP[1], 40
SRP1[], 40
SHP[1], 56
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tildedieresiscomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 21
SHP[1], 17
MDAP[R], 17
SHP[1], 9
SHP[1], 33
RUTG[]
MDAP[R], 33
SHP[1], 27
SHP[1], 45
SRP1[], 45
SHP[1], 39
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tildedieresiscomb.lc">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 29
SHP[1], 37
SHP[1], 47
SMD[], 128
MDRP[m&gt;RBl], 42
SHP[2], 24
SHP[2], 34
SHP[2], 9
RUTG[]
MDAP[R], 9
SHP[1], 3
SHP[1], 21
SRP1[], 21
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tildemacroncomb">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 17, 16
SHP[1], 9
SHP[1], 0
SHP[2], 1
SMD[], 128
MDRP[m&gt;RBl], 5
SHP[2], 21
SHP[2], 12
SRP1[], 12
SHP[1], 13
SMD[], 64
MDRP[m&gt;RWh], 26
SHP[2], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tildemacroncomb.lc">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 23
SHP[1], 18
MDAP[R], 18
SHP[1], 10
SHP[1], 28
RUTG[]
MDAP[R], 28
SHP[1], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tildemidnosp">
/* VTTTalk Unicode 0x334 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 397, -1060, -846

    </glyphProgram>

    <glyphProgram name="tildesubnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 23
SHP[1], 13
MDAP[R], 13
SHP[1], 14
SMD[], 128
SRP0[], 5
MDRP[m&gt;RBl], 18
SHP[2], 10
SHP[2], 0
MDAP[R], 0
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tildesubnosp_uni1ABD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 37
SHP[1], 55
SHP[1], 16
SRP1[], 16
SHP[1], 0
SRP1[], 37
SHP[1], 50
MDAP[R], 50
SHP[1], 42
SHP[1], 8
SRP1[], 8
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tildevertsupnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 13
MDRP[m&gt;RGr], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tonefive">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 6, 114
SHP[2], 41
SHP[2], 40
SRP1[], 40
SHP[1], 5
MDAP[R], 18
SHP[1], 27
IP[], 10
MDAP[R], 10
SHP[1], 35
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tonesix">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 15, 0, 114
SHP[2], 0
MIAP[R], 18, 18
CALL[], 25, 11, 114
SHP[2], 58
CALL[], 36, 7, 114
SHP[2], 47
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tonetwo">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 11, 114
SHP[2], 4
SHP[2], 8
MDAP[R], 8
CALL[], 42, 7, 114
SHP[2], 32
SHP[2], 36
MDAP[R], 36
SRP1[], 14
IP[], 19
IP[], 46
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tonos">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SMD[], 128
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tpalatalhook">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 13
CALL[], 21, 6, 114
SHP[2], 20
MDRP[m&gt;RWh], 22
CALL[], 35, 11, 114
SHP[2], 28
SRP2[], 28
IP[], 0
IP[], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="trademark">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 17
SHP[1], 6
SRP1[], 6
SHP[1], 3
SRP1[], 3
SHP[1], 0
MIAP[R], 20, 2
SHP[1], 19
SHP[1], 7
SRP1[], 7
SHP[1], 10
SRP2[], 6
SLOOP[], 3
IP[], 9, 4, 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="trianglebullet">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 16
IP[], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="trthook">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 6, 114
SHP[2], 2
MDRP[m&gt;RWh], 4
CALL[], 18, 15, 114
SHP[2], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ts">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 9, 10
SHP[1], 6
SRP1[], 6
SHP[1], 60
SRP1[], 9
SHP[1], 58
CALL[], 30, 7, 114
SHP[2], 39
SRP2[], 58
SLOOP[], 4
IP[], 15, 52, 25, 43
CALL[], 67, 6, 114
MDRP[m&gt;RWh], 0
SHP[1], 66
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tturn">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 17
SHP[1], 10
SRP2[], 4
IP[], 0
MDAP[R], 0
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="two">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 12, 114
SHP[2], 31
SRP1[], 31
SHP[1], 3
CALL[], 21, 5, 114
SHP[2], 12
SHP[2], 16
MDAP[R], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="two.onum">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 18
SHP[1], 32
SRP1[], 32
SHP[1], 3
MIAP[R], 21, 126
SHP[1], 12
SHP[1], 16
MDAP[R], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="two.pnum">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 23, 0, 0

    </glyphProgram>

    <glyphProgram name="two.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 18
SHP[1], 30
SRP1[], 30
SHP[1], 3
MIAP[R], 20, 126
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="two.sup">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MDRP[m&gt;RGr], 19
SHP[2], 11
SHP[1], 28
SRP1[], 28
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="two.tnum">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 2011, -13, 0

    </glyphProgram>

    <glyphProgram name="twosub">
/* VTTTalk Unicode 0x2082 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1861, 0, -367

    </glyphProgram>

    <glyphProgram name="twosuperior">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 19, 3, 114
SHP[2], 11
SMD[], 256
MDRP[m&gt;RGr], 2
SHP[2], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="twothirds">
/* VTTTalk Unicode 0x2154 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1861, 40, 664
OFFSET[R], 1155, 521, 0
OFFSET[R], 1953, 1160, 0



SVTCA[Y]
MIAP[R], 19, 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="u">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 11, 11, 114
SHP[2], 3
MDAP[R], 3
SHP[2], 24
CALL[], 17, 6, 114
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uacute">
/* VTTTalk Unicode 0xfa */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0
OFFSET[R], 118, 342, 0
SVTCA[Y]
CALL[], 28, 17, 1, 1, 160, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="ubar">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 6, 114
SHP[2], 22
MDAP[R], 8
CALL[], 15, 11, 114
SHP[2], 28
SRP2[], 5
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ubreve">
/* VTTTalk Unicode 0x16d */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0
OFFSET[R], 393, 138, 0
SVTCA[Y]
CALL[], 33, 17, 1, 1, 146, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="ucaron">
/* VTTTalk Unicode 0x1d4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0
OFFSET[R], 376, 117, 0
SVTCA[Y]
CALL[], 34, 17, 1, 1, 169, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="ucircumflex">
/* VTTTalk Unicode 0xfb */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0
OFFSET[R], 375, 96, 0
SVTCA[Y]
CALL[], 31, 17, 1, 1, 171, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="udieresis">
/* VTTTalk Unicode 0xfc */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0
OFFSET[R], 107, 144, 0
SVTCA[Y]
CALL[], 49, 17, 1, 1, 183, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="ugrave">
/* VTTTalk Unicode 0xf9 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0
OFFSET[R], 69, 198, 0
SVTCA[Y]
CALL[], 30, 17, 1, 1, 160, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uhorn">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 21, 11, 114
SHP[2], 14
MDAP[R], 14
SHP[2], 34
CALL[], 27, 6, 114
SHP[2], 0
MDAP[R], 0
SHP[2], 11
SRP1[], 11
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uhungarumlaut">
/* VTTTalk Unicode 0x171 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0
OFFSET[R], 398, 223, 0
SVTCA[Y]
CALL[], 28, 17, 1, 1, 150, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="umacron">
/* VTTTalk Unicode 0x16b */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0
OFFSET[R], 113, 94, 8
SVTCA[Y]
CALL[], 30, 17, 1, 1, 229, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="underscore">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="underscoredbl">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 6
SMD[], 128
MDRP[m&gt;RWh], 3
SHP[2], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="underscoredblnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 2
SMD[], 128
MDRP[m&gt;RGr], 7
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="underscorenosp">
/* VTTTalk Unicode 0x332 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 68, -1048, -148

    </glyphProgram>

    <glyphProgram name="undertie">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 8
SMD[], 128
MDRP[m&gt;RGr], 5
SHP[2], 4
SHP[2], 11
SRP1[], 11
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0002">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni0009">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni0069.ccmp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 142, 0, 0

    </glyphProgram>

    <glyphProgram name="uni006A.ccmp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 236, 0, 0

    </glyphProgram>

    <glyphProgram name="uni00AD">
/* VTTTalk Unicode 0xad */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 18, 0, 0

    </glyphProgram>

    <glyphProgram name="uni010A">
/* VTTTalk Unicode 0x10a */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 40, 0, 0
OFFSET[R], 394, 429, 343
SVTCA[Y]
CALL[], 49, 16, 1, 1, 130, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni010A.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1971, 0, 0
OFFSET[R], 394, 336, 30



SVTCA[Y]
CALL[], 49, 16, 1, 1, 112, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni010B">
/* VTTTalk Unicode 0x10b */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 72, 0, 0
OFFSET[R], 394, 282, 0
SVTCA[Y]
CALL[], 49, 20, 1, 1, 161, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0120">
/* VTTTalk Unicode 0x120 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 44, 0, 0
OFFSET[R], 394, 421, 343
SVTCA[Y]
CALL[], 53, 16, 1, 1, 130, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0120.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1893, 0, 0
OFFSET[R], 394, 333, 30



SVTCA[Y]
CALL[], 52, 16, 1, 1, 112, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0121">
/* VTTTalk Unicode 0x121 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

OFFSET[R], 76, 0, 0
OFFSET[R], 394, 305, 0
SVTCA[Y]
CALL[], 72, 26, 1, 1, 161, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni012F.ccmp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 142, 0, 0
OFFSET[R], 396, -57, 10
SVTCA[Y]
CALL[], 4, 2, 0, 0, 67, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0162">
/* VTTTalk Unicode 0x162 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 57, 0, 0
OFFSET[R], 122, 401, 0
SVTCA[Y]
CALL[], 8, 2, 1, 0, 0, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0162.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1880, 0, 0
OFFSET[R], 122, 318, 3

    </glyphProgram>

    <glyphProgram name="uni0163">
/* VTTTalk Unicode 0x163 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 89, 0, 0
OFFSET[R], 122, 240, 0
SVTCA[Y]
CALL[], 22, 17, 0, 0, 20, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni019E">
/* VTTTalk Unicode 0x19e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0

    </glyphProgram>

    <glyphProgram name="uni01B7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 28
SHP[1], 1
MDAP[R], 1
SRP1[], 28
SHP[1], 5
CALL[], 36, 2, 114
SRP1[], 28
IP[], 41
IP[], 16
MDAP[R], 41
MDAP[R], 16
SRP1[], 41
SHP[1], 40
SRP1[], 16
SHP[1], 34
SHP[1], 17
SRP1[], 17
SHP[1], 35
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01B8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 0
MDAP[R], 0
SRP1[], 5
SHP[1], 27
CALL[], 33, 2, 114
SRP1[], 5
IP[], 38
MDAP[R], 38
SRP2[], 5
IP[], 36
SHP[1], 37
SRP1[], 36
SHP[1], 16
SHP[1], 35
SRP1[], 35
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01B9">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
SHP[2], 3
SHP[2], 7
MDAP[R], 10
SHP[1], 4
SRP2[], 4
IP[], 6
IP[], 8
MDAP[R], 28
SHP[1], 18
MDRP[m&gt;RGr], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01BA">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
SHP[2], 7
SRP1[], 7
SHP[1], 2
MDAP[R], 22
SHP[1], 12
IP[], 42
MDAP[R], 42
SHP[1], 5
SHP[1], 4
SRP1[], 4
SHP[1], 3
SHP[1], 40
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01BB">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 35
SRP1[], 35
SHP[1], 7
CALL[], 25, 5, 114
SHP[2], 16
MDRP[m&gt;RGr], 20
SRP2[], 6
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01C4">
/* VTTTalk Unicode 0x1c4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 41, 0, 0
OFFSET[R], 63, 1155, 0
OFFSET[R], 376, 1324, 311
SVTCA[Y]
CALL[], 51, 39, 1, 1, 106, 86
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni01C5">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 10
SHP[1], 2
SRP1[], 2
SHP[1], 3
SRP1[], 3
SHP[1], 7
CALL[], 13, 6, 114
SHP[2], 8
SHP[2], 12
SRP1[], 12
SHP[1], 4
MDRP[M&gt;RWh], 20
SMD[], 128
MDRP[m&gt;RBl], 14
SHP[2], 21
IP[], 15
SHP[2], 16
SRP1[], 16
SHP[1], 18
MIAP[R], 53, 10
SHP[1], 24
SRP1[], 24
SHP[1], 25
CALL[], 54, 2, 114
SHP[2], 39
SRP1[], 39
SHP[1], 38
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01C6">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 0, 114
MIAP[R], 4, 10
CALL[], 11, 7, 114
SHP[2], 43
CALL[], 22, 11, 114
SHP[2], 33
MIAP[R], 50, 10
SHP[1], 54
SHP[1], 51
SRP1[], 51
SHP[1], 55
CALL[], 61, 6, 114
SHP[2], 56
SHP[2], 60
SRP1[], 60
SHP[1], 52
MDRP[M&gt;RWh], 68
SMD[], 128
MDRP[m&gt;RBl], 62
SHP[2], 64
SHP[2], 66
SHP[2], 69
IP[], 63
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01D5">
/* VTTTalk Unicode 0x1d5 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0
OFFSET[R], 1976, 1252, 331
SVTCA[Y]
CALL[], 47, 0, 1, 1, 114, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni01D6">
/* VTTTalk Unicode 0x1d6 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0
OFFSET[R], 2263, 1152, 0
SVTCA[Y]
CALL[], 49, 17, 1, 1, 183, 86
SHC[2], 2
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni01D7">
/* VTTTalk Unicode 0x1d7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0
OFFSET[R], 1977, 1252, 330
SVTCA[Y]
CALL[], 47, 0, 1, 1, 119, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni01D8">
/* VTTTalk Unicode 0x1d8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0
OFFSET[R], 2259, 1152, 0
SVTCA[Y]
CALL[], 49, 17, 1, 1, 183, 86
SHC[2], 2
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni01D9">
/* VTTTalk Unicode 0x1d9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0
OFFSET[R], 1978, 1252, 333
SVTCA[Y]
CALL[], 43, 0, 1, 1, 117, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni01DA">
/* VTTTalk Unicode 0x1da */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0
OFFSET[R], 2269, 1152, 0

SVTCA[Y]
CALL[], 49, 17, 1, 1, 183, 86
SHC[2], 2
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni01DB">
/* VTTTalk Unicode 0x1db */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0
OFFSET[R], 1979, 1252, 330
SVTCA[Y]
CALL[], 47, 0, 1, 1, 119, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni01DC">
/* VTTTalk Unicode 0x1dc */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0
OFFSET[R], 2264, 1152, 0
SVTCA[Y]
CALL[], 49, 17, 1, 1, 183, 86
SHC[2], 2
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni01DE">
/* VTTTalk Unicode 0x1de */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1976, 1257, 331
SVTCA[Y]
CALL[], 39, 7, 1, 1, 114, 86
SHC[2], 3
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni01DF">
/* VTTTalk Unicode 0x1df */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 2263, 1167, 0
SVTCA[Y]
CALL[], 80, 15, 1, 1, 163, 86
SHC[2], 2
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni01E0">
/* VTTTalk Unicode 0x1e0 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1980, 1257, 332
SVTCA[Y]
CALL[], 23, 7, 1, 1, 114, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni01E1">
/* VTTTalk Unicode 0x1e1 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 2261, 1167, 0
SVTCA[Y]
CALL[], 68, 15, 1, 1, 161, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni01EC">
/* VTTTalk Unicode 0x1ec */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 396, 401, 0
OFFSET[R], 113, 234, 321
SVTCA[Y]
CALL[], 44, 6, 0, 0, 77, 86
SHC[2], 2
CALL[], 68, 17, 1, 1, 148, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni01ED">
/* VTTTalk Unicode 0x1ed */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 396, 278, -1
OFFSET[R], 113, 102, 8
SVTCA[Y]
CALL[], 44, 17, 0, 0, 76, 86
SHC[2], 2
CALL[], 68, 6, 1, 1, 209, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni01EE">
/* VTTTalk Unicode 0x1ee */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 203, 0, 0
OFFSET[R], 376, 157, 294

SVTCA[Y]
CALL[], 48, 41, 1, 1, 89, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni01EF">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 6, 114
MDRP[M&gt;RWh], 6
SMD[], 128
MDRP[M&gt;RBl], 0
MDRP[m&lt;RGr], 2
SHP[1], 4
SHP[1], 7
SRP2[], 6
IP[], 1
SRP1[], 9
SHP[1], 16
SRP1[], 16
SHP[1], 11
CALL[], 27, 14, 114
SHP[2], 33
MDAP[R], 33
SHP[2], 37
SRP1[], 9
IP[], 45
MDAP[R], 45
SHP[1], 18
SRP1[], 18
SHP[1], 12
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01F0">
/* VTTTalk Unicode 0x1f0 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 236, 0, 0
OFFSET[R], 376, -184, -41
SVTCA[Y]
CALL[], 24, 0, 1, 1, 128, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni01F1">
/* VTTTalk Unicode 0x1f1 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 41, 0, 0
OFFSET[R], 63, 1344, 0

    </glyphProgram>

    <glyphProgram name="uni01F2">
/* VTTTalk Unicode 0x1f2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 41, 0, 0
OFFSET[R], 95, 1344, 0

    </glyphProgram>

    <glyphProgram name="uni01F3">
/* VTTTalk Unicode 0x1f3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 73, 0, 0
OFFSET[R], 95, 1155, 0

    </glyphProgram>

    <glyphProgram name="uni01F6">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 2, 114
CALL[], 11, 2, 114
CALL[], 12, 6, 114
CALL[], 18, 9, 114
SHP[2], 30
SRP2[], 4
IP[], 2
MDAP[R], 2
SHP[1], 3
SRP1[], 18
SHP[1], 6
MDAP[R], 6
IP[], 10
IP[], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01F7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
CALL[], 3, 2, 114
CALL[], 24, 3, 114
SHP[2], 21
SRP2[], 2
IP[], 4
MDAP[R], 4
SHP[1], 5
SRP1[], 24
SHP[1], 16
SRP1[], 16
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01F8">
/* VTTTalk Unicode 0x1f8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 51, 0, 0
OFFSET[R], 69, 357, 311
SVTCA[Y]
CALL[], 12, 9, 1, 1, 97, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni01F9">
/* VTTTalk Unicode 0x1f9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 83, 0, 0
OFFSET[R], 69, 204, 0
SVTCA[Y]
CALL[], 30, 3, 1, 1, 160, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0200">
/* VTTTalk Unicode 0x200 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 448, 1133, 306
SVTCA[Y]
CALL[], 14, 3, 1, 1, 102, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni0201">
/* VTTTalk Unicode 0x201 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 448, 1043, -5
SVTCA[Y]
CALL[], 60, 15, 1, 1, 145, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni0202">
/* VTTTalk Unicode 0x202 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 450, 1257, 405
SVTCA[Y]
CALL[], 15, 7, 1, 1, 138, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni0203">
/* VTTTalk Unicode 0x203 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 450, 1167, 94
SVTCA[Y]
CALL[], 60, 15, 1, 1, 181, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0204">
/* VTTTalk Unicode 0x204 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 448, 1080, 317
SVTCA[Y]
CALL[], 17, 7, 1, 1, 113, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni0205">
/* VTTTalk Unicode 0x205 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 448, 1026, -5
SVTCA[Y]
CALL[], 45, 11, 1, 1, 145, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0206">
/* VTTTalk Unicode 0x206 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 450, 1204, 416
SVTCA[Y]
CALL[], 17, 7, 1, 1, 149, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni0207">
/* VTTTalk Unicode 0x207 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 450, 1150, 94
SVTCA[Y]
CALL[], 45, 11, 1, 1, 181, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0208">
/* VTTTalk Unicode 0x208 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 448, 740, 317
SVTCA[Y]
CALL[], 5, 3, 1, 1, 113, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0209">
/* VTTTalk Unicode 0x209 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 142, 0, 0
OFFSET[R], 448, 713, -7
SVTCA[Y]
CALL[], 5, 3, 1, 1, 163, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni020A">
/* VTTTalk Unicode 0x20a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 450, 864, 416
SVTCA[Y]
CALL[], 5, 3, 1, 1, 149, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni020B">
/* VTTTalk Unicode 0x20b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 142, 0, 0
OFFSET[R], 450, 837, 92
SVTCA[Y]
CALL[], 5, 3, 1, 1, 199, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni020C">
/* VTTTalk Unicode 0x20c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 448, 1168, 308
SVTCA[Y]
CALL[], 45, 17, 1, 1, 84, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni020D">
/* VTTTalk Unicode 0x20d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 448, 1036, -5
SVTCA[Y]
CALL[], 45, 6, 1, 1, 145, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni020E">
/* VTTTalk Unicode 0x20e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 450, 1292, 407
SVTCA[Y]
CALL[], 45, 17, 1, 1, 120, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni020F">
/* VTTTalk Unicode 0x20f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 450, 1160, 94
SVTCA[Y]
CALL[], 45, 6, 1, 1, 181, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0210">
/* VTTTalk Unicode 0x210 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 55, 0, 0
OFFSET[R], 448, 1071, 306
SVTCA[Y]
CALL[], 31, 0, 1, 1, 102, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni0211">
/* VTTTalk Unicode 0x211 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 448, 869, -5
SVTCA[Y]
CALL[], 24, 3, 1, 1, 165, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni0212">
/* VTTTalk Unicode 0x212 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 55, 0, 0
OFFSET[R], 450, 1195, 405
SVTCA[Y]
CALL[], 31, 0, 1, 1, 138, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0213">
/* VTTTalk Unicode 0x213 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 450, 993, 94
SVTCA[Y]
CALL[], 24, 3, 1, 1, 201, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0214">
/* VTTTalk Unicode 0x214 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0
OFFSET[R], 448, 1128, 306
SVTCA[Y]
CALL[], 23, 11, 1, 1, 102, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0215">
/* VTTTalk Unicode 0x215 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0
OFFSET[R], 448, 1028, -5
SVTCA[Y]
CALL[], 29, 17, 1, 1, 165, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni0216">
/* VTTTalk Unicode 0x216 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0
OFFSET[R], 450, 1252, 405
SVTCA[Y]
CALL[], 23, 0, 1, 1, 138, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0217">
/* VTTTalk Unicode 0x217 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0
OFFSET[R], 450, 1152, 94
SVTCA[Y]
CALL[], 29, 17, 1, 1, 201, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0218">
/* VTTTalk Unicode 0x218 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 56, 0, 0
OFFSET[R], 1832, 372, -355
SVTCA[Y]
CALL[], 67, 43, 1, 1, -96, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0219">
/* VTTTalk Unicode 0x219 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 88, 0, 0
OFFSET[R], 1832, 306, -364
SVTCA[Y]
CALL[], 63, 41, 1, 1, -105, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni021A">
/* VTTTalk Unicode 0x21a */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 57, 0, 0
OFFSET[R], 1832, 358, -354
SVTCA[Y]
CALL[], 17, 2, 1, 1, -115, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni021B">
/* VTTTalk Unicode 0x21b */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 89, 0, 0
OFFSET[R], 1832, 197, -354
SVTCA[Y]
CALL[], 31, 17, 1, 1, -95, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni021C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 21, 3, 114
SHP[2], 11
MDRP[m&gt;RGr], 15
MDAP[R], 43
SHP[1], 44
SRP2[], 21
SLOOP[], 4
IP[], 0, 1, 32, 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni021D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 20, 7, 114
SHP[2], 11
MDRP[m&gt;RGr], 15
CALL[], 42, 15, 114
SHP[2], 43
SRP1[], 20
SLOOP[], 4
IP[], 0, 1, 31, 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni021E">
/* VTTTalk Unicode 0x21e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 376, 262, 322
SVTCA[Y]
CALL[], 18, 11, 1, 1, 117, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni021F">
/* VTTTalk Unicode 0x21f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 77, 0, 0
OFFSET[R], 376, 51, 321
SVTCA[Y]
CALL[], 33, 3, 1, 1, 36, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0220">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
CALL[], 15, 3, 114
CALL[], 20, 2, 114
SRP1[], 15
SHP[1], 6
MDAP[R], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0221">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 44
SHP[1], 16
SMD[], 192
MDRP[m&gt;RGr], 36
SHP[2], 22
CALL[], 55, 0, 114
MDAP[R], 57
CALL[], 65, 7, 114
SHP[2], 97
CALL[], 76, 11, 114
SHP[2], 87
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0222">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 11, 9, 114
SHP[2], 30
CALL[], 49, 3, 114
SHP[2], 48
SRP2[], 11
IP[], 20
MDAP[R], 20
SHP[1], 40
SRP2[], 40
IP[], 58
IP[], 1
SRP1[], 49
SHP[1], 68
SRP1[], 68
SHP[1], 69
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0223">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 10
SHP[1], 31
MDAP[R], 48
SHP[1], 47
SRP2[], 10
IP[], 20
MDAP[R], 20
SHP[1], 40
SRP2[], 40
IP[], 57
IP[], 1
SRP1[], 48
SHP[1], 67
SRP1[], 67
SHP[1], 68
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0224">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 2, 114
SHP[2], 4
SHP[2], 8
SRP1[], 8
SHP[1], 0
MDAP[R], 10
MDAP[R], 19
SHP[1], 2
SHP[1], 20
SRP1[], 20
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0225">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 18
SHP[1], 5
SHP[1], 14
SHP[1], 3
SRP1[], 3
SHP[1], 7
SHP[1], 15
CALL[], 13, 6, 114
SHP[2], 8
SHP[2], 12
SRP1[], 12
SHP[1], 4
MIAP[R], 23, 19
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0226">
/* VTTTalk Unicode 0x226 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 394, 421, 311
SVTCA[Y]
CALL[], 23, 7, 1, 1, 118, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni0227">
/* VTTTalk Unicode 0x227 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 394, 331, 0
SVTCA[Y]
CALL[], 68, 15, 1, 1, 161, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0228">
/* VTTTalk Unicode 0x228 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 122, 406, 10
SVTCA[Y]
CALL[], 16, 2, 0, 0, 10, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni0229">
/* VTTTalk Unicode 0x229 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 122, 355, 0
SVTCA[Y]
CALL[], 44, 0, 0, 0, 20, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni022A">
/* VTTTalk Unicode 0x22a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 1976, 1292, 333
SVTCA[Y]
CALL[], 69, 17, 1, 1, 96, 86
SHC[2], 2
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni022B">
/* VTTTalk Unicode 0x22b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 2263, 1160, 0
SVTCA[Y]
CALL[], 65, 6, 1, 1, 163, 86
SHC[2], 2
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni022C">
/* VTTTalk Unicode 0x22c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 1992, 1292, 340
SVTCA[Y]
CALL[], 49, 17, 1, 1, 92, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni022D">
/* VTTTalk Unicode 0x22d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 2266, 1160, 4
SVTCA[Y]
CALL[], 49, 6, 1, 1, 150, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni022E">
/* VTTTalk Unicode 0x22e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 394, 456, 313
SVTCA[Y]
CALL[], 53, 17, 1, 1, 100, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni022F">
/* VTTTalk Unicode 0x22f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 394, 324, 0
SVTCA[Y]
CALL[], 53, 6, 1, 1, 161, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0230">
/* VTTTalk Unicode 0x230 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 1980, 1292, 334
SVTCA[Y]
CALL[], 53, 17, 1, 1, 96, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni0231">
/* VTTTalk Unicode 0x231 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 2261, 1160, 0
SVTCA[Y]
CALL[], 53, 6, 1, 1, 161, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni0232">
/* VTTTalk Unicode 0x232 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 62, 0, 0
OFFSET[R], 113, 145, 318
SVTCA[Y]
CALL[], 11, 8, 1, 1, 165, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0233">
/* VTTTalk Unicode 0x233 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 94, 0, 0
OFFSET[R], 113, 35, 8
SVTCA[Y]
CALL[], 27, 24, 1, 1, 229, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0234">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 44
SHP[1], 16
SRP1[], 16
SHP[1], 22
MDAP[R], 22
SHP[1], 36
CALL[], 57, 1, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0235">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 44
SHP[1], 16
SRP1[], 16
SHP[1], 22
MDAP[R], 22
SHP[1], 36
MIAP[R], 55, 18
CALL[], 57, 6, 114
CALL[], 65, 7, 114
SHP[2], 77
SRP1[], 77
SHP[1], 59
MIAP[R], 72, 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0236">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 6
CALL[], 46, 11, 114
SHP[2], 18
SRP1[], 18
SHP[1], 24
MDAP[R], 24
SHP[1], 38
SRP1[], 0
IP[], 61
MDAP[R], 61
SHP[1], 60
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0237">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 6, 114
CALL[], 6, 15, 114
SHP[2], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0238">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 11, 114
SHP[2], 39
CALL[], 17, 7, 114
SHP[2], 28
CALL[], 45, 0, 114
MDAP[R], 48
CALL[], 55, 7, 114
SHP[2], 87
CALL[], 66, 11, 114
SHP[2], 77
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0239">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 6, 114
MDAP[R], 0
CALL[], 12, 7, 114
SHP[2], 44
CALL[], 66, 7, 114
SHP[2], 77
CALL[], 23, 11, 114
SHP[2], 34
CALL[], 55, 11, 114
SHP[2], 88
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni023A">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 5, 18
SHP[1], 1
MDAP[R], 1
CALL[], 7, 2, 114
SHP[2], 3
MDAP[R], 3
SHP[2], 10
SHP[2], 11
SRP1[], 11
SHP[1], 4
SRP1[], 5
IP[], 16
MDAP[R], 16
SHP[1], 17
MIAP[R], 9, 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni023B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 9, 114
SHP[2], 1
RUTG[]
MDAP[R], 1
RTG[]
SRP0[], 9
MDRP[m&gt;RGr], 4
SHP[1], 41
CALL[], 20, 3, 114
SHP[2], 3
RUTG[]
MDAP[R], 3
RTG[]
SRP0[], 20
MDRP[m&gt;RGr], 25
SHP[1], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni023C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 13, 11, 114
MDRP[m&gt;RWh], 1
SHP[1], 4
MDRP[m&gt;RGr], 8
CALL[], 24, 7, 114
MDRP[m&gt;RWh], 3
MDRP[m&gt;RGr], 29
SHP[1], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni023D">
/* VTTTalk Unicode 0x23d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 49, 70, 0
OFFSET[R], 1960, -112, 6

    </glyphProgram>

    <glyphProgram name="uni023E">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 18
MDRP[m&gt;RWh], 1
CALL[], 11, 2, 114
MDRP[m&gt;RWh], 3
SHP[1], 7
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni023F">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 7, 114
SHP[2], 23
MDRP[m&gt;RGr], 19
SHP[2], 18
CALL[], 41, 11, 114
SRP1[], 14
IP[], 0
IP[], 27
SHP[2], 49
SRP1[], 49
SHP[1], 56
MDRP[m&gt;RGr], 63
SHP[2], 62
SHP[1], 66
SRP2[], 66
IP[], 44
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0240">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 15
SHP[1], 8
CALL[], 28, 6, 114
SRP1[], 15
IP[], 33
IP[], 23
MDAP[R], 33
MDAP[R], 23
SRP1[], 33
SHP[1], 32
SRP1[], 23
SHP[1], 26
SHP[1], 0
SRP1[], 0
SHP[1], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0241">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 21, 3, 114
SHP[2], 12
MDRP[m&gt;RGr], 16
MIAP[R], 36, 18
SHP[1], 37
MDAP[R], 37
SHP[1], 0
SRP1[], 0
SHP[1], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0242">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 7, 114
SHP[2], 23
MDRP[m&gt;RGr], 27
MIAP[R], 31, 18
SHP[1], 28
MDAP[R], 28
SHP[1], 14
SRP1[], 14
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0243">
/* VTTTalk Unicode 0x243 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 39, 70, 0
OFFSET[R], 1960, -112, -305

    </glyphProgram>

    <glyphProgram name="uni0244">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 2, 114
SHP[2], 16
CALL[], 10, 9, 114
SHP[2], 21
SRP2[], 4
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0245">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 6
CALL[], 2, 2, 114
SHP[2], 8
SRP2[], 0
IP[], 5
IP[], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0246">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RWh], 2
SHP[1], 6
SHP[1], 7
CALL[], 19, 2, 114
MDRP[m&gt;RWh], 3
SHP[1], 8
SHP[1], 18
SRP2[], 9
IP[], 14
MDAP[R], 14
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0247">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 11, 114
MDRP[m&gt;RWh], 1
SHP[1], 41
CALL[], 15, 7, 114
MDRP[m&gt;RWh], 3
SHP[1], 30
SRP2[], 4
IP[], 22
MDAP[R], 22
SHP[1], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0248">
/* VTTTalk Unicode 0x248 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 47, 0, 0
OFFSET[R], 1960, 415, 6

    </glyphProgram>

    <glyphProgram name="uni0249">
/* VTTTalk Unicode 0x249 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 79, 115, 0
OFFSET[R], 1960, -112, -121
SVTCA[Y]
CALL[], 33, 0, 2, 0, -400, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0249.ccmp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 236, 100, 0
OFFSET[R], 1960, -101, -121
SVTCA[Y]
CALL[], 21, 0, 2, 0, -400, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni024A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 9, 114
SHP[2], 50
SHP[2], 53
SHP[2], 18
SRP1[], 18
SHP[1], 1
SHP[1], 22
CALL[], 44, 3, 114
SRP2[], 5
IP[], 26
IP[], 23
SHP[1], 31
SRP1[], 31
SHP[1], 27
SHP[1], 51
CALL[], 52, 2, 114
MDAP[R], 67
SHP[1], 60
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni024B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 6, 114
CALL[], 11, 7, 114
SHP[2], 43
CALL[], 22, 11, 114
SHP[2], 33
SHP[2], 0
SRP1[], 0
SHP[1], 48
MIAP[R], 62, 19
SHP[1], 55
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni024C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 22
MDAP[R], 23
SHP[1], 25
IP[], 11
MDAP[R], 11
SHP[1], 12
SHP[1], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni024D">
/* VTTTalk Unicode 0x24d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 87, 90, 0
OFFSET[R], 1960, -112, -159
SVTCA[Y]
CALL[], 26, 3, 2, 0, -438, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni024E">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 2, 114
SHP[2], 7
MDAP[R], 9
IP[], 3
MDAP[R], 3
SRP2[], 9
SLOOP[], 3
IP[], 5, 8, 11
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni024F">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 6, 114
SHP[2], 24
CALL[], 12, 15, 114
SHP[2], 19
SRP2[], 5
IP[], 3
MDAP[R], 3
SRP2[], 12
SLOOP[], 4
IP[], 25, 4, 26, 27
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0268.ccmp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 142, 106, 0
OFFSET[R], 1960, -112, -121
SVTCA[Y]
CALL[], 7, 3, 2, 0, -400, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0292">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 15, 114
SHP[2], 5
MDAP[R], 5
SHP[2], 9
CALL[], 22, 6, 114
SRP2[], 0
IP[], 18
MDAP[R], 18
SHP[1], 19
SRP1[], 19
SHP[1], 25
SRP1[], 22
SHP[1], 21
SRP1[], 21
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0293">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 15, 114
SHP[2], 39
SHP[2], 9
MDAP[R], 9
SHP[1], 49
SHP[2], 38
SRP1[], 38
SHP[1], 37
SHP[2], 42
SRP1[], 42
SHP[1], 45
SRP1[], 45
SHP[1], 13
SHP[1], 36
CALL[], 25, 6, 114
SHP[2], 24
SHP[2], 27
SRP2[], 0
IP[], 21
MDAP[R], 21
SHP[1], 22
SRP1[], 22
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0299">
/* VTTTalk Unicode 0x299 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 641, 0, 0

    </glyphProgram>

    <glyphProgram name="uni029C">
/* VTTTalk Unicode 0x29c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 650, 0, 0

    </glyphProgram>

    <glyphProgram name="uni029D.ccmp">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 33, 15, 114
SHP[2], 12
SHP[2], 41
SRP1[], 41
SHP[1], 6
CALL[], 45, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02A9">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
MIAP[R], 2, 10
SHP[1], 17
SHP[1], 28
CALL[], 10, 7, 114
SHP[2], 23
CALL[], 35, 15, 114
SHP[2], 42
MIAP[R], 48, 10
CALL[], 53, 1, 114
SHP[2], 60
CALL[], 68, 6, 114
SHP[2], 67
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02AB">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
MIAP[R], 6, 10
SHP[1], 3
SRP1[], 3
SHP[1], 7
CALL[], 13, 6, 114
SHP[2], 4
SHP[2], 8
SHP[2], 12
MIAP[R], 16, 10
CALL[], 17, 0, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02AC">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 2, 114
SHP[2], 1
SRP1[], 1
SHP[1], 21
SRP1[], 21
SHP[1], 12
MDRP[m&gt;RBl], 9
SHP[2], 5
SHP[2], 19
SRP1[], 19
SHP[1], 15
MIAP[R], 31, 18
SHP[1], 27
SRP1[], 27
SHP[1], 41
SRP1[], 41
SHP[1], 36
MDRP[m&gt;RBl], 32
SHP[2], 23
SRP1[], 23
SHP[1], 43
SRP1[], 43
SHP[1], 34
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02AE">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 14, 114
CALL[], 1, 6, 114
CALL[], 10, 11, 114
SHP[2], 23
CALL[], 42, 7, 114
SHP[2], 35
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02B2.ccmp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02B9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02BA">
/* VTTTalk Unicode 0x2ba */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 363, 0, 0
OFFSET[R], 363, 287, 0

    </glyphProgram>

    <glyphProgram name="uni02BB">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 5
IP[], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02BC">
/* VTTTalk Unicode 0x2bc */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1123, 0, 0

    </glyphProgram>

    <glyphProgram name="uni02BD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
MDRP[m&gt;RBl], 0
IP[], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02BE">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 8
SHP[1], 7
SMD[], 128
MDRP[m&gt;RWh], 0
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02BF">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 7
SMD[], 128
MDRP[m&gt;RWh], 0
SHP[2], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02C0">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
SHP[1], 27
MDRP[m&gt;RGr], 31
MDRP[M&gt;RGr], 34
MDRP[m&gt;RGr], 32
SHP[2], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02C1">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 29
SHP[1], 1
MDAP[R], 1
SRP1[], 29
SHP[1], 5
MDAP[R], 35
MDRP[m&gt;RBl], 34
SHP[2], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02C2">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 1
MDAP[R], 9
SHP[1], 5
SRP2[], 2
SLOOP[], 6
IP[], 3, 7, 0, 6, 4, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02C3">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 1
MDAP[R], 9
SHP[1], 5
SRP2[], 2
SLOOP[], 6
IP[], 3, 7, 0, 6, 4, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02C4">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 5
MDAP[R], 3
SHP[1], 7
SRP1[], 7
SHP[1], 4
SRP1[], 4
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02C5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 5
MDAP[R], 3
SHP[1], 7
SRP1[], 7
SHP[1], 4
SRP1[], 4
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02C9">
/* VTTTalk Unicode 0x2c9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 113, 0, 0

    </glyphProgram>

    <glyphProgram name="uni02CA">
/* VTTTalk Unicode 0x2ca */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 118, -49, 0

    </glyphProgram>

    <glyphProgram name="uni02CB">
/* VTTTalk Unicode 0x2cb */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 69, 1, 0

    </glyphProgram>

    <glyphProgram name="uni02CC">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02CE">
/* VTTTalk Unicode 0x2ce */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 69, 1, -1602

    </glyphProgram>

    <glyphProgram name="uni02CF">
/* VTTTalk Unicode 0x2cf */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 118, -49, -1602

    </glyphProgram>

    <glyphProgram name="uni02D0">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 20, 6
SMD[], 128
MDRP[m&gt;RGr], 14
MIAP[R], 41, 10
MDRP[m&gt;RGr], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02D1">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 12
MDAP[R], 0
SHP[2], 6
SRP1[], 12
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02D2">
/* VTTTalk Unicode 0x2d2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 367, 0, -984

    </glyphProgram>

    <glyphProgram name="uni02D3">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 8
SHP[1], 9
MDRP[m&gt;RWh], 1
SHP[2], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02D4">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SMD[], 128
MDRP[m&gt;RGr], 3
SHP[1], 4
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02D5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SMD[], 128
MDRP[m&gt;RWh], 0
SHP[1], 5
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02D6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh], 3
MDRP[M&gt;RBl], 7
MDRP[m&gt;RWh], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02D7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02DE">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 14
SHP[1], 7
MDRP[m&gt;RGr], 2
SLOOP[], 3
IP[], 0, 19, 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E4">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 23, 3, 114
SHP[2], 0
MDAP[R], 0
SHP[2], 4
SRP0[], 23
MDRP[M&gt;RGr], 15
MDRP[m&gt;RBl], 29
SHP[1], 12
SRP1[], 12
SHP[1], 30
MDAP[R], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 7
MDAP[R], 7
SHP[1], 6
MDAP[R], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E5_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SHP[1], 4
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E5_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SHP[1], 4
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E5_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SHP[1], 4
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E5_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 4
SHP[1], 3
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 4
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E6_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E6_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
MDAP[R], 1
SRP2[], 3
IP[], 9
MDAP[R], 9
SHP[1], 6
SRP1[], 1
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E6_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 4
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E6_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E6_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 4
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 4
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E7_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SHP[1], 8
SLOOP[], 3
IP[], 3, 6, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E7_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SHP[1], 9
SLOOP[], 4
IP[], 3, 6, 2, 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E7_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 8
MDAP[R], 3
SRP2[], 1
IP[], 6
MDAP[R], 6
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E7_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 5, 2
SHP[1], 9
IP[], 2
IP[], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E7_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 3
SHP[1], 6
IP[], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 4
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E8_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E8_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E8_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E8_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
MDAP[R], 1
SRP2[], 3
IP[], 6
MDAP[R], 6
SHP[1], 9
SRP1[], 1
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E8_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 4
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 3
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E9_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SHP[1], 8
SHP[2], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E9_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SHP[1], 9
SHP[2], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E9_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SHP[1], 9
SHP[2], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E9_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 8
SHP[2], 3
SRP1[], 3
SHP[1], 4
SHP[1], 9
MDAP[R], 2
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E9_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 1
SRP1[], 4
SHP[1], 7
SRP1[], 1
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
CALL[], 0, 2, 114
SRP1[], 1
IP[], 7
MDAP[R], 7
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E5_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 7
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E5_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E5_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E5_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E5_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E6_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
IP[], 5
MDAP[R], 5
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E6_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IP[], 5
MDAP[R], 5
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E6_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IP[], 5
MDAP[R], 5
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E6_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
IP[], 4
MDAP[R], 4
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E7_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E7_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E7_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
MDAP[R], 1
SRP2[], 3
IP[], 6
MDAP[R], 6
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E7_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
MDAP[R], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E7_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E8_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E8_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E8_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E8_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
MDAP[R], 1
SRP2[], 3
IP[], 6
MDAP[R], 6
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E8_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E9_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
SHP[2], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E9_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 18
SHP[2], 3
MDAP[R], 8
SRP2[], 3
SLOOP[], 4
IP[], 6, 2, 4, 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E9_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 3
MDAP[R], 8
SRP2[], 3
SLOOP[], 3
IP[], 6, 2, 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E9_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
SHP[2], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E9_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 1
SRP1[], 4
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
CALL[], 0, 2, 114
SRP1[], 1
IP[], 6
MDAP[R], 6
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E5_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 7
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E5_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E5_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E5_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E5_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E6_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
MDAP[R], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E6_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
MDAP[R], 1
SRP2[], 3
IP[], 9
MDAP[R], 9
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E6_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E6_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E6_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E7_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
IP[], 4
MDAP[R], 4
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E7_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IP[], 4
MDAP[R], 4
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E7_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
IP[], 5
MDAP[R], 5
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E7_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
IP[], 4
MDAP[R], 4
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E8_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E8_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E8_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E8_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 8
MDAP[R], 6
SRP2[], 8
IP[], 1
MDAP[R], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E8_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
MDAP[R], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E9_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E9_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E9_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E9_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E9_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 6
SRP1[], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
CALL[], 0, 2, 114
SRP1[], 1
IP[], 6
MDAP[R], 6
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E5_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
MDAP[R], 4
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E5_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MDAP[R], 0
SHP[2], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E5_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E5_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E5_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E6_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E6_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 8
MDAP[R], 6
SRP2[], 8
IP[], 4
MDAP[R], 4
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E6_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E6_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E6_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E7_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E7_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
MDAP[R], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E7_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 8
MDAP[R], 6
SRP2[], 8
IP[], 1
MDAP[R], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E7_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E7_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E8_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
IP[], 5
MDAP[R], 5
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E8_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
IP[], 5
MDAP[R], 5
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E8_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
IP[], 5
MDAP[R], 5
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E8_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
IP[], 4
MDAP[R], 4
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E9_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E9_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E9_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E9_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E9_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 6
SRP1[], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
CALL[], 0, 2, 114
SRP1[], 1
IP[], 6
MDAP[R], 6
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E5_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MDAP[R], 4
SHP[1], 1
SRP1[], 2
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E5_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 0
SHP[2], 3
SRP1[], 4
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E5_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SHP[2], 7
SRP1[], 1
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E5_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SHP[2], 7
SRP1[], 1
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E5_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SHP[2], 6
SRP1[], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E6_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E6_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MDAP[R], 6
SRP2[], 2
IP[], 4
MDAP[R], 4
SHP[1], 1
SHP[2], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E6_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E6_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E6_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E7_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 3
MDAP[R], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E7_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
SHP[1], 5
IP[], 3
IP[], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E7_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MDAP[R], 6
SRP2[], 2
IP[], 1
MDAP[R], 1
SHP[1], 4
SHP[2], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E7_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E7_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E8_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E8_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E8_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E8_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MDAP[R], 6
SRP2[], 2
IP[], 1
MDAP[R], 1
SHP[1], 4
SHP[2], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E8_uni02E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E9_uni02E5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
IP[], 5
MDAP[R], 5
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E9_uni02E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
IP[], 5
MDAP[R], 5
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E9_uni02E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
IP[], 5
MDAP[R], 5
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E9_uni02E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
IP[], 5
MDAP[R], 5
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02EA">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 6
SRP1[], 6
SHP[1], 3
MDAP[R], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02EB">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
MDAP[R], 4
SRP2[], 5
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02EC">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 7
SHP[2], 2
SRP1[], 2
SHP[1], 4
SMD[], 128
MDRP[m&gt;RBl], 6
IP[], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02ED">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 6
MDRP[m&gt;RWh], 2
SHP[2], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02EF">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 3
MDRP[m&gt;RBl], 2
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02F0">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 3
SHP[1], 7
SRP1[], 1
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02F1">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
SHP[1], 5
SMD[], 192
MDRP[m&gt;RWh], 2
SHP[2], 1
SLOOP[], 6
IP[], 3, 7, 0, 6, 4, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02F2">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 5
SMD[], 192
MDRP[m&gt;RWh], 3
SHP[2], 4
SLOOP[], 6
IP[], 0, 9, 7, 1, 2, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02F3">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 21
SMD[], 128
MDRP[m&gt;RGr], 9
SHP[2], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02F4">
/* VTTTalk Unicode 0x2f4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 69, 1, -1019

    </glyphProgram>

    <glyphProgram name="uni02F5">
/* VTTTalk Unicode 0x2f5 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 69, 1, -1019
OFFSET[R], 69, 363, -1019

    </glyphProgram>

    <glyphProgram name="uni02F6">
/* VTTTalk Unicode 0x2f6 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 118, -49, -1019
OFFSET[R], 118, 313, -1019

    </glyphProgram>

    <glyphProgram name="uni02F7">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 5, 19
SHP[1], 23
SHP[1], 13
SRP1[], 13
SHP[1], 14
SMD[], 128
MDRP[m&gt;RBl], 18
SHP[2], 10
SHP[2], 0
SRP1[], 0
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02F8">
/* VTTTalk Unicode 0x2f8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 19, -78, 400
OFFSET[R], 19, -78, 1283

    </glyphProgram>

    <glyphProgram name="uni02F9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
IP[], 4
MDAP[R], 4
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02FA">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 5
SRP1[], 5
SHP[1], 6
MDAP[R], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02FB">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RGr], 2
SHP[1], 4
SRP1[], 4
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02FC">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 2
SMD[], 128
MDRP[m&gt;RGr], 5
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02FD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
SHP[1], 6
MDAP[R], 6
SHP[1], 10
SMD[], 128
SRP0[], 2
MDRP[m&gt;RBl], 7
SHP[2], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02FE">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RBl], 6
SHP[2], 2
SRP1[], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02FF">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 8
SHP[1], 0
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni030C">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 4
SHP[2], 2
SHP[2], 6
SRP1[], 6
SHP[1], 8
SRP1[], 0
IP[], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni030C_uni1ABB">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 38
SHP[1], 33
SHP[1], 0
SHP[2], 16
SMD[], 128
MDRP[m&gt;RBl], 32
SHP[2], 34
SHP[2], 8
SRP1[], 8
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni030F">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
SMD[], 128
MDRP[m&gt;RBl], 3
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0313">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 10
SMD[], 192
MDRP[m&gt;RBl], 5
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0315">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 10
SMD[], 192
MDRP[m&gt;RBl], 5
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0326">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni032C">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SMD[], 128
MDRP[m&gt;RBl], 1
SHP[1], 2
SHP[1], 8
SHP[1], 6
IP[], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0342">
/* VTTTalk Unicode 0x342 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 397, -1061, 0

    </glyphProgram>

    <glyphProgram name="uni0343">
/* VTTTalk Unicode 0x343 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1832, -800, 1393

    </glyphProgram>

    <glyphProgram name="uni0346">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 1
SHP[1], 2
SRP1[], 2
SHP[1], 10
MDAP[R], 10
SMD[], 128
SRP0[], 6
MDRP[m&gt;RBl], 4
SHP[2], 9
MDAP[R], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0347">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 3
SMD[], 128
MDRP[m&gt;RWh], 4
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0348">
/* VTTTalk Unicode 0x348 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 377, -841, -1640
OFFSET[R], 377, -575, -1640

    </glyphProgram>

    <glyphProgram name="uni0349">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 0
MDRP[m&gt;RGr], 3
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni034A">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 23
SHP[1], 10
SHP[1], 31
SHP[1], 41
SHP[1], 36
MDAP[R], 36
SHP[1], 0
SHP[1], 18
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni034B">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 13
SHP[1], 23
SHP[1], 18
MDAP[R], 18
SHP[1], 0
SHP[1], 10
SHP[1], 35
MDAP[R], 35
SHP[1], 29
SRP1[], 5
SHP[1], 41
SRP1[], 41
SHP[1], 47
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni034C">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
SHP[1], 12
SHP[1], 22
SMD[], 128
MDRP[m&gt;RBl], 17
SHP[2], 0
SHP[2], 9
SHP[2], 29
MDAP[R], 29
SHP[1], 37
SHP[1], 47
MDRP[m&gt;RBl], 42
SHP[2], 25
SHP[2], 34
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni034D">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
SRP1[], 3
SHP[1], 8
SRP1[], 8
SHP[1], 16
SRP1[], 2
SHP[1], 5
SRP1[], 5
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni034E">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
MDRP[m&gt;RGr], 1
SHP[1], 6
SHP[1], 2
SRP1[], 2
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni034F">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni0350">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 1
SHP[1], 2
SHP[1], 8
SRP1[], 2
SHP[1], 3
MDAP[R], 3
SHP[1], 4
SRP1[], 7
SHP[1], 6
MDAP[R], 6
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0351">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 8
MDRP[m&gt;RWh], 0
SHP[2], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0352">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 19
SHP[1], 25
SHP[1], 1
MDAP[R], 1
SHP[1], 8
SHP[1], 5
SRP1[], 5
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0353">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 2
MDRP[m&gt;RGr], 4
SHP[2], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0354">
/* VTTTalk Unicode 0x354 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 418, -875, 0

    </glyphProgram>

    <glyphProgram name="uni0355">
/* VTTTalk Unicode 0x355 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 419, -840, 0

    </glyphProgram>

    <glyphProgram name="uni0356">
/* VTTTalk Unicode 0x356 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 419, -1028, 0
OFFSET[R], 417, -515, 0

    </glyphProgram>

    <glyphProgram name="uni0357">
/* VTTTalk Unicode 0x357 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 367, -729, 0

    </glyphProgram>

    <glyphProgram name="uni0358">
/* VTTTalk Unicode 0x358 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 468, 785, 1549

    </glyphProgram>

    <glyphProgram name="uni0359">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RBl], 12
SHP[2], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni035A">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 10
MDAP[R], 4
SRP2[], 10
IP[], 29
MDAP[R], 29
SHP[1], 47
SRP1[], 4
SHP[1], 22
IP[], 35
MDAP[R], 35
SHP[1], 41
SHP[2], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni035B">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MDRP[m&gt;RGr], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni035C">
/* VTTTalk Unicode 0x35c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 526, 0, -1591

    </glyphProgram>

    <glyphProgram name="uni035D">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 17
SMD[], 128
MDRP[m&gt;RGr], 12
SHP[2], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni035E">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni035F">
/* VTTTalk Unicode 0x35f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 527, 0, -1576

    </glyphProgram>

    <glyphProgram name="uni0360">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 17, 17
SHP[1], 10
MDRP[m&gt;RBl], 4
SHP[2], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0361">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 17
SHP[1], 6
SMD[], 128
MDRP[m&gt;RGr], 11
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0362">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
SRP0[], 3
MDRP[m&gt;RWh], 8
SRP0[], 2
MDRP[m&gt;RWh], 5
SRP1[], 8
SLOOP[], 4
IP[], 11, 7, 10, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0363">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
SMD[], 192
MDRP[m&gt;RGr], 38
SHP[2], 19
MDAP[R], 19
SRP1[], 11
SLOOP[], 4
IP[], 31, 24, 22, 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0364">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
SMD[], 192
MDRP[m&gt;RGr], 0
SLOOP[], 4
IP[], 31, 15, 16, 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0365">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SMD[], 192
MDRP[m&gt;RBl], 2
SMD[], 64
MDRP[m&gt;RWh], 13
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0366">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
SHP[1], 27
SMD[], 192
MDRP[m&gt;RGr], 0
SHP[2], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0367">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 15
SHP[1], 1
SMD[], 192
MDRP[m&gt;RGr], 4
SHP[2], 10
MDAP[R], 10
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0368">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
SMD[], 192
MDRP[m&gt;RGr], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0369">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 14
SHP[1], 1
MDAP[R], 1
SRP1[], 14
SHP[1], 32
SMD[], 192
SRP0[], 14
MDRP[m&gt;RGr], 4
SHP[2], 5
MDAP[R], 5
SHP[1], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni036A">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
SHP[1], 0
MDAP[R], 0
SRP1[], 9
SHP[1], 20
SMD[], 192
SRP0[], 9
MDRP[m&gt;RGr], 2
SHP[2], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni036B">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 10
SHP[1], 4
MDAP[R], 4
SMD[], 192
SRP0[], 10
MDRP[m&gt;RGr], 2
SHP[2], 16
SRP1[], 16
SHP[1], 36
SRP1[], 10
SHP[1], 30
SRP1[], 30
SHP[1], 41
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni036C">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 18
SMD[], 192
MDRP[m&gt;RGr], 2
SHP[1], 4
MDAP[R], 4
SRP1[], 18
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni036D">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 4
MDAP[R], 4
SMD[], 192
SRP0[], 3
MDRP[m&gt;RGr], 17
SHP[2], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni036E">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
SHP[1], 1
SMD[], 192
MDRP[m&gt;RBl], 8
SHP[2], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni036F">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
SHP[1], 2
SMD[], 192
MDRP[m&gt;RGr], 8
SHP[2], 6
SLOOP[], 4
IP[], 7, 10, 4, 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0370">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
CALL[], 4, 2, 114
SRP1[], 5
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0371">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
CALL[], 14, 7, 114
SHP[2], 7
SRP1[], 0
IP[], 22
MDAP[R], 22
SHP[1], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0372">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 2, 114
SHP[2], 3
SHP[2], 11
SHP[2], 14
SHP[2], 15
MDRP[m&gt;RGr], 6
SHP[2], 2
MIAP[R], 10, 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0373">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 18
CALL[], 3, 2, 114
SHP[2], 6
SHP[2], 11
SHP[2], 12
MDRP[m&gt;RGr], 14
SHP[2], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0376">
/* VTTTalk Unicode 0x376 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 626, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0377">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
SHP[2], 24
SHP[2], 21
SRP1[], 21
SHP[1], 20
MDAP[R], 7
SHP[1], 14
SHP[1], 25
MDAP[R], 25
SHP[1], 22
SHP[1], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni037A">
/* VTTTalk Unicode 0x37a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1083, 0, 0

    </glyphProgram>

    <glyphProgram name="uni037B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 25, 7, 114
SHP[2], 16
MDRP[m&gt;RGr], 20
CALL[], 36, 11, 114
MDRP[m&gt;RGr], 1
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni037C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 12, 11, 114
SHP[2], 43
MDRP[m&gt;RGr], 47
CALL[], 23, 7, 114
MDRP[m&gt;RGr], 28
SHP[1], 32
SRP2[], 12
IP[], 9
MDAP[R], 9
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni037D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 25, 7, 114
SHP[2], 16
MDRP[m&gt;RGr], 20
CALL[], 36, 11, 114
MDRP[m&gt;RGr], 1
SHP[1], 5
SRP2[], 25
IP[], 40
MDAP[R], 40
SHP[1], 46
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni037F">
/* VTTTalk Unicode 0x37f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 47, 0, 0

    </glyphProgram>

    <glyphProgram name="uni037F.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1890, 0, 0

    </glyphProgram>

    <glyphProgram name="uni03BC">
/* VTTTalk Unicode 0x3bc */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 119, 0, 0

    </glyphProgram>

    <glyphProgram name="uni03CF">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 4
MIAP[R], 2, 18
SLOOP[], 4
IP[], 6, 7, 14, 15
MIAP[R], 11, 19
SHP[1], 12
SHP[1], 13
SRP1[], 13
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni03D1">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 13
SHP[1], 45
CALL[], 23, 11, 114
SHP[2], 35
SRP1[], 13
IP[], 4
MDAP[R], 4
SHP[1], 54
SRP0[], 23
MDRP[m&gt;RGr], 30
SHP[2], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni03D2">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 18
SHP[1], 3
SRP1[], 3
SHP[1], 22
SHP[1], 24
SHP[1], 26
CALL[], 38, 3, 114
SHP[2], 31
SHP[2], 9
SRP1[], 9
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni03D3">
/* VTTTalk Unicode 0x3d3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 593, 100, 0
OFFSET[R], 557, -384, -1

    </glyphProgram>

    <glyphProgram name="uni03D4">
/* VTTTalk Unicode 0x3d4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 593, 0, 0
OFFSET[R], 107, 117, 322

SVTCA[Y]
CALL[], 63, 38, 1, 1, 120, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni03D6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 15
CALL[], 3, 6, 114
SHP[2], 2
SRP1[], 15
IP[], 60
CALL[], 60, 11, 114
SHP[2], 47
SRP1[], 15
SHP[1], 28
SRP1[], 3
SHP[1], 5
SHP[1], 38
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni03D7">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 18
SHP[2], 37
SRP1[], 37
SHP[1], 36
CALL[], 2, 6, 114
SHP[2], 4
SHP[2], 5
MDAP[R], 18
SHP[1], 25
CALL[], 50, 7, 114
SHP[2], 43
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni03D8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
CALL[], 10, 9, 114
SHP[2], 47
SRP2[], 47
IP[], 3
CALL[], 22, 3, 114
SHP[2], 35
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni03D9">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 14, 114
CALL[], 10, 7, 114
SHP[2], 43
CALL[], 21, 11, 114
SHP[2], 32
SRP2[], 32
IP[], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni03F2">
/* VTTTalk Unicode 0x3f2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 72, 0, 0

    </glyphProgram>

    <glyphProgram name="uni03F3">
/* VTTTalk Unicode 0x3f3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 79, 0, 0

    </glyphProgram>

    <glyphProgram name="uni03F3.ccmp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 236, 0, 0

    </glyphProgram>

    <glyphProgram name="uni03F4">
/* VTTTalk Unicode 0x3f4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 685, 0, 0

    </glyphProgram>

    <glyphProgram name="uni03F5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 0
CALL[], 14, 6, 114
SHP[2], 17
SRP1[], 3
IP[], 29
MDAP[R], 29
SHP[1], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni03F6">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 6, 114
SHP[2], 13
MDAP[R], 27
SHP[1], 0
IP[], 28
MDAP[R], 28
SHP[1], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni03F7">
/* VTTTalk Unicode 0x3f7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 133, 0, 0

    </glyphProgram>

    <glyphProgram name="uni03F8">
/* VTTTalk Unicode 0x3f8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 139, 0, 0

    </glyphProgram>

    <glyphProgram name="uni03F9">
/* VTTTalk Unicode 0x3f9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 40, 0, 0

    </glyphProgram>

    <glyphProgram name="uni03FA">
/* VTTTalk Unicode 0x3fa */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 50, 0, 0

    </glyphProgram>

    <glyphProgram name="uni03FB">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 6, 114
SHP[2], 6
SHP[2], 7
SHP[2], 12
MDAP[R], 8
MDAP[R], 11
SHP[1], 3
MDAP[R], 3
SRP1[], 11
IP[], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni03FC">
/* VTTTalk Unicode 0x3fc */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 582, 68, 0
OFFSET[R], 1960, -121, -901
SVTCA[Y]
CALL[], 51, 17, 1, 0, -78, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni03FD">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 25, 3, 114
SHP[2], 16
MDRP[m&gt;RGr], 20
CALL[], 36, 9, 114
MDRP[m&gt;RGr], 1
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni03FE">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 9, 114
MDRP[m&gt;RGr], 0
SHP[1], 37
CALL[], 16, 3, 114
MDRP[m&gt;RGr], 21
SHP[1], 25
SRP2[], 5
IP[], 50
MDAP[R], 50
SHP[1], 44
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni03FF">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 25, 3, 114
SHP[2], 16
MDRP[m&gt;RGr], 20
CALL[], 36, 9, 114
MDRP[m&gt;RGr], 1
SHP[1], 5
SRP2[], 25
IP[], 40
MDAP[R], 40
SHP[1], 46
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0400">
/* VTTTalk Unicode 0x400 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 69, 250, 322
SVTCA[Y]
CALL[], 18, 7, 1, 1, 108, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni0401">
/* VTTTalk Unicode 0x401 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 107, 196, 322
SVTCA[Y]
CALL[], 37, 7, 1, 1, 131, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni0401.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1962, 0, 0
OFFSET[R], 107, 114, 30


SVTCA[Y]
CALL[], 25, 7, 1, 1, 131, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni0402">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 9, 114
CALL[], 35, 2, 114
CALL[], 30, 8, 114
SRP1[], 35
SHP[1], 34
SRP2[], 14
IP[], 5
MDAP[R], 5
SHP[1], 24
SRP1[], 35
SHP[1], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0402.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 3, 125
SHP[1], 2
SHP[1], 5
MIAP[R], 4, 10
SRP2[], 3
IP[], 13
MDAP[R], 13
SHP[1], 32
MIAP[R], 22, 11
SHP[1], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0403">
/* VTTTalk Unicode 0x403 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 560, 0, 0
OFFSET[R], 118, 400, 322
SVTCA[Y]
CALL[], 6, 5, 1, 1, 108, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0403.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1898, 0, 0
OFFSET[R], 118, 309, 30

SVTCA[Y]
CALL[], 8, 3, 1, 1, 131, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0404">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 9, 114
MDRP[m&gt;RGr], 4
SHP[1], 41
CALL[], 20, 3, 114
MDRP[m&gt;RGr], 25
SHP[1], 29
SRP2[], 9
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0404.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 9, 11
SHP[1], 40
MIAP[R], 20, 126
SHP[1], 29
SRP2[], 9
IP[], 1
MDAP[R], 1
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0405">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 15, 3, 114
MDRP[m&gt;RGr], 20
SHP[1], 24
CALL[], 43, 9, 114
MDRP[m&gt;RGr], 49
SHP[1], 54
SRP2[], 15
IP[], 38
IP[], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0405.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1881, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0406">
/* VTTTalk Unicode 0x406 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0406.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1891, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0407">
/* VTTTalk Unicode 0x407 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 107, -144, 322
SVTCA[Y]
CALL[], 25, 3, 1, 1, 131, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0407.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1891, 0, 0
OFFSET[R], 107, -179, 30

SVTCA[Y]
CALL[], 13, 3, 1, 1, 132, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0408">
/* VTTTalk Unicode 0x408 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 47, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0408.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1890, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0409">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 35
SHP[2], 21
SRP1[], 21
SHP[1], 20
CALL[], 9, 8, 114
SHP[2], 10
SRP2[], 0
IP[], 22
MDAP[R], 22
SHP[1], 46
SRP1[], 9
SHP[1], 33
SRP1[], 33
SHP[1], 36
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0409.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 8, 10
SHP[1], 11
MIAP[R], 28, 10
SHP[1], 31
MIAP[R], 45, 125
SHP[1], 1
SHP[1], 29
SHP[1], 44
SRP2[], 28
IP[], 41
MDAP[R], 41
SHP[1], 40
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni040A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 8, 114
SHP[2], 19
SRP1[], 19
SHP[1], 22
CALL[], 7, 2, 114
SHP[2], 21
SRP1[], 6
IP[], 2
MDAP[R], 2
SHP[1], 3
SHP[1], 32
MDAP[R], 32
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni040A.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 30, 10
SHP[1], 10
SRP1[], 10
SHP[1], 13
MIAP[R], 31, 125
SHP[1], 11
SRP2[], 30
IP[], 26
MDAP[R], 26
SHP[1], 27
SHP[1], 22
MDAP[R], 22
SHP[1], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni040B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 24, 8, 114
CALL[], 29, 2, 114
SHP[2], 28
SRP1[], 24
IP[], 17
MDAP[R], 17
SHP[1], 6
SRP1[], 24
SHP[1], 1
SHP[2], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni040B.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 3, 125
SHP[1], 2
SHP[1], 5
MIAP[R], 4, 10
SHP[1], 19
SRP2[], 3
IP[], 13
MDAP[R], 13
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni040C">
/* VTTTalk Unicode 0x40c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 48, 0, 0
OFFSET[R], 118, 380, 305
SVTCA[Y]
CALL[], 14, 3, 1, 1, 91, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni040C.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1889, 0, 0
OFFSET[R], 118, 293, 30


SVTCA[Y]
CALL[], 14, 3, 1, 1, 132, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni040D">
/* VTTTalk Unicode 0x40d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 626, 0, 0
OFFSET[R], 69, 364, 322
SVTCA[Y]
CALL[], 12, 1, 1, 1, 108, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni040E">
/* VTTTalk Unicode 0x40e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 628, 0, 0
OFFSET[R], 393, 217, 322
SVTCA[Y]
CALL[], 30, 1, 1, 1, 94, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni040E.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1921, 0, 0
OFFSET[R], 393, 103, 30


SVTCA[Y]
CALL[], 29, 23, 1, 1, 132, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni040F">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 3
SRP2[], 3
IP[], 11
CALL[], 1, 2, 114
SHP[2], 6
MDAP[R], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni040F.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 10, 10
SHP[1], 2
MDAP[R], 2
SRP1[], 10
SHP[1], 14
SHP[1], 7
SRP1[], 7
SHP[1], 3
MIAP[R], 11, 125
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0410">
/* VTTTalk Unicode 0x410 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0410.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1973, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0411">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 8, 114
SHP[2], 17
SRP1[], 17
SHP[1], 20
CALL[], 5, 2, 114
SHP[2], 19
SRP1[], 19
SHP[1], 2
SRP1[], 4
IP[], 30
MDAP[R], 30
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0411.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 13, 125
SHP[1], 26
SRP1[], 26
SHP[1], 27
MIAP[R], 14, 10
SHP[1], 11
SRP2[], 13
IP[], 1
MDAP[R], 1
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0412">
/* VTTTalk Unicode 0x412 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0412.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1972, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0413">
/* VTTTalk Unicode 0x413 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 560, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0413.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1898, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0414">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 9
CALL[], 20, 2, 114
SHP[2], 16
SHP[2], 15
SRP1[], 15
SHP[1], 14
CALL[], 30, 8, 114
SHP[2], 7
SHP[2], 3
SRP1[], 3
SHP[1], 32
SHP[2], 17
SRP1[], 17
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0414.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 125
SHP[2], 17
SRP1[], 17
SHP[1], 22
MIAP[R], 9, 10
SHP[1], 20
SHP[1], 28
SHP[1], 10
SRP1[], 10
SHP[1], 23
SRP1[], 9
SHP[1], 29
MDAP[R], 29
SHP[1], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0415">
/* VTTTalk Unicode 0x415 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0415.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1962, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0416">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 2, 114
SHP[2], 10
SHP[2], 14
CALL[], 8, 8, 114
SHP[2], 12
SHP[2], 20
SHP[2], 15
MDAP[R], 15
SHP[1], 0
SRP1[], 0
SHP[1], 3
SRP1[], 3
SHP[1], 9
SHP[1], 17
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0416.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 15, 125
SHP[1], 3
SRP1[], 3
SHP[1], 9
MIAP[R], 21, 10
SHP[1], 2
SRP1[], 2
SHP[1], 10
SRP2[], 15
IP[], 14
MDAP[R], 14
SHP[1], 6
SHP[1], 17
SRP1[], 17
SHP[1], 7
SRP1[], 7
SHP[1], 11
SRP1[], 11
SHP[1], 12
SRP1[], 17
SHP[1], 23
SRP1[], 23
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0417">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 21, 3, 114
SHP[2], 11
MDRP[m&gt;RGr], 15
CALL[], 42, 9, 114
MDRP[m&gt;RGr], 48
SHP[1], 52
SRP2[], 21
IP[], 62
MDAP[R], 62
SHP[1], 2
SRP2[], 2
IP[], 32
IP[], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0417.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 21, 126
SHP[1], 11
MIAP[R], 42, 11
SHP[1], 52
SRP2[], 21
IP[], 62
MDAP[R], 62
SHP[1], 1
SHP[1], 2
SRP1[], 2
SHP[1], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0418">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 8, 114
SHP[2], 4
CALL[], 8, 2, 114
SHP[2], 2
SRP2[], 6
IP[], 0
IP[], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0418.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 8, 125
SHP[1], 5
SRP1[], 5
SHP[1], 2
SHP[1], 1
MIAP[R], 11, 10
SHP[1], 7
SHP[1], 10
SHP[1], 3
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0419">
/* VTTTalk Unicode 0x419 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 626, 0, 0
OFFSET[R], 393, 304, 322
SVTCA[Y]
CALL[], 15, 1, 1, 1, 94, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0419.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1918, 0, 0
OFFSET[R], 393, 201, 30


SVTCA[Y]
CALL[], 17, 8, 1, 1, 132, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni041A">
/* VTTTalk Unicode 0x41a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1966, 0, 0

    </glyphProgram>

    <glyphProgram name="uni041A.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
SHP[1], 10
MIAP[R], 3, 125
SHP[1], 9
SRP2[], 2
IP[], 6
MDAP[R], 6
SHP[1], 7
SRP1[], 7
SHP[1], 11
SRP1[], 11
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni041B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 8, 2, 114
SHP[2], 4
SHP[2], 3
SRP1[], 3
SHP[1], 2
CALL[], 17, 8, 114
SHP[2], 5
SHP[2], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni041B.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 10
MIAP[R], 8, 125
SHP[1], 3
SRP1[], 3
SHP[1], 2
SHP[1], 7
MIAP[R], 16, 10
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni041C">
/* VTTTalk Unicode 0x41c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 50, 0, 0

    </glyphProgram>

    <glyphProgram name="uni041C.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1887, 0, 0

    </glyphProgram>

    <glyphProgram name="uni041D">
/* VTTTalk Unicode 0x41d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0

    </glyphProgram>

    <glyphProgram name="uni041D.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1892, 0, 0

    </glyphProgram>

    <glyphProgram name="uni041E">
/* VTTTalk Unicode 0x41e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0

    </glyphProgram>

    <glyphProgram name="uni041E.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1885, 0, 0

    </glyphProgram>

    <glyphProgram name="uni041F">
/* VTTTalk Unicode 0x41f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 565, 0, 0

    </glyphProgram>

    <glyphProgram name="uni041F.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1903, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0420">
/* VTTTalk Unicode 0x420 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 53, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0420.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1884, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0421">
/* VTTTalk Unicode 0x421 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 40, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0421.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1971, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0422">
/* VTTTalk Unicode 0x422 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 57, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0422.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1880, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0423">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 8, 9, 114
SHP[2], 15
CALL[], 24, 2, 114
SHP[2], 2
SRP2[], 8
SLOOP[], 4
IP[], 23, 22, 0, 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0423.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 7, 11
SHP[1], 14
SRP1[], 14
SHP[1], 22
SRP1[], 22
SHP[1], 21
MIAP[R], 23, 125
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0424">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 43
CALL[], 42, 3, 114
SRP1[], 43
IP[], 0
MDAP[R], 0
SHP[1], 22
SRP1[], 43
IP[], 12
MDAP[R], 12
SHP[1], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0424.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1905, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0425">
/* VTTTalk Unicode 0x425 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 61, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0425.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1876, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0426">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
CALL[], 6, 8, 114
SHP[2], 9
SHP[2], 4
SRP1[], 4
SHP[1], 5
CALL[], 7, 2, 114
SHP[2], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0426.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 8, 10
SHP[1], 2
MDAP[R], 2
SRP1[], 8
SHP[1], 11
SHP[1], 16
SHP[1], 9
SRP1[], 9
SHP[1], 5
MIAP[R], 13, 125
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0427">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 24, 8, 114
CALL[], 0, 2, 114
SRP1[], 24
IP[], 17
MDAP[R], 17
SHP[1], 6
SHP[2], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0427.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MIAP[R], 14, 125
SHP[1], 3
SRP2[], 2
IP[], 9
MDAP[R], 9
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0428">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 11, 8, 114
CALL[], 0, 2, 114
SRP1[], 11
SHP[1], 2
SRP1[], 2
SHP[1], 6
SHP[2], 9
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0428.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 14, 125
SHP[1], 3
SHP[1], 6
SRP1[], 6
SHP[1], 10
MIAP[R], 15, 16
SHP[1], 7
SRP1[], 7
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0429">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
CALL[], 6, 2, 114
SHP[2], 11
SHP[2], 15
CALL[], 17, 8, 114
SHP[2], 4
SHP[2], 8
SRP1[], 8
SHP[1], 5
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0429.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 8, 10
SHP[1], 9
SHP[1], 19
SRP1[], 19
SHP[1], 12
SRP1[], 12
SHP[1], 16
SRP1[], 16
SHP[1], 2
MDAP[R], 2
SRP1[], 16
SHP[1], 4
MIAP[R], 21, 125
SHP[1], 13
SRP1[], 13
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni042A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 15, 8, 114
CALL[], 1, 2, 114
SHP[2], 0
SRP1[], 15
IP[], 28
MDAP[R], 28
SHP[1], 4
SRP1[], 15
SHP[1], 18
SHP[2], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni042A.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 125
SHP[2], 1
SHP[2], 17
MIAP[R], 18, 10
SHP[1], 15
IP[], 5
MDAP[R], 5
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni042B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 11, 8, 114
CALL[], 12, 2, 114
SRP1[], 11
IP[], 24
MDAP[R], 24
SHP[1], 0
SRP1[], 11
SHP[1], 14
SHP[2], 25
SHP[1], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni042B.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1928, 0, 0
OFFSET[R], 1891, 1046, 0

    </glyphProgram>

    <glyphProgram name="uni042C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 11, 8, 114
CALL[], 12, 2, 114
SRP1[], 11
IP[], 24
MDAP[R], 24
SHP[1], 0
SRP1[], 11
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni042C.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 10, 125
MIAP[R], 9, 10
SHP[1], 12
SRP2[], 10
IP[], 22
MDAP[R], 22
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni042D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 30, 3, 114
SHP[2], 21
MDRP[m&gt;RGr], 25
CALL[], 41, 9, 114
MDRP[m&gt;RGr], 5
SHP[1], 9
SRP2[], 30
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni042D.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 28, 126
SHP[1], 19
MIAP[R], 39, 11
SHP[1], 8
SRP2[], 28
IP[], 1
MDAP[R], 1
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni042E">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 9, 114
CALL[], 25, 3, 114
CALL[], 2, 8, 114
CALL[], 3, 2, 114
SRP1[], 25
SHP[1], 36
SRP2[], 14
IP[], 6
MDAP[R], 6
SHP[1], 7
SHP[2], 47
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni042E.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 10
MIAP[R], 7, 125
SRP2[], 6
IP[], 2
MDAP[R], 2
SHP[1], 3
MIAP[R], 14, 11
SHP[1], 47
MIAP[R], 25, 126
SHP[1], 36
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni042F">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 2, 114
SHP[2], 14
CALL[], 25, 8, 114
SHP[2], 12
SRP1[], 12
SRP2[], 9
IP[], 0
MDAP[R], 0
SHP[1], 22
SRP2[], 22
IP[], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni042F.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 1, 10
SHP[1], 25
MIAP[R], 22, 125
SHP[1], 27
SRP2[], 25
IP[], 4
MDAP[R], 4
SHP[1], 0
SHP[1], 35
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0430">
/* VTTTalk Unicode 0x430 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0431">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 34, 11, 114
CALL[], 0, 1, 114
SRP1[], 34
IP[], 23
MDAP[R], 23
SHP[1], 48
SRP1[], 34
SHP[1], 58
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0432">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 15, 10, 114
SHP[2], 29
SRP1[], 29
SHP[1], 30
CALL[], 16, 6, 114
SHP[2], 13
SRP1[], 15
IP[], 40
IP[], 1
MDAP[R], 40
MDAP[R], 1
SRP1[], 40
SHP[1], 41
SRP2[], 41
IP[], 43
IP[], 27
SRP1[], 1
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0433">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 10, 114
CALL[], 5, 6, 114
SHP[2], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0434">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
SHP[2], 16
SRP1[], 16
SHP[1], 21
CALL[], 8, 10, 114
SHP[2], 19
SHP[2], 27
SHP[2], 22
SRP1[], 22
SHP[1], 9
MDAP[R], 24
SHP[1], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0435">
/* VTTTalk Unicode 0x435 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0436">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 6, 114
SHP[2], 13
SRP1[], 13
SHP[1], 19
MIAP[R], 12, 18
SHP[1], 7
SHP[1], 20
IP[], 0
MDAP[R], 0
SHP[1], 6
SHP[1], 3
SRP1[], 3
SHP[1], 9
SHP[1], 17
SRP1[], 17
SHP[1], 22
SRP1[], 0
SHP[1], 16
SRP1[], 16
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0437">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 20, 7, 114
SHP[2], 11
MDRP[m&gt;RGr], 15
CALL[], 41, 11, 114
MDRP[m&gt;RGr], 46
SHP[1], 50
SRP2[], 20
IP[], 59
MDAP[R], 59
SHP[1], 2
SRP2[], 2
IP[], 31
IP[], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0438">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 10, 114
SHP[2], 4
CALL[], 8, 6, 114
SHP[2], 2
SRP2[], 6
IP[], 0
IP[], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0439">
/* VTTTalk Unicode 0x439 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 646, 0, 0
OFFSET[R], 393, 161, -21
SVTCA[Y]
CALL[], 15, 1, 1, 1, 125, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni043A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 10, 114
SHP[2], 10
CALL[], 3, 6, 114
SHP[2], 9
SRP1[], 2
IP[], 6
MDAP[R], 6
SHP[1], 11
SHP[1], 7
SRP1[], 7
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni043B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 8, 6, 114
SHP[2], 4
SHP[2], 3
SRP1[], 3
SHP[1], 2
CALL[], 17, 10, 114
SHP[2], 5
SHP[2], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni043C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 10, 114
SHP[2], 3
SHP[2], 11
CALL[], 10, 6, 114
SHP[2], 1
SHP[2], 6
SHP[2], 12
SRP2[], 9
IP[], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni043D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 10, 114
CALL[], 7, 6, 114
SRP1[], 6
IP[], 2
MDAP[R], 2
SHP[1], 3
SHP[2], 8
SRP1[], 6
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni043E">
/* VTTTalk Unicode 0x43e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0

    </glyphProgram>

    <glyphProgram name="uni043F">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 10, 114
CALL[], 7, 6, 114
SHP[2], 3
SRP1[], 3
SHP[1], 2
SHP[2], 8
SRP1[], 6
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0440">
/* VTTTalk Unicode 0x440 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 85, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0441">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 11, 114
CALL[], 20, 7, 114
SHP[2], 29
SRP1[], 9
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0442">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 10, 114
CALL[], 7, 6, 114
SHP[2], 6
SHP[2], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0443">
/* VTTTalk Unicode 0x443 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 94, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0444">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 87, 14, 114
CALL[], 88, 0, 114
CALL[], 51, 7, 114
CALL[], 62, 11, 114
SRP1[], 51
SHP[1], 82
SHP[1], 17
SRP1[], 17
SHP[1], 30
SHP[2], 73
SHP[2], 6
SRP1[], 6
SHP[1], 39
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0445">
/* VTTTalk Unicode 0x445 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 93, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0446">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
CALL[], 1, 6, 114
CALL[], 0, 10, 114
SHP[2], 12
SRP1[], 12
SHP[1], 13
SHP[2], 3
SRP1[], 1
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0447">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 10, 114
CALL[], 0, 6, 114
SRP1[], 1
IP[], 9
MDAP[R], 9
SHP[1], 20
SHP[2], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0448">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 11, 10, 114
CALL[], 0, 6, 114
SRP1[], 11
SHP[1], 2
SRP1[], 2
SHP[1], 6
SHP[2], 9
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0449">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
CALL[], 6, 6, 114
SHP[2], 11
SHP[2], 15
CALL[], 17, 10, 114
SHP[2], 4
SHP[2], 8
SRP1[], 8
SHP[1], 5
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni044A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 15, 10, 114
CALL[], 3, 6, 114
SHP[2], 2
SRP1[], 15
IP[], 4
MDAP[R], 4
SHP[1], 28
SRP1[], 15
SHP[1], 18
SHP[2], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni044B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 11, 10, 114
CALL[], 12, 6, 114
SRP1[], 11
IP[], 0
MDAP[R], 0
SHP[1], 24
SRP1[], 11
SHP[1], 14
SHP[2], 25
SHP[1], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni044C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 11, 10, 114
CALL[], 12, 6, 114
SRP1[], 11
IP[], 0
MDAP[R], 0
SHP[1], 24
SRP1[], 11
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni044D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 7, 114
SHP[2], 0
MDRP[m&gt;RGr], 4
CALL[], 20, 11, 114
MDRP[m&gt;RGr], 25
SHP[1], 29
SRP2[], 9
IP[], 42
MDAP[R], 42
SHP[1], 43
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni044E">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 25, 11, 114
CALL[], 14, 7, 114
CALL[], 6, 10, 114
CALL[], 7, 6, 114
SRP1[], 14
SHP[1], 47
SRP2[], 25
IP[], 2
MDAP[R], 2
SHP[1], 3
SHP[2], 36
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni044F">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 10, 114
SHP[2], 7
CALL[], 4, 6, 114
SHP[2], 9
SRP2[], 3
IP[], 19
MDAP[R], 19
SHP[1], 18
SRP2[], 18
IP[], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0450">
/* VTTTalk Unicode 0x450 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 69, 196, 0
SVTCA[Y]
CALL[], 46, 11, 1, 1, 140, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0451">
/* VTTTalk Unicode 0x451 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 107, 142, 0
SVTCA[Y]
CALL[], 65, 11, 1, 1, 163, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0452">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 15, 114
SHP[2], 13
CALL[], 20, 10, 114
CALL[], 21, 0, 114
CALL[], 28, 7, 114
SHP[2], 40
MDRP[m&gt;RGr], 47
SHP[2], 48
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0453">
/* VTTTalk Unicode 0x453 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 642, 0, 0
OFFSET[R], 118, 206, -21
SVTCA[Y]
CALL[], 6, 5, 1, 1, 139, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0454">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 13, 11, 114
CALL[], 24, 7, 114
SHP[2], 33
SRP1[], 13
IP[], 2
MDAP[R], 2
SHP[1], 3
SRP1[], 13
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0455">
/* VTTTalk Unicode 0x455 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 88, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0456">
/* VTTTalk Unicode 0x456 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 78, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0456.ccmp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 142, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0457">
/* VTTTalk Unicode 0x457 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 142, 0, 0
OFFSET[R], 107, -171, -2
SVTCA[Y]
CALL[], 25, 3, 1, 1, 181, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0458">
/* VTTTalk Unicode 0x458 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 79, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0458.ccmp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 236, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0459">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
SHP[2], 35
SHP[2], 21
SRP1[], 21
SHP[1], 20
CALL[], 9, 10, 114
SHP[2], 10
SHP[2], 33
SRP1[], 33
SHP[1], 36
SRP1[], 0
IP[], 46
MDAP[R], 46
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni045A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 10, 114
CALL[], 7, 6, 114
SRP1[], 6
IP[], 2
MDAP[R], 2
SHP[1], 3
SHP[1], 32
SRP1[], 3
SHP[1], 8
SRP1[], 6
SHP[1], 19
SRP1[], 19
SHP[1], 22
SHP[2], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni045B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 10, 114
SHP[2], 17
CALL[], 3, 0, 114
CALL[], 10, 7, 114
SHP[2], 22
MDRP[m&gt;RGr], 29
SHP[2], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni045C">
/* VTTTalk Unicode 0x45c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 647, 0, 0
OFFSET[R], 118, 316, -22
SVTCA[Y]
CALL[], 14, 3, 1, 1, 138, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni045D">
/* VTTTalk Unicode 0x45d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 646, 0, 0
OFFSET[R], 69, 221, -21
SVTCA[Y]
CALL[], 12, 1, 1, 1, 139, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni045E">
/* VTTTalk Unicode 0x45e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 94, 0, 0
OFFSET[R], 393, 79, 0
SVTCA[Y]
CALL[], 30, 1, 1, 1, 146, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni045F">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
CALL[], 4, 6, 114
SHP[2], 9
CALL[], 11, 10, 114
SHP[2], 6
SRP2[], 6
IP[], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0460">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 14
SHP[2], 26
SHP[2], 38
CALL[], 7, 9, 114
SHP[2], 20
CALL[], 31, 9, 114
SHP[2], 44
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0461">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
SHP[2], 14
SHP[2], 26
SHP[2], 38
CALL[], 7, 11, 114
SHP[2], 20
CALL[], 31, 11, 114
SHP[2], 44
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0462">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 11, 8
SHP[1], 14
MIAP[R], 12, 2
SRP2[], 11
IP[], 0
MDAP[R], 0
SHP[1], 24
MDRP[m&gt;RGr], 27
SHP[2], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0463">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 10, 114
CALL[], 11, 1, 114
SRP1[], 10
IP[], 27
MDAP[R], 27
SHP[1], 26
SRP1[], 10
IP[], 23
MDAP[R], 23
SHP[1], 0
SRP1[], 10
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0464">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 9, 114
SHP[2], 41
CALL[], 20, 3, 114
SHP[2], 29
MIAP[R], 47, 8
CALL[], 48, 2, 114
SRP2[], 47
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0465">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 13, 11, 114
SHP[2], 4
MDRP[m&gt;RGr], 8
CALL[], 24, 7, 114
MDRP[m&gt;RGr], 29
SHP[1], 33
MIAP[R], 46, 10
CALL[], 47, 6, 114
SRP2[], 46
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0466">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 8
SHP[1], 5
SRP1[], 5
SHP[1], 15
CALL[], 3, 2, 114
SHP[2], 7
SHP[2], 6
SRP1[], 6
SHP[1], 0
SRP1[], 2
IP[], 12
MDAP[R], 12
SHP[1], 13
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0467">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 1, 10
SHP[1], 5
SRP1[], 5
SHP[1], 16
CALL[], 3, 6, 114
SHP[2], 7
SRP2[], 1
IP[], 12
MDAP[R], 12
SHP[1], 13
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0468">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 7, 2, 114
SHP[2], 11
SHP[2], 10
SRP1[], 10
SHP[1], 4
CALL[], 22, 2, 114
MIAP[R], 24, 8
IP[], 2
MDAP[R], 2
SHP[1], 3
SHP[1], 16
SRP1[], 16
SHP[1], 17
SRP1[], 17
SHP[1], 21
SRP1[], 24
SHP[1], 6
SRP1[], 6
SHP[1], 20
SRP1[], 20
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0469">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 7, 6, 114
SHP[2], 11
MIAP[R], 24, 10
SHP[1], 6
SRP1[], 6
SHP[1], 20
SRP1[], 20
SHP[1], 9
CALL[], 25, 6, 114
SRP2[], 24
IP[], 2
MDAP[R], 2
SHP[1], 3
SHP[1], 16
SRP1[], 16
SHP[1], 17
SRP1[], 17
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni046A">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 1, 8
SHP[1], 39
SRP1[], 39
SHP[1], 13
CALL[], 36, 2, 114
SHP[2], 28
SRP2[], 1
IP[], 19
MDAP[R], 19
SHP[1], 6
SRP1[], 6
SHP[1], 40
SRP1[], 19
SHP[1], 35
SRP1[], 35
SHP[1], 31
SRP1[], 31
SHP[1], 27
SRP1[], 36
SHP[1], 26
SRP1[], 26
SHP[1], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni046B">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 1, 10
SHP[1], 40
SRP1[], 40
SHP[1], 13
CALL[], 37, 6, 114
SHP[2], 29
SRP2[], 1
IP[], 19
MDAP[R], 19
SHP[1], 6
SRP1[], 6
SHP[1], 41
SRP1[], 19
SHP[1], 36
SRP1[], 36
SHP[1], 32
SRP1[], 37
SHP[1], 27
SRP1[], 27
SHP[1], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni046C">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 5, 8
SHP[1], 9
SRP1[], 9
SHP[1], 47
SRP1[], 47
SHP[1], 21
CALL[], 7, 2, 114
SRP2[], 5
IP[], 2
MDAP[R], 2
SHP[1], 3
SHP[1], 27
SRP1[], 27
SHP[1], 14
SRP1[], 14
SHP[1], 48
SRP1[], 27
SHP[1], 43
SRP1[], 43
SHP[1], 39
CALL[], 44, 2, 114
SHP[2], 36
SHP[2], 34
SRP1[], 34
SHP[1], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni046D">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 10
SHP[1], 9
SRP1[], 9
SHP[1], 48
SRP1[], 48
SHP[1], 21
CALL[], 7, 6, 114
SRP2[], 6
IP[], 2
MDAP[R], 2
SHP[1], 3
SHP[1], 27
SRP1[], 27
SHP[1], 14
SRP1[], 14
SHP[1], 49
SRP1[], 27
SHP[1], 44
SRP1[], 44
SHP[1], 40
SRP1[], 7
SHP[1], 45
SRP1[], 45
SHP[1], 35
SRP1[], 35
SHP[1], 34
SHP[1], 37
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni046E">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 2
SHP[2], 23
MDRP[M&gt;RWh], 71
SMD[], 128
MDRP[m&gt;RBl], 65
SHP[2], 72
IP[], 66
SHP[2], 67
SRP1[], 67
SHP[1], 69
MIAP[R], 44, 9
SHP[1], 43
SRP2[], 0
IP[], 64
MDAP[R], 64
SHP[1], 12
SHP[1], 13
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni046F">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 6
SHP[2], 24
MDRP[M&gt;RWh], 72
SMD[], 128
MDRP[m&gt;RBl], 66
SHP[2], 68
SHP[2], 70
SHP[2], 73
IP[], 67
MDAP[R], 45
SRP2[], 0
IP[], 65
MDAP[R], 65
SHP[1], 12
SHP[1], 25
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0470">
/* VTTTalk Unicode 0x470 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 568, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0471">
/* VTTTalk Unicode 0x471 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 588, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0472">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 12, 9, 114
CALL[], 0, 3, 114
CALL[], 0, 24, 106
SRP2[], 12
IP[], 50
MDAP[R], 50
CALL[], 50, 32, 106
CALL[], 12, 41, 106
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0473">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 11, 11, 114
CALL[], 0, 7, 114
CALL[], 0, 22, 106
SRP2[], 11
IP[], 39
MDAP[R], 39
CALL[], 39, 27, 106
CALL[], 11, 33, 106
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0474">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 18, 8, 114
CALL[], 5, 3, 114
CALL[], 19, 2, 114
SRP1[], 5
SHP[1], 8
SRP1[], 18
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0475">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 7, 114
SHP[2], 12
CALL[], 22, 10, 114
SHP[2], 18
CALL[], 23, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0476">
/* VTTTalk Unicode 0x476 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 687, 0, 0
OFFSET[R], 448, 1082, 249
SVTCA[Y]
CALL[], 21, 19, 1, 1, 45, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni0477">
/* VTTTalk Unicode 0x477 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 688, 0, 0
OFFSET[R], 448, 980, -47
SVTCA[Y]
CALL[], 25, 23, 1, 1, 123, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni0478">
/* VTTTalk Unicode 0x478 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 52, 0, 0
OFFSET[R], 94, 1409, 0

    </glyphProgram>

    <glyphProgram name="uni0479">
/* VTTTalk Unicode 0x479 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 84, 0, 0
OFFSET[R], 94, 1168, 0

    </glyphProgram>

    <glyphProgram name="uni047A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 9, 114
MDRP[m&gt;RBl], 6
SHP[1], 51
SRP1[], 51
SHP[1], 7
RUTG[]
MDAP[R], 7
CALL[], 26, 3, 114
RTG[]
MDRP[m&gt;RBl], 3
SHP[1], 39
SRP1[], 39
SHP[1], 2
RDTG[]
MDAP[R], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni047B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 7, 114
MDRP[m&gt;RBl], 3
SHP[1], 47
SRP1[], 47
SHP[1], 2
RDTG[]
MDAP[R], 2
CALL[], 25, 11, 114
RTG[]
MDRP[m&gt;RBl], 6
SHP[1], 36
SRP1[], 36
SHP[1], 7
RUTG[]
MDAP[R], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni047C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 33, 2, 114
SHP[2], 34
SHP[2], 22
RUTG[]
MDAP[R], 22
SHP[1], 27
RTG[]
MDAP[R], 27
SHP[1], 8
SRP1[], 8
SHP[1], 17
SHP[2], 67
SRP1[], 67
SHP[1], 66
CALL[], 56, 9, 114
SHP[2], 44
SHP[2], 49
MDAP[R], 49
SHP[1], 84
CALL[], 78, 9, 114
SHP[2], 91
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni047D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 33, 6, 114
SHP[2], 34
SHP[2], 22
RUTG[]
MDAP[R], 22
SHP[1], 27
RTG[]
MDAP[R], 27
SHP[1], 8
SRP1[], 8
SHP[1], 17
SHP[2], 68
SRP1[], 68
SHP[1], 67
CALL[], 57, 11, 114
SHP[2], 44
SHP[2], 50
MDAP[R], 50
SHP[1], 85
CALL[], 79, 11, 114
SHP[2], 92
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni047E">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 15, 9, 114
SHP[2], 28
CALL[], 21, 2, 114
SHP[2], 8
SRP1[], 8
SHP[1], 33
SHP[1], 45
SHP[1], 7
RUTG[]
MDAP[R], 7
SHP[1], 1
RTG[]
MDAP[R], 1
SHP[1], 2
SHP[1], 5
CALL[], 39, 9, 114
SHP[2], 52
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni047F">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 15, 11, 114
SHP[2], 28
CALL[], 21, 6, 114
SHP[2], 8
SRP1[], 8
SHP[1], 33
SHP[1], 45
SHP[1], 7
RUTG[]
MDAP[R], 7
SHP[1], 1
RTG[]
MDAP[R], 1
SHP[1], 2
SHP[1], 5
CALL[], 39, 11, 114
SHP[2], 52
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0480">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 9, 114
MDRP[m&gt;RBl], 36
SHP[1], 0
SRP1[], 0
SHP[1], 37
CALL[], 13, 3, 114
MDRP[m&gt;RGr], 18
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0481">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 11, 114
MDRP[m&gt;RBl], 34
SHP[1], 0
SRP1[], 0
SHP[1], 32
CALL[], 12, 7, 114
MDRP[m&gt;RGr], 17
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0482">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
MDAP[R], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0483">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 2
MDAP[R], 2
SRP1[], 1
SHP[1], 4
SRP1[], 4
SHP[1], 6
RUTG[]
MDAP[R], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0484">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
SMD[], 128
MDRP[m&gt;RGr], 6
SHP[2], 15
SHP[1], 20
SRP1[], 20
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0485">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SMD[], 128
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0486">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
SMD[], 128
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0487">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 18, 17
SHP[1], 8
SMD[], 128
MDRP[m&gt;RGr], 12
MDRP[m&gt;RBl], 3
SHP[2], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0488">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni0489">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni048A">
/* VTTTalk Unicode 0x48a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 626, 0, 0
OFFSET[R], 393, 305, 322
OFFSET[R], 17, 1151, -68
SVTCA[Y]
CALL[], 15, 1, 1, 1, 94, 86
SHC[2], 1
CALL[], 35, 4, 0, 0, 152, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni048B">
/* VTTTalk Unicode 0x48b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 646, 0, 0
OFFSET[R], 393, 161, -21
OFFSET[R], 17, 898, -68
SVTCA[Y]
CALL[], 15, 1, 1, 1, 125, 86
SHC[2], 1
CALL[], 35, 4, 1, 0, 152, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni048C">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 11, 8
SHP[1], 14
CALL[], 12, 2, 114
SRP2[], 11
IP[], 0
MDAP[R], 0
SHP[1], 24
MDRP[m&gt;RGr], 27
SHP[2], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni048D">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 10, 18
SHP[1], 13
SRP1[], 13
SHP[1], 23
MDAP[R], 23
SHP[1], 0
CALL[], 27, 2, 114
MDRP[m&gt;RWh], 11
SHP[1], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni048E">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 18, 8, 114
CALL[], 19, 2, 114
SHP[2], 16
SRP1[], 18
IP[], 5
MDAP[R], 5
SHP[1], 6
SRP1[], 6
SHP[1], 3
SHP[1], 0
SRP1[], 5
SHP[1], 2
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni048F">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 14, 114
CALL[], 26, 7, 114
CALL[], 7, 6, 114
CALL[], 15, 11, 114
SRP1[], 26
SHP[1], 37
SHP[2], 48
SHP[2], 2
SHP[2], 1
SRP1[], 48
SHP[1], 3
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0490">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 8, 8, 114
CALL[], 9, 2, 114
MDRP[m&gt;RWh], 3
SHP[1], 6
SRP1[], 6
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0490.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 10
MIAP[R], 7, 125
SHP[1], 3
MDAP[R], 3
SRP1[], 7
SHP[1], 11
SRP1[], 11
SHP[1], 10
SRP1[], 10
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0491">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 8, 10, 114
CALL[], 9, 6, 114
MDRP[m&gt;RWh], 3
SHP[1], 6
SRP1[], 6
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0492">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 4, 8
CALL[], 5, 2, 114
SHP[2], 2
SRP2[], 4
IP[], 7
MDAP[R], 7
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0492.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
MIAP[R], 3, 125
SHP[1], 7
SRP1[], 7
SHP[1], 6
SRP1[], 2
SRP2[], 3
IP[], 10
MDAP[R], 10
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0493">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 4, 10
CALL[], 5, 6, 114
SHP[2], 2
SRP2[], 4
IP[], 8
MDAP[R], 8
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0494">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 8, 114
CALL[], 5, 2, 114
SHP[2], 2
MDAP[R], 18
SHP[1], 19
IP[], 7
MDAP[R], 7
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0495">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
SHP[1], 12
CALL[], 25, 10, 114
CALL[], 26, 6, 114
SHP[2], 23
SRP1[], 11
IP[], 1
MDAP[R], 1
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0496">
/* VTTTalk Unicode 0x496 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 624, 0, 0
OFFSET[R], 2017, 1633, 0
SVTCA[Y]
CALL[], 27, 12, 0, 0, 154, 86
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni0496.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 19, 125
SHP[1], 7
SRP1[], 7
SHP[1], 13
MIAP[R], 25, 10
SHP[1], 6
SRP1[], 6
SRP2[], 19
IP[], 9
MDAP[R], 9
SHP[1], 12
SHP[1], 15
SHP[1], 16
SHP[1], 18
SRP1[], 18
SHP[1], 21
SHP[1], 24
SRP1[], 24
SHP[1], 27
SRP1[], 6
SHP[1], 14
SRP1[], 14
SHP[1], 1
MDAP[R], 1
SRP1[], 14
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0497">
/* VTTTalk Unicode 0x497 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 644, 0, 0
OFFSET[R], 2017, 1308, 0
SVTCA[Y]
CALL[], 27, 12, 0, 0, 154, 86
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni0498">
/* VTTTalk Unicode 0x498 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 625, 0, 0
OFFSET[R], 2017, 411, -74
SVTCA[Y]
CALL[], 66, 42, 0, 0, 100, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0498.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 21, 126
SHP[1], 11
MDRP[m&gt;RGr], 15
CALL[], 42, 11, 114
MDRP[m&gt;RGr], 48
MDRP[m&gt;RBl], 64
SHP[1], 52
SRP2[], 52
IP[], 63
SRP2[], 21
IP[], 62
MDAP[R], 62
SHP[1], 2
SRP2[], 2
IP[], 1
IP[], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0499">
/* VTTTalk Unicode 0x499 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 645, 0, 0
OFFSET[R], 2017, 323, -73
SVTCA[Y]
CALL[], 63, 41, 0, 0, 101, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni049A">
/* VTTTalk Unicode 0x49a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1966, 0, 0
OFFSET[R], 2017, 1059, -3

    </glyphProgram>

    <glyphProgram name="uni049A.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 10
SHP[1], 14
SRP1[], 14
SHP[1], 1
MDAP[R], 1
SRP1[], 14
SHP[1], 2
MIAP[R], 7, 125
SHP[1], 13
SRP2[], 6
IP[], 10
MDAP[R], 10
SHP[1], 11
SHP[1], 15
SRP1[], 15
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni049B">
/* VTTTalk Unicode 0x49b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 647, 0, 0
OFFSET[R], 2017, 864, 0
SVTCA[Y]
CALL[], 17, 2, 1, 0, 154, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni049C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 8
CALL[], 3, 8, 114
SHP[2], 16
SRP2[], 0
IP[], 11
MDAP[R], 11
SHP[1], 7
MDAP[R], 7
SRP1[], 11
SHP[1], 12
SRP1[], 12
SHP[1], 4
MDAP[R], 4
SRP1[], 12
SRP2[], 11
IP[], 14
SRP1[], 14
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni049C.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 10
SHP[1], 14
MIAP[R], 7, 125
SHP[1], 13
SRP2[], 6
IP[], 10
MDAP[R], 10
SHP[1], 3
MDAP[R], 3
SRP1[], 10
SHP[1], 11
SRP1[], 11
SHP[1], 0
SRP1[], 10
SHP[1], 15
SRP1[], 15
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni049D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
SHP[2], 9
CALL[], 3, 10, 114
SHP[2], 16
SRP2[], 0
IP[], 11
MDAP[R], 11
SHP[1], 7
MDAP[R], 7
SRP1[], 11
SHP[1], 12
SRP1[], 12
SHP[1], 4
MDAP[R], 4
SRP1[], 11
SHP[1], 14
SRP1[], 14
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni049E">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 8, 114
SHP[2], 10
CALL[], 3, 2, 114
SHP[2], 9
SRP1[], 2
IP[], 17
IP[], 6
MDAP[R], 17
MDAP[R], 6
SRP1[], 17
SHP[1], 16
SRP1[], 6
SHP[1], 7
SRP2[], 7
IP[], 11
SRP1[], 11
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni049F">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 10, 114
SHP[2], 10
CALL[], 3, 0, 114
SRP1[], 2
IP[], 17
IP[], 6
MDAP[R], 17
MDAP[R], 6
SRP1[], 17
SHP[1], 16
SRP1[], 6
SHP[1], 7
SRP2[], 7
IP[], 11
SRP1[], 11
SHP[1], 12
CALL[], 4, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04A0">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 2, 114
SHP[2], 2
SHP[2], 7
SHP[2], 13
CALL[], 6, 8, 114
SHP[2], 14
SRP2[], 3
IP[], 10
MDAP[R], 10
SHP[1], 11
SHP[1], 15
SRP1[], 15
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04A0.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 125
SHP[2], 3
SHP[2], 7
SRP1[], 7
SHP[1], 13
MIAP[R], 6, 10
SHP[1], 14
IP[], 10
MDAP[R], 10
SHP[1], 11
SHP[1], 15
SRP1[], 15
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04A1">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 6, 114
SHP[2], 2
SHP[2], 7
SHP[2], 13
CALL[], 6, 10, 114
SHP[2], 14
SRP2[], 3
IP[], 10
MDAP[R], 10
SHP[1], 11
SHP[1], 15
SRP1[], 15
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04A2">
/* VTTTalk Unicode 0x4a2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 45, 0, 0
OFFSET[R], 2017, 1160, 0
SVTCA[Y]
CALL[], 15, 10, 0, 0, 154, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04A2.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 18
SHP[1], 10
SRP0[], 10
MDRP[m&gt;RWh], 14
SHP[1], 15
MIAP[R], 7, 125
SHP[1], 11
SRP2[], 6
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04A3">
/* VTTTalk Unicode 0x4a3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 650, 0, 0
OFFSET[R], 2017, 897, 0
SVTCA[Y]
CALL[], 15, 10, 0, 0, 154, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04A4">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 8, 114
SHP[2], 13
CALL[], 11, 2, 114
SHP[2], 12
SHP[2], 3
SRP1[], 3
SHP[1], 2
SRP1[], 10
IP[], 6
MDAP[R], 6
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04A5">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 10, 114
SHP[2], 13
CALL[], 11, 6, 114
SHP[2], 12
SHP[2], 3
SRP1[], 3
SHP[1], 2
SRP1[], 10
IP[], 6
MDAP[R], 6
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04A6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
CALL[], 6, 8, 114
CALL[], 7, 2, 114
SHP[2], 4
MDAP[R], 20
IP[], 9
MDAP[R], 9
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04A7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
SHP[1], 12
CALL[], 27, 10, 114
CALL[], 28, 6, 114
SHP[2], 29
SRP1[], 11
IP[], 1
MDAP[R], 1
SHP[1], 0
SHP[2], 24
SRP1[], 24
SHP[1], 23
MDAP[R], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04A8">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 23, 9, 114
SHP[2], 46
SHP[2], 1
SRP1[], 1
SHP[1], 0
CALL[], 34, 3, 114
SHP[2], 35
SHP[2], 12
SRP1[], 12
SHP[1], 57
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04A8.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 13, 126
SHP[1], 58
SHP[1], 35
SRP1[], 35
SHP[1], 36
MIAP[R], 24, 11
SHP[1], 47
SHP[1], 1
MDAP[R], 1
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04A9">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 23, 11, 114
SHP[2], 46
SHP[2], 1
MDAP[R], 1
SHP[1], 0
CALL[], 34, 7, 114
SHP[2], 35
SHP[2], 12
SRP1[], 12
SHP[1], 57
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04AA">
/* VTTTalk Unicode 0x4aa */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 40, 0, 0
OFFSET[R], 2017, 485, -74
SVTCA[Y]
CALL[], 43, 5, 0, 0, 100, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni04AA.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 11, 114
SHP[2], 42
MDAP[R], 42
SHP[2], 36
SRP1[], 36
SHP[1], 40
MIAP[R], 16, 126
SHP[1], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04AB">
/* VTTTalk Unicode 0x4ab */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 72, 0, 0
OFFSET[R], 2017, 338, -74
SVTCA[Y]
CALL[], 43, 9, 0, 0, 100, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni04AC">
/* VTTTalk Unicode 0x4ac */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 57, 0, 0
OFFSET[R], 2017, 576, 0
SVTCA[Y]
CALL[], 11, 2, 0, 0, 154, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04AD">
/* VTTTalk Unicode 0x4ad */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 652, 0, 0
OFFSET[R], 2017, 455, 0
SVTCA[Y]
CALL[], 11, 2, 0, 0, 154, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04AE">
/* VTTTalk Unicode 0x4ae */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 62, 0, 0

    </glyphProgram>

    <glyphProgram name="uni04AE.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1875, 0, 0

    </glyphProgram>

    <glyphProgram name="uni04AF">
/* VTTTalk Unicode 0x4af */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 572, 0, 0

    </glyphProgram>

    <glyphProgram name="uni04B0">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 8, 114
CALL[], 8, 2, 114
SHP[2], 3
SRP1[], 6
IP[], 11
MDAP[R], 11
SLOOP[], 3
IP[], 1, 4, 7
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04B0.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1875, 0, 0
OFFSET[R], 1960, 68, -291

    </glyphProgram>

    <glyphProgram name="uni04B1">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 14, 114
CALL[], 13, 6, 114
SHP[2], 5
SRP2[], 2
IP[], 16
MDAP[R], 16
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04B2">
/* VTTTalk Unicode 0x4b2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 61, 0, 0
OFFSET[R], 2017, 983, 0
SVTCA[Y]
CALL[], 15, 6, 0, 0, 154, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni04B2.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 13, 10
SHP[1], 10
SRP1[], 10
SHP[1], 1
MDAP[R], 1
SRP1[], 10
SHP[1], 2
MIAP[R], 15, 125
SHP[1], 6
SRP2[], 10
SLOOP[], 4
IP[], 11, 14, 8, 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04B3">
/* VTTTalk Unicode 0x4b3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 93, 0, 0
OFFSET[R], 2017, 741, 0
SVTCA[Y]
CALL[], 15, 6, 0, 0, 154, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni04B4">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 2, 114
SHP[2], 2
SHP[2], 12
SHP[2], 16
MDAP[R], 5
CALL[], 10, 8, 114
SHP[2], 8
SHP[2], 13
SRP1[], 13
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04B4.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 8, 18
SHP[1], 2
MDAP[R], 2
SRP1[], 8
SHP[1], 4
SHP[1], 9
SHP[1], 12
MIAP[R], 16, 18
MIAP[R], 21, 125
SHP[1], 20
SHP[1], 13
SRP1[], 13
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04B5">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 10, 114
SHP[2], 16
SHP[2], 7
SRP1[], 7
SHP[1], 8
CALL[], 5, 6, 114
SHP[2], 10
MDAP[R], 13
IP[], 3
MDAP[R], 3
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04B6">
/* VTTTalk Unicode 0x4b6 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 631, 0, 0
OFFSET[R], 2017, 1094, 0
SVTCA[Y]
CALL[], 29, 25, 0, 0, 154, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04B7">
/* VTTTalk Unicode 0x4b7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 655, 0, 0
OFFSET[R], 2017, 830, 0
SVTCA[Y]
CALL[], 27, 2, 0, 0, 154, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04B8">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 2, 114
SHP[2], 27
CALL[], 28, 8, 114
SRP1[], 4
IP[], 21
MDAP[R], 21
SHP[1], 2
MDAP[R], 2
SRP1[], 21
SHP[1], 10
SRP1[], 10
SHP[1], 3
MDAP[R], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04B8.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 10
MIAP[R], 18, 125
SHP[1], 7
SRP2[], 6
IP[], 13
MDAP[R], 13
SHP[1], 3
MDAP[R], 3
SRP1[], 13
SHP[1], 24
SRP1[], 24
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04B9">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 6, 114
SHP[2], 18
CALL[], 5, 10, 114
SHP[2], 13
MDAP[R], 13
SHP[1], 1
RDTG[]
MDAP[R], 1
SRP1[], 13
SHP[1], 24
SRP1[], 24
SHP[1], 0
RTG[]
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04BA">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 23, 8, 114
CALL[], 24, 2, 114
SRP1[], 23
IP[], 17
MDAP[R], 17
SHP[1], 6
SRP1[], 23
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04BA.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 18
MIAP[R], 1, 125
IP[], 9
MDAP[R], 9
SHP[1], 20
MIAP[R], 15, 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04BB">
/* VTTTalk Unicode 0x4bb */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 77, 0, 0

    </glyphProgram>

    <glyphProgram name="uni04BC">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 9, 114
SHP[2], 47
CALL[], 21, 3, 114
SHP[2], 36
SRP1[], 10
IP[], 28
MDAP[R], 28
SHP[1], 6
SHP[1], 29
SRP1[], 29
SHP[1], 1
MDAP[R], 1
SRP1[], 29
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04BC.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 45
MIAP[R], 11, 126
SHP[1], 34
IP[], 17
MDAP[R], 17
SHP[1], 29
SRP1[], 29
SHP[1], 24
MDAP[R], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04BD">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 11, 114
SHP[2], 46
CALL[], 20, 7, 114
SHP[2], 35
SRP2[], 9
IP[], 27
MDAP[R], 27
SHP[1], 5
SHP[1], 28
SRP1[], 28
SHP[1], 1
MDAP[R], 1
SRP1[], 28
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04BE">
/* VTTTalk Unicode 0x4be */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 739, 0, 0
OFFSET[R], 2017, 774, -70
SVTCA[Y]
CALL[], 58, 10, 0, 0, 107, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04BE.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1943, 0, 0
OFFSET[R], 2017, 699, -74

    </glyphProgram>

    <glyphProgram name="uni04BF">
/* VTTTalk Unicode 0x4bf */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 740, 0, 0
OFFSET[R], 2017, 512, -67
SVTCA[Y]
CALL[], 57, 9, 0, 0, 107, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04C0">
/* VTTTalk Unicode 0x4c0 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0

    </glyphProgram>

    <glyphProgram name="uni04C1">
/* VTTTalk Unicode 0x4c1 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 624, 0, 0
OFFSET[R], 393, 504, 322
SVTCA[Y]
CALL[], 29, 13, 1, 1, 94, 86
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni04C2">
/* VTTTalk Unicode 0x4c2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 644, 0, 0
OFFSET[R], 393, 351, -21
SVTCA[Y]
CALL[], 29, 13, 1, 1, 125, 86
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni04C3">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 8, 114
CALL[], 3, 2, 114
SHP[2], 9
MDAP[R], 22
SHP[1], 23
IP[], 7
MDAP[R], 7
SHP[1], 8
SHP[1], 11
SHP[1], 6
SRP1[], 6
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04C4">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
CALL[], 3, 6, 114
SRP2[], 1
IP[], 11
MDAP[R], 11
SHP[1], 7
SHP[1], 10
SRP1[], 10
SHP[1], 6
CALL[], 9, 6, 114
MDAP[R], 21
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04C5">
/* VTTTalk Unicode 0x4c5 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 627, 0, 0
OFFSET[R], 17, 1140, -68
SVTCA[Y]
CALL[], 36, 6, 0, 0, 152, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04C6">
/* VTTTalk Unicode 0x4c6 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 648, 0, 0
OFFSET[R], 17, 899, -68
SVTCA[Y]
CALL[], 36, 6, 1, 0, 152, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04C7">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 5
MDAP[R], 10
SHP[1], 17
IP[], 2
MDAP[R], 2
SHP[1], 23
CALL[], 25, 8, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04C8">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
SHP[2], 5
CALL[], 10, 15, 114
SHP[2], 17
SRP2[], 0
IP[], 2
MDAP[R], 2
SHP[1], 23
CALL[], 25, 10, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04C9">
/* VTTTalk Unicode 0x4c9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 45, 0, 0
OFFSET[R], 17, 1160, -68
SVTCA[Y]
CALL[], 22, 10, 1, 0, 152, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04CA">
/* VTTTalk Unicode 0x4ca */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 650, 0, 0
OFFSET[R], 17, 897, -68
SVTCA[Y]
CALL[], 22, 10, 1, 0, 152, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04CB">
/* VTTTalk Unicode 0x4cb */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 631, 0, 0
OFFSET[R], 2017, 766, 0
SVTCA[Y]
CALL[], 29, 25, 1, 0, 154, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04CC">
/* VTTTalk Unicode 0x4cc */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 655, 0, 0
OFFSET[R], 2017, 502, 0
SVTCA[Y]
CALL[], 27, 2, 1, 0, 154, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04CD">
/* VTTTalk Unicode 0x4cd */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 50, 0, 0
OFFSET[R], 17, 1477, -68
SVTCA[Y]
CALL[], 27, 15, 0, 0, 152, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04CE">
/* VTTTalk Unicode 0x4ce */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 649, 0, 0
OFFSET[R], 17, 1235, -68
SVTCA[Y]
CALL[], 25, 11, 1, 0, 152, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04CF">
/* VTTTalk Unicode 0x4cf */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0

    </glyphProgram>

    <glyphProgram name="uni04D0">
/* VTTTalk Unicode 0x4d0 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 393, 243, 311
SVTCA[Y]
CALL[], 19, 7, 1, 1, 83, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04D1">
/* VTTTalk Unicode 0x4d1 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 393, 153, 0
SVTCA[Y]
CALL[], 64, 15, 1, 1, 126, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04D2">
/* VTTTalk Unicode 0x4d2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 107, 249, 311
SVTCA[Y]
CALL[], 35, 7, 1, 1, 120, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni04D3">
/* VTTTalk Unicode 0x4d3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 107, 159, 0
SVTCA[Y]
CALL[], 80, 15, 1, 1, 163, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04D4">
/* VTTTalk Unicode 0x4d4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0

    </glyphProgram>

    <glyphProgram name="uni04D5">
/* VTTTalk Unicode 0x4d5 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 135, 0, 0

    </glyphProgram>

    <glyphProgram name="uni04D6">
/* VTTTalk Unicode 0x4d6 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 393, 190, 322
SVTCA[Y]
CALL[], 21, 7, 1, 1, 94, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni04D7">
/* VTTTalk Unicode 0x4d7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 393, 136, 0
SVTCA[Y]
CALL[], 49, 11, 1, 1, 126, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni04D8">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 11, 9, 114
CALL[], 0, 3, 114
SHP[2], 37
SRP1[], 11
IP[], 20
MDAP[R], 20
SHP[1], 17
SRP1[], 11
SHP[1], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04D8.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 126
SHP[2], 36
MIAP[R], 11, 11
SHP[1], 25
IP[], 20
MDAP[R], 20
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04D9">
/* VTTTalk Unicode 0x4d9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 270, 0, 0

    </glyphProgram>

    <glyphProgram name="uni04DA">
/* VTTTalk Unicode 0x4da */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 751, 0, 0
OFFSET[R], 107, 212, 276
SVTCA[Y]
CALL[], 66, 0, 1, 1, 65, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04DB">
/* VTTTalk Unicode 0x4db */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 270, 0, 0
OFFSET[R], 107, 136, 1
SVTCA[Y]
CALL[], 64, 0, 1, 1, 162, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04DC">
/* VTTTalk Unicode 0x4dc */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 624, 0, 0
OFFSET[R], 107, 510, 322
SVTCA[Y]
CALL[], 45, 13, 1, 1, 131, 86
SHC[2], 5
SHC[2], 6

    </glyphProgram>

    <glyphProgram name="uni04DD">
/* VTTTalk Unicode 0x4dd */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 644, 0, 0
OFFSET[R], 107, 357, -21
SVTCA[Y]
CALL[], 45, 13, 1, 1, 162, 86
SHC[2], 5
SHC[2], 6

    </glyphProgram>

    <glyphProgram name="uni04DE">
/* VTTTalk Unicode 0x4de */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 625, 0, 0
OFFSET[R], 107, 183, 343
SVTCA[Y]
CALL[], 84, 21, 1, 1, 132, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04DF">
/* VTTTalk Unicode 0x4df */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 645, 0, 0
OFFSET[R], 107, 95, -1
SVTCA[Y]
CALL[], 81, 20, 1, 1, 163, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04E0">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 7
CALL[], 18, 9, 114
SHP[2], 28
SRP1[], 0
IP[], 37
SRP1[], 37
SHP[1], 4
SHP[1], 8
SRP1[], 8
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04E0.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 125
SHP[2], 7
MIAP[R], 19, 11
SHP[1], 29
IP[], 38
MDAP[R], 38
SHP[1], 4
SHP[1], 5
SRP1[], 5
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04E1">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
SHP[2], 7
MDAP[R], 18
MDRP[m&gt;RGr], 24
SHP[1], 28
SRP2[], 0
IP[], 37
MDAP[R], 37
SHP[1], 4
SHP[1], 5
SRP1[], 5
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04E2">
/* VTTTalk Unicode 0x4e2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 626, 0, 0
OFFSET[R], 113, 260, 330
SVTCA[Y]
CALL[], 12, 8, 1, 1, 177, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni04E2.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1918, 0, 0
OFFSET[R], 113, 157, 38



SVTCA[Y]
CALL[], 14, 8, 1, 1, 176, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04E3">
/* VTTTalk Unicode 0x4e3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 646, 0, 0
OFFSET[R], 113, 117, -13
SVTCA[Y]
CALL[], 12, 8, 1, 1, 208, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni04E4">
/* VTTTalk Unicode 0x4e4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 626, 0, 0
OFFSET[R], 107, 310, 322
SVTCA[Y]
CALL[], 31, 1, 1, 1, 131, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04E5">
/* VTTTalk Unicode 0x4e5 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 646, 0, 0
OFFSET[R], 107, 167, -21
SVTCA[Y]
CALL[], 31, 1, 1, 1, 162, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04E6">
/* VTTTalk Unicode 0x4e6 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 107, 284, 313
SVTCA[Y]
CALL[], 65, 17, 1, 1, 102, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04E7">
/* VTTTalk Unicode 0x4e7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 107, 152, 0
SVTCA[Y]
CALL[], 65, 6, 1, 1, 163, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04E8">
/* VTTTalk Unicode 0x4e8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 685, 0, 0

    </glyphProgram>

    <glyphProgram name="uni04E8.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
MDAP[R], 0
CALL[], 0, 22, 106
SRP2[], 11
IP[], 45
MDAP[R], 45
CALL[], 45, 29, 106
CALL[], 11, 37, 106
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04E9">
/* VTTTalk Unicode 0x4e9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 686, 0, 0

    </glyphProgram>

    <glyphProgram name="uni04EA">
/* VTTTalk Unicode 0x4ea */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 685, 0, 0
OFFSET[R], 107, 296, 317
SVTCA[Y]
CALL[], 79, 0, 1, 1, 106, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni04EB">
/* VTTTalk Unicode 0x4eb */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 686, 0, 0
OFFSET[R], 107, 136, 2
SVTCA[Y]
CALL[], 65, 0, 1, 1, 165, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni04EC">
/* VTTTalk Unicode 0x4ec */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 637, 0, 0
OFFSET[R], 107, 269, 344
SVTCA[Y]
CALL[], 66, 30, 1, 1, 133, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04ED">
/* VTTTalk Unicode 0x4ed */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 661, 0, 0
OFFSET[R], 107, 124, 0
SVTCA[Y]
CALL[], 65, 9, 1, 1, 163, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04EE">
/* VTTTalk Unicode 0x4ee */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 628, 0, 0
OFFSET[R], 113, 173, 330
SVTCA[Y]
CALL[], 27, 24, 1, 1, 177, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04EE.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1921, 0, 0
OFFSET[R], 113, 59, 38



SVTCA[Y]
CALL[], 26, 23, 1, 1, 176, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04EF">
/* VTTTalk Unicode 0x4ef */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 94, 0, 0
OFFSET[R], 113, 35, 8
SVTCA[Y]
CALL[], 27, 24, 1, 1, 229, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04F0">
/* VTTTalk Unicode 0x4f0 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 628, 0, 0
OFFSET[R], 107, 223, 322
SVTCA[Y]
CALL[], 46, 1, 1, 1, 131, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04F1">
/* VTTTalk Unicode 0x4f1 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 94, 0, 0
OFFSET[R], 107, 85, 0
SVTCA[Y]
CALL[], 46, 1, 1, 1, 183, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04F2">
/* VTTTalk Unicode 0x4f2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 628, 0, 0
OFFSET[R], 398, 302, 322
SVTCA[Y]
CALL[], 25, 1, 1, 1, 98, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04F3">
/* VTTTalk Unicode 0x4f3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 94, 0, 0
OFFSET[R], 398, 164, 0
SVTCA[Y]
CALL[], 25, 1, 1, 1, 150, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04F4">
/* VTTTalk Unicode 0x4f4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 631, 0, 0
OFFSET[R], 107, 265, 322
SVTCA[Y]
CALL[], 47, 22, 1, 1, 131, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04F5">
/* VTTTalk Unicode 0x4f5 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 655, 0, 0
OFFSET[R], 107, 101, -21
SVTCA[Y]
CALL[], 45, 3, 1, 1, 162, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04F6">
/* VTTTalk Unicode 0x4f6 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 560, 0, 0
OFFSET[R], 2017, 240, 0
SVTCA[Y]
CALL[], 9, 4, 0, 0, 154, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni04F7">
/* VTTTalk Unicode 0x4f7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 642, 0, 0
OFFSET[R], 2017, 213, 0
SVTCA[Y]
CALL[], 9, 4, 0, 0, 154, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni04F8">
/* VTTTalk Unicode 0x4f8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 635, 0, 0
OFFSET[R], 107, 467, 322
SVTCA[Y]
CALL[], 50, 28, 1, 1, 131, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04F9">
/* VTTTalk Unicode 0x4f9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 659, 0, 0
OFFSET[R], 107, 365, -21
SVTCA[Y]
CALL[], 50, 28, 1, 1, 162, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04FA">
/* VTTTalk Unicode 0x4fa */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 560, 68, 0
OFFSET[R], 1960, -86, 64
OFFSET[R], 2026, 241, 0

    </glyphProgram>

    <glyphProgram name="uni04FB">
/* VTTTalk Unicode 0x4fb */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 642, 79, 0
OFFSET[R], 1960, -85, -115
OFFSET[R], 2026, 225, 0

    </glyphProgram>

    <glyphProgram name="uni04FC">
/* VTTTalk Unicode 0x4fc */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 61, 0, 0
OFFSET[R], 2026, 935, 0

    </glyphProgram>

    <glyphProgram name="uni04FD">
/* VTTTalk Unicode 0x4fd */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 93, 0, 0
OFFSET[R], 2026, 693, 0

    </glyphProgram>

    <glyphProgram name="uni04FE">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 3
MDAP[R], 5
SHP[1], 9
IP[], 14
MDAP[R], 14
SLOOP[], 3
IP[], 1, 4, 10
SRP2[], 5
IP[], 7
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04FF">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
SHP[2], 3
MDAP[R], 5
SHP[1], 9
IP[], 14
MDAP[R], 14
SLOOP[], 3
IP[], 1, 10, 4
SRP2[], 5
IP[], 7
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0500">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 13, 2, 114
MDAP[R], 16
SHP[1], 11
IP[], 0
MDAP[R], 0
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0501">
/* VTTTalk Unicode 0x501 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 73, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0502">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 13, 2, 114
MDAP[R], 16
SHP[1], 26
IP[], 0
MDAP[R], 0
SHP[1], 3
SHP[1], 37
MDAP[R], 37
SRP1[], 16
SHP[1], 11
SRP1[], 11
SHP[1], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0503">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 7, 114
SHP[2], 39
CALL[], 18, 11, 114
SHP[2], 29
CALL[], 45, 1, 114
MDAP[R], 59
CALL[], 68, 11, 114
SHP[2], 51
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0504">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 2, 114
SHP[2], 13
MDAP[R], 58
CALL[], 67, 9, 114
SHP[2], 50
SRP1[], 14
IP[], 1
MDAP[R], 1
SHP[1], 2
SHP[1], 39
SRP1[], 39
SHP[1], 40
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0505">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 13, 6, 114
SHP[2], 12
CALL[], 51, 11, 114
SHP[2], 34
SHP[2], 42
MDAP[R], 42
SRP1[], 13
IP[], 1
MDAP[R], 1
SHP[1], 2
SHP[1], 27
SHP[1], 61
SRP1[], 61
SHP[1], 62
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0506">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 1
SRP1[], 1
SHP[1], 32
SRP1[], 32
SHP[1], 33
CALL[], 13, 2, 114
SHP[2], 12
MDAP[R], 44
SHP[1], 63
MDAP[R], 57
SHP[1], 58
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0507">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 13, 6, 114
SHP[2], 12
MIAP[R], 43, 10
SHP[1], 62
IP[], 1
MDAP[R], 1
SHP[1], 2
SHP[1], 31
SRP1[], 31
SHP[1], 32
MDAP[R], 56
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0508">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 8
SHP[1], 11
CALL[], 21, 2, 114
SHP[2], 0
SHP[2], 20
SHP[2], 23
CALL[], 47, 9, 114
SHP[2], 30
SHP[2], 38
MDAP[R], 38
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0509">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 8, 10, 114
SHP[2], 11
CALL[], 21, 6, 114
SHP[2], 0
SHP[2], 20
SHP[2], 23
CALL[], 47, 11, 114
SHP[2], 30
SHP[2], 39
MDAP[R], 39
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni050A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 2, 114
MIAP[R], 6, 8
IP[], 3
MDAP[R], 3
SHP[1], 0
CALL[], 8, 2, 114
CALL[], 31, 9, 114
SHP[2], 14
SHP[2], 22
MDAP[R], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni050B">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 5, 10
CALL[], 7, 6, 114
SRP2[], 5
IP[], 2
MDAP[R], 2
SHP[1], 3
CALL[], 9, 6, 114
CALL[], 33, 11, 114
SHP[2], 16
SHP[2], 25
MDAP[R], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni050C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 29
SHP[2], 37
MDAP[R], 37
CALL[], 11, 3, 114
SHP[2], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni050D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 15, 11, 114
SHP[2], 0
SHP[2], 7
MDAP[R], 7
CALL[], 26, 7, 114
SHP[2], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni050E">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 2, 114
SHP[2], 2
SHP[2], 5
CALL[], 29, 9, 114
SHP[2], 12
SHP[2], 20
MDAP[R], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni050F">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 6, 114
SHP[2], 2
SHP[2], 5
CALL[], 28, 11, 114
SHP[2], 11
SHP[2], 19
MDAP[R], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0510">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 23, 9, 114
SHP[2], 13
MDRP[m&gt;RGr], 17
CALL[], 44, 3, 114
MDRP[m&gt;RGr], 49
SHP[1], 53
SRP2[], 23
IP[], 2
MDAP[R], 2
SHP[1], 63
SRP2[], 63
IP[], 34
IP[], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0511">
/* VTTTalk Unicode 0x511 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 574, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0512">
/* VTTTalk Unicode 0x512 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 627, 0, 0
OFFSET[R], 2026, 1093, 0

    </glyphProgram>

    <glyphProgram name="uni0513">
/* VTTTalk Unicode 0x513 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 648, 0, 0
OFFSET[R], 2026, 852, 0

    </glyphProgram>

    <glyphProgram name="uni0514">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 8
SHP[1], 10
CALL[], 18, 2, 114
SHP[2], 1
SRP1[], 1
SHP[1], 20
CALL[], 22, 2, 114
CALL[], 24, 2, 114
MIAP[R], 28, 8
SLOOP[], 4
IP[], 29, 26, 32, 23
MIAP[R], 31, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0515">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
SHP[2], 21
SRP1[], 21
SHP[1], 20
SHP[1], 33
SRP1[], 33
SHP[1], 24
MIAP[R], 31, 10
SHP[1], 28
SHP[1], 8
SRP1[], 8
SHP[1], 10
SRP1[], 31
SLOOP[], 4
IP[], 29, 26, 32, 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0516">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 22, 8
SHP[1], 4
CALL[], 23, 2, 114
SHP[2], 3
SHP[2], 20
SRP2[], 22
IP[], 9
MDAP[R], 9
SHP[1], 10
SHP[1], 5
SRP1[], 5
SHP[1], 1
SRP1[], 1
SHP[1], 6
SRP1[], 6
SHP[1], 2
SRP1[], 2
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0517">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 5, 6
MIAP[R], 6, 10
MIAP[R], 11, 14
MIAP[R], 14, 6
CALL[], 21, 11, 114
SHP[2], 54
CALL[], 32, 7, 114
SHP[2], 43
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0518">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 21, 2, 114
SHP[2], 11
SHP[2], 26
SRP1[], 26
SHP[1], 10
MDAP[R], 24
SHP[1], 36
SHP[1], 2
SRP1[], 2
SHP[1], 3
SRP1[], 24
IP[], 12
IP[], 6
MDAP[R], 12
MDAP[R], 6
SRP1[], 12
SHP[1], 34
SHP[1], 35
SRP1[], 6
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0519">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
CALL[], 4, 6, 114
SHP[2], 9
SRP2[], 2
IP[], 20
MDAP[R], 20
SHP[1], 1
SHP[1], 17
MDAP[R], 48
SHP[1], 49
CALL[], 30, 11, 114
SHP[2], 67
MIAP[R], 41, 7
SHP[1], 56
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni051A">
/* VTTTalk Unicode 0x51a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 54, 0, 0

    </glyphProgram>

    <glyphProgram name="uni051B">
/* VTTTalk Unicode 0x51b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 86, 0, 0

    </glyphProgram>

    <glyphProgram name="uni051C">
/* VTTTalk Unicode 0x51c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 60, 0, 0

    </glyphProgram>

    <glyphProgram name="uni051D">
/* VTTTalk Unicode 0x51d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 92, 0, 0

    </glyphProgram>

    <glyphProgram name="uni051E">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 8
CALL[], 7, 2, 114
SRP2[], 6
IP[], 10
MDAP[R], 10
SHP[1], 12
SHP[1], 15
CALL[], 13, 2, 114
MIAP[R], 14, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni051F">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 10
SHP[1], 14
CALL[], 7, 6, 114
SHP[2], 13
SRP2[], 6
IP[], 10
MDAP[R], 10
SHP[1], 11
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0520">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 7
MDAP[R], 25
SHP[1], 16
MIAP[R], 40, 8
CALL[], 42, 2, 114
SHP[2], 37
SRP1[], 37
SHP[1], 36
SHP[1], 41
MIAP[R], 50, 8
SHP[1], 52
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0521">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 15, 114
SHP[2], 7
MDAP[R], 25
SHP[1], 16
MIAP[R], 40, 10
CALL[], 42, 6, 114
SHP[2], 37
SRP1[], 37
SHP[1], 41
CALL[], 50, 10, 114
SHP[2], 52
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0522">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 28
SHP[1], 35
MIAP[R], 46, 8
CALL[], 47, 2, 114
SRP2[], 46
IP[], 42
MDAP[R], 42
SHP[1], 43
SRP1[], 43
SHP[1], 17
MDAP[R], 17
SHP[1], 6
MIAP[R], 50, 8
CALL[], 51, 2, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0523">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 16
CALL[], 26, 15, 114
SHP[2], 33
MIAP[R], 44, 10
SHP[1], 48
CALL[], 45, 6, 114
SHP[2], 49
SRP2[], 44
IP[], 40
MDAP[R], 40
SHP[1], 41
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0524">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 8, 8
SHP[1], 4
SRP0[], 4
MDRP[m&gt;RWh], 2
SHP[1], 11
CALL[], 9, 2, 114
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0525">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 8, 10
SHP[1], 4
SRP0[], 4
MDRP[m&gt;RWh], 2
SHP[1], 11
CALL[], 9, 6, 114
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0526">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 1, 8
CALL[], 2, 2, 114
MDAP[R], 8
SHP[1], 23
MIAP[R], 18, 8
SHP[1], 13
MDRP[m&gt;RWh], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0527">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 4, 10
MDRP[m&gt;RWh], 2
SHP[1], 28
MIAP[R], 16, 10
CALL[], 17, 0, 114
CALL[], 22, 7, 114
SHP[2], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0528">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 9
SHP[1], 13
CALL[], 25, 2, 114
MIAP[R], 28, 8
IP[], 20
MDAP[R], 20
SHP[1], 21
CALL[], 29, 2, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0529">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 15, 114
SHP[2], 13
CALL[], 25, 6, 114
MIAP[R], 28, 10
IP[], 20
MDAP[R], 20
SHP[1], 21
CALL[], 29, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni052A">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 8
SHP[1], 32
SRP1[], 32
SHP[1], 25
MIAP[R], 10, 8
MIAP[R], 16, 8
SHP[1], 44
SHP[1], 21
SRP1[], 21
SHP[1], 45
MIAP[R], 20, 9
SHP[1], 24
CALL[], 35, 2, 114
SHP[2], 29
SRP2[], 2
IP[], 6
MDAP[R], 6
SHP[1], 5
SHP[1], 7
SRP1[], 7
SHP[1], 12
SRP1[], 35
SHP[1], 30
SRP1[], 30
SHP[1], 3
SRP1[], 3
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni052B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 30, 6, 114
SHP[2], 14
SHP[2], 35
SHP[2], 3
SRP1[], 3
SHP[1], 9
MIAP[R], 41, 10
SHP[1], 21
SHP[1], 23
SRP1[], 23
SHP[1], 36
SRP1[], 41
SHP[1], 33
SRP1[], 33
SHP[1], 2
SRP1[], 2
SHP[1], 10
SRP1[], 33
IP[], 6
MDAP[R], 6
SHP[1], 7
SHP[1], 11
SRP1[], 11
SHP[1], 12
SRP1[], 41
SHP[1], 42
MDAP[R], 42
SHP[1], 39
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni052C">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 14, 8
SHP[1], 23
SHP[1], 8
SRP1[], 8
SHP[1], 3
SHP[1], 16
SRP1[], 14
SHP[1], 9
MDAP[R], 9
SHP[1], 2
CALL[], 25, 2, 114
SHP[2], 12
SRP1[], 12
SHP[1], 20
SRP1[], 20
SHP[1], 24
SRP1[], 14
IP[], 34
MDAP[R], 34
SHP[1], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni052D">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 3, 10
SHP[1], 4
SRP1[], 4
SHP[1], 11
SRP1[], 3
SHP[1], 16
SRP1[], 16
SHP[1], 8
SRP1[], 8
SHP[1], 15
SRP1[], 15
SHP[1], 12
SRP1[], 16
SHP[1], 17
MDAP[R], 17
SHP[1], 14
CALL[], 26, 6, 114
SHP[2], 0
SRP1[], 0
SHP[1], 5
SRP1[], 5
SHP[1], 10
SHP[1], 1
SRP1[], 1
SHP[1], 6
SRP1[], 17
IP[], 21
RUTG[]
MDAP[R], 21
SHP[1], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni052E">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 9
MIAP[R], 7, 8
SHP[1], 2
MDRP[m&gt;RWh], 5
CALL[], 16, 8, 114
SHP[2], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni052F">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
SHP[2], 9
MIAP[R], 7, 10
SHP[1], 2
MDRP[m&gt;RWh], 5
CALL[], 16, 10, 114
SHP[2], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1AB0">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SMD[], 128
MDRP[m&gt;RBl], 4
SHP[2], 7
SLOOP[], 3
IP[], 6, 12, 0
SHP[1], 14
SRP1[], 14
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1AB1">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 34
SHP[1], 40
SHP[1], 9
SRP1[], 9
SHP[1], 3
SRP1[], 34
SHP[1], 21
SRP1[], 21
SHP[1], 15
SRP1[], 34
SHP[1], 28
MDAP[R], 28
SHP[1], 46
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1AB2">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 16
SHP[2], 20
MDRP[m&gt;RGr], 9
SHP[2], 31
SHP[2], 51
SRP1[], 51
SHP[1], 69
SRP1[], 0
SHP[1], 40
SRP1[], 40
SHP[1], 60
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1AB3">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 17
MIAP[R], 10, 16
SHP[1], 3
SHP[1], 7
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1AB4">
/* VTTTalk Unicode 0x1ab4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 468, -235, 1541
OFFSET[R], 468, 192, 1541
OFFSET[R], 468, -21, 1841

    </glyphProgram>

    <glyphProgram name="uni1AB5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
SHP[1], 23
SHP[1], 2
SRP1[], 2
SHP[1], 14
MDRP[m&gt;RWh], 9
SHP[2], 6
SLOOP[], 8
IP[], 19, 7, 22, 10, 4, 16, 13, 1
SHP[2], 21
SRP1[], 21
SHP[1], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1AB6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 16
SHP[1], 25
SRP1[], 25
SHP[1], 57
SRP1[], 57
SHP[1], 26
SHP[1], 46
SRP1[], 46
SHP[1], 35
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1AB7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 13
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1AB8">
/* VTTTalk Unicode 0x1ab8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 807, -245, 0
OFFSET[R], 807, 100, 0

    </glyphProgram>

    <glyphProgram name="uni1AB8_uni1ABD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 32
SHP[1], 8
SHP[1], 45
SRP1[], 45
SHP[1], 0
SHP[1], 38
SHP[1], 63
SRP1[], 63
SHP[1], 16
SHP[1], 56
SRP1[], 32
SHP[1], 50
SRP1[], 50
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1AB9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1AB9_uni1ABD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 35
SHP[1], 24
SRP1[], 24
SHP[1], 8
SRP1[], 35
SHP[1], 33
SRP1[], 33
SHP[1], 0
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1ABA">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 13
MDAP[R], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1ABA_uni1ABD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 32
SHP[1], 38
SHP[1], 45
SHP[1], 47
MDAP[R], 47
SRP1[], 32
SHP[1], 0
SHP[2], 8
SHP[1], 16
SRP1[], 16
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1ABB">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 8
SHP[1], 9
MDRP[m&gt;RGr], 0
SHP[2], 15
SHP[2], 16
SRP1[], 16
SHP[1], 17
SRP1[], 8
SHP[1], 24
SRP1[], 24
SHP[1], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1ABC">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 8
SHP[1], 9
MDRP[m&gt;RGr], 0
SHP[2], 15
SHP[2], 16
SRP1[], 16
SHP[1], 31
SHP[1], 32
SRP1[], 32
SHP[1], 33
SHP[1], 48
SRP1[], 48
SHP[1], 49
SRP1[], 8
SHP[1], 24
SRP1[], 24
SHP[1], 25
SHP[1], 40
SRP1[], 40
SHP[1], 39
SHP[1], 56
SRP1[], 56
SHP[1], 55
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1ABC.w1">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
SHP[1], 24
SHP[2], 16
SHP[1], 40
SHP[2], 32
SHP[1], 56
SHP[2], 48
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1ABC.w2">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
SHP[1], 24
SHP[2], 16
SHP[1], 40
SHP[2], 32
SHP[1], 56
SHP[2], 48
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1ABC.w3">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 32
SHP[1], 47
SHP[1], 0
SHP[2], 15
SHP[2], 48
SRP1[], 48
SHP[1], 49
SHP[1], 16
SRP1[], 16
SHP[1], 17
SRP1[], 32
SHP[1], 40
MDAP[R], 40
SHP[1], 41
SHP[1], 8
SRP1[], 8
SHP[1], 9
SHP[1], 24
SRP1[], 24
SHP[1], 23
SHP[1], 56
SRP1[], 56
SHP[1], 55
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1ABD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 8
SHP[1], 9
MDRP[m&gt;RGr], 0
SHP[2], 15
SHP[2], 16
SRP1[], 16
SHP[1], 17
SRP1[], 8
SHP[1], 24
SRP1[], 24
SHP[1], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1ABE">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 8
SHP[1], 9
MDRP[m&gt;RGr], 0
SHP[2], 15
SHP[2], 16
SRP1[], 16
SHP[1], 17
SRP1[], 8
SHP[1], 24
SRP1[], 24
SHP[1], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1ABE.w1">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
SHP[1], 24
SHP[2], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1ABE.w2">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
SHP[1], 24
SHP[2], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1ABE.w3">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
SHP[1], 24
SHP[2], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D00">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 5
CALL[], 3, 6, 114
SHP[2], 7
SHP[2], 6
SRP1[], 6
SHP[1], 0
SRP1[], 1
IP[], 12
MDAP[R], 12
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D01">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
MDAP[R], 13
CALL[], 15, 6, 114
SHP[2], 12
SHP[2], 24
SHP[2], 11
SRP1[], 11
SHP[1], 10
SRP1[], 13
IP[], 19
MDAP[R], 19
SHP[1], 20
MDAP[R], 23
SRP1[], 13
IP[], 6
MDAP[R], 6
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D02">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 15, 11, 114
SHP[2], 5
CALL[], 41, 7, 114
SHP[2], 31
SRP1[], 31
SHP[1], 0
SRP1[], 0
SHP[1], 20
SRP1[], 20
SHP[1], 36
SHP[1], 37
CALL[], 51, 7, 114
SHP[2], 87
CALL[], 62, 11, 114
SHP[2], 76
SRP1[], 51
IP[], 71
MDAP[R], 71
SHP[1], 68
SHP[1], 21
SRP1[], 21
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D03">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 24, 6, 114
SHP[2], 21
MIAP[R], 37, 10
SHP[1], 23
SHP[1], 38
IP[], 1
MDAP[R], 1
SHP[1], 0
SRP1[], 0
SHP[1], 10
SHP[1], 49
SRP1[], 49
SHP[1], 7
SRP1[], 1
SHP[1], 9
SRP1[], 9
SHP[1], 6
SHP[1], 48
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D04">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 11, 114
MDRP[m&gt;RGr], 0
SHP[1], 36
CALL[], 16, 7, 114
MDRP[m&gt;RGr], 21
SHP[1], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D05">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 27
MDAP[R], 1
SHP[1], 2
CALL[], 15, 6, 114
SHP[2], 14
SHP[2], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D06">
/* VTTTalk Unicode 0x1d06 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 820, 79, 0
OFFSET[R], 1960, -96, -200

    </glyphProgram>

    <glyphProgram name="uni1D07">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
SHP[1], 6
CALL[], 4, 6, 114
SHP[2], 14
SHP[2], 15
SRP1[], 2
IP[], 10
MDAP[R], 10
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D08">
/* VTTTalk Unicode 0x1d08 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 645, 0, 0

    </glyphProgram>

    <glyphProgram name="uni1D09">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 14
MDRP[m&gt;RWh], 3
SHP[2], 9
MIAP[R], 15, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D0A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 6, 114
CALL[], 7, 11, 114
SHP[2], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D0B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
SHP[2], 9
MDAP[R], 1
SHP[1], 10
IP[], 6
MDAP[R], 6
SHP[1], 7
SHP[1], 11
SRP1[], 11
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D0C">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
SHP[1], 6
CALL[], 4, 6, 114
SHP[2], 8
SRP1[], 8
SHP[1], 9
SHP[1], 10
SRP1[], 10
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D0D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 6, 114
SHP[2], 6
SHP[2], 7
SHP[2], 12
MDAP[R], 3
SHP[1], 8
SHP[1], 11
IP[], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D0E">
/* VTTTalk Unicode 0x1d0e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 646, 0, 0

    </glyphProgram>

    <glyphProgram name="uni1D0F">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 11, 114
SHP[2], 39
CALL[], 17, 7, 114
SHP[2], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D10">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 25, 7, 114
SHP[2], 16
CALL[], 36, 11, 114
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D11">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 18
MDAP[R], 9
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D12">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 4
SHP[1], 23
SRP1[], 23
SHP[1], 24
MDAP[R], 14
SHP[1], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D13">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 22
MDAP[R], 13
SHP[1], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D14">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 7, 114
SHP[2], 36
CALL[], 11, 11, 114
SHP[2], 25
SRP1[], 0
IP[], 17
MDAP[R], 17
SHP[1], 20
CALL[], 49, 11, 114
SHP[2], 82
CALL[], 60, 7, 114
SHP[2], 71
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D15">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 16, 11, 114
SHP[2], 25
CALL[], 50, 7, 114
SHP[2], 39
SHP[2], 45
MDAP[R], 45
SHP[1], 6
SHP[1], 35
SHP[1], 56
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D16">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 20, 7, 114
SHP[2], 7
MDRP[m&gt;RGr], 13
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D17">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 7, 11, 114
SHP[2], 20
MDRP[m&gt;RGr], 14
SHP[2], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D18">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 13
CALL[], 15, 6, 114
SHP[2], 12
SRP1[], 13
IP[], 1
MDAP[R], 1
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D19">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
SHP[1], 7
CALL[], 4, 6, 114
SHP[2], 9
SRP2[], 2
IP[], 19
MDAP[R], 19
SHP[1], 1
SHP[1], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D1A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 6, 114
SHP[2], 27
MIAP[R], 5, 10
SHP[1], 25
IP[], 16
MDAP[R], 16
SHP[1], 15
SRP1[], 15
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D1B">
/* VTTTalk Unicode 0x1d1b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 652, 0, 0

    </glyphProgram>

    <glyphProgram name="uni1D1C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 11, 114
SHP[2], 17
CALL[], 11, 6, 114
SHP[2], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D1D">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 1
SRP1[], 1
SHP[1], 6
SRP1[], 6
SHP[1], 5
MDAP[R], 15
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D1E">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 26
RDTG[]
MDRP[m&gt;RWh], 18
SHP[2], 12
SHP[1], 25
SRP1[], 25
SHP[1], 30
RTG[]
MDAP[R], 39
SHP[1], 40
RDTG[]
MDRP[m&gt;RWh], 0
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D1F">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 1
SRP1[], 1
SHP[1], 6
MDAP[R], 36
SHP[1], 37
SRP2[], 2
IP[], 15
MDAP[R], 15
SHP[1], 16
SHP[1], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D20">
/* VTTTalk Unicode 0x1d20 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 91, 3, 0

    </glyphProgram>

    <glyphProgram name="uni1D21">
/* VTTTalk Unicode 0x1d21 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 92, 3, 0

    </glyphProgram>

    <glyphProgram name="uni1D22">
/* VTTTalk Unicode 0x1d22 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 95, 3, 0

    </glyphProgram>

    <glyphProgram name="uni1D23">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 11, 114
MDRP[m&gt;RGr], 15
SHP[1], 19
CALL[], 29, 6, 114
SRP2[], 10
IP[], 27
MDAP[R], 27
SHP[1], 32
SHP[1], 1
SRP1[], 1
SHP[1], 34
SRP1[], 29
SHP[1], 36
SRP1[], 36
SHP[1], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D24">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 24, 7, 114
SHP[2], 4
CALL[], 53, 11, 114
SHP[2], 33
SRP1[], 24
SLOOP[], 6
IP[], 15, 42, 16, 43, 13, 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D25">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 7, 114
MIAP[R], 20, 11
SHP[1], 13
SRP1[], 13
SHP[1], 10
SRP1[], 10
SHP[1], 23
SHP[1], 36
CALL[], 26, 11, 114
SHP[2], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D26">
/* VTTTalk Unicode 0x1d26 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 642, 2, 0

    </glyphProgram>

    <glyphProgram name="uni1D27">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 1, 10
SHP[1], 5
CALL[], 3, 6, 114
SHP[2], 7
SRP1[], 7
SHP[1], 6
SRP1[], 6
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D28">
/* VTTTalk Unicode 0x1d28 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 651, 0, 0

    </glyphProgram>

    <glyphProgram name="uni1D29">
/* VTTTalk Unicode 0x1d29 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 839, 0, 0

    </glyphProgram>

    <glyphProgram name="uni1D2A">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
CALL[], 17, 6, 114
SHP[2], 3
SRP1[], 3
SHP[1], 4
SRP1[], 2
IP[], 11
MDAP[R], 11
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D2B">
/* VTTTalk Unicode 0x1d2b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 648, 0, 0

    </glyphProgram>

    <glyphProgram name="uni1D2C">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 5
MDAP[R], 3
SHP[1], 7
SHP[1], 6
SRP1[], 6
SHP[1], 0
SRP1[], 2
SRP2[], 3
IP[], 12
MDAP[R], 12
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D2D">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 14
MDAP[R], 24
SHP[1], 3
SHP[1], 13
SHP[1], 23
SRP2[], 1
SLOOP[], 3
IP[], 19, 7, 11
MDAP[R], 19
MDAP[R], 7
MDAP[R], 11
SRP1[], 19
SHP[1], 20
SRP1[], 7
SHP[1], 8
SRP1[], 11
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D2E">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 13
MDAP[R], 15
SHP[1], 12
SRP2[], 13
IP[], 1
IP[], 26
MDAP[R], 1
MDAP[R], 26
SRP1[], 1
SHP[1], 2
SHP[1], 36
SRP1[], 36
SHP[1], 24
SRP1[], 24
SHP[1], 39
SRP1[], 39
SHP[1], 38
SRP1[], 26
SHP[1], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D2F">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 17
MDAP[R], 19
SHP[1], 16
SRP2[], 17
SLOOP[], 4
IP[], 2, 5, 40, 30
MDAP[R], 2
MDAP[R], 5
MDAP[R], 40
MDAP[R], 30
SRP1[], 2
SHP[1], 3
SRP1[], 5
SHP[1], 6
SRP1[], 30
SHP[1], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D30">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 27
MDAP[R], 1
SHP[1], 2
MDAP[R], 15
SHP[1], 14
SHP[1], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D31">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
SHP[1], 6
MDAP[R], 4
SRP2[], 2
IP[], 15
IP[], 10
MDAP[R], 15
MDAP[R], 10
SRP1[], 15
SHP[1], 14
SRP1[], 10
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D32">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
SHP[1], 6
MDAP[R], 4
SRP2[], 1
IP[], 8
IP[], 12
MDAP[R], 8
MDAP[R], 12
SRP1[], 8
SHP[1], 9
SRP1[], 12
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D33">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 35
MDAP[R], 16
SHP[1], 24
SRP2[], 5
IP[], 40
MDAP[R], 40
SHP[1], 41
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D34">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
SHP[1], 8
MDAP[R], 5
SHP[1], 9
SRP2[], 4
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D35">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D36">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
MDAP[R], 1
SRP1[], 7
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D37">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
MDAP[R], 1
SHP[1], 10
IP[], 6
IP[], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D38">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MDAP[R], 4
SRP1[], 2
SHP[1], 3
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D39">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 7
SHP[2], 12
SHP[2], 4
MDAP[R], 5
SHP[1], 10
SHP[1], 14
SRP2[], 4
IP[], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D3A">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 5
SHP[1], 9
MDAP[R], 3
SHP[1], 8
SHP[1], 4
SRP1[], 4
SHP[1], 2
MIAP[R], 10, 18
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D3B">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
SHP[2], 8
MDAP[R], 2
SHP[1], 9
SHP[1], 5
SRP1[], 5
SHP[1], 3
MIAP[R], 11, 18
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D3C">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
MDAP[R], 17
SHP[1], 28
SRP1[], 6
SHP[1], 39
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D3D">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 16
SHP[1], 27
SHP[1], 6
MDAP[R], 6
SHP[1], 37
SHP[1], 46
SRP1[], 46
SHP[1], 56
MDAP[R], 41
SHP[1], 51
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D3E">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 12
MDAP[R], 14
SHP[1], 11
SRP2[], 12
IP[], 1
MDAP[R], 1
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D3F">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 21
MDAP[R], 22
SHP[1], 24
SHP[1], 27
IP[], 11
MDAP[R], 11
SHP[1], 12
SHP[1], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D40">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 0
SRP1[], 1
IP[], 7
MDAP[R], 7
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D41">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
MDAP[R], 0
SRP1[], 6
SHP[1], 17
SHP[2], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D42">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 1
SHP[1], 6
SRP1[], 4
SHP[1], 8
SRP1[], 1
SHP[1], 12
SRP1[], 4
SHP[1], 14
SRP1[], 1
SHP[1], 16
SRP1[], 4
SHP[1], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D43">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 13, 3, 114
SHP[2], 5
SHP[2], 44
RDTG[]
MDAP[R], 44
SHP[1], 23
RTG[]
MDAP[R], 23
SRP1[], 44
SHP[1], 35
IP[], 28
MDAP[R], 28
SHP[1], 51
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D44">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 44, 3, 114
SHP[2], 23
MDAP[R], 23
SHP[2], 35
SHP[2], 13
RDTG[]
MDAP[R], 13
IP[], 51
RTG[]
MDAP[R], 51
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D45">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 3, 114
SHP[2], 38
SHP[2], 43
MDAP[R], 43
MIAP[R], 17, 8
SHP[1], 28
SHP[1], 56
SRP1[], 56
SHP[1], 49
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D46">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 45
SHP[1], 58
SHP[1], 0
SHP[2], 11
CALL[], 74, 3, 114
SHP[2], 67
SHP[2], 37
SRP1[], 37
SHP[1], 28
SRP1[], 45
IP[], 50
MDAP[R], 50
SHP[1], 53
SRP1[], 53
SHP[1], 21
MDAP[R], 21
SHP[1], 44
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D47">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
SHP[1], 3
MDAP[R], 3
SRP1[], 11
SHP[1], 42
CALL[], 22, 3, 114
SHP[2], 1
MDAP[R], 1
SHP[2], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D48">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 11, 3, 114
SHP[2], 0
MDAP[R], 0
SHP[2], 42
MDAP[R], 22
SHP[1], 3
MDAP[R], 3
SRP1[], 22
SHP[1], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D49">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 34
CALL[], 11, 3, 114
SHP[2], 24
SRP2[], 0
IP[], 16
MDAP[R], 16
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D4A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 3, 114
SHP[2], 33
MDAP[R], 11
SHP[1], 24
IP[], 16
MDAP[R], 16
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D4B">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 25
CALL[], 52, 3, 114
SHP[2], 32
SRP2[], 5
IP[], 16
MDAP[R], 16
SHP[1], 42
SHP[1], 41
SRP1[], 41
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D4C">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 25
SHP[1], 5
CALL[], 34, 3, 114
SHP[2], 55
SRP2[], 25
IP[], 14
MDAP[R], 14
SHP[1], 45
SHP[1], 46
SRP1[], 46
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D4D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 25, 3, 114
SHP[2], 0
MDAP[R], 0
SHP[2], 56
MDAP[R], 36
SHP[1], 47
SHP[1], 13
MDAP[R], 13
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D4E">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 7
MDAP[R], 7
SHP[1], 13
CALL[], 3, 2, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D4F">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 10
MIAP[R], 9, 2
SHP[1], 0
MDAP[R], 0
SRP1[], 2
SRP2[], 9
SLOOP[], 4
IP[], 6, 7, 11, 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D50">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 3
SHP[1], 17
SHP[1], 25
MDAP[R], 25
SRP1[], 6
SHP[1], 32
SRP1[], 32
SHP[1], 43
MDAP[R], 23
SHP[1], 12
SRP1[], 12
SHP[1], 38
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D51">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 3
SHP[1], 17
SHP[1], 25
MDAP[R], 25
MDAP[R], 23
SHP[1], 33
MDAP[R], 33
SHP[1], 40
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D52">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 3
SHP[1], 38
MDAP[R], 17
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D53">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 21, 3
SHP[1], 14
MDAP[R], 31
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D54">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 19, 3
SHP[1], 7
SHP[1], 12
MDAP[R], 12
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D55">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 14
MDAP[R], 7
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D56">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 22, 3
SHP[1], 3
MDAP[R], 3
SRP1[], 22
SHP[1], 33
MDAP[R], 11
SHP[1], 42
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D57">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 3, 2
SHP[1], 2
SHP[1], 4
MDAP[R], 4
MDAP[R], 17
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D58">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 17
SHP[1], 25
MDAP[R], 25
MIAP[R], 11, 2
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D59">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 22
SHP[1], 21
SRP1[], 21
SHP[1], 1
SHP[1], 11
MDAP[R], 11
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D5A">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 11
SHP[2], 21
SRP1[], 21
SHP[1], 32
SHP[1], 46
MDAP[R], 46
MIAP[R], 5, 2
SHP[1], 26
SRP1[], 26
SHP[1], 43
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D5B">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 8
SHP[1], 4
MIAP[R], 9, 2
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D5C">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 2
MDAP[R], 20
SHP[1], 13
SHP[1], 26
SRP1[], 26
SHP[1], 23
SHP[1], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D5D">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 26
SHP[1], 44
MDAP[R], 49
SRP2[], 26
IP[], 25
IP[], 9
MDAP[R], 25
MDAP[R], 9
SRP1[], 25
SHP[1], 35
SHP[1], 36
SRP1[], 36
SHP[1], 0
SRP1[], 9
SHP[1], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D5E">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
SRP1[], 3
SHP[1], 12
SRP1[], 12
SHP[1], 8
MIAP[R], 13, 2
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D5F">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
SHP[1], 11
MDAP[R], 28
SHP[1], 47
SRP2[], 4
SLOOP[], 3
IP[], 56, 37, 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D60">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 5, 3
SHP[1], 38
SHP[1], 21
MDAP[R], 21
SHP[1], 22
MDAP[R], 14
SHP[1], 0
MDAP[R], 0
SRP1[], 14
SHP[1], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D61">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 20
MDAP[R], 20
SHP[1], 13
MIAP[R], 4, 2
SHP[1], 3
MDAP[R], 3
SRP1[], 4
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D62">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MDAP[R], 3
MDRP[m&gt;RWh], 13
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D62.ccmp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D63">
/* VTTTalk Unicode 0x1d63 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 357, 0, -851

    </glyphProgram>

    <glyphProgram name="uni1D64">
/* VTTTalk Unicode 0x1d64 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 903, 0, -851

    </glyphProgram>

    <glyphProgram name="uni1D65">
/* VTTTalk Unicode 0x1d65 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 906, 0, -851

    </glyphProgram>

    <glyphProgram name="uni1D66">
/* VTTTalk Unicode 0x1d66 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 908, 0, -846

    </glyphProgram>

    <glyphProgram name="uni1D67">
/* VTTTalk Unicode 0x1d67 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 909, -4, -850

    </glyphProgram>

    <glyphProgram name="uni1D68">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 36
MDAP[R], 16
SHP[1], 26
SHP[1], 42
MDAP[R], 42
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D69">
/* VTTTalk Unicode 0x1d69 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 911, 0, -868

    </glyphProgram>

    <glyphProgram name="uni1D6A">
/* VTTTalk Unicode 0x1d6a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 912, 18, -855

    </glyphProgram>

    <glyphProgram name="uni1D6B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 6, 114
CALL[], 11, 11, 114
SHP[2], 24
CALL[], 17, 6, 114
CALL[], 29, 11, 114
SHP[2], 66
CALL[], 40, 7, 114
SHP[2], 55
SRP2[], 29
IP[], 46
MDAP[R], 46
SHP[1], 49
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D6C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 0, 114
MIAP[R], 4, 10
CALL[], 11, 11, 114
SHP[2], 44
CALL[], 22, 7, 114
SHP[2], 33
MDRP[M&gt;RWh], 54
SHP[2], 72
SHP[2], 62
SRP1[], 62
SHP[1], 63
SMD[], 128
MDRP[m&gt;RGr], 67
SHP[2], 59
SHP[2], 49
SRP1[], 49
SHP[1], 50
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D6D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 0, 114
MIAP[R], 4, 10
CALL[], 11, 7, 114
SHP[2], 43
MDRP[M&gt;RGr], 53
SHP[2], 71
SMD[], 128
MDRP[m&gt;RGr], 66
SHP[2], 48
SRP1[], 48
SHP[1], 49
SHP[2], 58
SRP1[], 58
SHP[1], 61
SRP1[], 61
SHP[1], 62
CALL[], 22, 11, 114
SHP[2], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D6E">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 1, 10
CALL[], 6, 1, 114
SHP[2], 13
CALL[], 21, 6, 114
SHP[2], 20
MDRP[M&gt;RGr], 40
SHP[2], 32
SHP[2], 22
SRP1[], 22
SHP[1], 23
SMD[], 128
MDRP[m&gt;RGr], 27
SHP[2], 45
SHP[2], 35
SRP1[], 35
SHP[1], 36
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D6F">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 32, 10
SHP[1], 48
SRP1[], 48
SHP[1], 71
CALL[], 33, 6, 114
CALL[], 41, 7, 114
SHP[2], 53
SRP2[], 32
IP[], 20
MDAP[R], 20
MDRP[m&gt;RGr], 5
SHP[2], 26
SRP1[], 26
SHP[1], 0
SRP1[], 0
SHP[1], 1
SRP1[], 20
SHP[1], 11
SRP1[], 11
SHP[1], 16
SRP1[], 16
SHP[1], 15
CALL[], 64, 7, 114
SHP[2], 76
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D70">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 30, 10
SHP[1], 46
CALL[], 32, 6, 114
CALL[], 39, 7, 114
SHP[2], 51
SRP2[], 30
IP[], 5
MDAP[R], 5
SHP[1], 25
MDRP[m&gt;RGr], 19
SHP[2], 11
SRP1[], 11
SHP[1], 34
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D71">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 14, 114
CALL[], 3, 6, 114
CALL[], 11, 11, 114
SHP[2], 44
MDRP[M&gt;RGr], 67
SHP[2], 59
MDRP[m&gt;RGr], 54
SHP[2], 72
CALL[], 22, 7, 114
SHP[2], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D72">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 10, 114
CALL[], 3, 6, 114
SRP2[], 2
IP[], 28
MDAP[R], 28
SHP[1], 46
MDRP[m&gt;RGr], 41
SHP[2], 33
CALL[], 20, 7, 114
SHP[2], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D73">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 1, 10
CALL[], 6, 7, 114
SHP[2], 13
SRP2[], 1
IP[], 23
MDAP[R], 23
SHP[1], 41
MDRP[m&gt;RGr], 36
SHP[2], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D74">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 42, 7, 114
SHP[2], 51
CALL[], 69, 11, 114
SHP[2], 78
SRP1[], 42
IP[], 4
MDAP[R], 4
IP[], 28
SRP2[], 42
IP[], 37
SHP[1], 25
MDRP[m&gt;RWh], 18
SHP[2], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D75">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 6, 114
MDRP[m&gt;RWh], 4
CALL[], 17, 11, 114
SHP[2], 10
SRP1[], 3
IP[], 27
MDAP[R], 27
SHP[1], 45
MDRP[m&gt;RGr], 40
SHP[2], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D76">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 32, 10
SHP[1], 29
SRP1[], 29
SHP[1], 33
CALL[], 39, 6, 114
SHP[2], 34
SRP2[], 32
IP[], 5
MDAP[R], 5
SHP[1], 23
MDRP[m&gt;RGr], 18
SHP[2], 10
SRP1[], 39
SHP[1], 38
SRP1[], 38
SHP[1], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D77">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 7, 114
SHP[2], 14
CALL[], 26, 15, 114
SHP[2], 0
MDAP[R], 0
SHP[2], 58
SRP1[], 6
IP[], 37
MDAP[R], 37
SHP[1], 48
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D78">
/* VTTTalk Unicode 0x1d78 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 867, 0, 0

    </glyphProgram>

    <glyphProgram name="uni1D79">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
SHP[2], 2
SHP[2], 4
SRP1[], 4
SHP[1], 39
CALL[], 5, 15, 114
SHP[2], 24
SRP1[], 0
IP[], 15
IP[], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D7A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 7, 6, 114
SHP[2], 6
MDRP[m&gt;RWh], 8
CALL[], 21, 11, 114
SHP[2], 1
MDAP[R], 1
SHP[2], 14
MIAP[R], 28, 10
SHP[1], 43
CALL[], 29, 0, 114
CALL[], 36, 7, 114
SHP[2], 3
MDAP[R], 3
SHP[2], 48
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D7B">
/* VTTTalk Unicode 0x1d7b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 287, -4, 0
OFFSET[R], 1960, -123, -158

    </glyphProgram>

    <glyphProgram name="uni1D7C">
/* VTTTalk Unicode 0x1d7c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 578, 45, 0
OFFSET[R], 1960, -121, -152

    </glyphProgram>

    <glyphProgram name="uni1D7D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 14, 114
CALL[], 15, 11, 114
SHP[2], 48
CALL[], 26, 7, 114
CALL[], 8, 6, 114
SRP1[], 26
SHP[1], 37
SRP2[], 5
IP[], 3
MDAP[R], 3
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D7E">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 6, 114
SHP[2], 16
CALL[], 10, 11, 114
SHP[2], 21
SRP2[], 4
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D7F">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 19, 7, 114
SHP[2], 20
SHP[2], 49
SRP1[], 49
SHP[1], 48
CALL[], 34, 11, 114
SHP[2], 4
SRP2[], 19
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D80">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 15, 114
SHP[2], 13
MIAP[R], 18, 0
MDAP[R], 21
CALL[], 29, 11, 114
SHP[2], 0
SHP[2], 62
CALL[], 40, 7, 114
SHP[2], 51
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D81">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 15, 114
SHP[2], 13
CALL[], 19, 0, 114
MDAP[R], 22
SHP[1], 0
CALL[], 29, 7, 114
SHP[2], 61
CALL[], 40, 11, 114
SHP[2], 51
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D82">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 15, 114
SHP[2], 13
MDAP[R], 19
SHP[1], 0
MIAP[R], 24, 1
SHP[1], 31
CALL[], 39, 6, 114
SHP[2], 38
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D83">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 15, 114
SHP[2], 13
MIAP[R], 19, 10
SHP[1], 0
MIAP[R], 20, 6
MIAP[R], 26, 15
SHP[1], 34
MIAP[R], 46, 7
SHP[1], 78
MIAP[R], 57, 11
SHP[1], 68
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D84">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 15, 114
SHP[2], 13
MIAP[R], 20, 10
CALL[], 21, 0, 114
CALL[], 27, 6, 114
SRP2[], 20
SLOOP[], 5
IP[], 24, 25, 29, 23, 30
MIAP[R], 28, 10
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D85">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 15, 114
SHP[2], 13
MIAP[R], 20, 10
SHP[1], 0
SHP[1], 19
MIAP[R], 21, 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D86">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 15, 114
SHP[2], 13
MIAP[R], 19, 10
CALL[], 22, 6, 114
CALL[], 29, 7, 114
SHP[2], 41
MIAP[R], 36, 10
CALL[], 52, 7, 114
SHP[2], 64
MIAP[R], 59, 10
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D87">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 15, 114
SHP[2], 13
MIAP[R], 19, 10
CALL[], 21, 6, 114
CALL[], 29, 7, 114
SHP[2], 41
MIAP[R], 36, 10
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D88">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 15, 114
SHP[2], 13
CALL[], 19, 14, 114
CALL[], 21, 6, 114
CALL[], 29, 11, 114
SHP[2], 0
SHP[2], 62
CALL[], 40, 7, 114
SHP[2], 51
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D89">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 15, 114
SHP[2], 13
MIAP[R], 19, 10
CALL[], 21, 6, 114
CALL[], 38, 7, 114
SHP[2], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D8A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 15, 114
SHP[2], 13
CALL[], 32, 7, 114
SHP[2], 41
CALL[], 59, 11, 114
SRP1[], 32
IP[], 54
IP[], 27
SHP[2], 68
SRP1[], 68
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D8B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 15, 114
SHP[2], 13
MIAP[R], 19, 10
SHP[1], 0
SHP[1], 21
CALL[], 26, 1, 114
SHP[2], 33
CALL[], 44, 15, 114
SHP[2], 51
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D8C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 15, 114
SHP[2], 13
MIAP[R], 21, 6
MIAP[R], 28, 10
SHP[1], 0
SHP[1], 19
SRP1[], 19
SHP[1], 23
CALL[], 29, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D8D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 15, 114
SHP[2], 13
CALL[], 20, 6, 114
MIAP[R], 26, 10
SHP[1], 0
SHP[1], 24
CALL[], 29, 6, 114
SRP2[], 26
SLOOP[], 4
IP[], 25, 28, 22, 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D8E">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 15, 114
SHP[2], 13
MIAP[R], 20, 10
SHP[1], 24
SHP[1], 21
SRP1[], 21
SHP[1], 0
SHP[1], 25
CALL[], 31, 6, 114
SHP[2], 26
SHP[2], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D8F">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 15, 114
SHP[2], 7
CALL[], 35, 7, 114
SHP[2], 25
MIAP[R], 45, 10
SHP[1], 0
CALL[], 69, 11, 114
SHP[2], 59
SRP1[], 35
IP[], 49
MDAP[R], 49
SHP[1], 48
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D90">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 7, 114
SHP[2], 40
CALL[], 18, 11, 114
SHP[2], 29
CALL[], 45, 6, 114
CALL[], 58, 11, 114
SHP[2], 51
SRP1[], 51
SHP[1], 65
CALL[], 79, 15, 114
SHP[2], 72
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D91">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 15, 15, 114
SHP[2], 7
CALL[], 25, 10, 114
SHP[2], 1
CALL[], 32, 7, 114
SHP[2], 22
SHP[2], 64
SHP[2], 70
CALL[], 43, 11, 114
SHP[2], 54
CALL[], 76, 1, 114
SHP[2], 83
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D92">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 15, 114
SHP[2], 7
CALL[], 20, 11, 114
SHP[2], 56
SRP1[], 56
SHP[1], 0
CALL[], 31, 7, 114
SHP[2], 45
SRP2[], 20
IP[], 37
MDAP[R], 37
SHP[1], 40
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D93">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 15, 114
SHP[2], 7
CALL[], 42, 11, 114
SHP[2], 32
SRP1[], 32
SHP[1], 36
SRP1[], 36
SHP[1], 1
CALL[], 63, 7, 114
SHP[2], 73
SRP2[], 42
IP[], 22
MDAP[R], 22
SHP[1], 52
SHP[1], 83
SRP1[], 83
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D94">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 15, 114
SHP[2], 7
CALL[], 31, 11, 114
SHP[2], 41
SRP1[], 41
SHP[1], 37
SRP1[], 37
SHP[1], 0
CALL[], 74, 7, 114
SHP[2], 64
SRP2[], 31
IP[], 50
MDAP[R], 50
SHP[1], 53
SHP[1], 55
SRP1[], 55
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D95">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 15, 114
SHP[2], 7
CALL[], 22, 7, 114
SHP[2], 59
CALL[], 33, 11, 114
SHP[2], 48
SRP1[], 22
IP[], 41
MDAP[R], 41
SHP[1], 21
SHP[1], 40
SRP1[], 40
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D96">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 15, 114
SHP[2], 7
MIAP[R], 22, 10
SHP[1], 0
CALL[], 23, 6, 114
MDRP[m&gt;RWh], 33
SHP[2], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D96.ccmp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
SHP[1], 23
CALL[], 3, 6, 114
MIAP[R], 17, 15
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D97">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 15, 114
SHP[2], 7
CALL[], 20, 11, 114
SHP[2], 29
SRP1[], 29
SHP[1], 25
SRP1[], 25
SHP[1], 0
CALL[], 49, 7, 114
SHP[2], 40
MDRP[m&gt;RGr], 44
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D98">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 15, 114
SHP[2], 7
CALL[], 26, 1, 114
SHP[2], 33
MDAP[R], 44
SHP[1], 1
SHP[1], 51
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D99">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 15, 114
SHP[2], 7
CALL[], 24, 10, 114
SHP[2], 0
CALL[], 31, 11, 114
SHP[2], 44
CALL[], 37, 6, 114
SHP[2], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D9A">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 14
SHP[1], 7
SRP1[], 7
SHP[1], 38
MDAP[R], 38
SHP[1], 48
SRP1[], 48
SHP[1], 44
SRP1[], 44
SHP[1], 1
CALL[], 20, 6, 114
SHP[2], 27
SRP1[], 27
SHP[1], 22
SRP1[], 14
IP[], 56
MDAP[R], 56
SHP[1], 23
SHP[1], 29
SRP1[], 29
SHP[1], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D9B">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 22
SHP[2], 61
MDAP[R], 61
CALL[], 11, 3, 114
SHP[2], 33
SHP[2], 55
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D9C">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 8
SHP[1], 0
CALL[], 19, 3, 114
SHP[2], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D9D">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 26
SHP[1], 13
SHP[1], 0
SHP[2], 7
SRP1[], 7
SHP[1], 19
CALL[], 37, 3, 114
SHP[2], 46
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D9E">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 12
SHP[1], 37
MDAP[R], 20
SHP[1], 29
SHP[1], 49
SRP1[], 49
SHP[1], 48
SHP[1], 50
SRP1[], 50
SHP[1], 51
SHP[1], 0
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1D9F">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 9
CALL[], 36, 3, 114
SHP[2], 28
SRP2[], 0
SLOOP[], 3
IP[], 17, 44, 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DA0">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
CALL[], 20, 2, 114
SHP[2], 19
SHP[2], 6
RUTG[]
MDAP[R], 6
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DA1">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 21
MDAP[R], 21
SHP[1], 20
MDAP[R], 6
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DA2">
/* VTTTalk Unicode 0x1da2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 892, 0, 0

    </glyphProgram>

    <glyphProgram name="uni1DA3">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
CALL[], 15, 2, 114
SHP[2], 1
SRP2[], 0
IP[], 10
MDAP[R], 10
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DA4">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
CALL[], 3, 2, 114
SHP[2], 13
RUTG[]
MDAP[R], 13
SHP[1], 7
SRP1[], 2
IP[], 18
RTG[]
MDAP[R], 18
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DA4.ccmp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IP[], 6
MDAP[R], 6
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DA5">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
MDAP[R], 13
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DA6">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 7, 3, 114
SHP[2], 3
SHP[2], 6
MDAP[R], 10
SHP[1], 2
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DA7">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 11, 3, 114
SHP[2], 7
SHP[2], 10
MDAP[R], 14
SHP[1], 6
SHP[1], 15
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DA8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 10
SHP[1], 30
SRP1[], 30
SHP[1], 24
MDAP[R], 24
SHP[1], 17
CALL[], 38, 2, 114
SHP[2], 48
RUTG[]
MDAP[R], 48
SHP[1], 42
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DA8.ccmp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 38
MDRP[M&gt;RGr], 10
SHP[2], 30
MDRP[m&gt;RGr], 17
SHP[2], 0
SHP[2], 24
SHP[2], 37
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DA9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
MDAP[R], 15
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DAA">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 5
SHP[1], 18
SRP1[], 18
SHP[1], 11
MDAP[R], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DAB">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 2
SHP[1], 3
CALL[], 7, 2, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DAC">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 2
SHP[1], 17
MDAP[R], 23
SHP[1], 12
SRP1[], 12
SHP[1], 38
SRP1[], 38
SHP[1], 48
SRP1[], 12
SHP[1], 54
MDAP[R], 54
SHP[1], 61
MIAP[R], 24, 2
MIAP[R], 32, 2
SHP[1], 43
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DAD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 31
SHP[1], 42
SHP[1], 6
SRP1[], 6
SHP[1], 17
SHP[1], 21
MDAP[R], 21
MIAP[R], 36, 2
SHP[1], 11
SRP1[], 11
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DAE">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 2
SHP[1], 17
MDAP[R], 12
SHP[1], 21
MDAP[R], 21
SHP[1], 28
MIAP[R], 33, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DAF">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 2
SHP[1], 17
MDAP[R], 23
SHP[1], 37
MDAP[R], 37
SHP[1], 30
MIAP[R], 25, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DB0">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 9
SRP1[], 9
SHP[1], 0
SHP[1], 1
MIAP[R], 7, 2
SHP[1], 2
SHP[1], 3
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DB1">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 2
SHP[1], 38
MDAP[R], 17
SHP[1], 28
SRP2[], 6
IP[], 44
MDAP[R], 44
SHP[1], 45
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DB2">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 48, 2
SHP[1], 79
SHP[1], 85
MDAP[R], 85
SRP1[], 48
SHP[1], 17
SRP1[], 17
SHP[1], 28
MDAP[R], 59
SHP[1], 70
SHP[1], 84
MDAP[R], 84
SRP1[], 59
SHP[1], 6
SRP1[], 6
SHP[1], 37
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DB3">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 12, 2
SHP[1], 20
MDAP[R], 35
SHP[1], 44
SRP1[], 44
SHP[1], 40
MDAP[R], 40
SHP[1], 64
SRP1[], 35
SHP[1], 59
MDAP[R], 59
SHP[1], 52
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DB4">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 14
MDAP[R], 24
SHP[1], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DB5">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 3, 2
SHP[1], 2
SHP[1], 4
MDAP[R], 4
MDAP[R], 17
SHP[1], 10
SHP[1], 23
SHP[1], 29
MDAP[R], 29
SHP[1], 36
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DB6">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 2
SHP[2], 21
MDAP[R], 16
SHP[1], 6
SHP[1], 24
MDAP[R], 24
SRP1[], 16
IP[], 29
MDAP[R], 29
SHP[1], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DB7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 30
SHP[1], 0
MIAP[R], 45, 2
SHP[1], 44
SHP[1], 15
SRP1[], 15
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DB8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 17
MIAP[R], 11, 2
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DB9">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 2
MDAP[R], 12
SHP[1], 0
MIAP[R], 34, 2
SHP[1], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DBA">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 0
MIAP[R], 8, 2
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DBB">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 6
SHP[1], 3
SRP1[], 3
SHP[1], 7
MIAP[R], 13, 2
SHP[1], 8
SHP[1], 12
SRP1[], 12
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DBC">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 6
SHP[1], 3
SRP1[], 3
SHP[1], 7
SHP[1], 30
SRP1[], 2
SHP[1], 25
MDAP[R], 25
SHP[1], 18
MIAP[R], 13, 2
SHP[1], 8
SHP[1], 12
SRP1[], 12
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DBD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 1
SHP[1], 6
SHP[1], 3
SRP1[], 3
SHP[1], 7
SHP[1], 15
SRP1[], 2
SHP[1], 30
SRP1[], 30
SHP[1], 29
MIAP[R], 13, 2
SHP[1], 4
SHP[1], 8
SHP[1], 12
MIAP[R], 43, 8
SHP[1], 36
MDAP[R], 36
SHP[1], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DBE">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 2
SHP[2], 2
SHP[2], 7
MDAP[R], 17
SHP[1], 25
IP[], 33
MDAP[R], 33
SHP[1], 4
SHP[1], 9
SRP1[], 9
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DBF">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 22
MIAP[R], 11, 3
SHP[1], 33
IP[], 45
MDAP[R], 45
SHP[1], 46
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DC0">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 13
SHP[1], 7
SHP[1], 2
RUTG[]
MDAP[R], 2
SMD[], 128
RTG[]
MDRP[m&gt;RBl], 3
SHP[1], 25
MDAP[R], 25
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DC1">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
SHP[1], 3
SHP[1], 15
RUTG[]
MDAP[R], 15
SMD[], 128
RTG[]
MDRP[m&gt;RBl], 13
SHP[1], 25
MDAP[R], 25
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DC2">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 50
MDRP[m&gt;RGr], 27
SHP[2], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DC3">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 2
SHP[1], 3
SHP[1], 6
SHP[1], 0
SHP[2], 1
SHP[1], 5
SRP1[], 5
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DC4">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
MDRP[m&gt;RWh], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DC5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 0
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DC6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 2
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DC7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
SHP[1], 1
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DC8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 4
SMD[], 128
MDRP[m&gt;RBl], 0
SHP[2], 7
IP[], 3
IP[], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DC9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 4
SMD[], 128
MDRP[m&gt;RBl], 9
SHP[2], 7
IP[], 3
IP[], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DCA">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
MDRP[m&gt;RBl], 2
SHP[1], 18
MDAP[R], 18
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DCB">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 15
SRP1[], 15
SHP[1], 1
SRP1[], 1
SHP[1], 12
MDAP[R], 12
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DCC">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 4
SRP1[], 4
SHP[1], 13
SRP1[], 13
SHP[1], 10
MDAP[R], 10
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DCD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 8
SMD[], 128
MDRP[m&gt;RBl], 5
SHP[2], 3
IP[], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DCE">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 15
SMD[], 192
MDRP[m&gt;RGr], 0
SHP[2], 1
SHP[1], 8
SRP2[], 8
IP[], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DCF">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 18
SHP[1], 6
SHP[1], 2
MDAP[R], 2
SHP[1], 3
SRP1[], 18
SHP[1], 7
SRP1[], 7
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DD0">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RGr], 30
SHP[2], 34
SHP[2], 37
SHP[2], 18
SRP1[], 18
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DD1">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 35
SHP[1], 22
SHP[1], 7
SRP1[], 7
SHP[1], 6
MDRP[m&gt;RBl], 15
SHP[2], 0
SHP[2], 29
SRP1[], 29
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DD2">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 8
SHP[1], 27
SHP[1], 17
MDAP[R], 17
SRP2[], 8
IP[], 0
MDAP[R], 0
SHP[1], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DD3">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
SHP[1], 11
SMD[], 128
RUTG[]
MDRP[m&gt;RBl], 7
SHP[2], 14
SHP[2], 0
SRP1[], 0
SHP[1], 21
SRP1[], 4
SHP[1], 18
SRP1[], 18
SHP[1], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DD4">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
SHP[1], 49
SMD[], 192
MDRP[m&gt;RGr], 32
SHP[2], 40
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DD5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
SHP[1], 4
SMD[], 192
MDRP[m&gt;RGr], 32
IP[], 18
IP[], 39
SHP[2], 40
SRP1[], 40
SHP[1], 58
SRP1[], 11
SHP[1], 49
SRP1[], 49
SHP[1], 67
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DD6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 16
SHP[1], 1
MDAP[R], 1
SRP1[], 16
SHP[1], 9
SMD[], 192
SRP0[], 16
MDRP[m&gt;RGr], 43
SHP[2], 24
MDAP[R], 24
SHP[1], 4
MDAP[R], 4
SRP1[], 16
IP[], 29
IP[], 50
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DD7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 28
SHP[1], 35
MDRP[m&gt;RGr], 19
SHP[2], 44
SHP[2], 0
SRP1[], 0
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DD8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
SHP[1], 10
MDAP[R], 10
SHP[1], 35
SRP2[], 1
IP[], 18
MDAP[R], 18
SHP[1], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DD9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
SHP[1], 10
MDAP[R], 10
SHP[1], 35
SRP2[], 1
IP[], 18
MDAP[R], 18
SHP[1], 27
SHP[1], 45
SRP1[], 45
SHP[1], 46
SHP[2], 47
SRP1[], 47
SHP[1], 44
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DDA">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 27
SHP[1], 12
MDAP[R], 12
SRP1[], 27
SHP[1], 45
SMD[], 192
SRP0[], 27
MDRP[m&gt;RGr], 18
SHP[2], 37
SHP[2], 7
RDTG[]
MDAP[R], 7
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DDB">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 8
SHP[1], 15
SMD[], 192
MDRP[m&gt;RGr], 0
SHP[2], 23
IP[], 28
IP[], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DDC">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RWh], 0
SMD[], 192
MDRP[m&gt;RGr], 1
SHP[2], 10
SLOOP[], 4
IP[], 6, 7, 11, 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DDD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DDE">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SMD[], 192
MDRP[m&gt;RBl], 6
SHP[2], 2
SRP1[], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DDF">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 10
SHP[1], 5
SRP1[], 5
SHP[1], 1
SRP1[], 1
SHP[1], 12
SMD[], 192
MDRP[m&gt;RBl], 9
SHP[2], 4
SRP1[], 4
SHP[1], 0
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DE0">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 10
SHP[1], 4
MDAP[R], 4
SMD[], 192
SRP0[], 10
MDRP[m&gt;RGr], 2
SHP[2], 16
SHP[1], 21
SRP1[], 21
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DE1">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 2
SHP[1], 3
SHP[1], 11
SMD[], 192
MDRP[m&gt;RBl], 6
SHP[2], 9
SRP1[], 9
SHP[1], 0
SRP1[], 0
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DE2">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 13
SHP[1], 10
SMD[], 192
MDRP[m&gt;RBl], 12
SHP[2], 39
SLOOP[], 4
IP[], 1, 29, 30, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DE3">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
SHP[1], 19
SMD[], 192
MDRP[m&gt;RGr], 22
SLOOP[], 4
IP[], 11, 23, 12, 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DE4">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 12
SMD[], 192
MDRP[m&gt;RGr], 34
IP[], 30
IP[], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DE5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 5
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DE6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 13
SHP[1], 8
SMD[], 192
MDRP[m&gt;RGr], 2
SHP[2], 5
SHP[2], 3
SRP1[], 3
SHP[1], 7
SRP1[], 13
SHP[1], 12
SRP1[], 12
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DE7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
SHP[1], 28
SHP[1], 37
MDAP[R], 37
SMD[], 192
SRP0[], 9
MDRP[m&gt;RGr], 0
SHP[2], 19
SHP[2], 49
MDAP[R], 49
SHP[1], 42
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DE8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 14
SHP[1], 2
MDAP[R], 2
SRP1[], 14
SHP[1], 32
SMD[], 192
SRP0[], 14
MDRP[m&gt;RGr], 5
SHP[2], 4
MDAP[R], 4
SHP[2], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DE9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 23
SHP[1], 39
SHP[1], 7
MDAP[R], 7
SHP[1], 15
SHP[1], 43
MDAP[R], 43
SRP1[], 7
SRP2[], 23
SLOOP[], 4
IP[], 22, 31, 0, 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DEA">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 29
SHP[1], 22
SMD[], 192
MDRP[m&gt;RGr], 0
SHP[2], 13
IP[], 7
IP[], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DEB">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 2
SRP1[], 2
SHP[1], 5
MDAP[R], 5
SRP1[], 3
SHP[1], 9
MDAP[R], 9
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DEC">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 44
MDAP[R], 47
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DED">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 13
SHP[1], 31
SMD[], 192
MDRP[m&gt;RGr], 4
SHP[2], 22
SHP[2], 2
SRP1[], 2
SHP[1], 1
SHP[2], 3
SRP1[], 3
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DEE">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 4
MDAP[R], 4
SRP1[], 5
SHP[1], 23
SMD[], 192
SRP0[], 5
MDRP[m&gt;RGr], 14
SHP[2], 1
MDAP[R], 1
SHP[2], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DEF">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 12
MDAP[R], 21
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DF0">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 19
SHP[1], 5
SMD[], 192
MDRP[m&gt;RGr], 14
SHP[2], 8
MDAP[R], 8
SHP[2], 25
SHP[2], 2
SRP1[], 2
SHP[1], 1
SHP[2], 3
SRP1[], 3
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DF1">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 10
SHP[1], 12
SHP[1], 1
SRP1[], 1
SHP[1], 21
SMD[], 192
MDRP[m&gt;RBl], 9
SHP[2], 5
SRP1[], 5
SHP[1], 19
SRP1[], 19
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DF2">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 35
SHP[1], 28
SHP[1], 9
RUTG[]
MDAP[R], 9
SHP[1], 3
SHP[1], 21
SRP1[], 21
SHP[1], 15
SMD[], 192
RTG[]
SRP0[], 35
MDRP[m&gt;RGr], 62
SHP[2], 43
MDAP[R], 43
SHP[2], 55
SRP1[], 35
IP[], 48
IP[], 69
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DF3">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 33
SHP[1], 51
SHP[1], 9
RUTG[]
MDAP[R], 9
SHP[1], 3
SHP[1], 21
SRP1[], 21
SHP[1], 15
SMD[], 192
RTG[]
SRP0[], 33
MDRP[m&gt;RGr], 24
SHP[2], 42
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DF4">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 39
SHP[1], 25
SHP[1], 9
RUTG[]
MDAP[R], 9
SHP[1], 3
SHP[1], 21
SRP1[], 21
SHP[1], 15
SMD[], 192
RTG[]
SRP0[], 39
MDRP[m&gt;RGr], 34
SHP[2], 28
MDAP[R], 28
SHP[2], 45
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DF5">
/* VTTTalk Unicode 0x1df5 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 389, -870, 991

    </glyphProgram>

    <glyphProgram name="uni1DFC">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 17
SHP[1], 6
SMD[], 128
MDRP[m&gt;RGr], 11
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DFD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 17
SHP[1], 0
SHP[1], 9
MDRP[M&gt;RBl], 4
SHP[2], 12
SHP[2], 22
MDRP[m&gt;RWh], 42
MDAP[R], 42
SHP[2], 25
SHP[2], 34
SHP[2], 29
MDAP[R], 29
SHP[1], 37
SHP[1], 47
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1DFE">
/* VTTTalk Unicode 0x1dfe */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 371, -1002, 583

    </glyphProgram>

    <glyphProgram name="uni1DFF">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 13
SHP[1], 15
MDRP[m&gt;RBl], 18
SHP[2], 12
SHP[2], 4
RUTG[]
MDAP[R], 4
SHP[1], 1
SHP[1], 2
SHP[1], 3
SHP[1], 7
SHP[1], 8
RTG[]
MDRP[m&gt;RWh], 5
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E00">
/* VTTTalk Unicode 0x1e00 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 420, 384, 1
SVTCA[Y]
CALL[], 17, 5, 1, 1, -75, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1E01">
/* VTTTalk Unicode 0x1e01 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 420, 200, 1
SVTCA[Y]
CALL[], 62, 49, 1, 1, -55, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E02">
/* VTTTalk Unicode 0x1e02 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 394, 355, 322
SVTCA[Y]
CALL[], 58, 15, 1, 1, 129, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E03">
/* VTTTalk Unicode 0x1e03 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 394, 383, 321
SVTCA[Y]
CALL[], 57, 0, 1, 1, 48, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E04">
/* VTTTalk Unicode 0x1e04 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 468, 1210, 10
SVTCA[Y]
CALL[], 52, 27, 1, 1, -129, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E05">
/* VTTTalk Unicode 0x1e05 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 468, 1195, -10
SVTCA[Y]
CALL[], 51, 4, 1, 1, -149, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E06">
/* VTTTalk Unicode 0x1e06 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0
OFFSET[R], 482, 1198, 10
SVTCA[Y]
CALL[], 52, 27, 1, 1, -145, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E07">
/* VTTTalk Unicode 0x1e07 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 482, 1183, -10
SVTCA[Y]
CALL[], 51, 4, 1, 1, -165, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E08">
/* VTTTalk Unicode 0x1e08 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 40, 0, 0
OFFSET[R], 122, 467, -10
OFFSET[R], 118, 455, 343
SVTCA[Y]
CALL[], 40, 5, 0, 0, 10, 86
SHC[2], 1
CALL[], 60, 16, 1, 1, 109, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E09">
/* VTTTalk Unicode 0x1e09 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 72, 0, 0
OFFSET[R], 122, 320, -10
OFFSET[R], 118, 308, 0
SVTCA[Y]
CALL[], 40, 9, 0, 0, 10, 86
SHC[2], 1
CALL[], 60, 20, 1, 1, 140, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E0A">
/* VTTTalk Unicode 0x1e0a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 394, 358, 322
SVTCA[Y]
CALL[], 40, 30, 1, 1, 129, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E0B">
/* VTTTalk Unicode 0x1e0b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 73, 0, 0
OFFSET[R], 394, 298, 322
SVTCA[Y]
CALL[], 57, 11, 1, 1, 483, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E0C">
/* VTTTalk Unicode 0x1e0c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 468, 1210, 10
SVTCA[Y]
CALL[], 34, 29, 1, 1, -129, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E0D">
/* VTTTalk Unicode 0x1e0d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 73, 0, 0
OFFSET[R], 468, 1214, 0
SVTCA[Y]
CALL[], 51, 22, 1, 1, -119, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E0E">
/* VTTTalk Unicode 0x1e0e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 482, 1198, 10
SVTCA[Y]
CALL[], 34, 29, 1, 1, -145, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E0F">
/* VTTTalk Unicode 0x1e0f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 73, 0, 0
OFFSET[R], 482, 1202, 0
SVTCA[Y]
CALL[], 51, 22, 1, 1, -135, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E10">
/* VTTTalk Unicode 0x1e10 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 1832, 357, -344
SVTCA[Y]
CALL[], 40, 29, 1, 1, -105, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E11">
/* VTTTalk Unicode 0x1e11 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 73, 0, 0
OFFSET[R], 1832, 361, -354
SVTCA[Y]
CALL[], 57, 22, 1, 1, -95, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E12">
/* VTTTalk Unicode 0x1e12 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 41, 0, 0
OFFSET[R], 478, 1198, 10
SVTCA[Y]
CALL[], 39, 29, 1, 1, -110, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E13">
/* VTTTalk Unicode 0x1e13 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 73, 0, 0
OFFSET[R], 478, 1202, 0
SVTCA[Y]
CALL[], 56, 22, 1, 1, -100, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E14">
/* VTTTalk Unicode 0x1e14 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 1982, 1204, 374
SVTCA[Y]
CALL[], 22, 7, 1, 1, 123, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1E15">
/* VTTTalk Unicode 0x1e15 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 2262, 1150, 8
SVTCA[Y]
CALL[], 46, 11, 1, 1, 209, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E16">
/* VTTTalk Unicode 0x1e16 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 1983, 1204, 374
SVTCA[Y]
CALL[], 18, 7, 1, 1, 122, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1E17">
/* VTTTalk Unicode 0x1e17 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 2265, 1150, 8
SVTCA[Y]
CALL[], 46, 11, 1, 1, 209, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E18">
/* VTTTalk Unicode 0x1e18 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 478, 1204, 10
SVTCA[Y]
CALL[], 24, 2, 1, 1, -110, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1E19">
/* VTTTalk Unicode 0x1e19 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 478, 1153, 0
SVTCA[Y]
CALL[], 52, 0, 1, 1, -100, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E1A">
/* VTTTalk Unicode 0x1e1a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 481, 1204, 10
SVTCA[Y]
CALL[], 17, 2, 1, 1, -108, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1E1B">
/* VTTTalk Unicode 0x1e1b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 481, 1153, 0
SVTCA[Y]
CALL[], 45, 0, 1, 1, -98, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E1C">
/* VTTTalk Unicode 0x1e1c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 122, 406, 10
OFFSET[R], 393, 190, 322
SVTCA[Y]
CALL[], 16, 2, 0, 0, 10, 86
SHC[2], 4
CALL[], 41, 7, 1, 1, 94, 86
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1E1D">
/* VTTTalk Unicode 0x1e1d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 122, 355, 0
OFFSET[R], 393, 136, 0
SVTCA[Y]
CALL[], 44, 0, 0, 0, 20, 86
SHC[2], 1
CALL[], 69, 11, 1, 1, 126, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E1E">
/* VTTTalk Unicode 0x1e1e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 43, 0, 0
OFFSET[R], 394, 368, 322
SVTCA[Y]
CALL[], 21, 3, 1, 1, 129, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E1F">
/* VTTTalk Unicode 0x1e1f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 75, 0, 0
OFFSET[R], 394, 251, 464
SVTCA[Y]
CALL[], 31, 6, 1, 1, 170, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E20">
/* VTTTalk Unicode 0x1e20 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 44, 0, 0
OFFSET[R], 113, 199, 351
SVTCA[Y]
CALL[], 46, 16, 1, 1, 178, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E21">
/* VTTTalk Unicode 0x1e21 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 76, 0, 0
OFFSET[R], 113, 83, 8
SVTCA[Y]
CALL[], 65, 26, 1, 1, 209, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E22">
/* VTTTalk Unicode 0x1e22 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 394, 461, 322
SVTCA[Y]
CALL[], 21, 11, 1, 1, 129, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E23">
/* VTTTalk Unicode 0x1e23 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 77, 0, 0
OFFSET[R], 394, 250, 321
SVTCA[Y]
CALL[], 36, 3, 1, 1, 48, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E24">
/* VTTTalk Unicode 0x1e24 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 468, 1311, 10
SVTCA[Y]
CALL[], 15, 10, 1, 1, -129, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E25">
/* VTTTalk Unicode 0x1e25 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 77, 0, 0
OFFSET[R], 468, 1185, 10
SVTCA[Y]
CALL[], 30, 2, 1, 1, -129, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E26">
/* VTTTalk Unicode 0x1e26 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 107, 289, 322
SVTCA[Y]
CALL[], 33, 11, 1, 1, 131, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1E27">
/* VTTTalk Unicode 0x1e27 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 77, 0, 0
OFFSET[R], 107, 78, 321
SVTCA[Y]
CALL[], 48, 3, 1, 1, 50, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E28">
/* VTTTalk Unicode 0x1e28 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 122, 49, 0
SVTCA[Y]
CALL[], 12, 6, 1, 0, 0, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E29">
/* VTTTalk Unicode 0x1e29 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 77, 0, 0
OFFSET[R], 122, 14, 0
SVTCA[Y]
CALL[], 27, 2, 1, 0, 0, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E2A">
/* VTTTalk Unicode 0x1e2a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 479, 1299, 10
SVTCA[Y]
CALL[], 12, 10, 1, 1, -86, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E2B">
/* VTTTalk Unicode 0x1e2b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 77, 0, 0
OFFSET[R], 479, 1173, 10
SVTCA[Y]
CALL[], 27, 2, 1, 1, -86, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E2C">
/* VTTTalk Unicode 0x1e2c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 46, 94, 0
OFFSET[R], 397, -113, -1610
SVTCA[Y]
CALL[], 5, 2, 1, 1, -109, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E2D">
/* VTTTalk Unicode 0x1e2d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 78, 119, 0
OFFSET[R], 397, -118, -1609
SVTCA[Y]
CALL[], 17, 2, 1, 1, -108, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E2D.ccmp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 142, 0, 0
OFFSET[R], 481, 834, 10
SVTCA[Y]
CALL[], 5, 2, 1, 1, -108, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E2E">
/* VTTTalk Unicode 0x1e2e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 46, 82, 0
OFFSET[R], 1977, 946, 341
SVTCA[Y]
CALL[], 29, 3, 1, 1, 130, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E2F">
/* VTTTalk Unicode 0x1e2f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 142, 82, 0
OFFSET[R], 2259, 919, -2
SVTCA[Y]
CALL[], 25, 3, 1, 1, 181, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E30">
/* VTTTalk Unicode 0x1e30 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 48, 0, 0
OFFSET[R], 118, 380, 305
SVTCA[Y]
CALL[], 14, 3, 1, 1, 91, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E31">
/* VTTTalk Unicode 0x1e31 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 80, 0, 0
OFFSET[R], 118, 324, 321
SVTCA[Y]
CALL[], 14, 3, 1, 0, 27, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E32">
/* VTTTalk Unicode 0x1e32 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 48, 0, 0
OFFSET[R], 468, 1257, 90
SVTCA[Y]
CALL[], 17, 2, 1, 1, -49, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E33">
/* VTTTalk Unicode 0x1e33 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 80, 0, 0
OFFSET[R], 468, 1126, 71
SVTCA[Y]
CALL[], 17, 2, 1, 1, -68, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E34">
/* VTTTalk Unicode 0x1e34 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 48, 0, 0
OFFSET[R], 482, 1245, 90
SVTCA[Y]
CALL[], 17, 2, 1, 1, -65, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E35">
/* VTTTalk Unicode 0x1e35 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 80, 0, 0
OFFSET[R], 482, 1114, 71
SVTCA[Y]
CALL[], 17, 2, 1, 1, -84, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E36">
/* VTTTalk Unicode 0x1e36 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 468, 1217, 10
SVTCA[Y]
CALL[], 11, 2, 1, 1, -129, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E37">
/* VTTTalk Unicode 0x1e37 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 468, 846, 10
SVTCA[Y]
CALL[], 7, 2, 1, 1, -129, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E38">
/* VTTTalk Unicode 0x1e38 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 468, 1217, 10
OFFSET[R], 113, -209, 314
SVTCA[Y]
CALL[], 11, 2, 1, 1, -129, 86
SHC[2], 2
CALL[], 22, 7, 1, 1, 161, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E39">
/* VTTTalk Unicode 0x1e39 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 468, 846, 10
OFFSET[R], 113, -224, 415
SVTCA[Y]
CALL[], 7, 2, 1, 1, -129, 86
SHC[2], 1
CALL[], 18, 3, 1, 1, 182, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E3A">
/* VTTTalk Unicode 0x1e3a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 482, 1205, 10
SVTCA[Y]
CALL[], 11, 2, 1, 1, -145, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E3B">
/* VTTTalk Unicode 0x1e3b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 482, 834, 10
SVTCA[Y]
CALL[], 7, 2, 1, 1, -145, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E3C">
/* VTTTalk Unicode 0x1e3c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 49, 0, 0
OFFSET[R], 478, 1205, 10
SVTCA[Y]
CALL[], 16, 2, 1, 1, -110, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E3D">
/* VTTTalk Unicode 0x1e3d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 81, 0, 0
OFFSET[R], 478, 834, 10
SVTCA[Y]
CALL[], 12, 2, 1, 1, -110, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E3E">
/* VTTTalk Unicode 0x1e3e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 50, 0, 0
OFFSET[R], 118, 665, 311
SVTCA[Y]
CALL[], 17, 0, 1, 1, 97, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E3F">
/* VTTTalk Unicode 0x1e3f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 82, 0, 0
OFFSET[R], 118, 686, 0
SVTCA[Y]
CALL[], 51, 3, 1, 1, 160, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E40">
/* VTTTalk Unicode 0x1e40 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 50, 0, 0
OFFSET[R], 394, 639, 311
SVTCA[Y]
CALL[], 26, 3, 1, 1, 118, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E41">
/* VTTTalk Unicode 0x1e41 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 82, 0, 0
OFFSET[R], 394, 660, 0
SVTCA[Y]
CALL[], 60, 3, 1, 1, 181, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E42">
/* VTTTalk Unicode 0x1e42 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 50, 0, 0
OFFSET[R], 468, 1490, 10
SVTCA[Y]
CALL[], 20, 6, 1, 1, -129, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E43">
/* VTTTalk Unicode 0x1e43 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 82, 0, 0
OFFSET[R], 468, 1494, 10
SVTCA[Y]
CALL[], 54, 2, 1, 1, -129, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E44">
/* VTTTalk Unicode 0x1e44 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 51, 0, 0
OFFSET[R], 394, 475, 311
SVTCA[Y]
CALL[], 19, 9, 1, 1, 118, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E45">
/* VTTTalk Unicode 0x1e45 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 83, 0, 0
OFFSET[R], 394, 322, 0
SVTCA[Y]
CALL[], 37, 3, 1, 1, 181, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E46">
/* VTTTalk Unicode 0x1e46 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 51, 0, 0
OFFSET[R], 468, 1317, 10
SVTCA[Y]
CALL[], 13, 2, 1, 1, -129, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E47">
/* VTTTalk Unicode 0x1e47 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 83, 0, 0
OFFSET[R], 468, 1160, 10
SVTCA[Y]
CALL[], 31, 2, 1, 1, -129, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E48">
/* VTTTalk Unicode 0x1e48 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 51, 0, 0
OFFSET[R], 482, 1305, 10
SVTCA[Y]
CALL[], 13, 5, 1, 1, -145, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E49">
/* VTTTalk Unicode 0x1e49 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 83, 0, 0
OFFSET[R], 482, 1148, 10
SVTCA[Y]
CALL[], 31, 2, 1, 1, -145, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E4A">
/* VTTTalk Unicode 0x1e4a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 51, 0, 0
OFFSET[R], 478, 1305, 10
SVTCA[Y]
CALL[], 18, 2, 1, 1, -110, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E4B">
/* VTTTalk Unicode 0x1e4b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 83, 0, 0
OFFSET[R], 478, 1148, 10
SVTCA[Y]
CALL[], 36, 2, 1, 1, -110, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E4C">
/* VTTTalk Unicode 0x1e4c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 1981, 1292, 340
SVTCA[Y]
CALL[], 49, 17, 1, 1, 90, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E4D">
/* VTTTalk Unicode 0x1e4d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 2268, 1160, 4
SVTCA[Y]
CALL[], 58, 6, 1, 1, 150, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E4E">
/* VTTTalk Unicode 0x1e4e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 1996, 1292, 340
SVTCA[Y]
CALL[], 49, 17, 1, 1, 91, 86
SHC[2], 2
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1E4F">
/* VTTTalk Unicode 0x1e4f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 2258, 1160, 4
SVTCA[Y]
CALL[], 82, 6, 1, 1, 150, 86
SHC[2], 2
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1E50">
/* VTTTalk Unicode 0x1e50 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 1982, 1292, 365
SVTCA[Y]
CALL[], 50, 17, 1, 1, 94, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E51">
/* VTTTalk Unicode 0x1e51 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 2262, 1160, 8
SVTCA[Y]
CALL[], 46, 6, 1, 1, 209, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E52">
/* VTTTalk Unicode 0x1e52 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 1983, 1292, 365
SVTCA[Y]
CALL[], 46, 17, 1, 1, 93, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E53">
/* VTTTalk Unicode 0x1e53 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 2265, 1160, 8
SVTCA[Y]
CALL[], 46, 6, 1, 1, 209, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E54">
/* VTTTalk Unicode 0x1e54 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 53, 0, 0
OFFSET[R], 118, 381, 322
SVTCA[Y]
CALL[], 24, 15, 1, 1, 108, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E55">
/* VTTTalk Unicode 0x1e55 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 85, 0, 0
OFFSET[R], 118, 404, -10
SVTCA[Y]
CALL[], 48, 3, 1, 1, 150, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E56">
/* VTTTalk Unicode 0x1e56 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 53, 0, 0
OFFSET[R], 394, 355, 322
SVTCA[Y]
CALL[], 33, 15, 1, 1, 129, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E57">
/* VTTTalk Unicode 0x1e57 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 85, 0, 0
OFFSET[R], 394, 378, -10
SVTCA[Y]
CALL[], 57, 3, 1, 1, 171, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E58">
/* VTTTalk Unicode 0x1e58 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 55, 0, 0
OFFSET[R], 394, 359, 311
SVTCA[Y]
CALL[], 39, 0, 1, 1, 118, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E59">
/* VTTTalk Unicode 0x1e59 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 394, 157, 0
SVTCA[Y]
CALL[], 32, 3, 1, 1, 181, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E5A">
/* VTTTalk Unicode 0x1e5a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 55, 0, 0
OFFSET[R], 468, 1208, 10
SVTCA[Y]
CALL[], 33, 24, 1, 1, -129, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E5B">
/* VTTTalk Unicode 0x1e5b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 468, 843, 11
SVTCA[Y]
CALL[], 26, 2, 1, 1, -128, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E5C">
/* VTTTalk Unicode 0x1e5c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 55, 0, 0
OFFSET[R], 468, 1208, 10
OFFSET[R], 113, 137, 319
SVTCA[Y]
CALL[], 33, 24, 1, 1, -129, 86
SHC[2], 2
CALL[], 44, 0, 1, 1, 166, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E5D">
/* VTTTalk Unicode 0x1e5d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 468, 843, 11
OFFSET[R], 113, -65, 8
SVTCA[Y]
CALL[], 26, 2, 1, 1, -128, 86
SHC[2], 2
CALL[], 37, 3, 1, 1, 229, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E5E">
/* VTTTalk Unicode 0x1e5e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 55, 0, 0
OFFSET[R], 482, 1196, 10
SVTCA[Y]
CALL[], 33, 24, 1, 1, -145, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E5F">
/* VTTTalk Unicode 0x1e5f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 87, 0, 0
OFFSET[R], 482, 831, 11
SVTCA[Y]
CALL[], 26, 2, 1, 1, -144, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E60">
/* VTTTalk Unicode 0x1e60 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 56, 0, 0
OFFSET[R], 394, 371, 313
SVTCA[Y]
CALL[], 67, 15, 1, 1, 100, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E61">
/* VTTTalk Unicode 0x1e61 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 88, 0, 0
OFFSET[R], 394, 311, 0
SVTCA[Y]
CALL[], 63, 14, 1, 1, 161, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E62">
/* VTTTalk Unicode 0x1e62 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 56, 0, 0
OFFSET[R], 468, 1225, -1
SVTCA[Y]
CALL[], 61, 43, 1, 1, -120, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E63">
/* VTTTalk Unicode 0x1e63 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 88, 0, 0
OFFSET[R], 468, 1159, -10
SVTCA[Y]
CALL[], 57, 41, 1, 1, -129, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E64">
/* VTTTalk Unicode 0x1e64 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 56, 0, 0
OFFSET[R], 1985, 1207, 328
SVTCA[Y]
CALL[], 58, 15, 1, 1, 103, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E65">
/* VTTTalk Unicode 0x1e65 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 88, 0, 0
OFFSET[R], 2257, 1147, 0
SVTCA[Y]
CALL[], 54, 14, 1, 1, 140, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E66">
/* VTTTalk Unicode 0x1e66 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 56, 0, 0
OFFSET[R], 1986, 1207, 335
SVTCA[Y]
CALL[], 76, 15, 1, 1, 87, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E67">
/* VTTTalk Unicode 0x1e67 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 88, 0, 0
OFFSET[R], 2260, 1147, 0
SVTCA[Y]
CALL[], 60, 14, 1, 1, 149, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E68">
/* VTTTalk Unicode 0x1e68 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 56, 0, 0
OFFSET[R], 468, 1225, -1
OFFSET[R], 394, 371, 313
SVTCA[Y]
CALL[], 61, 43, 1, 1, -120, 86
SHC[2], 1
CALL[], 79, 15, 1, 1, 100, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E69">
/* VTTTalk Unicode 0x1e69 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 88, 0, 0
OFFSET[R], 468, 1159, -10
OFFSET[R], 394, 311, 0
SVTCA[Y]
CALL[], 57, 41, 1, 1, -129, 86
SHC[2], 1
CALL[], 75, 14, 1, 1, 161, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E6A">
/* VTTTalk Unicode 0x1e6a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 57, 0, 0
OFFSET[R], 394, 361, 310
SVTCA[Y]
CALL[], 17, 3, 1, 1, 117, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E6B">
/* VTTTalk Unicode 0x1e6b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 89, 0, 0
OFFSET[R], 394, 61, 191
SVTCA[Y]
CALL[], 31, 4, 1, 1, 109, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E6C">
/* VTTTalk Unicode 0x1e6c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 57, 0, 0
OFFSET[R], 468, 1211, 0
SVTCA[Y]
CALL[], 11, 2, 1, 1, -139, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E6D">
/* VTTTalk Unicode 0x1e6d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 89, 0, 0
OFFSET[R], 468, 1050, 0
SVTCA[Y]
CALL[], 25, 17, 1, 1, -119, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E6E">
/* VTTTalk Unicode 0x1e6e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 57, 0, 0
OFFSET[R], 482, 1199, 0
SVTCA[Y]
CALL[], 11, 2, 1, 1, -155, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E6F">
/* VTTTalk Unicode 0x1e6f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 89, 0, 0
OFFSET[R], 482, 1038, 0
SVTCA[Y]
CALL[], 25, 17, 1, 1, -135, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E70">
/* VTTTalk Unicode 0x1e70 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 57, 0, 0
OFFSET[R], 478, 1199, 0
SVTCA[Y]
CALL[], 16, 2, 1, 1, -120, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E71">
/* VTTTalk Unicode 0x1e71 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 89, 0, 0
OFFSET[R], 478, 1038, 0
SVTCA[Y]
CALL[], 30, 17, 1, 1, -100, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E72">
/* VTTTalk Unicode 0x1e72 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0
OFFSET[R], 469, 1337, 0
SVTCA[Y]
CALL[], 25, 6, 1, 1, -119, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E73">
/* VTTTalk Unicode 0x1e73 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0
OFFSET[R], 469, 1234, 0
SVTCA[Y]
CALL[], 31, 11, 1, 1, -119, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E74">
/* VTTTalk Unicode 0x1e74 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0
OFFSET[R], 481, 1251, 0
SVTCA[Y]
CALL[], 23, 6, 1, 1, -98, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E75">
/* VTTTalk Unicode 0x1e75 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0
OFFSET[R], 481, 1148, 0
SVTCA[Y]
CALL[], 29, 11, 1, 1, -98, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E76">
/* VTTTalk Unicode 0x1e76 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0
OFFSET[R], 478, 1251, 0
SVTCA[Y]
CALL[], 30, 6, 1, 1, -100, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E77">
/* VTTTalk Unicode 0x1e77 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0
OFFSET[R], 478, 1094, 0
SVTCA[Y]
CALL[], 36, 11, 1, 1, -100, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E78">
/* VTTTalk Unicode 0x1e78 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0
OFFSET[R], 1981, 1252, 338
SVTCA[Y]
CALL[], 27, 0, 1, 1, 108, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E79">
/* VTTTalk Unicode 0x1e79 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0
OFFSET[R], 2268, 1152, 4
SVTCA[Y]
CALL[], 42, 17, 1, 1, 170, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E7A">
/* VTTTalk Unicode 0x1e7a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0
OFFSET[R], 1984, 1252, 389
SVTCA[Y]
CALL[], 24, 11, 1, 1, 140, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E7B">
/* VTTTalk Unicode 0x1e7b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0
OFFSET[R], 2267, 1152, 8
SVTCA[Y]
CALL[], 30, 17, 1, 1, 229, 86
SHC[2], 2
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1E7C">
/* VTTTalk Unicode 0x1e7c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 59, 0, 0
OFFSET[R], 397, 179, 326
SVTCA[Y]
CALL[], 24, 9, 1, 1, 118, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E7D">
/* VTTTalk Unicode 0x1e7d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 91, 0, 0
OFFSET[R], 397, 29, -6
SVTCA[Y]
CALL[], 24, 9, 1, 1, 160, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E7E">
/* VTTTalk Unicode 0x1e7e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 59, 0, 0
OFFSET[R], 468, 1252, 10
SVTCA[Y]
CALL[], 13, 4, 1, 1, -129, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E7F">
/* VTTTalk Unicode 0x1e7f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 91, 0, 0
OFFSET[R], 468, 1101, 10
SVTCA[Y]
CALL[], 13, 4, 1, 1, -129, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E86">
/* VTTTalk Unicode 0x1e86 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 60, 0, 0
OFFSET[R], 394, 673, 311
SVTCA[Y]
CALL[], 31, 21, 1, 1, 118, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1E87">
/* VTTTalk Unicode 0x1e87 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 92, 0, 0
OFFSET[R], 394, 512, 0
SVTCA[Y]
CALL[], 31, 21, 1, 1, 181, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1E88">
/* VTTTalk Unicode 0x1e88 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 60, 0, 0
OFFSET[R], 468, 1519, 10
SVTCA[Y]
CALL[], 25, 19, 1, 1, -129, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1E89">
/* VTTTalk Unicode 0x1e89 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 92, 0, 0
OFFSET[R], 468, 1363, 10
SVTCA[Y]
CALL[], 25, 19, 1, 1, -129, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1E8A">
/* VTTTalk Unicode 0x1e8a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 61, 0, 0
OFFSET[R], 394, 402, 322
SVTCA[Y]
CALL[], 21, 2, 1, 1, 129, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E8B">
/* VTTTalk Unicode 0x1e8b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 93, 0, 0
OFFSET[R], 394, 257, -10
SVTCA[Y]
CALL[], 21, 2, 1, 1, 171, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E8C">
/* VTTTalk Unicode 0x1e8c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 61, 0, 0
OFFSET[R], 107, 230, 322
SVTCA[Y]
CALL[], 33, 2, 1, 1, 131, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E8D">
/* VTTTalk Unicode 0x1e8d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 93, 0, 0
OFFSET[R], 107, 85, -10
SVTCA[Y]
CALL[], 33, 2, 1, 1, 173, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E8E">
/* VTTTalk Unicode 0x1e8e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 62, 0, 0
OFFSET[R], 394, 367, 310
SVTCA[Y]
CALL[], 18, 2, 1, 1, 117, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E8F">
/* VTTTalk Unicode 0x1e8f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 94, 0, 0
OFFSET[R], 394, 257, 0
SVTCA[Y]
CALL[], 34, 1, 1, 1, 181, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E90">
/* VTTTalk Unicode 0x1e90 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 63, 0, 0
OFFSET[R], 375, 145, 311
SVTCA[Y]
CALL[], 17, 8, 1, 1, 108, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E91">
/* VTTTalk Unicode 0x1e91 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 95, 0, 0
OFFSET[R], 375, 44, 0
SVTCA[Y]
CALL[], 17, 8, 1, 1, 171, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E92">
/* VTTTalk Unicode 0x1e92 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 63, 0, 0
OFFSET[R], 468, 1210, 10
SVTCA[Y]
CALL[], 17, 2, 1, 1, -129, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E93">
/* VTTTalk Unicode 0x1e93 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 95, 0, 0
OFFSET[R], 468, 1123, 10
SVTCA[Y]
CALL[], 17, 2, 1, 1, -129, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E94">
/* VTTTalk Unicode 0x1e94 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 63, 0, 0
OFFSET[R], 482, 1198, 10
SVTCA[Y]
CALL[], 17, 2, 1, 1, -145, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E95">
/* VTTTalk Unicode 0x1e95 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 95, 0, 0
OFFSET[R], 482, 1111, 10
SVTCA[Y]
CALL[], 17, 2, 1, 1, -145, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E96">
/* VTTTalk Unicode 0x1e96 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 77, 0, 0
OFFSET[R], 482, 1173, 10
SVTCA[Y]
CALL[], 30, 2, 1, 1, -145, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E97">
/* VTTTalk Unicode 0x1e97 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 89, 0, 0
OFFSET[R], 107, -111, 191
SVTCA[Y]
CALL[], 43, 4, 1, 1, 111, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E98">
/* VTTTalk Unicode 0x1e98 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 92, 0, 0
OFFSET[R], 395, 427, 11
SVTCA[Y]
CALL[], 33, 21, 1, 1, 134, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1E99">
/* VTTTalk Unicode 0x1e99 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 94, 0, 0
OFFSET[R], 395, 172, 11
SVTCA[Y]
CALL[], 36, 1, 1, 1, 134, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E9A">
/* VTTTalk Unicode 0x1e9a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 367, 778, 128
SVTCA[Y]
CALL[], 59, 15, 1, 1, 143, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E9B">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 10
CALL[], 6, 1, 114
SHP[2], 13
MDRP[m&gt;RWh], 27
SHP[2], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E9C">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 4, 10
CALL[], 10, 1, 114
SHP[2], 17
SRP2[], 4
SLOOP[], 4
IP[], 2, 3, 1, 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E9D">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 10
CALL[], 6, 1, 114
SHP[2], 13
SRP1[], 13
SHP[1], 21
RDTG[]
MDAP[R], 21
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E9F">
/* VTTTalk Unicode 0x1e9f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 573, 1, 0

    </glyphProgram>

    <glyphProgram name="uni1EA0">
/* VTTTalk Unicode 0x1ea0 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 468, 1283, 0
SVTCA[Y]
CALL[], 17, 5, 1, 1, -139, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EA1">
/* VTTTalk Unicode 0x1ea1 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 468, 1099, 0
SVTCA[Y]
CALL[], 62, 49, 1, 1, -119, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EA2">
/* VTTTalk Unicode 0x1ea2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 442, 1262, 327
SVTCA[Y]
CALL[], 15, 7, 1, 1, 113, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EA3">
/* VTTTalk Unicode 0x1ea3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 442, 1172, 16
SVTCA[Y]
CALL[], 60, 15, 1, 1, 156, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EA4">
/* VTTTalk Unicode 0x1ea4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1987, 194, 303
SVTCA[Y]
CALL[], 18, 7, 1, 1, 97, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1EA5">
/* VTTTalk Unicode 0x1ea5 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 1987, 104, -8
SVTCA[Y]
CALL[], 65, 15, 1, 1, 140, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EA6">
/* VTTTalk Unicode 0x1ea6 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1988, 198, 317
SVTCA[Y]
CALL[], 16, 7, 1, 1, 92, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1EA7">
/* VTTTalk Unicode 0x1ea7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 1988, 108, 6
SVTCA[Y]
CALL[], 61, 15, 1, 1, 135, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EA8">
/* VTTTalk Unicode 0x1ea8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1990, 199, 284
SVTCA[Y]
CALL[], 19, 3, 1, 1, 80, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1EA9">
/* VTTTalk Unicode 0x1ea9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 1990, 109, -27
SVTCA[Y]
CALL[], 64, 15, 1, 1, 123, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EAA">
/* VTTTalk Unicode 0x1eaa */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1991, 199, 262
SVTCA[Y]
CALL[], 16, 7, 1, 1, 58, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1EAB">
/* VTTTalk Unicode 0x1eab */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 1991, 109, -49
SVTCA[Y]
CALL[], 61, 15, 1, 1, 101, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EAC">
/* VTTTalk Unicode 0x1eac */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 375, 201, 311
OFFSET[R], 468, 1283, 0
SVTCA[Y]
CALL[], 17, 7, 1, 1, 108, 86
SHC[2], 3
CALL[], 26, 5, 1, 1, -139, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1EAD">
/* VTTTalk Unicode 0x1ead */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 375, 111, 0
OFFSET[R], 468, 1099, 0
SVTCA[Y]
CALL[], 62, 15, 1, 1, 151, 86
SHC[2], 2
CALL[], 71, 49, 1, 1, -119, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EAE">
/* VTTTalk Unicode 0x1eae */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1994, 234, 301
SVTCA[Y]
CALL[], 19, 7, 1, 1, 92, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1EAF">
/* VTTTalk Unicode 0x1eaf */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 1994, 144, -10
SVTCA[Y]
CALL[], 64, 15, 1, 1, 135, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EB0">
/* VTTTalk Unicode 0x1eb0 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1975, 234, 301
SVTCA[Y]
CALL[], 19, 7, 1, 1, 92, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1EB1">
/* VTTTalk Unicode 0x1eb1 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 1975, 144, -10
SVTCA[Y]
CALL[], 64, 15, 1, 1, 135, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EB2">
/* VTTTalk Unicode 0x1eb2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1995, 238, 318
SVTCA[Y]
CALL[], 19, 7, 1, 1, 110, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1EB3">
/* VTTTalk Unicode 0x1eb3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 1995, 148, 7
SVTCA[Y]
CALL[], 64, 15, 1, 1, 153, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EB4">
/* VTTTalk Unicode 0x1eb4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 2016, 238, 326
SVTCA[Y]
CALL[], 19, 7, 1, 1, 111, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1EB5">
/* VTTTalk Unicode 0x1eb5 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 2016, 148, 15
SVTCA[Y]
CALL[], 64, 15, 1, 1, 154, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EB6">
/* VTTTalk Unicode 0x1eb6 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 393, 243, 311
OFFSET[R], 468, 1283, 0
SVTCA[Y]
CALL[], 19, 7, 1, 1, 83, 86
SHC[2], 3
CALL[], 32, 5, 1, 1, -139, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1EB7">
/* VTTTalk Unicode 0x1eb7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 70, 0, 0
OFFSET[R], 393, 153, 0
OFFSET[R], 468, 1099, 0
SVTCA[Y]
CALL[], 64, 15, 1, 1, 126, 86
SHC[2], 2
CALL[], 77, 49, 1, 1, -119, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EB8">
/* VTTTalk Unicode 0x1eb8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 468, 1216, 10
SVTCA[Y]
CALL[], 19, 2, 1, 1, -129, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1EB9">
/* VTTTalk Unicode 0x1eb9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 468, 1165, 0
SVTCA[Y]
CALL[], 47, 0, 1, 1, -119, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1EBA">
/* VTTTalk Unicode 0x1eba */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 442, 1209, 338
SVTCA[Y]
CALL[], 17, 7, 1, 1, 124, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1EBB">
/* VTTTalk Unicode 0x1ebb */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 442, 1155, 16
SVTCA[Y]
CALL[], 45, 11, 1, 1, 156, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1EBC">
/* VTTTalk Unicode 0x1ebc */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 397, 143, 326
SVTCA[Y]
CALL[], 30, 7, 1, 1, 118, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1EBD">
/* VTTTalk Unicode 0x1ebd */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 397, 89, 4
SVTCA[Y]
CALL[], 58, 11, 1, 1, 150, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1EBE">
/* VTTTalk Unicode 0x1ebe */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 1987, 141, 314
SVTCA[Y]
CALL[], 20, 7, 1, 1, 108, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1EBF">
/* VTTTalk Unicode 0x1ebf */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 1987, 87, -8
SVTCA[Y]
CALL[], 48, 11, 1, 1, 140, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EC0">
/* VTTTalk Unicode 0x1ec0 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 1988, 145, 328
SVTCA[Y]
CALL[], 18, 7, 1, 1, 103, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1EC1">
/* VTTTalk Unicode 0x1ec1 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 1988, 91, 6
SVTCA[Y]
CALL[], 46, 11, 1, 1, 135, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EC2">
/* VTTTalk Unicode 0x1ec2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 1990, 146, 295
SVTCA[Y]
CALL[], 21, 7, 1, 1, 91, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1EC3">
/* VTTTalk Unicode 0x1ec3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 1990, 92, -27
SVTCA[Y]
CALL[], 49, 11, 1, 1, 123, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EC4">
/* VTTTalk Unicode 0x1ec4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 1991, 146, 273
SVTCA[Y]
CALL[], 18, 7, 1, 1, 69, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1EC5">
/* VTTTalk Unicode 0x1ec5 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 1991, 92, -49
SVTCA[Y]
CALL[], 46, 11, 1, 1, 101, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EC6">
/* VTTTalk Unicode 0x1ec6 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 42, 0, 0
OFFSET[R], 375, 148, 322
OFFSET[R], 468, 1216, 10
SVTCA[Y]
CALL[], 19, 7, 1, 1, 119, 86
SHC[2], 4
CALL[], 28, 2, 1, 1, -129, 86
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1EC7">
/* VTTTalk Unicode 0x1ec7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 74, 0, 0
OFFSET[R], 375, 94, 0
OFFSET[R], 468, 1165, 0
SVTCA[Y]
CALL[], 47, 11, 1, 1, 151, 86
SHC[2], 1
CALL[], 56, 0, 1, 1, -119, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EC8">
/* VTTTalk Unicode 0x1ec8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 442, 869, 338
SVTCA[Y]
CALL[], 5, 3, 1, 1, 124, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1EC9">
/* VTTTalk Unicode 0x1ec9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 142, 0, 0
OFFSET[R], 442, 842, 14
SVTCA[Y]
CALL[], 5, 3, 1, 1, 174, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1ECA">
/* VTTTalk Unicode 0x1eca */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 468, 876, 9
SVTCA[Y]
CALL[], 7, 2, 1, 1, -130, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1ECB">
/* VTTTalk Unicode 0x1ecb */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 78, 0, 0
OFFSET[R], 468, 846, 10
SVTCA[Y]
CALL[], 19, 2, 1, 1, -129, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1ECB.ccmp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 142, 0, 0
OFFSET[R], 468, 846, 10
SVTCA[Y]
CALL[], 7, 2, 1, 1, -129, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1ECC">
/* VTTTalk Unicode 0x1ecc */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 468, 1304, 0
SVTCA[Y]
CALL[], 47, 6, 1, 1, -119, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1ECD">
/* VTTTalk Unicode 0x1ecd */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 468, 1181, -1
SVTCA[Y]
CALL[], 47, 17, 1, 1, -120, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1ECE">
/* VTTTalk Unicode 0x1ece */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 442, 1297, 329
SVTCA[Y]
CALL[], 45, 17, 1, 1, 95, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1ECF">
/* VTTTalk Unicode 0x1ecf */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 442, 1165, 16
SVTCA[Y]
CALL[], 45, 6, 1, 1, 156, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1ED0">
/* VTTTalk Unicode 0x1ed0 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 1987, 229, 305
SVTCA[Y]
CALL[], 48, 17, 1, 1, 79, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED1">
/* VTTTalk Unicode 0x1ed1 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 1987, 97, -8
SVTCA[Y]
CALL[], 48, 6, 1, 1, 140, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED2">
/* VTTTalk Unicode 0x1ed2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 1988, 233, 319
SVTCA[Y]
CALL[], 46, 17, 1, 1, 74, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED3">
/* VTTTalk Unicode 0x1ed3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 1988, 101, 6
SVTCA[Y]
CALL[], 46, 6, 1, 1, 135, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED4">
/* VTTTalk Unicode 0x1ed4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 1990, 234, 286
SVTCA[Y]
CALL[], 49, 17, 1, 1, 62, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED5">
/* VTTTalk Unicode 0x1ed5 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 1990, 102, -27
SVTCA[Y]
CALL[], 49, 6, 1, 1, 123, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED6">
/* VTTTalk Unicode 0x1ed6 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 1991, 234, 264
SVTCA[Y]
CALL[], 46, 17, 1, 1, 40, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED7">
/* VTTTalk Unicode 0x1ed7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 1991, 102, -49
SVTCA[Y]
CALL[], 46, 6, 1, 1, 101, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED8">
/* VTTTalk Unicode 0x1ed8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 375, 236, 313
OFFSET[R], 468, 1304, 0
SVTCA[Y]
CALL[], 47, 17, 1, 1, 90, 86
SHC[2], 2
CALL[], 56, 6, 1, 1, -119, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED9">
/* VTTTalk Unicode 0x1ed9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 375, 104, 0
OFFSET[R], 468, 1181, -1
SVTCA[Y]
CALL[], 47, 6, 1, 1, 151, 86
SHC[2], 2
CALL[], 56, 17, 1, 1, -120, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EDA">
/* VTTTalk Unicode 0x1eda */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 180, 0, 0
OFFSET[R], 118, 478, 305
SVTCA[Y]
CALL[], 58, 28, 1, 1, 71, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EDB">
/* VTTTalk Unicode 0x1edb */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 181, 0, 0
OFFSET[R], 118, 357, 0
SVTCA[Y]
CALL[], 54, 16, 1, 1, 140, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EDC">
/* VTTTalk Unicode 0x1edc */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 180, 0, 0
OFFSET[R], 69, 334, 305
SVTCA[Y]
CALL[], 60, 28, 1, 1, 71, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EDD">
/* VTTTalk Unicode 0x1edd */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 181, 0, 0
OFFSET[R], 69, 213, 0
SVTCA[Y]
CALL[], 56, 16, 1, 1, 140, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EDE">
/* VTTTalk Unicode 0x1ede */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 180, 0, 0
OFFSET[R], 442, 1293, 321
SVTCA[Y]
CALL[], 59, 28, 1, 1, 87, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EDF">
/* VTTTalk Unicode 0x1edf */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 181, 0, 0
OFFSET[R], 442, 1172, 16
SVTCA[Y]
CALL[], 55, 16, 1, 1, 156, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EE0">
/* VTTTalk Unicode 0x1ee0 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 180, 0, 0
OFFSET[R], 397, 227, 309
SVTCA[Y]
CALL[], 72, 28, 1, 1, 81, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EE1">
/* VTTTalk Unicode 0x1ee1 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 181, 0, 0
OFFSET[R], 397, 106, 4
SVTCA[Y]
CALL[], 68, 16, 1, 1, 150, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EE2">
/* VTTTalk Unicode 0x1ee2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 180, 0, 0
OFFSET[R], 468, 1289, 0
SVTCA[Y]
CALL[], 61, 16, 1, 1, -119, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EE3">
/* VTTTalk Unicode 0x1ee3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 181, 0, 0
OFFSET[R], 468, 1179, -10
SVTCA[Y]
CALL[], 57, 27, 1, 1, -129, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EE4">
/* VTTTalk Unicode 0x1ee4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0
OFFSET[R], 468, 1263, 0
SVTCA[Y]
CALL[], 25, 6, 1, 1, -119, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1EE5">
/* VTTTalk Unicode 0x1ee5 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0
OFFSET[R], 468, 1106, 0
SVTCA[Y]
CALL[], 31, 11, 1, 1, -119, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EE6">
/* VTTTalk Unicode 0x1ee6 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 58, 0, 0
OFFSET[R], 442, 1257, 327
SVTCA[Y]
CALL[], 23, 0, 1, 1, 113, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1EE7">
/* VTTTalk Unicode 0x1ee7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0
OFFSET[R], 442, 1157, 16
SVTCA[Y]
CALL[], 29, 17, 1, 1, 176, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EE8">
/* VTTTalk Unicode 0x1ee8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 195, 0, 0
OFFSET[R], 118, 469, 322
SVTCA[Y]
CALL[], 32, 10, 1, 1, 108, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EE9">
/* VTTTalk Unicode 0x1ee9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 118, 355, -21
SVTCA[Y]
CALL[], 38, 27, 1, 1, 139, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EEA">
/* VTTTalk Unicode 0x1eea */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 195, 0, 0
OFFSET[R], 69, 325, 322
SVTCA[Y]
CALL[], 34, 10, 1, 1, 108, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EEB">
/* VTTTalk Unicode 0x1eeb */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 69, 211, -21
SVTCA[Y]
CALL[], 40, 27, 1, 1, 139, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EEC">
/* VTTTalk Unicode 0x1eec */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 195, 0, 0
OFFSET[R], 442, 1284, 338
SVTCA[Y]
CALL[], 33, 10, 1, 1, 124, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EED">
/* VTTTalk Unicode 0x1eed */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 442, 1170, -5
SVTCA[Y]
CALL[], 39, 27, 1, 1, 155, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EEE">
/* VTTTalk Unicode 0x1eee */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 195, 0, 0
OFFSET[R], 397, 218, 326
SVTCA[Y]
CALL[], 46, 21, 1, 1, 118, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EEF">
/* VTTTalk Unicode 0x1eef */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 397, 104, -17
SVTCA[Y]
CALL[], 52, 27, 1, 1, 149, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EF0">
/* VTTTalk Unicode 0x1ef0 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 195, 0, 0
OFFSET[R], 468, 1289, -9
SVTCA[Y]
CALL[], 35, 16, 1, 1, -128, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EF1">
/* VTTTalk Unicode 0x1ef1 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 468, 1160, 0
SVTCA[Y]
CALL[], 41, 21, 1, 1, -119, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EF4">
/* VTTTalk Unicode 0x1ef4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 62, 0, 0
OFFSET[R], 468, 1212, 1
SVTCA[Y]
CALL[], 12, 6, 1, 1, -138, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1EF5">
/* VTTTalk Unicode 0x1ef5 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 94, 0, 0
OFFSET[R], 468, 1309, -158
SVTCA[Y]
CALL[], 34, 8, 0, 0, -71, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EF6">
/* VTTTalk Unicode 0x1ef6 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 62, 0, 0
OFFSET[R], 442, 1208, 326
SVTCA[Y]
CALL[], 10, 2, 1, 1, 112, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1EF7">
/* VTTTalk Unicode 0x1ef7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 94, 0, 0
OFFSET[R], 442, 1098, 16
SVTCA[Y]
CALL[], 26, 1, 1, 1, 176, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EF8">
/* VTTTalk Unicode 0x1ef8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 62, 0, 0
OFFSET[R], 397, 142, 314
SVTCA[Y]
CALL[], 23, 8, 1, 1, 106, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1EF9">
/* VTTTalk Unicode 0x1ef9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 94, 0, 0
OFFSET[R], 397, 32, 4
SVTCA[Y]
CALL[], 39, 24, 1, 1, 170, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EFA">
/* VTTTalk Unicode 0x1efa */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 49, 0, 0
OFFSET[R], 49, 380, 0

    </glyphProgram>

    <glyphProgram name="uni1EFB">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 10
MDAP[R], 7
SHP[1], 11
MDRP[m&gt;RWh], 3
SHP[2], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EFC">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 9, 114
SHP[2], 33
CALL[], 21, 2, 114
SHP[2], 22
SRP2[], 10
IP[], 1
MDAP[R], 1
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EFD">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 9, 114
SHP[2], 33
MDAP[R], 21
SHP[1], 22
IP[], 1
MDAP[R], 1
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EFE">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 2, 114
SHP[2], 1
CALL[], 10, 9, 114
SHP[2], 26
SHP[2], 18
MDAP[R], 18
SHP[1], 34
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EFF">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 6, 114
SHP[2], 36
MDAP[R], 21
SHP[1], 5
SHP[1], 29
MDAP[R], 29
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1F00">
/* VTTTalk Unicode 0x1f00 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 1082, 435, 108
SVTCA[Y]
CALL[], 70, 6, 1, 1, 143, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F01">
/* VTTTalk Unicode 0x1f01 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 1097, 407, 108
SVTCA[Y]
CALL[], 73, 6, 1, 1, 143, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F02">
/* VTTTalk Unicode 0x1f02 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 1087, 227, 108
SVTCA[Y]
CALL[], 68, 6, 1, 1, 162, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F03">
/* VTTTalk Unicode 0x1f03 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 1090, 200, 108
SVTCA[Y]
CALL[], 68, 6, 1, 1, 162, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F04">
/* VTTTalk Unicode 0x1f04 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 1088, 315, 108
SVTCA[Y]
CALL[], 66, 6, 1, 1, 162, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F05">
/* VTTTalk Unicode 0x1f05 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 1091, 245, 108
SVTCA[Y]
CALL[], 66, 6, 1, 1, 162, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F06">
/* VTTTalk Unicode 0x1f06 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 1089, 256, 108
SVTCA[Y]
CALL[], 94, 6, 1, 1, 143, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F07">
/* VTTTalk Unicode 0x1f07 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 1092, 231, 108
SVTCA[Y]
CALL[], 73, 6, 1, 1, 143, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F08">
/* VTTTalk Unicode 0x1f08 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1082, -29, -1
SVTCA[Y]
CALL[], 23, 3, 0, 0, 38, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F09">
/* VTTTalk Unicode 0x1f09 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1097, -26, -1
SVTCA[Y]
CALL[], 15, 3, 0, 0, 38, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F0A">
/* VTTTalk Unicode 0x1f0a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1087, -425, -1
SVTCA[Y]
CALL[], 18, 3, 0, 0, 38, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F0B">
/* VTTTalk Unicode 0x1f0b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1090, -382, -1
SVTCA[Y]
CALL[], 18, 3, 0, 0, 38, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F0C">
/* VTTTalk Unicode 0x1f0c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1088, -329, -1
SVTCA[Y]
CALL[], 16, 3, 0, 0, 38, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F0D">
/* VTTTalk Unicode 0x1f0d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1091, -361, -1
SVTCA[Y]
CALL[], 16, 3, 0, 0, 38, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F0E">
/* VTTTalk Unicode 0x1f0e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1089, -254, -1
SVTCA[Y]
CALL[], 31, 3, 0, 0, 219, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F0F">
/* VTTTalk Unicode 0x1f0f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1092, -266, -1
SVTCA[Y]
CALL[], 41, 3, 0, 0, 219, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F10">
/* VTTTalk Unicode 0x1f10 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 574, 0, 0
OFFSET[R], 1082, 361, 107
SVTCA[Y]
CALL[], 68, 43, 1, 1, 143, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F11">
/* VTTTalk Unicode 0x1f11 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 574, 0, 0
OFFSET[R], 1097, 333, 107
SVTCA[Y]
CALL[], 71, 43, 1, 1, 143, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F12">
/* VTTTalk Unicode 0x1f12 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 574, 0, 0
OFFSET[R], 1087, 153, 107
SVTCA[Y]
CALL[], 66, 43, 1, 1, 162, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F13">
/* VTTTalk Unicode 0x1f13 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 574, 0, 0
OFFSET[R], 1090, 126, 107
SVTCA[Y]
CALL[], 66, 43, 1, 1, 162, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F14">
/* VTTTalk Unicode 0x1f14 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 574, 0, 0
OFFSET[R], 1088, 241, 107
SVTCA[Y]
CALL[], 64, 43, 1, 1, 162, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F15">
/* VTTTalk Unicode 0x1f15 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 574, 0, 0
OFFSET[R], 1091, 171, 107
SVTCA[Y]
CALL[], 64, 43, 1, 1, 162, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F16A">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 10, 2
SHP[1], 5
SHP[1], 9
MDAP[R], 9
SHP[1], 4
SRP1[], 4
SHP[1], 0
SHP[1], 11
SRP1[], 11
SHP[1], 22
MDAP[R], 22
SHP[1], 15
SRP1[], 10
SHP[1], 12
SRP1[], 12
SHP[1], 1
SRP1[], 10
SHP[1], 31
MDAP[R], 31
SHP[1], 38
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1F16B">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 10, 2
SHP[1], 5
SHP[1], 9
MDAP[R], 9
SHP[1], 4
MDAP[R], 4
SHP[1], 0
SHP[1], 11
SRP1[], 11
SHP[1], 37
SRP1[], 37
SHP[1], 16
SHP[1], 17
SRP1[], 10
SHP[1], 12
SRP1[], 12
SHP[1], 1
SHP[1], 38
SRP1[], 38
SHP[1], 27
SRP1[], 27
SHP[1], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1F18">
/* VTTTalk Unicode 0x1f18 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 42, 100, 0
OFFSET[R], 1082, -332, 0
SVTCA[Y]
CALL[], 25, 7, 0, 0, 39, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F19">
/* VTTTalk Unicode 0x1f19 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 42, 100, 0
OFFSET[R], 1097, -329, 0
SVTCA[Y]
CALL[], 17, 7, 0, 0, 39, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F1A">
/* VTTTalk Unicode 0x1f1a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 42, 150, 0
OFFSET[R], 1087, -678, 0
SVTCA[Y]
CALL[], 20, 7, 0, 0, 39, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1F1B">
/* VTTTalk Unicode 0x1f1b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 42, 150, 0
OFFSET[R], 1090, -635, 0
SVTCA[Y]
CALL[], 20, 7, 0, 0, 39, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1F1C">
/* VTTTalk Unicode 0x1f1c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 42, 150, 0
OFFSET[R], 1088, -582, 0
SVTCA[Y]
CALL[], 18, 7, 0, 0, 39, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1F1D">
/* VTTTalk Unicode 0x1f1d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 42, 150, 0
OFFSET[R], 1091, -614, 0
SVTCA[Y]
CALL[], 18, 7, 0, 0, 39, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1F20">
/* VTTTalk Unicode 0x1f20 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 1082, 388, 108
SVTCA[Y]
CALL[], 33, 3, 1, 1, 163, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F21">
/* VTTTalk Unicode 0x1f21 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 1097, 360, 108
SVTCA[Y]
CALL[], 36, 3, 1, 1, 163, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F22">
/* VTTTalk Unicode 0x1f22 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 1087, 180, 108
SVTCA[Y]
CALL[], 31, 3, 1, 1, 182, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F23">
/* VTTTalk Unicode 0x1f23 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 1090, 153, 108
SVTCA[Y]
CALL[], 31, 3, 1, 1, 182, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F24">
/* VTTTalk Unicode 0x1f24 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 1088, 268, 108
SVTCA[Y]
CALL[], 29, 3, 1, 1, 182, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F25">
/* VTTTalk Unicode 0x1f25 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 1091, 198, 108
SVTCA[Y]
CALL[], 29, 3, 1, 1, 182, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F26">
/* VTTTalk Unicode 0x1f26 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 1089, 209, 108
SVTCA[Y]
CALL[], 57, 3, 1, 1, 163, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F27">
/* VTTTalk Unicode 0x1f27 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 1092, 184, 108
SVTCA[Y]
CALL[], 36, 3, 1, 1, 163, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F28">
/* VTTTalk Unicode 0x1f28 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 45, 100, 0
OFFSET[R], 1082, -318, 2
SVTCA[Y]
CALL[], 21, 7, 0, 0, 41, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F29">
/* VTTTalk Unicode 0x1f29 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 45, 100, 0
OFFSET[R], 1097, -315, 2
SVTCA[Y]
CALL[], 13, 7, 0, 0, 41, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F2A">
/* VTTTalk Unicode 0x1f2a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 45, 150, 0
OFFSET[R], 1087, -664, 2
SVTCA[Y]
CALL[], 16, 7, 0, 0, 41, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F2B">
/* VTTTalk Unicode 0x1f2b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 45, 150, 0
OFFSET[R], 1090, -621, 2
SVTCA[Y]
CALL[], 16, 7, 0, 0, 41, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F2C">
/* VTTTalk Unicode 0x1f2c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 45, 150, 0
OFFSET[R], 1088, -568, 2
SVTCA[Y]
CALL[], 17, 7, 1, 1, -298, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F2D">
/* VTTTalk Unicode 0x1f2d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 45, 150, 0
OFFSET[R], 1091, -600, 2
SVTCA[Y]
CALL[], 14, 7, 0, 0, 41, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F2E">
/* VTTTalk Unicode 0x1f2e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 45, 150, 0
OFFSET[R], 1089, -493, 2
SVTCA[Y]
CALL[], 29, 7, 0, 0, 222, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F2F">
/* VTTTalk Unicode 0x1f2f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 45, 150, 0
OFFSET[R], 1092, -505, 2
SVTCA[Y]
CALL[], 39, 7, 0, 0, 222, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F30">
/* VTTTalk Unicode 0x1f30 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 578, 0, 0
OFFSET[R], 1082, 104, 87
SVTCA[Y]
CALL[], 22, 0, 1, 1, 142, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1F31">
/* VTTTalk Unicode 0x1f31 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 578, 0, 0
OFFSET[R], 1097, 76, 87
SVTCA[Y]
CALL[], 25, 0, 1, 1, 142, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1F32">
/* VTTTalk Unicode 0x1f32 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 578, 0, 0
OFFSET[R], 1087, -104, 87
SVTCA[Y]
CALL[], 20, 0, 1, 1, 161, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F33">
/* VTTTalk Unicode 0x1f33 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 578, 0, 0
OFFSET[R], 1090, -131, 87
SVTCA[Y]
CALL[], 20, 0, 1, 1, 161, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F34">
/* VTTTalk Unicode 0x1f34 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 578, 0, 0
OFFSET[R], 1088, -16, 87
SVTCA[Y]
CALL[], 18, 0, 1, 1, 161, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F35">
/* VTTTalk Unicode 0x1f35 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 578, 0, 0
OFFSET[R], 1091, -86, 87
SVTCA[Y]
CALL[], 18, 0, 1, 1, 161, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F36">
/* VTTTalk Unicode 0x1f36 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 578, 0, 0
OFFSET[R], 1089, -75, 87
SVTCA[Y]
CALL[], 46, 0, 1, 1, 142, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F37">
/* VTTTalk Unicode 0x1f37 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 578, 0, 0
OFFSET[R], 1092, -100, 87
SVTCA[Y]
CALL[], 25, 0, 1, 1, 142, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F38">
/* VTTTalk Unicode 0x1f38 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 46, 100, 0
OFFSET[R], 1082, -312, 2
SVTCA[Y]
CALL[], 13, 3, 0, 0, 41, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1F39">
/* VTTTalk Unicode 0x1f39 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 46, 100, 0
OFFSET[R], 1097, -309, 2
SVTCA[Y]
CALL[], 5, 3, 0, 0, 41, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1F3A">
/* VTTTalk Unicode 0x1f3a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 46, 150, 0
OFFSET[R], 1087, -658, 2
SVTCA[Y]
CALL[], 8, 3, 0, 0, 41, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F3B">
/* VTTTalk Unicode 0x1f3b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 46, 150, 0
OFFSET[R], 1090, -615, 2
SVTCA[Y]
CALL[], 8, 3, 0, 0, 41, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F3C">
/* VTTTalk Unicode 0x1f3c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 46, 150, 0
OFFSET[R], 1088, -562, 2
SVTCA[Y]
CALL[], 6, 3, 0, 0, 41, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F3D">
/* VTTTalk Unicode 0x1f3d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 46, 150, 0
OFFSET[R], 1091, -594, 2
SVTCA[Y]
CALL[], 6, 3, 0, 0, 41, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F3E">
/* VTTTalk Unicode 0x1f3e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 46, 150, 0
OFFSET[R], 1089, -487, 2
SVTCA[Y]
CALL[], 21, 3, 0, 0, 222, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F3F">
/* VTTTalk Unicode 0x1f3f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 46, 150, 0
OFFSET[R], 1092, -499, 2
SVTCA[Y]
CALL[], 31, 3, 0, 0, 222, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F40">
/* VTTTalk Unicode 0x1f40 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 1082, 385, 108
SVTCA[Y]
CALL[], 48, 6, 1, 1, 143, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F41">
/* VTTTalk Unicode 0x1f41 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 1097, 357, 108
SVTCA[Y]
CALL[], 51, 6, 1, 1, 143, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F42">
/* VTTTalk Unicode 0x1f42 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 1087, 177, 108
SVTCA[Y]
CALL[], 46, 6, 1, 1, 162, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F43">
/* VTTTalk Unicode 0x1f43 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 1090, 150, 108
SVTCA[Y]
CALL[], 46, 6, 1, 1, 162, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F44">
/* VTTTalk Unicode 0x1f44 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 1088, 265, 108
SVTCA[Y]
CALL[], 44, 6, 1, 1, 162, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F45">
/* VTTTalk Unicode 0x1f45 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 1091, 195, 108
SVTCA[Y]
CALL[], 44, 6, 1, 1, 162, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F48">
/* VTTTalk Unicode 0x1f48 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 52, 20, 0
OFFSET[R], 1082, -222, -1
SVTCA[Y]
CALL[], 53, 17, 0, 0, 18, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F49">
/* VTTTalk Unicode 0x1f49 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 52, 20, 0
OFFSET[R], 1097, -219, -1
SVTCA[Y]
CALL[], 45, 17, 0, 0, 18, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F4A">
/* VTTTalk Unicode 0x1f4a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 52, 70, 0
OFFSET[R], 1087, -568, -1
SVTCA[Y]
CALL[], 48, 17, 0, 0, 18, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F4B">
/* VTTTalk Unicode 0x1f4b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 52, 70, 0
OFFSET[R], 1090, -525, -1
SVTCA[Y]
CALL[], 48, 17, 0, 0, 18, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F4C">
/* VTTTalk Unicode 0x1f4c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 52, 70, 0
OFFSET[R], 1088, -472, -1
SVTCA[Y]
CALL[], 46, 17, 0, 0, 18, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F4D">
/* VTTTalk Unicode 0x1f4d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 52, 70, 0
OFFSET[R], 1091, -504, -1
SVTCA[Y]
CALL[], 46, 17, 0, 0, 18, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F50">
/* VTTTalk Unicode 0x1f50 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 586, 0, 0
OFFSET[R], 1082, 353, 87
SVTCA[Y]
CALL[], 35, 15, 1, 1, 142, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1F51">
/* VTTTalk Unicode 0x1f51 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 586, 0, 0
OFFSET[R], 1097, 325, 87
SVTCA[Y]
CALL[], 38, 15, 1, 1, 142, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1F52">
/* VTTTalk Unicode 0x1f52 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 586, 0, 0
OFFSET[R], 1087, 145, 87
SVTCA[Y]
CALL[], 33, 15, 1, 1, 161, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F53">
/* VTTTalk Unicode 0x1f53 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 586, 0, 0
OFFSET[R], 1090, 118, 87
SVTCA[Y]
CALL[], 33, 15, 1, 1, 161, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F54">
/* VTTTalk Unicode 0x1f54 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 586, 0, 0
OFFSET[R], 1088, 233, 87
SVTCA[Y]
CALL[], 31, 15, 1, 1, 161, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F55">
/* VTTTalk Unicode 0x1f55 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 586, 0, 0
OFFSET[R], 1091, 163, 87
SVTCA[Y]
CALL[], 31, 15, 1, 1, 161, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F56">
/* VTTTalk Unicode 0x1f56 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 586, 0, 0
OFFSET[R], 1089, 174, 87
SVTCA[Y]
CALL[], 59, 15, 1, 1, 142, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F57">
/* VTTTalk Unicode 0x1f57 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 586, 0, 0
OFFSET[R], 1092, 149, 87
SVTCA[Y]
CALL[], 38, 15, 1, 1, 142, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F59">
/* VTTTalk Unicode 0x1f59 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 62, 100, 0
OFFSET[R], 1097, -351, -1
SVTCA[Y]
CALL[], 10, 8, 0, 0, 38, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1F5B">
/* VTTTalk Unicode 0x1f5b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 62, 200, 0
OFFSET[R], 1090, -607, -1
SVTCA[Y]
CALL[], 13, 8, 0, 0, 38, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F5D">
/* VTTTalk Unicode 0x1f5d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 62, 200, 0
OFFSET[R], 1091, -586, -1
SVTCA[Y]
CALL[], 11, 8, 0, 0, 38, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F5F">
/* VTTTalk Unicode 0x1f5f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 62, 200, 0
OFFSET[R], 1092, -491, -1
SVTCA[Y]
CALL[], 36, 8, 0, 0, 219, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F60">
/* VTTTalk Unicode 0x1f60 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 1082, 658, 84
SVTCA[Y]
CALL[], 68, 31, 1, 1, 139, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F61">
/* VTTTalk Unicode 0x1f61 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 1097, 630, 84
SVTCA[Y]
CALL[], 71, 31, 1, 1, 139, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F62">
/* VTTTalk Unicode 0x1f62 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 1087, 450, 84
SVTCA[Y]
CALL[], 66, 31, 1, 1, 158, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F63">
/* VTTTalk Unicode 0x1f63 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 1090, 423, 84
SVTCA[Y]
CALL[], 66, 31, 1, 1, 158, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F64">
/* VTTTalk Unicode 0x1f64 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 1088, 538, 84
SVTCA[Y]
CALL[], 64, 31, 1, 1, 158, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F65">
/* VTTTalk Unicode 0x1f65 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 1091, 468, 84
SVTCA[Y]
CALL[], 64, 31, 1, 1, 158, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F66">
/* VTTTalk Unicode 0x1f66 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 1089, 479, 84
SVTCA[Y]
CALL[], 92, 31, 1, 1, 139, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F67">
/* VTTTalk Unicode 0x1f67 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 1092, 454, 84
SVTCA[Y]
CALL[], 71, 31, 1, 1, 139, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F68">
/* VTTTalk Unicode 0x1f68 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 569, 20, 0
OFFSET[R], 1082, -220, -1

    </glyphProgram>

    <glyphProgram name="uni1F69">
/* VTTTalk Unicode 0x1f69 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 569, 20, 0
OFFSET[R], 1097, -217, -1

    </glyphProgram>

    <glyphProgram name="uni1F6A">
/* VTTTalk Unicode 0x1f6a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 569, 70, 0
OFFSET[R], 1087, -566, -1

    </glyphProgram>

    <glyphProgram name="uni1F6B">
/* VTTTalk Unicode 0x1f6b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 569, 70, 0
OFFSET[R], 1090, -523, -1

    </glyphProgram>

    <glyphProgram name="uni1F6C">
/* VTTTalk Unicode 0x1f6c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 569, 70, 0
OFFSET[R], 1088, -470, -1

    </glyphProgram>

    <glyphProgram name="uni1F6D">
/* VTTTalk Unicode 0x1f6d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 569, 70, 0
OFFSET[R], 1091, -502, -1

    </glyphProgram>

    <glyphProgram name="uni1F6E">
/* VTTTalk Unicode 0x1f6e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 569, 70, 0
OFFSET[R], 1089, -395, -1

    </glyphProgram>

    <glyphProgram name="uni1F6F">
/* VTTTalk Unicode 0x1f6f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 569, 70, 0
OFFSET[R], 1092, -407, -1

    </glyphProgram>

    <glyphProgram name="uni1F70">
/* VTTTalk Unicode 0x1f70 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 1095, 286, 108
SVTCA[Y]
CALL[], 67, 6, 1, 1, 143, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F71">
/* VTTTalk Unicode 0x1f71 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 1096, 469, 108
SVTCA[Y]
CALL[], 71, 6, 1, 1, 143, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F72">
/* VTTTalk Unicode 0x1f72 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 574, 0, 0
OFFSET[R], 1095, 212, 107
SVTCA[Y]
CALL[], 65, 43, 1, 1, 143, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F73">
/* VTTTalk Unicode 0x1f73 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 574, 0, 0
OFFSET[R], 1096, 395, 107
SVTCA[Y]
CALL[], 69, 43, 1, 1, 143, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F74">
/* VTTTalk Unicode 0x1f74 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 1095, 239, 108
SVTCA[Y]
CALL[], 30, 3, 1, 1, 163, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F75">
/* VTTTalk Unicode 0x1f75 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 1096, 422, 108
SVTCA[Y]
CALL[], 34, 3, 1, 1, 163, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F76">
/* VTTTalk Unicode 0x1f76 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 578, 0, 0
OFFSET[R], 1095, -45, 87
SVTCA[Y]
CALL[], 19, 0, 1, 1, 142, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1F77">
/* VTTTalk Unicode 0x1f77 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 578, 0, 0
OFFSET[R], 1096, 138, 87
SVTCA[Y]
CALL[], 23, 0, 1, 1, 142, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1F78">
/* VTTTalk Unicode 0x1f78 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 1095, 236, 108
SVTCA[Y]
CALL[], 45, 6, 1, 1, 143, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F79">
/* VTTTalk Unicode 0x1f79 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 84, 0, 0
OFFSET[R], 1096, 419, 108
SVTCA[Y]
CALL[], 49, 6, 1, 1, 143, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F7A">
/* VTTTalk Unicode 0x1f7a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 586, 0, 0
OFFSET[R], 1095, 204, 87
SVTCA[Y]
CALL[], 32, 15, 1, 1, 142, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1F7B">
/* VTTTalk Unicode 0x1f7b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 586, 0, 0
OFFSET[R], 1096, 387, 87
SVTCA[Y]
CALL[], 36, 15, 1, 1, 142, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1F7C">
/* VTTTalk Unicode 0x1f7c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 1095, 509, 84
SVTCA[Y]
CALL[], 65, 31, 1, 1, 139, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F7D">
/* VTTTalk Unicode 0x1f7d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 1096, 692, 84
SVTCA[Y]
CALL[], 69, 31, 1, 1, 139, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1F80">
/* VTTTalk Unicode 0x1f80 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 1083, 355, -10
OFFSET[R], 1082, 435, 108
SVTCA[Y]
CALL[], 87, 6, 1, 1, 143, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F81">
/* VTTTalk Unicode 0x1f81 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 1083, 355, -10
OFFSET[R], 1097, 407, 108
SVTCA[Y]
CALL[], 90, 6, 1, 1, 143, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F82">
/* VTTTalk Unicode 0x1f82 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 1083, 355, -10
OFFSET[R], 1087, 227, 108
SVTCA[Y]
CALL[], 85, 6, 1, 1, 162, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1F83">
/* VTTTalk Unicode 0x1f83 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 1083, 355, -10
OFFSET[R], 1090, 200, 108
SVTCA[Y]
CALL[], 85, 6, 1, 1, 162, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1F84">
/* VTTTalk Unicode 0x1f84 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 1083, 355, -10
OFFSET[R], 1088, 315, 108
SVTCA[Y]
CALL[], 83, 6, 1, 1, 162, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1F85">
/* VTTTalk Unicode 0x1f85 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 1083, 355, -10
OFFSET[R], 1091, 245, 108
SVTCA[Y]
CALL[], 83, 6, 1, 1, 162, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1F86">
/* VTTTalk Unicode 0x1f86 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 1083, 355, -10
OFFSET[R], 1089, 256, 108
SVTCA[Y]
CALL[], 111, 6, 1, 1, 143, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1F87">
/* VTTTalk Unicode 0x1f87 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 1083, 355, -10
OFFSET[R], 1092, 231, 108
SVTCA[Y]
CALL[], 90, 6, 1, 1, 143, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1F88">
/* VTTTalk Unicode 0x1f88 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1083, 492, 0
OFFSET[R], 1082, -29, -1
SVTCA[Y]
CALL[], 40, 3, 0, 0, 38, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F89">
/* VTTTalk Unicode 0x1f89 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1083, 492, 0
OFFSET[R], 1097, -26, -1
SVTCA[Y]
CALL[], 32, 3, 0, 0, 38, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F8A">
/* VTTTalk Unicode 0x1f8a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1083, 492, 0
OFFSET[R], 1087, -425, -1
SVTCA[Y]
CALL[], 35, 3, 0, 0, 38, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1F8B">
/* VTTTalk Unicode 0x1f8b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1083, 492, 0
OFFSET[R], 1090, -382, -1
SVTCA[Y]
CALL[], 35, 3, 0, 0, 38, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1F8C">
/* VTTTalk Unicode 0x1f8c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1083, 492, 0
OFFSET[R], 1088, -329, -1
SVTCA[Y]
CALL[], 33, 3, 0, 0, 38, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1F8D">
/* VTTTalk Unicode 0x1f8d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1083, 492, 0
OFFSET[R], 1091, -361, -1
SVTCA[Y]
CALL[], 33, 3, 0, 0, 38, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1F8E">
/* VTTTalk Unicode 0x1f8e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1083, 492, 0
OFFSET[R], 1089, -254, -1
SVTCA[Y]
CALL[], 48, 3, 0, 0, 219, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1F8F">
/* VTTTalk Unicode 0x1f8f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1083, 492, 0
OFFSET[R], 1092, -266, -1
SVTCA[Y]
CALL[], 58, 3, 0, 0, 219, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1F90">
/* VTTTalk Unicode 0x1f90 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 1083, 45, 10
OFFSET[R], 1082, 388, 108
SVTCA[Y]
CALL[], 50, 3, 1, 1, 163, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F91">
/* VTTTalk Unicode 0x1f91 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 1083, 45, 10
OFFSET[R], 1097, 360, 108
SVTCA[Y]
CALL[], 53, 3, 1, 1, 163, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1F92">
/* VTTTalk Unicode 0x1f92 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 1083, 45, 10
OFFSET[R], 1087, 180, 108
SVTCA[Y]
CALL[], 48, 3, 1, 1, 182, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F93">
/* VTTTalk Unicode 0x1f93 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 1083, 45, 10
OFFSET[R], 1090, 153, 108
SVTCA[Y]
CALL[], 48, 3, 1, 1, 182, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F94">
/* VTTTalk Unicode 0x1f94 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 1083, 45, 10
OFFSET[R], 1088, 268, 108
SVTCA[Y]
CALL[], 46, 3, 1, 1, 182, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F95">
/* VTTTalk Unicode 0x1f95 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 1083, 45, 10
OFFSET[R], 1091, 198, 108
SVTCA[Y]
CALL[], 46, 3, 1, 1, 182, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F96">
/* VTTTalk Unicode 0x1f96 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 1083, 45, 10
OFFSET[R], 1089, 209, 108
SVTCA[Y]
CALL[], 74, 3, 1, 1, 163, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F97">
/* VTTTalk Unicode 0x1f97 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 1083, 45, 10
OFFSET[R], 1092, 184, 108
SVTCA[Y]
CALL[], 53, 3, 1, 1, 163, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F98">
/* VTTTalk Unicode 0x1f98 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 45, 100, 0
OFFSET[R], 1083, 620, 10
OFFSET[R], 1082, -318, 2
SVTCA[Y]
CALL[], 38, 7, 1, 1, 41, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F99">
/* VTTTalk Unicode 0x1f99 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 45, 100, 0
OFFSET[R], 1083, 620, 10
OFFSET[R], 1097, -315, 2
SVTCA[Y]
CALL[], 30, 7, 0, 0, 41, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1F9A">
/* VTTTalk Unicode 0x1f9a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 45, 150, 0
OFFSET[R], 1083, 670, 10
OFFSET[R], 1087, -664, 2
SVTCA[Y]
CALL[], 33, 7, 0, 0, 41, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1F9B">
/* VTTTalk Unicode 0x1f9b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 45, 150, 0
OFFSET[R], 1083, 670, 10
OFFSET[R], 1090, -621, 2
SVTCA[Y]
CALL[], 33, 7, 0, 0, 41, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1F9C">
/* VTTTalk Unicode 0x1f9c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 45, 150, 0
OFFSET[R], 1083, 670, 10
OFFSET[R], 1088, -568, 2
SVTCA[Y]
CALL[], 31, 7, 0, 0, 41, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1F9D">
/* VTTTalk Unicode 0x1f9d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 45, 150, 0
OFFSET[R], 1083, 670, 10
OFFSET[R], 1091, -600, 2
SVTCA[Y]
CALL[], 31, 7, 0, 0, 41, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1F9E">
/* VTTTalk Unicode 0x1f9e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 45, 150, 0
OFFSET[R], 1083, 670, 10
OFFSET[R], 1089, -493, 2
SVTCA[Y]
CALL[], 46, 7, 0, 0, 222, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1F9F">
/* VTTTalk Unicode 0x1f9f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 45, 150, 0
OFFSET[R], 1083, 670, 10
OFFSET[R], 1092, -505, 2
SVTCA[Y]
CALL[], 56, 7, 0, 0, 222, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1FA0">
/* VTTTalk Unicode 0x1fa0 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 1083, 649, -10
OFFSET[R], 1082, 658, 84
SVTCA[Y]
CALL[], 85, 31, 1, 1, 139, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1FA1">
/* VTTTalk Unicode 0x1fa1 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 1083, 649, -10
OFFSET[R], 1097, 630, 84
SVTCA[Y]
CALL[], 88, 31, 1, 1, 139, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1FA2">
/* VTTTalk Unicode 0x1fa2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 1083, 649, -10
OFFSET[R], 1087, 450, 84
SVTCA[Y]
CALL[], 83, 31, 1, 1, 158, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1FA3">
/* VTTTalk Unicode 0x1fa3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 1083, 649, -10
OFFSET[R], 1090, 423, 84
SVTCA[Y]
CALL[], 83, 31, 1, 1, 158, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1FA4">
/* VTTTalk Unicode 0x1fa4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 1083, 649, -10
OFFSET[R], 1088, 538, 84
SVTCA[Y]
CALL[], 81, 31, 1, 1, 158, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1FA5">
/* VTTTalk Unicode 0x1fa5 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 1083, 649, -10
OFFSET[R], 1091, 468, 84
SVTCA[Y]
CALL[], 81, 31, 1, 1, 158, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1FA6">
/* VTTTalk Unicode 0x1fa6 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 1083, 649, -10
OFFSET[R], 1089, 479, 84
SVTCA[Y]
CALL[], 109, 31, 1, 1, 139, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1FA7">
/* VTTTalk Unicode 0x1fa7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 1083, 649, -10
OFFSET[R], 1092, 454, 84
SVTCA[Y]
CALL[], 88, 31, 1, 1, 139, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1FA8">
/* VTTTalk Unicode 0x1fa8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 569, 20, 0
OFFSET[R], 1083, 505, 10
OFFSET[R], 1082, -220, -1

    </glyphProgram>

    <glyphProgram name="uni1FA9">
/* VTTTalk Unicode 0x1fa9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 569, 20, 0
OFFSET[R], 1083, 505, 10
OFFSET[R], 1097, -217, -1

    </glyphProgram>

    <glyphProgram name="uni1FAA">
/* VTTTalk Unicode 0x1faa */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 569, 70, 0
OFFSET[R], 1083, 555, 10
OFFSET[R], 1087, -566, -1

    </glyphProgram>

    <glyphProgram name="uni1FAB">
/* VTTTalk Unicode 0x1fab */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 569, 70, 0
OFFSET[R], 1083, 555, 10
OFFSET[R], 1090, -523, -1

    </glyphProgram>

    <glyphProgram name="uni1FAC">
/* VTTTalk Unicode 0x1fac */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 569, 70, 0
OFFSET[R], 1083, 555, 10
OFFSET[R], 1088, -470, -1

    </glyphProgram>

    <glyphProgram name="uni1FAD">
/* VTTTalk Unicode 0x1fad */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 569, 70, 0
OFFSET[R], 1083, 555, 10
OFFSET[R], 1091, -502, -1

    </glyphProgram>

    <glyphProgram name="uni1FAE">
/* VTTTalk Unicode 0x1fae */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 569, 70, 0
OFFSET[R], 1083, 555, 10
OFFSET[R], 1089, -395, -1

    </glyphProgram>

    <glyphProgram name="uni1FAF">
/* VTTTalk Unicode 0x1faf */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 569, 70, 0
OFFSET[R], 1083, 555, 10
OFFSET[R], 1092, -407, -1

    </glyphProgram>

    <glyphProgram name="uni1FB0">
/* VTTTalk Unicode 0x1fb0 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 393, 196, 0
SVTCA[Y]
CALL[], 71, 6, 1, 1, 126, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1FB1">
/* VTTTalk Unicode 0x1fb1 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 113, 152, 8
SVTCA[Y]
CALL[], 68, 6, 1, 1, 209, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1FB2">
/* VTTTalk Unicode 0x1fb2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 1083, 355, -10
OFFSET[R], 1095, 286, 108
SVTCA[Y]
CALL[], 84, 6, 1, 1, 143, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1FB3">
/* VTTTalk Unicode 0x1fb3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 1083, 355, -10

    </glyphProgram>

    <glyphProgram name="uni1FB4">
/* VTTTalk Unicode 0x1fb4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 1083, 355, -10
OFFSET[R], 1096, 469, 108
SVTCA[Y]
CALL[], 88, 6, 1, 1, 143, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1FB6">
/* VTTTalk Unicode 0x1fb6 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 1085, 271, 102
SVTCA[Y]
CALL[], 80, 6, 1, 1, 248, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1FB7">
/* VTTTalk Unicode 0x1fb7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 570, 0, 0
OFFSET[R], 1083, 355, -10
OFFSET[R], 1085, 271, 102
SVTCA[Y]
CALL[], 97, 6, 1, 1, 248, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1FB8">
/* VTTTalk Unicode 0x1fb8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 393, 243, 311
SVTCA[Y]
CALL[], 19, 7, 1, 1, 83, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1FB9">
/* VTTTalk Unicode 0x1fb9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 113, 199, 319
SVTCA[Y]
CALL[], 16, 3, 1, 1, 166, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1FBA">
/* VTTTalk Unicode 0x1fba */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1095, -134, -1
SVTCA[Y]
CALL[], 17, 3, 0, 0, 18, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1FBB">
/* VTTTalk Unicode 0x1fbb */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1096, -64, -1
SVTCA[Y]
CALL[], 15, 3, 1, 0, 18, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1FBC">
/* VTTTalk Unicode 0x1fbc */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 38, 0, 0
OFFSET[R], 1083, 492, 0

    </glyphProgram>

    <glyphProgram name="uni1FBD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1FBE">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 12
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1FBF">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RGr], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1FC0">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 23
SHP[1], 13
SRP1[], 13
SHP[1], 14
SMD[], 128
MDRP[m&gt;RBl], 18
SHP[2], 10
SHP[2], 0
SRP1[], 0
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1FC1">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 9
SHP[1], 15
SRP1[], 15
SHP[1], 21
MDRP[M&gt;RWh], 29
SHP[2], 45
SHP[2], 36
SRP1[], 36
SHP[1], 37
SMD[], 128
MDRP[m&gt;RBl], 41
SHP[2], 33
SHP[2], 24
SRP1[], 24
SHP[1], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1FC2">
/* VTTTalk Unicode 0x1fc2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 1083, 45, 10
OFFSET[R], 1095, 239, 108
SVTCA[Y]
CALL[], 47, 3, 1, 1, 163, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1FC3">
/* VTTTalk Unicode 0x1fc3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 1083, 45, 10

    </glyphProgram>

    <glyphProgram name="uni1FC4">
/* VTTTalk Unicode 0x1fc4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 1083, 45, 10
OFFSET[R], 1096, 422, 108
SVTCA[Y]
CALL[], 51, 3, 1, 1, 143, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1FC6">
/* VTTTalk Unicode 0x1fc6 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 1085, 224, 102
SVTCA[Y]
CALL[], 43, 3, 1, 1, 268, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1FC7">
/* VTTTalk Unicode 0x1fc7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 1083, 45, 10
OFFSET[R], 1085, 224, 102
SVTCA[Y]
CALL[], 60, 3, 1, 1, 268, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1FC8">
/* VTTTalk Unicode 0x1fc8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 42, 100, 0
OFFSET[R], 1095, -437, 0
SVTCA[Y]
CALL[], 19, 7, 0, 0, 19, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1FC9">
/* VTTTalk Unicode 0x1fc9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 42, 100, 0
OFFSET[R], 1096, -367, 0
SVTCA[Y]
CALL[], 17, 7, 0, 0, 19, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1FCA">
/* VTTTalk Unicode 0x1fca */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 45, 100, 0
OFFSET[R], 1095, -423, 2
SVTCA[Y]
CALL[], 15, 7, 0, 0, 21, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1FCB">
/* VTTTalk Unicode 0x1fcb */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 45, 100, 0
OFFSET[R], 1096, -353, 2
SVTCA[Y]
CALL[], 13, 7, 0, 0, 21, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1FCC">
/* VTTTalk Unicode 0x1fcc */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 1083, 520, 10

    </glyphProgram>

    <glyphProgram name="uni1FCD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 15
SHP[1], 4
SRP1[], 4
SHP[1], 3
MDRP[m&gt;RGr], 10
SHP[2], 2
MDAP[R], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1FCE">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 15
SHP[1], 2
MDRP[m&gt;RGr], 10
SHP[2], 0
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1FCF">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 33
MDRP[m&gt;RBl], 28
MDRP[m&gt;RWh], 5
SHP[2], 21
SHP[2], 17
MDAP[R], 17
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1FD0">
/* VTTTalk Unicode 0x1fd0 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 578, 0, 0
OFFSET[R], 393, -135, -21
SVTCA[Y]
CALL[], 23, 0, 1, 1, 125, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1FD1">
/* VTTTalk Unicode 0x1fd1 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 578, 0, 0
OFFSET[R], 113, -179, -13

/*SVTCA[Y]
CALL[], 20, 0, 1, 1, 208, 86
SHC[2], 1*/

SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RWh], 20

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1FD2">
/* VTTTalk Unicode 0x1fd2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 578, 0, 0
OFFSET[R], 1093, -152, 87
SVTCA[Y]
CALL[], 39, 0, 1, 1, 246, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1FD3">
/* VTTTalk Unicode 0x1fd3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 578, 0, 0
OFFSET[R], 1094, -125, 87
SVTCA[Y]
CALL[], 39, 0, 1, 1, 246, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1FD6">
/* VTTTalk Unicode 0x1fd6 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 578, 0, 0
OFFSET[R], 1085, -60, 81
SVTCA[Y]
CALL[], 32, 0, 1, 1, 247, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1FD7">
/* VTTTalk Unicode 0x1fd7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 578, 0, 0
OFFSET[R], 1086, -153, 81
SVTCA[Y]
CALL[], 39, 0, 1, 1, 237, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1FD8">
/* VTTTalk Unicode 0x1fd8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 393, -150, 322
SVTCA[Y]
CALL[], 9, 3, 1, 1, 94, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1FD9">
/* VTTTalk Unicode 0x1fd9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 113, -194, 330
SVTCA[Y]
CALL[], 6, 3, 1, 1, 177, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1FDA">
/* VTTTalk Unicode 0x1fda */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 1095, -60, 430
SVTCA[Y]
CALL[], 5, 3, 1, 1, 111, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1FDB">
/* VTTTalk Unicode 0x1fdb */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 46, 0, 0
OFFSET[R], 1096, 123, 430
SVTCA[Y]
CALL[], 9, 3, 1, 1, 111, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1FDD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 4
MDRP[m&gt;RBl], 13
SHP[2], 2
MDAP[R], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1FDE">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 2
MDAP[R], 2
SRP0[], 7
MDRP[m&gt;RBl], 13
SHP[2], 5
MDAP[R], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1FDF">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RBl], 7
MDRP[m&gt;RWh], 15
SHP[2], 31
SHP[2], 27
MDAP[R], 27
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1FE0">
/* VTTTalk Unicode 0x1fe0 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 586, 0, 0
OFFSET[R], 393, 114, -21
SVTCA[Y]
CALL[], 36, 15, 1, 1, 125, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1FE1">
/* VTTTalk Unicode 0x1fe1 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 586, 0, 0
OFFSET[R], 113, 70, -13
SVTCA[Y]
CALL[], 33, 0, 1, 1, 208, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1FE2">
/* VTTTalk Unicode 0x1fe2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 586, 0, 0
OFFSET[R], 1093, 97, 87
SVTCA[Y]
CALL[], 52, 15, 1, 1, 246, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1FE3">
/* VTTTalk Unicode 0x1fe3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 586, 0, 0
OFFSET[R], 1094, 124, 87
SVTCA[Y]
CALL[], 52, 15, 1, 1, 246, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1FE4">
/* VTTTalk Unicode 0x1fe4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 582, 0, 0
OFFSET[R], 1082, 403, 99
SVTCA[Y]
CALL[], 52, 6, 1, 1, 134, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1FE5">
/* VTTTalk Unicode 0x1fe5 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 582, 0, 0
OFFSET[R], 1097, 375, 99
SVTCA[Y]
CALL[], 55, 6, 1, 1, 134, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1FE6">
/* VTTTalk Unicode 0x1fe6 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 586, 0, 0
OFFSET[R], 1085, 189, 81
SVTCA[Y]
CALL[], 45, 0, 1, 1, 247, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1FE7">
/* VTTTalk Unicode 0x1fe7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 586, 0, 0
OFFSET[R], 1086, 96, 81
SVTCA[Y]
CALL[], 52, 15, 1, 1, 237, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1FE8">
/* VTTTalk Unicode 0x1fe8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 62, 0, 0
OFFSET[R], 393, 189, 310
SVTCA[Y]
CALL[], 14, 2, 1, 1, 82, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1FE9">
/* VTTTalk Unicode 0x1fe9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 62, 0, 0
OFFSET[R], 113, 145, 318
SVTCA[Y]
CALL[], 11, 8, 1, 1, 165, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1FEA">
/* VTTTalk Unicode 0x1fea */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 62, 100, 0
OFFSET[R], 1095, -459, -1
SVTCA[Y]
CALL[], 12, 8, 0, 0, 18, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1FEB">
/* VTTTalk Unicode 0x1feb */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 62, 100, 0
OFFSET[R], 1096, -389, -1
SVTCA[Y]
CALL[], 10, 8, 1, 0, 18, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1FEC">
/* VTTTalk Unicode 0x1fec */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 53, 100, 0
OFFSET[R], 1097, -265, -1
SVTCA[Y]
CALL[], 25, 15, 0, 0, 38, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1FED">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
SHP[1], 3
SHP[1], 21
SRP1[], 21
SHP[1], 15
SRP1[], 9
SHP[1], 26
MDAP[R], 26
SMD[], 128
MDRP[m&gt;RBl], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1FEE">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
SHP[1], 3
SHP[1], 21
SHP[1], 24
MDAP[R], 24
SMD[], 128
MDRP[m&gt;RBl], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1FEF">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SMD[], 128
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1FF2">
/* VTTTalk Unicode 0x1ff2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 1083, 649, -10
OFFSET[R], 1095, 509, 84
SVTCA[Y]
CALL[], 82, 31, 1, 1, 139, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1FF3">
/* VTTTalk Unicode 0x1ff3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 1083, 649, -10

    </glyphProgram>

    <glyphProgram name="uni1FF4">
/* VTTTalk Unicode 0x1ff4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 1083, 649, -10
OFFSET[R], 1096, 692, 84
SVTCA[Y]
CALL[], 86, 31, 1, 1, 139, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1FF6">
/* VTTTalk Unicode 0x1ff6 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 1085, 494, 78
SVTCA[Y]
CALL[], 78, 31, 1, 1, 244, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1FF7">
/* VTTTalk Unicode 0x1ff7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 589, 0, 0
OFFSET[R], 1083, 649, -10
OFFSET[R], 1085, 494, 78
SVTCA[Y]
CALL[], 95, 31, 1, 1, 244, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1FF8">
/* VTTTalk Unicode 0x1ff8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 52, 20, 0
OFFSET[R], 1095, -327, -1
SVTCA[Y]
CALL[], 47, 17, 2, 0, -2, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1FF9">
/* VTTTalk Unicode 0x1ff9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 52, 20, 0
OFFSET[R], 1096, -257, -1
SVTCA[Y]
CALL[], 45, 17, 1, 0, -2, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1FFA">
/* VTTTalk Unicode 0x1ffa */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 569, 20, 0
OFFSET[R], 1095, -325, -1

    </glyphProgram>

    <glyphProgram name="uni1FFB">
/* VTTTalk Unicode 0x1ffb */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 569, 20, 0
OFFSET[R], 1096, -255, -1

    </glyphProgram>

    <glyphProgram name="uni1FFC">
/* VTTTalk Unicode 0x1ffc */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 569, 0, 0
OFFSET[R], 1083, 485, 10

    </glyphProgram>

    <glyphProgram name="uni1FFD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SMD[], 128
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1FFE">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RBl], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2000">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni2001">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni2002">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni2003">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni2004">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni2005">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni2006">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni2007">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni2008">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni2009">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni2009.fra">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni200A">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni200B">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni2015">
/* VTTTalk Unicode 0x2015 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1119, 0, 0

    </glyphProgram>

    <glyphProgram name="uni2025">
/* VTTTalk Unicode 0x2025 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 19, 4, 0
OFFSET[R], 19, 441, 0

    </glyphProgram>

    <glyphProgram name="uni202F">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni2045">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 10
SHP[1], 7
MDAP[R], 11
SHP[1], 6
SRP2[], 10
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2046">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 4
MDAP[R], 8
SHP[1], 9
SRP2[], 5
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2047">
/* VTTTalk Unicode 0x2047 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 36, 0, 0
OFFSET[R], 36, 968, 0

    </glyphProgram>

    <glyphProgram name="uni2048">
/* VTTTalk Unicode 0x2048 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 36, 0, 0
OFFSET[R], 6, 968, 0

    </glyphProgram>

    <glyphProgram name="uni2049">
/* VTTTalk Unicode 0x2049 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 6, 0, 0
OFFSET[R], 36, 528, 0

    </glyphProgram>

    <glyphProgram name="uni204A">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 1, 6
SHP[1], 0
CALL[], 3, 14, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni204B">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 2
MDAP[R], 2
CALL[], 11, 2, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni204C">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 12
MDAP[R], 3
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni204D">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 11
MDAP[R], 2
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni204E">
/* VTTTalk Unicode 0x204e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 15, 52, -1034

    </glyphProgram>

    <glyphProgram name="uni204F">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 3, 7
SHP[1], 9
MDAP[R], 17
MDRP[m&gt;RBl], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2050">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 8
MDRP[m&gt;RGr], 5
SHP[2], 4
SHP[2], 11
SRP1[], 11
SHP[1], 12
MDAP[R], 17
SHP[1], 25
MDRP[m&gt;RGr], 22
SHP[2], 21
SHP[2], 28
SRP1[], 28
SHP[1], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2051">
/* VTTTalk Unicode 0x2051 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 15, 52, 0
OFFSET[R], 15, 52, -1032

    </glyphProgram>

    <glyphProgram name="uni2052">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MIAP[R], 3, 2
SRP2[], 1
IP[], 25
IP[], 7
MDAP[R], 25
MDAP[R], 7
SRP1[], 25
SHP[1], 19
SRP1[], 7
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2053">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 16
SHP[1], 9
MDRP[m&gt;RBl], 4
SHP[2], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2054">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 8
MDRP[m&gt;RGr], 11
SHP[2], 12
SHP[2], 5
SRP1[], 5
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2055">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
MDRP[m&gt;RGr], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2056">
/* VTTTalk Unicode 0x2056 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 468, 774, 732
OFFSET[R], 468, 1327, 328
OFFSET[R], 468, 1327, 1136

    </glyphProgram>

    <glyphProgram name="uni2057">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
MDAP[R], 0
SHP[2], 4
SRP1[], 4
SHP[1], 8
SRP1[], 8
SHP[1], 12
SRP1[], 1
SHP[1], 5
SRP1[], 5
SHP[1], 9
SRP1[], 9
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2058">
/* VTTTalk Unicode 0x2058 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 468, 774, 732
OFFSET[R], 468, 1192, 328
OFFSET[R], 468, 1610, 732
OFFSET[R], 468, 1192, 1136

    </glyphProgram>

    <glyphProgram name="uni2059">
/* VTTTalk Unicode 0x2059 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 468, 774, 1136
OFFSET[R], 468, 1520, 328
OFFSET[R], 468, 774, 328
OFFSET[R], 468, 1520, 1136
OFFSET[R], 468, 1148, 732

    </glyphProgram>

    <glyphProgram name="uni205A">
/* VTTTalk Unicode 0x205a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 468, 774, 328
OFFSET[R], 468, 774, 1500

    </glyphProgram>

    <glyphProgram name="uni205B">
/* VTTTalk Unicode 0x205b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 468, 774, 928
OFFSET[R], 468, 1466, 928
OFFSET[R], 468, 1120, 328
OFFSET[R], 468, 1120, 1500

    </glyphProgram>

    <glyphProgram name="uni205C">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni205D">
/* VTTTalk Unicode 0x205d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 468, 774, 1500
OFFSET[R], 468, 774, 913
OFFSET[R], 468, 774, 328

    </glyphProgram>

    <glyphProgram name="uni205E">
/* VTTTalk Unicode 0x205e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 468, 774, 1500
OFFSET[R], 468, 774, 1107
OFFSET[R], 468, 774, 718
OFFSET[R], 468, 774, 328

    </glyphProgram>

    <glyphProgram name="uni205F">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni2071">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDRP[M&gt;RBl], 0
MDRP[m&lt;RWh], 13
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2071.ccmp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2074">
/* VTTTalk Unicode 0x2074 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1954, 0, 667

    </glyphProgram>

    <glyphProgram name="uni2090">
/* VTTTalk Unicode 0x2090 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 882, 0, -1067

    </glyphProgram>

    <glyphProgram name="uni2091">
/* VTTTalk Unicode 0x2091 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 888, 0, -1073

    </glyphProgram>

    <glyphProgram name="uni2092">
/* VTTTalk Unicode 0x2092 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 897, 0, -1073

    </glyphProgram>

    <glyphProgram name="uni2093">
/* VTTTalk Unicode 0x2093 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 404, 0, -1068

    </glyphProgram>

    <glyphProgram name="uni2094">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
SHP[1], 24
SMD[], 192
MDRP[m&gt;RGr], 0
SHP[2], 34
IP[], 19
IP[], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2095">
/* VTTTalk Unicode 0x2095 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 354, 0, -1067

    </glyphProgram>

    <glyphProgram name="uni2096">
/* VTTTalk Unicode 0x2096 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 894, 0, -1067

    </glyphProgram>

    <glyphProgram name="uni2097">
/* VTTTalk Unicode 0x2097 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 402, 18, -1067

    </glyphProgram>

    <glyphProgram name="uni2098">
/* VTTTalk Unicode 0x2098 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 895, 0, -1067

    </glyphProgram>

    <glyphProgram name="uni2099">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 17
SHP[1], 24
MDAP[R], 24
MDAP[R], 11
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni209A">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 22
SHP[1], 3
MDAP[R], 3
SRP1[], 22
SHP[1], 32
IP[], 11
MDAP[R], 11
SHP[1], 41
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni209B">
/* VTTTalk Unicode 0x209b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 403, 0, -1073

    </glyphProgram>

    <glyphProgram name="uni209C">
/* VTTTalk Unicode 0x209c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 902, 0, -1073

    </glyphProgram>

    <glyphProgram name="uni20AB">
/* VTTTalk Unicode 0x20ab */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 73, 0, 0
OFFSET[R], 1960, 417, 582
OFFSET[R], 68, 159, -157
SVTCA[Y]
CALL[], 50, 11, 1, 1, 131, 86
SHC[2], 3
CALL[], 55, 22, 1, 1, -137, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni20AD">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 12, 114
SHP[2], 14
CALL[], 7, 4, 114
SHP[2], 13
SRP2[], 6
IP[], 2
MDAP[R], 2
SHP[1], 3
SRP1[], 3
SHP[1], 11
SRP1[], 2
SHP[1], 10
SRP1[], 10
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20AE">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 10, 12
CALL[], 15, 4, 114
SHP[2], 11
SHP[2], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20AF">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 21, 5, 114
SHP[2], 12
MDRP[m&gt;RWh], 32
CALL[], 37, 13, 114
SHP[2], 68
SHP[2], 45
MDAP[R], 45
SHP[1], 62
CALL[], 56, 13, 114
SHP[2], 0
SHP[2], 1
MDAP[R], 85
SHP[1], 120
CALL[], 96, 13, 114
SHP[2], 109
MDAP[R], 126
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20B0">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 39
SHP[1], 50
MDAP[R], 66
SHP[1], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20B1">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 22, 12, 114
CALL[], 23, 4, 114
SRP2[], 22
IP[], 10
RDTG[]
MDAP[R], 10
SHP[1], 9
SRP1[], 23
SHP[1], 20
SRP1[], 10
SRP2[], 20
IP[], 2
RTG[]
MDAP[R], 2
SHP[1], 3
MDRP[m&gt;RWh], 7
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20B2">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 13, 114
MDRP[m&gt;RBl], 2
SHP[1], 41
CALL[], 20, 5, 114
MDRP[m&gt;RBl], 3
MDRP[m&gt;RGr], 25
SHP[1], 29
SRP2[], 9
IP[], 47
MDAP[R], 47
SHP[1], 48
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20B3">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 9, 12
CALL[], 11, 4, 114
SHP[2], 15
SRP2[], 9
IP[], 7
MDAP[R], 7
SHP[1], 6
MDRP[m&gt;RWh], 2
SHP[2], 3
SHP[1], 21
SRP1[], 21
SHP[1], 20
SRP1[], 11
SHP[1], 14
SRP1[], 14
SHP[1], 8
MIAP[R], 13, 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20B4">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 8, 5, 114
SHP[2], 0
MDRP[m&gt;RGr], 3
CALL[], 32, 13, 114
SHP[2], 48
MDRP[m&gt;RGr], 52
SRP2[], 8
IP[], 30
MDAP[R], 30
MDRP[m&gt;RWh], 25
SHP[2], 26
SRP1[], 26
SHP[1], 16
SRP1[], 30
SHP[1], 29
SRP1[], 29
SHP[1], 40
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20B4.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 9, 126
SHP[1], 17
MIAP[R], 34, 11
SHP[1], 43
SRP2[], 9
IP[], 57
MDAP[R], 57
MDRP[m&gt;RWh], 52
SHP[2], 25
SHP[2], 53
SHP[1], 56
SRP1[], 56
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20B5">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 13, 114
MDRP[m&gt;RBl], 2
MDRP[m&gt;RGr], 4
SHP[1], 41
CALL[], 20, 5, 114
MDRP[m&gt;RBl], 3
MDRP[m&gt;RGr], 25
SHP[1], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20B6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 17
SHP[1], 10
SHP[1], 25
MDAP[R], 25
MDAP[R], 23
SRP2[], 17
IP[], 3
MDAP[R], 3
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20B7">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 62, 5, 114
MDRP[m&gt;RGr], 67
SHP[1], 71
CALL[], 90, 13, 114
MDRP[m&gt;RGr], 37
SHP[2], 11
SRP1[], 11
SHP[1], 22
SRP1[], 90
SHP[1], 101
SRP1[], 101
SHP[1], 32
MDAP[R], 32
SHP[1], 43
SHP[1], 6
SRP1[], 6
SHP[1], 17
SHP[1], 25
SRP1[], 25
SHP[1], 95
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20B8">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 12
CALL[], 11, 4, 114
SHP[2], 10
SMD[], 128
RUTG[]
MDRP[m&gt;RWh], 7
SHP[2], 3
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20B8.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
MIAP[R], 11, 125
SHP[1], 10
SMD[], 128
MDRP[m&gt;RWh], 7
SHP[2], 3
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20B9">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 4, 12
CALL[], 17, 4, 114
SHP[2], 16
SRP2[], 4
IP[], 26
IP[], 2
RDTG[]
MDAP[R], 26
MDAP[R], 2
SRP1[], 26
SHP[1], 6
SRP1[], 6
SHP[1], 5
SRP1[], 2
SHP[1], 3
SRP1[], 17
SHP[1], 32
SRP1[], 32
SHP[1], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20BA">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 3, 4
MIAP[R], 11, 13
SHP[1], 1
SHP[1], 15
SRP2[], 3
IP[], 4
MDAP[R], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20BB">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 5
MIAP[R], 33, 4
SHP[1], 16
SHP[1], 25
MDAP[R], 25
SHP[1], 22
SHP[1], 50
SRP2[], 6
SLOOP[], 4
IP[], 61, 63, 39, 41
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20BC">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 30, 10
SHP[1], 1
SHP[1], 14
CALL[], 31, 6, 114
SRP2[], 30
IP[], 21
MDAP[R], 21
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20BD">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 14, 12
CALL[], 15, 4, 114
SHP[2], 12
SRP2[], 14
IP[], 0
MDAP[R], 0
SHP[1], 3
MDRP[m&gt;RWh], 24
SHP[2], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20BD.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 14, 10
MIAP[R], 15, 125
SHP[1], 12
SRP2[], 14
IP[], 1
RUTG[]
MDAP[R], 1
SHP[1], 2
RTG[]
MDRP[m&gt;RWh], 28
SHP[2], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20BE">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 5, 114
SHP[2], 2
MIAP[R], 8, 12
SHP[1], 9
SHP[1], 43
IP[], 22
MDAP[R], 22
SHP[1], 33
SHP[1], 28
MDAP[R], 28
SHP[1], 0
SRP1[], 0
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20DB">
/* VTTTalk Unicode 0x20db */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 19, -1286, 1300
OFFSET[R], 19, -849, 1300
OFFSET[R], 19, -434, 1300

    </glyphProgram>

    <glyphProgram name="uni20DC">
/* VTTTalk Unicode 0x20dc */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 19, -1483, 1300
OFFSET[R], 19, -1046, 1300
OFFSET[R], 19, -631, 1300
OFFSET[R], 19, -226, 1300

    </glyphProgram>

    <glyphProgram name="uni20E3">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
MDAP[R], 20
SHP[1], 33
SRP1[], 7
SHP[1], 46
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20E8">
/* VTTTalk Unicode 0x20e8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 19, -1286, -500
OFFSET[R], 19, -849, -500
OFFSET[R], 19, -434, -500

    </glyphProgram>

    <glyphProgram name="uni20F0">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RGr], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2105">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 5, 114
SHP[2], 22
SHP[2], 73
MDAP[R], 73
SRP0[], 14
MDRP[m&gt;RGr], 5
SHP[2], 31
CALL[], 48, 13, 114
SHP[2], 57
SHP[2], 71
MDAP[R], 71
SRP0[], 48
MDRP[m&gt;RGr], 39
SHP[2], 66
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2113">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
MDAP[R], 12
SHP[1], 36
SRP2[], 1
IP[], 24
MDAP[R], 24
SHP[1], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2116">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 45, 12
SHP[1], 42
MIAP[R], 46, 4
SHP[1], 49
SHP[1], 9
MDAP[R], 9
SHP[1], 36
MDRP[M&gt;RGr], 18
SHP[2], 27
MDRP[m&gt;RWh], 3
SHP[2], 2
SRP1[], 42
SRP2[], 46
IP[], 48
IP[], 43
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2116.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 2
SHP[1], 18
RUTG[]
MDAP[R], 18
SHP[1], 27
RTG[]
MIAP[R], 45, 10
SHP[1], 42
MIAP[R], 46, 125
SHP[1], 49
SHP[1], 9
MDAP[R], 9
SHP[1], 36
SRP1[], 45
SRP2[], 46
IP[], 48
IP[], 43
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni213B">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 16
SHP[1], 14
SRP1[], 14
SHP[1], 17
SRP1[], 17
SHP[1], 35
SRP1[], 35
SHP[1], 32
MIAP[R], 3, 16
SHP[1], 7
SRP2[], 2
IP[], 24
IP[], 10
MDAP[R], 24
MDAP[R], 10
SRP1[], 24
SHP[1], 25
SRP1[], 10
SHP[1], 11
SRP1[], 3
SHP[1], 15
SRP1[], 15
SHP[1], 19
SHP[1], 37
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni214D">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 7
MDRP[m&gt;RGr], 1
SHP[2], 5
IP[], 11
MDAP[R], 11
SHP[1], 10
SRP1[], 3
SHP[1], 6
SRP1[], 6
SHP[1], 0
MIAP[R], 51, 19
SHP[1], 60
MDRP[m&gt;RGr], 26
SHP[2], 35
IP[], 14
IP[], 39
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni214F">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 97
SHP[1], 20
SHP[1], 0
SHP[2], 1
SHP[1], 78
SRP1[], 78
SHP[1], 39
SHP[1], 59
SRP1[], 59
SHP[1], 58
SRP1[], 97
SHP[1], 106
MDAP[R], 106
SHP[1], 11
SHP[1], 87
SRP1[], 87
SHP[1], 30
SHP[1], 68
SRP1[], 68
SHP[1], 49
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2150">
/* VTTTalk Unicode 0x2150 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1862, 17, 664
OFFSET[R], 1957, 1029, 0
OFFSET[R], 1155, 321, 0


SVTCA[Y]
MIAP[R], 6, 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2151">
/* VTTTalk Unicode 0x2151 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1862, 17, 664
OFFSET[R], 1959, 932, 0
OFFSET[R], 1155, 321, 0


SVTCA[Y]
MIAP[R], 6, 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2152">
/* VTTTalk Unicode 0x2152 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1862, 17, 664
OFFSET[R], 1863, 1373, 0
OFFSET[R], 1155, 322, 0
OFFSET[R], 1862, 850, 0


SVTCA[Y]
MIAP[R], 6, 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2155">
/* VTTTalk Unicode 0x2155 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1862, 17, 664
OFFSET[R], 1955, 911, 0
OFFSET[R], 1155, 321, 0



SVTCA[Y]
MIAP[R], 6, 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2156">
/* VTTTalk Unicode 0x2156 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1861, 40, 664
OFFSET[R], 1155, 520, 0
OFFSET[R], 1955, 1115, 0



SVTCA[Y]
MIAP[R], 19, 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2157">
/* VTTTalk Unicode 0x2157 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1953, 42, 664
OFFSET[R], 1155, 401, 0
OFFSET[R], 1955, 1050, 0

    </glyphProgram>

    <glyphProgram name="uni2158">
/* VTTTalk Unicode 0x2158 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1954, 24, 664
OFFSET[R], 1155, 517, 0
OFFSET[R], 1955, 1165, 0



SVTCA[Y]
MIAP[R], 8, 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2159">
/* VTTTalk Unicode 0x2159 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1862, 17, 664
OFFSET[R], 1956, 882, 0
OFFSET[R], 1155, 320, 0




SVTCA[Y]
MIAP[R], 6, 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni215A">
/* VTTTalk Unicode 0x215a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1955, -3, 664
OFFSET[R], 1956, 975, 0
OFFSET[R], 1155, 411, 0


SVTCA[Y]
MIAP[R], 2, 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni215F">
/* VTTTalk Unicode 0x215f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1862, 17, 664
OFFSET[R], 1155, 321, 0




SVTCA[Y]
MIAP[R], 6, 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2170">
/* VTTTalk Unicode 0x2170 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 78, 0, 0

    </glyphProgram>

    <glyphProgram name="uni2171">
/* VTTTalk Unicode 0x2171 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 78, 0, 0
OFFSET[R], 78, 498, 0

    </glyphProgram>

    <glyphProgram name="uni2172">
/* VTTTalk Unicode 0x2172 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 78, 0, 0
OFFSET[R], 78, 498, 0
OFFSET[R], 78, 995, 0

    </glyphProgram>

    <glyphProgram name="uni2173">
/* VTTTalk Unicode 0x2173 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 78, 0, 0
OFFSET[R], 91, 498, 0

    </glyphProgram>

    <glyphProgram name="uni2174">
/* VTTTalk Unicode 0x2174 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 91, 3, 0

    </glyphProgram>

    <glyphProgram name="uni2175">
/* VTTTalk Unicode 0x2175 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 91, 3, 0
OFFSET[R], 78, 995, 0

    </glyphProgram>

    <glyphProgram name="uni2176">
/* VTTTalk Unicode 0x2176 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 91, 3, 0
OFFSET[R], 78, 995, 0
OFFSET[R], 78, 1493, 0

    </glyphProgram>

    <glyphProgram name="uni2177">
/* VTTTalk Unicode 0x2177 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 91, 3, 0
OFFSET[R], 78, 995, 0
OFFSET[R], 78, 1493, 0
OFFSET[R], 78, 1990, 0

    </glyphProgram>

    <glyphProgram name="uni2178">
/* VTTTalk Unicode 0x2178 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 78, 0, 0
OFFSET[R], 93, 498, 0

    </glyphProgram>

    <glyphProgram name="uni2179">
/* VTTTalk Unicode 0x2179 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 93, 5, 0

    </glyphProgram>

    <glyphProgram name="uni217A">
/* VTTTalk Unicode 0x217a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 93, 5, 0
OFFSET[R], 78, 1020, 0

    </glyphProgram>

    <glyphProgram name="uni217B">
/* VTTTalk Unicode 0x217b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 93, 5, 0
OFFSET[R], 78, 1020, 0
OFFSET[R], 78, 1518, 0

    </glyphProgram>

    <glyphProgram name="uni217C">
/* VTTTalk Unicode 0x217c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 81, -15, 0

    </glyphProgram>

    <glyphProgram name="uni217D">
/* VTTTalk Unicode 0x217d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 72, 0, 0

    </glyphProgram>

    <glyphProgram name="uni217E">
/* VTTTalk Unicode 0x217e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 73, -3, 0

    </glyphProgram>

    <glyphProgram name="uni217F">
/* VTTTalk Unicode 0x217f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 82, 2, 0

    </glyphProgram>

    <glyphProgram name="uni2180">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 33, 8
SHP[1], 30
SRP1[], 30
SHP[1], 1
SHP[1], 32
SRP1[], 33
SHP[1], 58
SRP1[], 58
SHP[1], 2
CALL[], 44, 2, 114
SHP[2], 31
SRP1[], 31
SHP[1], 16
SHP[2], 47
SRP1[], 47
SHP[1], 15
SRP1[], 15
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2181">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 30, 8
SHP[1], 1
SRP1[], 1
SHP[1], 2
SMD[], 128
MDRP[m&gt;RBl], 33
SHP[2], 34
CALL[], 31, 2, 114
SHP[2], 16
SRP1[], 16
SHP[1], 15
MDRP[m&gt;RBl], 47
SHP[2], 46
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2182">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 59, 8
SHP[1], 30
SRP1[], 30
SHP[1], 0
SRP1[], 59
SHP[1], 84
SRP1[], 84
SHP[1], 85
SRP1[], 85
SHP[1], 1
SMD[], 128
MDRP[m&gt;RGr], 87
SHP[2], 32
SHP[2], 109
SRP1[], 109
SHP[1], 33
MIAP[R], 70, 2
SHP[1], 31
SRP1[], 31
SHP[1], 15
SRP1[], 70
SHP[1], 73
SRP1[], 73
SHP[1], 14
SRP1[], 14
SHP[1], 13
MDRP[m&gt;RGr], 96
SHP[2], 46
SHP[2], 99
SRP1[], 99
SHP[1], 44
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2183">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 25, 3, 114
SHP[2], 16
MDRP[m&gt;RGr], 20
CALL[], 36, 9, 114
MDRP[m&gt;RGr], 1
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2184">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 25, 7, 114
SHP[2], 16
CALL[], 36, 11, 114
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2185">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 9, 114
SHP[2], 36
SHP[2], 42
MDAP[R], 42
SHP[2], 43
MDAP[R], 43
CALL[], 16, 3, 114
MDRP[m&gt;RGr], 21
SHP[1], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2186">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 2
SHP[1], 7
CALL[], 8, 2, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2187">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni2188">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni2189">
/* VTTTalk Unicode 0x2189 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1155, 350, 0
OFFSET[R], 1953, 945, 0
OFFSET[R], 1863, 2, 649

    </glyphProgram>

    <glyphProgram name="uni27E6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
MDAP[R], 7
SHP[1], 2
SRP1[], 2
SHP[1], 10
SRP1[], 6
SHP[1], 3
SRP1[], 3
SHP[1], 11
SRP1[], 7
SHP[1], 15
SRP1[], 6
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni27E7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 1
SHP[1], 0
SHP[2], 8
SRP1[], 4
SHP[1], 5
SRP1[], 5
SHP[1], 13
SRP1[], 1
SHP[1], 10
SRP1[], 4
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni27E8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni27E9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni27EA">
/* VTTTalk Unicode 0x27ea */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1353, 0, 0
OFFSET[R], 1353, 380, 0

    </glyphProgram>

    <glyphProgram name="uni27EB">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 0
SHP[2], 6
SRP1[], 4
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni27EC">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MDAP[R], 5
SHP[1], 10
SRP1[], 2
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni27ED">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
MDAP[R], 3
SHP[1], 10
SRP1[], 6
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni27EE">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
MDAP[R], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni27EF">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
MDAP[R], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2B4E">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 11
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2B4F">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 10
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2B5A">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
SHP[1], 21
SHP[1], 30
MDAP[R], 30
SHP[1], 35
SRP1[], 35
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2B5B">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 19
SHP[1], 6
SHP[1], 13
MDAP[R], 13
SHP[1], 12
MDAP[R], 30
SHP[1], 0
SHP[1], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2B5C">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
SHP[1], 2
SHP[1], 6
MDAP[R], 31
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2B5D">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 17
MDAP[R], 10
SHP[1], 2
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2B5E">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
MDAP[R], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2B5F">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
MDAP[R], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C60">
/* VTTTalk Unicode 0x2c60 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 49, 80, 0
OFFSET[R], 1960, -103, 228
OFFSET[R], 1960, -103, -72
SVTCA[Y]
CALL[], 11, 7, 2, 0, -425, 86
SHC[2], 2
CALL[], 14, 6, 2, 0, 579, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni2C61">
/* VTTTalk Unicode 0x2c61 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 81, 109, 0
OFFSET[R], 1960, -103, 228
OFFSET[R], 1960, -103, -72
SVTCA[Y]
CALL[], 7, 3, 2, 0, -505, 86
SHC[2], 1
CALL[], 10, 2, 2, 0, 579, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni2C62">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 8
SHP[1], 2
SHP[1], 3
CALL[], 7, 2, 114
SRP2[], 6
IP[], 13
MDAP[R], 13
SHP[1], 31
MDRP[m&gt;RGr], 26
SHP[2], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C63">
/* VTTTalk Unicode 0x2c63 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 53, 52, 0
OFFSET[R], 1960, -103, 272
SVTCA[Y]
CALL[], 27, 15, 2, 0, -381, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni2C64">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 14
SHP[1], 7
CALL[], 20, 2, 114
SHP[2], 42
SRP2[], 14
IP[], 31
MDAP[R], 31
SHP[1], 32
SHP[1], 46
MIAP[R], 45, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C65">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 19, 7, 114
MDRP[m&gt;RWh], 3
SHP[1], 9
CALL[], 29, 10, 114
CALL[], 53, 11, 114
MDRP[m&gt;RWh], 1
SHP[1], 43
SRP2[], 19
IP[], 33
MDAP[R], 33
SHP[1], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C66">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 7, 6, 114
MDRP[m&gt;RGr], 3
SHP[1], 6
MDRP[m&gt;RWh], 8
CALL[], 21, 11, 114
MDRP[m&gt;RWh], 1
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C67">
/* VTTTalk Unicode 0x2c67 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 45, 0, 0
OFFSET[R], 2017, 1160, 0
SVTCA[Y]
CALL[], 15, 10, 0, 0, 154, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni2C68">
/* VTTTalk Unicode 0x2c68 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 77, 0, 0
OFFSET[R], 2017, 865, 0
SVTCA[Y]
CALL[], 30, 2, 0, 0, 154, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni2C69">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 7, 8
SHP[1], 15
SRP0[], 15
MDRP[m&gt;RWh], 2
SHP[1], 4
CALL[], 8, 2, 114
SHP[2], 14
SRP2[], 7
SLOOP[], 6
IP[], 11, 12, 16, 10, 17, 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C6A">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 7, 10
SHP[1], 15
SRP1[], 15
SHP[1], 0
SRP0[], 15
MDRP[m&gt;RWh], 3
CALL[], 8, 0, 114
CALL[], 14, 6, 114
SRP2[], 15
SLOOP[], 6
IP[], 11, 12, 16, 10, 17, 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C6B">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 8
MDRP[m&gt;RWh], 2
SHP[1], 9
SHP[1], 7
SRP1[], 7
SHP[1], 3
SHP[1], 11
CALL[], 17, 2, 114
SHP[2], 12
SHP[2], 16
SRP1[], 16
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C6C">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 7, 10
MDRP[m&gt;RWh], 3
SHP[1], 4
SHP[1], 10
SHP[1], 8
SRP1[], 8
SHP[1], 0
SHP[1], 12
CALL[], 18, 6, 114
SHP[2], 13
SHP[2], 17
SRP1[], 17
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C6D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 9, 114
SHP[2], 19
CALL[], 45, 3, 114
SHP[2], 32
CALL[], 53, 2, 114
CALL[], 68, 9, 114
SHP[2], 61
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C6E">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 13
CALL[], 25, 2, 114
SHP[2], 18
SRP1[], 18
SHP[1], 21
SRP1[], 21
SHP[1], 30
MIAP[R], 29, 8
SHP[1], 24
SRP1[], 24
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C6F">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 3, 10
SHP[1], 9
CALL[], 4, 2, 114
SHP[2], 6
SRP2[], 3
IP[], 12
MDAP[R], 12
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C70">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 3, 114
SHP[2], 19
CALL[], 45, 9, 114
SHP[2], 32
MIAP[R], 53, 8
CALL[], 68, 3, 114
SHP[2], 61
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C71">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 7, 114
SHP[2], 14
MIAP[R], 20, 10
SHP[1], 24
CALL[], 25, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C72">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 9, 8
SHP[1], 5
SHP[1], 34
SRP1[], 34
SHP[1], 30
CALL[], 10, 2, 114
SHP[2], 1
SRP1[], 1
SHP[1], 36
CALL[], 17, 3, 114
SHP[2], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C73">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 9, 10
SHP[1], 5
SHP[1], 35
SRP1[], 35
SHP[1], 31
CALL[], 10, 6, 114
SHP[2], 1
SRP1[], 1
SHP[1], 37
CALL[], 17, 7, 114
SHP[2], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C74">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 6, 114
MIAP[R], 8, 10
SHP[1], 4
CALL[], 14, 7, 114
SHP[2], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C75">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 2, 114
MDAP[R], 5
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C76">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 6, 114
MDAP[R], 5
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C77">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 6, 114
SHP[2], 42
SHP[2], 23
MDAP[R], 23
SHP[1], 24
CALL[], 15, 11, 114
SHP[2], 0
SHP[2], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C78">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 18, 11
SHP[1], 5
CALL[], 23, 11, 114
SHP[2], 59
CALL[], 34, 7, 114
SHP[2], 48
SRP2[], 23
IP[], 40
MDAP[R], 40
SHP[1], 43
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C79">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 1, 114
SHP[2], 7
MIAP[R], 24, 10
CALL[], 40, 11, 114
SHP[2], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C7A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 7, 114
SHP[2], 39
CALL[], 17, 11, 114
SHP[2], 56
SHP[2], 28
SRP1[], 28
SHP[1], 63
SRP1[], 63
SHP[1], 70
MDAP[R], 70
SHP[1], 48
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C7B">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 10
SHP[2], 1
SHP[2], 3
SRP1[], 3
SHP[1], 4
MIAP[R], 13, 6
SHP[1], 5
SHP[1], 12
SHP[1], 14
SRP2[], 3
IP[], 11
MDAP[R], 11
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C7C">
/* VTTTalk Unicode 0x2c7c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 356, 9, -851

    </glyphProgram>

    <glyphProgram name="uni2C7C.ccmp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C7D">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
SHP[1], 1
SHP[1], 8
MDAP[R], 8
SHP[1], 4
SHP[1], 6
SRP1[], 6
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C7E">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 35, 3, 114
MDRP[m&gt;RGr], 40
SHP[1], 44
CALL[], 63, 9, 114
SHP[2], 14
MDAP[R], 14
SHP[1], 7
SRP1[], 35
IP[], 20
IP[], 48
SRP0[], 63
MDRP[m&gt;RGr], 69
SHP[2], 0
SHP[1], 74
SRP1[], 74
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2C7F">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 8
SHP[1], 3
SHP[1], 10
SHP[1], 11
SHP[1], 24
MDAP[R], 24
SHP[1], 17
CALL[], 9, 2, 114
SHP[2], 4
SHP[2], 8
SRP1[], 8
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DE0">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 19
SHP[1], 40
IP[], 49
IP[], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DE1">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 14
SHP[1], 11
SMD[], 192
MDRP[m&gt;RBl], 13
SLOOP[], 6
IP[], 34, 1, 23, 37, 2, 35
SHP[2], 25
SRP1[], 25
SHP[1], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DE2">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 2
SMD[], 192
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DE3">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
SMD[], 192
MDRP[m&gt;RGr], 7
SHP[2], 17
SHP[2], 25
SHP[2], 8
SRP1[], 8
SHP[1], 20
SHP[2], 26
MDAP[R], 26
SHP[1], 23
SRP1[], 0
SHP[1], 14
SRP1[], 14
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DE4">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SMD[], 192
MDRP[M&gt;RWh], 8
SLOOP[], 8
IP[], 16, 0, 21, 6, 22, 9, 18, 3
MDRP[M&lt;RGr], 12
MDRP[m&lt;RGr], 20
SRP1[], 1
SHP[1], 13
SRP1[], 13
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DE5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 20
SMD[], 192
MDRP[m&gt;RGr], 46
SHP[2], 28
SLOOP[], 4
IP[], 36, 12, 37, 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DE6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 9
SMD[], 192
MDRP[M&gt;RBl], 2
MDRP[m&lt;RGr], 10
SRP2[], 3
SLOOP[], 4
IP[], 6, 11, 12, 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DE7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 8
SHP[1], 3
SRP1[], 3
SHP[1], 2
SHP[1], 7
SMD[], 192
MDRP[m&gt;RGr], 15
SHP[2], 6
SHP[2], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DE8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 10
SHP[1], 5
SRP1[], 5
SHP[1], 1
SRP1[], 1
SHP[1], 12
SMD[], 192
MDRP[m&gt;RBl], 9
SHP[2], 4
SHP[2], 11
IP[], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DE9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 11
SMD[], 192
MDRP[m&gt;RBl], 6
SHP[2], 10
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DEA">
/* VTTTalk Unicode 0x2dea */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 535, -23, 0

    </glyphProgram>

    <glyphProgram name="uni2DEB">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 2
SHP[1], 4
SRP1[], 4
SHP[1], 11
SMD[], 192
MDRP[m&gt;RBl], 6
SHP[2], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DEC">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 4
MDAP[R], 4
SRP1[], 5
SHP[1], 23
SMD[], 192
SRP0[], 5
MDRP[m&gt;RGr], 14
SHP[2], 1
MDAP[R], 1
SHP[2], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DED">
/* VTTTalk Unicode 0x2ded */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 537, -14, 0

    </glyphProgram>

    <glyphProgram name="uni2DEE">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SMD[], 192
MDRP[m&gt;RGr], 2
SHP[1], 3
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DEF">
/* VTTTalk Unicode 0x2def */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 544, -24, 0

    </glyphProgram>

    <glyphProgram name="uni2DF0">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 5
SMD[], 192
MDRP[m&gt;RBl], 0
SHP[2], 10
MDAP[R], 10
SHP[2], 12
SHP[2], 3
SRP1[], 3
SHP[1], 4
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DF1">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 13
SHP[1], 3
SMD[], 192
MDRP[m&gt;RGr], 2
IP[], 8
MDAP[R], 8
SHP[1], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DF2">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 15
SHP[1], 3
SHP[1], 7
SMD[], 192
MDRP[m&gt;RBl], 14
SHP[2], 8
SHP[2], 11
SRP1[], 11
SHP[1], 2
SRP1[], 2
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DF3">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 17
SHP[1], 9
SRP1[], 9
SHP[1], 13
SMD[], 192
MDRP[m&gt;RBl], 16
SHP[2], 0
SHP[2], 5
SHP[2], 8
SHP[2], 12
SRP1[], 12
SHP[1], 3
MDAP[R], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DF4">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 13
SHP[1], 31
MDRP[m&gt;RGr], 4
SHP[2], 22
IP[], 2
IP[], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DF5">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
SHP[1], 12
SMD[], 192
MDRP[m&gt;RGr], 0
SHP[2], 21
SHP[2], 30
SHP[1], 35
SRP1[], 35
SHP[1], 31
SRP1[], 31
SHP[1], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DF6">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 14
SHP[1], 7
SMD[], 192
MDRP[m&gt;RGr], 22
SHP[2], 0
MDAP[R], 0
SRP1[], 14
IP[], 32
IP[], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DF7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
SHP[1], 22
SMD[], 192
MDRP[m&gt;RGr], 0
SHP[2], 31
IP[], 15
IP[], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DF8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 10
SMD[], 192
MDRP[m&gt;RGr], 5
SHP[2], 0
SLOOP[], 5
IP[], 13, 17, 2, 6, 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DF9">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 16
SHP[1], 41
SRP0[], 41
MDRP[m&gt;RGr], 0
SHP[2], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DFA">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 10
MDRP[m&gt;RBl], 9
SHP[2], 12
SLOOP[], 4
IP[], 20, 0, 23, 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DFB">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SMD[], 192
MDRP[m&gt;RBl], 6
IP[], 2
IP[], 3
SHP[2], 8
MDAP[R], 8
SHP[1], 26
SRP1[], 7
SHP[1], 17
MDAP[R], 17
SHP[1], 35
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DFC">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SMD[], 192
MDRP[m&gt;RBl], 6
SLOOP[], 4
IP[], 2, 3, 32, 53
SHP[2], 46
MDAP[R], 46
SHP[1], 27
MDAP[R], 27
SRP1[], 46
SHP[1], 39
SRP1[], 7
SHP[1], 19
MDAP[R], 19
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DFD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 3
SMD[], 192
MDRP[m&gt;RBl], 2
SHP[2], 5
SHP[2], 16
SLOOP[], 3
IP[], 12, 17, 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DFE">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 14
SRP1[], 14
SHP[1], 0
SHP[1], 17
SMD[], 192
MDRP[m&gt;RGr], 19
SLOOP[], 11
IP[], 2, 3, 9, 8, 34, 7, 4, 11, 12, 24, 23
SHP[2], 10
SRP1[], 10
SHP[1], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2DFF">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
SMD[], 192
MDRP[m&gt;RBl], 7
IP[], 3
IP[], 0
SRP1[], 3
SHP[1], 42
SRP1[], 42
SHP[1], 19
SHP[1], 11
SRP1[], 11
SHP[1], 41
SRP1[], 0
SHP[1], 31
SRP1[], 31
SHP[1], 12
SHP[1], 15
SHP[2], 27
SRP1[], 27
SHP[1], 18
SRP1[], 18
SHP[1], 37
SRP1[], 4
SHP[1], 13
SRP1[], 13
SHP[1], 22
SRP1[], 22
SHP[1], 8
SHP[1], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E00">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
MIAP[R], 7, 2
SHP[1], 3
SRP1[], 3
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E01">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
MIAP[R], 7, 2
SHP[1], 3
SRP1[], 3
SHP[1], 2
SRP1[], 2
SHP[1], 11
RDTG[]
MDAP[R], 11
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E02">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 3
MDAP[R], 6
SLOOP[], 4
IP[], 2, 7, 4, 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E03">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 3
MDAP[R], 6
SLOOP[], 4
IP[], 2, 7, 4, 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E04">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 3
MDAP[R], 6
IP[], 11
MDAP[R], 11
SRP2[], 6
IP[], 2
SRP2[], 0
SLOOP[], 4
IP[], 4, 3, 7, 1
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E05">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 3
MDAP[R], 5
IP[], 11
MDAP[R], 11
SRP2[], 5
IP[], 2
SRP2[], 0
SLOOP[], 3
IP[], 4, 3, 1
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E06">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
MIAP[R], 11, 2
SHP[1], 7
SRP1[], 7
SHP[1], 3
SRP1[], 3
SHP[1], 0
SRP1[], 11
SHP[1], 10
SRP1[], 10
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E07">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
MIAP[R], 8, 2
SHP[1], 3
MIAP[R], 11, 2
SHP[1], 7
SHP[1], 10
SRP1[], 10
SHP[1], 2
SRP1[], 6
SRP2[], 11
IP[], 15
MDAP[R], 15
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E08">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 15
SHP[1], 4
MIAP[R], 33, 2
SHP[1], 22
SRP2[], 15
IP[], 39
MDAP[R], 39
SHP[1], 45
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E09">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 33, 3, 114
SHP[2], 22
SHP[2], 15
MDAP[R], 15
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E0A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 35, 3, 114
SHP[2], 23
SHP[2], 16
MDAP[R], 16
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E0B">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 2
SHP[1], 4
SHP[1], 13
MDRP[m&gt;RBl], 8
SHP[2], 5
SHP[2], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E0C">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
MDRP[m&gt;RBl], 3
SHP[2], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E0D">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
MDAP[R], 3
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E0E">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni2E0F">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E10">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 2
SRP1[], 2
SHP[1], 4
SRP1[], 4
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E11">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
SHP[2], 4
SRP1[], 4
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E12">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
SMD[], 192
MDRP[m&gt;RWh], 9
SHP[2], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E13">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 2
SHP[1], 25
MDAP[R], 25
SHP[1], 19
MDAP[R], 3
SHP[1], 0
SHP[1], 7
MDAP[R], 7
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E14">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 16
MDRP[m&lt;RGr], 0
MDRP[m&lt;RGr], 8
MDAP[R], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E15">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 8
SHP[1], 9
SHP[1], 17
SHP[1], 0
SHP[2], 1
MDAP[R], 18
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E16">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 19
MDAP[R], 25
SHP[1], 31
SRP2[], 19
IP[], 8
MDAP[R], 8
SHP[1], 2
SHP[2], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E17">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 2
SRP1[], 2
SHP[1], 1
MDRP[m&lt;RWh], 6
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E18">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 26, 9, 114
MDRP[m&gt;RBl], 2
SHP[1], 17
SRP1[], 17
SHP[1], 21
MDAP[R], 21
CALL[], 46, 3, 114
SHP[2], 40
SRP1[], 40
SHP[1], 4
MDAP[R], 4
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E19">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni2E1A">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 27
SHP[1], 26
MDRP[m&gt;RWh], 9
SHP[2], 3
SHP[2], 21
SRP1[], 21
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E1B">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 36
SHP[1], 42
MDRP[m&gt;RWh], 18
SHP[2], 10
SHP[2], 5
MDAP[R], 5
SHP[1], 23
SRP1[], 36
SHP[1], 30
MDAP[R], 30
SHP[1], 48
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E1C">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
MDAP[R], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E1D">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
MDAP[R], 3
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E1E">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 35
SHP[1], 29
MDRP[m&gt;RWh], 18
SHP[2], 10
SHP[2], 5
MDAP[R], 5
SHP[1], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E1F">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 29
SHP[1], 35
MDRP[m&gt;RWh], 5
SHP[2], 23
SHP[2], 18
MDAP[R], 18
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E20">
/* VTTTalk Unicode 0x2e20 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 97, -3, 0
OFFSET[R], 1960, 88, -135

    </glyphProgram>

    <glyphProgram name="uni2E21">
/* VTTTalk Unicode 0x2e21 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 97, 445, 0
OFFSET[R], 1960, -67, -135

    </glyphProgram>

    <glyphProgram name="uni2E22">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 5, 2
SHP[1], 2
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E23">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 1, 2
SHP[1], 0
MDRP[m&gt;RGr], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E24">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 2
MDRP[m&gt;RWh], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E25">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RGr], 4
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E26">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MDAP[R], 10
SHP[1], 13
SRP1[], 2
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E27">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 12
SHP[1], 11
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E28">
/* VTTTalk Unicode 0x2e28 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 13, 0, 0
OFFSET[R], 13, 380, 0

    </glyphProgram>

    <glyphProgram name="uni2E29">
/* VTTTalk Unicode 0x2e29 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 14, 7, 0
OFFSET[R], 14, 387, 0

    </glyphProgram>

    <glyphProgram name="uni2E2A">
/* VTTTalk Unicode 0x2e2a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 468, 774, 1136
OFFSET[R], 468, 1520, 1136
OFFSET[R], 468, 1148, 329

    </glyphProgram>

    <glyphProgram name="uni2E2B">
/* VTTTalk Unicode 0x2e2b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 468, 774, 330
OFFSET[R], 468, 1520, 330
OFFSET[R], 468, 1148, 1136

    </glyphProgram>

    <glyphProgram name="uni2E2C">
/* VTTTalk Unicode 0x2e2c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 468, 774, 1136
OFFSET[R], 468, 1520, 328
OFFSET[R], 468, 1520, 1136
OFFSET[R], 468, 774, 328

    </glyphProgram>

    <glyphProgram name="uni2E2D">
/* VTTTalk Unicode 0x2e2d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 468, 774, 732
OFFSET[R], 468, 1147, 1136
OFFSET[R], 468, 1519, 732
OFFSET[R], 468, 1147, 328
OFFSET[R], 468, 1147, 732

    </glyphProgram>

    <glyphProgram name="uni2E2E">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 13, 3, 114
SHP[2], 18
MDAP[R], 18
SHP[2], 22
MIAP[R], 38, 19
SHP[1], 44
SRP1[], 44
SHP[1], 1
MDAP[R], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E2F">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 13
MDRP[m&gt;RGr], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E30">
/* VTTTalk Unicode 0x2e30 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 395, -59, -602

    </glyphProgram>

    <glyphProgram name="uni2E31">
/* VTTTalk Unicode 0x2e31 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 19, -64, 764

    </glyphProgram>

    <glyphProgram name="uni2E32">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SMD[], 192
MDRP[m&gt;RBl], 4
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E33">
/* VTTTalk Unicode 0x2e33 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 19, -64, 504

    </glyphProgram>

    <glyphProgram name="uni2E34">
/* VTTTalk Unicode 0x2e34 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 17, 51, 498

    </glyphProgram>

    <glyphProgram name="uni2E35">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 9, 11
SHP[1], 3
MDAP[R], 12
MDRP[m&gt;RBl], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E36">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
MDAP[R], 1
IP[], 7
MDAP[R], 7
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E37">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
MDAP[R], 1
IP[], 7
MDAP[R], 7
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E38">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 2, 114
MDAP[R], 3
IP[], 7
MDAP[R], 7
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E39">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 21, 3, 114
SHP[2], 30
MDAP[R], 61
SHP[1], 0
SHP[1], 60
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E3A">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 6
SHP[1], 3
SRP1[], 3
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E3B">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
SHP[1], 10
SRP1[], 10
SHP[1], 6
SRP1[], 3
SHP[1], 11
SRP1[], 11
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E3C">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 6
MDRP[m&gt;RGr], 0
SHP[2], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E3D">
/* VTTTalk Unicode 0x2e3d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 468, 774, -65
OFFSET[R], 468, 774, 718
OFFSET[R], 468, 774, 1894
OFFSET[R], 468, 774, 1500
OFFSET[R], 468, 774, 1107
OFFSET[R], 468, 774, 328

    </glyphProgram>

    <glyphProgram name="uni2E3E">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uni2E3F">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 6
MIAP[R], 3, 4
SHP[1], 7
SHP[1], 24
MDAP[R], 24
SHP[1], 33
SHP[1], 13
MDAP[R], 13
SHP[1], 42
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E40">
/* VTTTalk Unicode 0x2e40 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 18, 42, -118
OFFSET[R], 18, 42, 123

    </glyphProgram>

    <glyphProgram name="uni2E41">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2E42">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 11
MDRP[m&gt;RBl], 5
SHP[2], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA640">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 31, 8
SHP[1], 17
SHP[1], 35
MDRP[m&gt;RWh], 4
SHP[2], 26
SHP[2], 22
MDAP[R], 22
SHP[1], 8
SHP[1], 0
SRP1[], 0
SHP[1], 1
SRP1[], 31
SHP[1], 32
SRP1[], 32
SHP[1], 36
CALL[], 42, 2, 114
SHP[2], 38
SHP[2], 41
SRP1[], 41
SHP[1], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA641">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 38, 10
SHP[1], 18
SHP[1], 42
MDRP[m&gt;RWh], 4
SHP[2], 27
SRP1[], 27
SHP[1], 23
MDAP[R], 23
SHP[1], 8
SRP1[], 27
SHP[1], 31
MDAP[R], 31
SHP[1], 0
SRP1[], 38
SHP[1], 39
SRP1[], 39
SHP[1], 43
CALL[], 49, 6, 114
SHP[2], 44
SHP[2], 48
SRP1[], 48
SHP[1], 40
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA642">
/* VTTTalk Unicode 0xa642 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1500, 0, 0
OFFSET[R], 1960, 135, 0

    </glyphProgram>

    <glyphProgram name="uniA643">
/* VTTTalk Unicode 0xa643 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1501, 0, 0
OFFSET[R], 1960, 26, -199

    </glyphProgram>

    <glyphProgram name="uniA644">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 50
MDRP[m&gt;RGr], 55
CALL[], 30, 3, 114
SHP[2], 20
MDRP[m&gt;RGr], 24
SRP2[], 0
IP[], 45
IP[], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA645">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 45
CALL[], 28, 7, 114
SHP[2], 18
SRP2[], 0
IP[], 41
IP[], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA646">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 0, 114
CALL[], 13, 11, 114
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA647">
/* VTTTalk Unicode 0xa647 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 578, 0, 0

    </glyphProgram>

    <glyphProgram name="uniA648">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 4, 8
SHP[1], 11
CALL[], 7, 2, 114
SRP2[], 4
IP[], 1
MDAP[R], 1
IP[], 12
SHP[1], 2
SHP[1], 6
SRP1[], 6
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA649">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 10
SHP[1], 0
CALL[], 13, 6, 114
SHP[2], 12
SRP2[], 6
IP[], 16
MDAP[R], 16
SHP[1], 2
SHP[1], 8
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA64A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 17, 2, 114
SHP[2], 18
SHP[2], 52
SHP[2], 53
CALL[], 33, 9, 114
SHP[2], 65
SRP1[], 65
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA64B">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 18
SHP[1], 19
SHP[1], 51
SHP[1], 52
CALL[], 33, 9, 114
SHP[2], 65
SRP1[], 65
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA64C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 11, 3, 114
SHP[2], 12
SHP[2], 57
SRP1[], 57
SHP[1], 56
CALL[], 0, 9, 114
SHP[2], 23
SHP[2], 34
SRP1[], 34
SHP[1], 45
MDRP[m&lt;RGr], 39
SHP[2], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA64D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 11, 11, 114
SHP[2], 0
CALL[], 22, 7, 114
SHP[2], 23
SRP2[], 11
IP[], 5
MDAP[R], 5
SHP[1], 62
SRP1[], 22
SHP[1], 46
SRP1[], 46
SHP[1], 45
CALL[], 57, 11, 114
SHP[2], 34
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA64E">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 2, 114
SHP[2], 0
SHP[2], 16
MIAP[R], 15, 8
SHP[1], 18
IP[], 28
MDAP[R], 28
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA64F">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 11, 10
SHP[1], 16
CALL[], 14, 6, 114
SHP[2], 13
SRP2[], 11
IP[], 0
MDAP[R], 0
SHP[1], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA650">
/* VTTTalk Unicode 0xa650 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 46, 1356, 0
OFFSET[R], 1514, -102, 0
SVTCA[Y]
CALL[], 19, 2, 2, 0, 0, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uniA651">
/* VTTTalk Unicode 0xa651 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 142, 1255, 0
OFFSET[R], 1515, 0, 0
SVTCA[Y]
CALL[], 15, 2, 2, 0, 0, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uniA652">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 8
SHP[1], 19
SRP1[], 19
SHP[1], 22
CALL[], 7, 2, 114
SHP[2], 20
SRP2[], 6
IP[], 32
MDAP[R], 32
SHP[1], 8
SRP1[], 8
SHP[1], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA653">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 30, 10
SHP[1], 10
SRP1[], 10
SHP[1], 13
CALL[], 31, 0, 114
SHP[2], 11
MDAP[R], 11
SRP1[], 30
IP[], 23
MDAP[R], 23
SHP[1], 0
SRP1[], 0
SHP[1], 26
MDAP[R], 26
SHP[1], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA654">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 24
CALL[], 12, 3, 114
SHP[2], 36
SRP2[], 0
IP[], 55
MDAP[R], 55
SHP[1], 54
MIAP[R], 48, 8
CALL[], 49, 2, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA655">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 7, 114
SHP[2], 43
CALL[], 21, 11, 114
SHP[2], 32
SRP1[], 10
IP[], 1
MDAP[R], 1
SHP[1], 0
MIAP[R], 50, 10
CALL[], 51, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA656">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 2, 114
MIAP[R], 5, 8
IP[], 2
MDAP[R], 2
SHP[1], 3
SHP[1], 20
SRP1[], 20
SHP[1], 21
SRP1[], 5
SHP[1], 10
SRP1[], 10
SHP[1], 13
CALL[], 11, 2, 114
SHP[2], 15
SRP1[], 15
SHP[1], 14
SRP1[], 14
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA657">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 6, 114
MIAP[R], 5, 10
IP[], 2
MDAP[R], 2
SHP[1], 3
CALL[], 23, 7, 114
SHP[2], 13
MIAP[R], 33, 10
CALL[], 57, 11, 114
SHP[2], 47
SRP1[], 23
IP[], 38
MDAP[R], 38
SHP[1], 66
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA658">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 8
SHP[1], 5
SRP1[], 5
SHP[1], 9
CALL[], 7, 2, 114
SHP[2], 11
SRP1[], 11
SHP[1], 10
SRP1[], 10
SHP[1], 4
SRP1[], 2
IP[], 16
MDAP[R], 16
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA659">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
SHP[1], 16
SRP1[], 16
SHP[1], 5
SHP[1], 17
SMD[], 128
SRP0[], 16
MDRP[m&gt;RGr], 12
SHP[2], 13
CALL[], 3, 6, 114
SHP[2], 6
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA65A">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 5, 8
SHP[1], 43
SRP1[], 43
SHP[1], 17
CALL[], 40, 2, 114
SHP[2], 32
SRP2[], 5
IP[], 2
MDAP[R], 2
SHP[1], 3
SHP[1], 44
SRP1[], 40
SHP[1], 30
SRP1[], 30
SHP[1], 29
SMD[], 128
MDRP[m&gt;RGr], 23
SHP[2], 10
SHP[2], 34
SHP[2], 39
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA65B">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 1, 10
SHP[1], 13
SHP[1], 38
CALL[], 35, 6, 114
SHP[2], 27
SRP1[], 27
SHP[1], 26
SHP[1], 30
SRP2[], 1
IP[], 42
MDAP[R], 42
SHP[1], 43
SMD[], 128
MDRP[m&gt;RGr], 19
SHP[2], 6
SHP[2], 31
SHP[2], 34
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA65C">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 11, 2
SHP[1], 15
SHP[1], 14
SRP1[], 14
SHP[1], 8
MIAP[R], 24, 8
SHP[1], 2
SRP1[], 2
SHP[1], 3
SHP[1], 9
SRP1[], 9
SHP[1], 13
CALL[], 25, 2, 114
SRP2[], 24
IP[], 6
MDAP[R], 6
SHP[1], 7
SHP[1], 20
MDAP[R], 20
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA65D">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 1, 6
SHP[1], 8
SHP[1], 6
SRP1[], 6
SHP[1], 3
MIAP[R], 23, 10
SHP[1], 0
SHP[2], 14
MDAP[R], 14
SHP[1], 5
SHP[1], 15
SMD[], 128
MDRP[m&gt;RGr], 21
SHP[2], 18
SHP[2], 12
SRP1[], 12
SHP[1], 13
CALL[], 25, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA65E">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 5
CALL[], 13, 2, 114
SHP[2], 2
SHP[2], 21
SHP[2], 3
SRP1[], 3
SHP[1], 11
MDAP[R], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA65F">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
MDAP[R], 5
SHP[1], 17
CALL[], 12, 6, 114
SHP[2], 2
SHP[2], 20
SHP[2], 3
SRP1[], 3
SHP[1], 10
MDAP[R], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA660">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 12, 2, 114
SHP[2], 8
MIAP[R], 13, 8
SHP[1], 0
MDRP[m&gt;RBl], 1
SHP[1], 3
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA661">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 6, 114
SHP[2], 2
MIAP[R], 11, 10
SHP[1], 4
SHP[1], 7
SHP[1], 8
MDRP[m&gt;RBl], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA662">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 24, 2, 114
SHP[2], 19
SRP1[], 19
SHP[1], 3
SHP[1], 18
SHP[1], 23
MIAP[R], 34, 8
SHP[1], 22
MDRP[m&gt;RBl], 10
SHP[2], 14
SHP[1], 35
SRP1[], 35
SHP[1], 11
SRP1[], 11
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA663">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 6, 114
SHP[2], 3
SHP[2], 20
SRP1[], 20
SHP[1], 25
MIAP[R], 31, 10
SHP[1], 23
SHP[1], 11
SRP1[], 11
SHP[1], 13
SRP1[], 13
SHP[1], 26
MDRP[m&gt;RBl], 32
SHP[2], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA664">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 10, 8
CALL[], 12, 2, 114
SHP[2], 7
SRP1[], 7
SHP[1], 6
SHP[1], 11
SHP[1], 3
SRP1[], 3
SHP[1], 2
CALL[], 20, 8, 114
SHP[2], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA665">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 10, 10
CALL[], 12, 6, 114
SHP[2], 7
SRP1[], 7
SHP[1], 6
SHP[1], 3
SRP1[], 3
SHP[1], 11
MIAP[R], 20, 10
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA666">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 11, 2, 114
SHP[2], 4
SRP1[], 4
SHP[1], 7
SRP1[], 7
SHP[1], 16
SRP1[], 16
SHP[1], 3
SRP1[], 3
SHP[1], 2
MIAP[R], 15, 8
IP[], 6
SHP[1], 10
SRP1[], 10
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA667">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 13, 10
SHP[1], 8
SRP1[], 8
SHP[1], 15
CALL[], 14, 6, 114
SRP2[], 13
IP[], 4
SHP[1], 9
SRP1[], 9
SHP[1], 5
SRP1[], 5
SHP[1], 16
SRP1[], 16
SHP[1], 3
SRP1[], 3
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA668">
/* VTTTalk Unicode 0xa668 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 52, 0, 0
OFFSET[R], 440, 1289, -639
SVTCA[Y]
CALL[], 47, 17, 2, 0, -639, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uniA669">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 22
CALL[], 11, 7, 114
SHP[2], 33
SRP2[], 0
IP[], 53
MDAP[R], 53
SHP[1], 47
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA66A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 9, 114
SHP[2], 43
CALL[], 18, 3, 114
SHP[2], 31
SRP2[], 6
IP[], 57
MDAP[R], 57
SHP[1], 51
SHP[1], 69
SRP1[], 69
SHP[1], 63
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA66B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 7, 114
SHP[2], 39
CALL[], 17, 11, 114
SHP[2], 28
SRP1[], 6
IP[], 53
MDAP[R], 53
SHP[1], 47
SHP[1], 65
SRP1[], 65
SHP[1], 59
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA66C">
/* VTTTalk Unicode 0xa66c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 52, 0, 0
OFFSET[R], 440, 1289, -639
OFFSET[R], 440, 2269, -639
OFFSET[R], 52, 980, 0
SVTCA[Y]
CALL[], 47, 17, 2, 0, -639, 86
SHC[2], 2
CALL[], 59, 85, 2, 0, -639, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uniA66D">
/* VTTTalk Unicode 0xa66d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1541, 799, 0
OFFSET[R], 1541, 0, 0

    </glyphProgram>

    <glyphProgram name="uniA66E">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uniA66F">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 7
MDRP[m&gt;RBl], 0
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA670">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uniA671">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 2
MDRP[m&gt;RBl], 0
SHP[2], 4
MDAP[R], 10
SHP[1], 15
MDRP[m&gt;RBl], 9
SHP[2], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA672">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uniA673">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uniA674">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 9
MDAP[R], 9
SHP[1], 17
IP[], 36
IP[], 35
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA675">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 5
MDAP[R], 5
SHP[1], 0
SHP[1], 3
SHP[1], 9
SRP1[], 7
SHP[1], 11
SRP1[], 11
SHP[1], 1
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA676">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
MDAP[R], 3
SHP[1], 13
RUTG[]
MDAP[R], 13
SHP[1], 7
SHP[1], 25
SRP1[], 25
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA677">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 14
SRP1[], 14
SHP[1], 21
SRP1[], 21
SHP[1], 20
SRP1[], 7
SHP[1], 22
MDAP[R], 22
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA678">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 13
SHP[1], 16
SHP[1], 3
MDAP[R], 3
SHP[1], 2
SHP[1], 14
SRP2[], 13
IP[], 24
IP[], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA679">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 13
SHP[1], 2
SHP[1], 16
SHP[1], 14
MDAP[R], 14
SHP[1], 3
SRP2[], 13
IP[], 24
IP[], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA67A">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
SHP[1], 12
SHP[1], 10
MDAP[R], 10
SRP2[], 9
IP[], 20
IP[], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA67B">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 3
SHP[1], 17
SHP[1], 0
SHP[2], 28
SHP[1], 11
MDAP[R], 11
SHP[1], 22
SRP1[], 22
SHP[1], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA67C">
/* VTTTalk Unicode 0xa67c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 393, -1016, 0

    </glyphProgram>

    <glyphProgram name="uniA67D">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 12
SHP[1], 18
RDTG[]
MDAP[R], 18
SRP1[], 12
SHP[1], 1
RTG[]
MDAP[R], 1
SHP[1], 19
RUTG[]
MDAP[R], 19
SRP1[], 12
SHP[1], 5
SRP1[], 5
SHP[1], 8
SRP1[], 8
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA67E">
/* VTTTalk Unicode 0xa67e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 393, -50, 0

    </glyphProgram>

    <glyphProgram name="uniA67F">
/* VTTTalk Unicode 0xa67f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 1561, 930, 0

    </glyphProgram>

    <glyphProgram name="uniA680">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 20, 8
SHP[1], 7
SRP1[], 7
SHP[1], 9
SRP1[], 9
SHP[1], 29
MDRP[m&gt;RBl], 27
SHP[2], 24
SHP[1], 36
SRP1[], 36
SHP[1], 18
SRP1[], 18
SHP[1], 25
CALL[], 33, 2, 114
MDRP[m&gt;RBl], 16
SHP[1], 32
SHP[1], 37
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA681">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 16, 6, 114
MDRP[m&gt;RBl], 0
SHP[1], 21
MIAP[R], 27, 10
SHP[1], 7
SHP[1], 19
SHP[1], 22
SRP1[], 22
SHP[1], 9
MDRP[m&gt;RBl], 28
SHP[2], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA682">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 13, 3, 114
MDRP[m&gt;RGr], 18
SHP[1], 22
MDAP[R], 38
MDRP[m&gt;RGr], 44
SHP[1], 49
SRP2[], 13
SLOOP[], 4
IP[], 34, 0, 26, 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA683">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 12, 7, 114
SHP[2], 21
CALL[], 37, 15, 114
SHP[2], 46
SRP1[], 12
IP[], 0
IP[], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA684">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 8
SHP[1], 10
CALL[], 3, 2, 114
SHP[2], 9
SRP2[], 2
IP[], 5
MDAP[R], 5
SHP[1], 11
SHP[1], 8
SRP1[], 8
SHP[1], 12
CALL[], 35, 3, 114
SHP[2], 25
CALL[], 56, 9, 114
SHP[2], 66
SRP1[], 35
IP[], 75
MDAP[R], 75
SHP[1], 14
SHP[1], 17
SRP1[], 17
SHP[1], 46
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA685">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
SHP[1], 10
CALL[], 3, 6, 114
SHP[2], 9
SRP2[], 2
IP[], 5
MDAP[R], 5
SHP[1], 8
SHP[1], 11
SRP1[], 11
SHP[1], 12
CALL[], 34, 7, 114
SHP[2], 25
CALL[], 55, 11, 114
SHP[2], 64
SRP1[], 34
IP[], 72
MDAP[R], 72
SHP[1], 14
SHP[1], 17
SRP1[], 17
SHP[1], 45
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA686">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 22
SHP[2], 26
MIAP[R], 25, 8
IP[], 16
MDAP[R], 16
SHP[1], 7
SHP[1], 40
SRP1[], 40
SHP[1], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA687">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
CALL[], 14, 6, 114
SRP2[], 2
IP[], 8
MDAP[R], 8
SHP[1], 21
SHP[1], 29
SRP1[], 29
SHP[1], 42
SRP1[], 14
SHP[1], 35
SRP1[], 35
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA688">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 50, 8
SHP[1], 49
SRP1[], 49
SHP[1], 15
SRP1[], 15
SHP[1], 9
CALL[], 65, 2, 114
SHP[2], 59
SHP[2], 64
MIAP[R], 74, 8
SHP[1], 63
MDRP[m&gt;RBl], 54
SHP[2], 32
MDAP[R], 32
SHP[1], 40
SRP2[], 15
IP[], 48
IP[], 2
SRP1[], 74
SHP[1], 77
SRP1[], 77
SHP[1], 56
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA689">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
SHP[2], 16
SRP1[], 16
SHP[1], 21
MIAP[R], 7, 10
SHP[1], 25
SHP[1], 9
SRP1[], 9
SHP[1], 22
SRP1[], 7
SHP[1], 19
SRP1[], 19
SHP[1], 23
SRP1[], 23
SHP[1], 43
SRP1[], 43
SHP[1], 37
MDRP[m&gt;RBl], 26
SHP[2], 60
MDAP[R], 60
SHP[1], 68
SRP2[], 43
IP[], 75
IP[], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA68A">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 8
CALL[], 7, 2, 114
SHP[2], 3
SHP[2], 6
CALL[], 14, 6, 114
SHP[2], 41
CALL[], 24, 15, 114
SHP[2], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA68B">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
SHP[1], 21
SHP[1], 32
CALL[], 7, 6, 114
SHP[2], 3
SHP[2], 6
SRP1[], 6
SHP[1], 14
RDTG[]
MDAP[R], 14
SHP[1], 27
CALL[], 39, 15, 114
SHP[2], 46
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA68C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 7, 2, 114
SHP[2], 3
SHP[2], 6
CALL[], 22, 9, 114
SHP[2], 15
SHP[2], 8
SRP1[], 8
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA68D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 11, 114
SHP[2], 7
SHP[2], 22
SRP1[], 22
SHP[1], 0
CALL[], 27, 6, 114
SHP[2], 23
SHP[2], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA68E">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 8
SHP[2], 3
SRP1[], 3
SHP[1], 8
SHP[2], 26
MDAP[R], 26
SHP[1], 18
CALL[], 1, 2, 114
MIAP[R], 5, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA68F">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 10
SHP[2], 3
SRP1[], 3
SHP[1], 8
SHP[2], 25
MDAP[R], 25
SHP[1], 17
CALL[], 1, 6, 114
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA690">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 24, 8
SMD[], 128
MDRP[m&gt;RGr], 16
SHP[2], 9
SHP[1], 25
SRP1[], 25
SHP[1], 0
SHP[1], 2
CALL[], 30, 2, 114
SHP[2], 26
SHP[2], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA691">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 24, 10
SHP[1], 2
SMD[], 128
MDRP[m&gt;RGr], 16
SHP[2], 9
MIAP[R], 25, 10
SHP[1], 1
CALL[], 30, 6, 114
SHP[2], 26
SHP[2], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA692">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 2, 114
SHP[2], 2
SHP[2], 4
SHP[2], 26
MIAP[R], 29, 8
IP[], 21
MDAP[R], 21
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA693">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 6, 114
SHP[2], 2
SHP[2], 7
SHP[2], 18
MIAP[R], 6, 10
IP[], 13
MDAP[R], 13
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA694">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 20, 8
SHP[1], 1
CALL[], 30, 3, 114
SHP[2], 37
SRP2[], 20
IP[], 15
MDAP[R], 15
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA695">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
SHP[1], 17
CALL[], 10, 7, 114
SHP[2], 23
CALL[], 35, 1, 114
SHP[2], 42
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA696">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 4
SRP1[], 4
SHP[1], 8
MIAP[R], 11, 8
SHP[1], 2
SRP1[], 2
SHP[1], 6
SRP1[], 6
SHP[1], 12
SRP1[], 12
SHP[1], 39
SRP1[], 11
SHP[1], 30
MDAP[R], 30
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA697">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 27, 6, 114
SHP[2], 31
SRP1[], 31
SHP[1], 35
MIAP[R], 38, 10
SHP[1], 26
SHP[1], 17
MDAP[R], 17
SHP[1], 9
SRP1[], 38
SHP[1], 29
SRP1[], 29
SHP[1], 33
SRP1[], 33
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA698">
/* VTTTalk Unicode 0xa698 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 52, 0, 0
OFFSET[R], 52, 983, 0

    </glyphProgram>

    <glyphProgram name="uniA699">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 7, 114
SHP[2], 39
SHP[2], 50
SRP1[], 50
SHP[1], 83
CALL[], 17, 11, 114
SHP[2], 28
SHP[2], 61
SRP1[], 61
SHP[1], 72
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA69A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 9, 114
SHP[2], 1
SHP[2], 51
CALL[], 26, 3, 114
SHP[2], 3
SHP[2], 39
SRP2[], 14
IP[], 5
MDAP[R], 5
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA69B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 7, 114
SHP[2], 3
SHP[2], 47
CALL[], 25, 11, 114
SHP[2], 2
SHP[2], 36
SRP1[], 14
IP[], 5
MDAP[R], 5
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA69C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 22, 2, 114
SHP[2], 2
SHP[2], 25
SHP[2], 1
MDAP[R], 1
SHP[1], 4
IP[], 13
MDAP[R], 13
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA69D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 2, 114
SHP[2], 1
MDAP[R], 1
SHP[1], 4
IP[], 13
MDAP[R], 13
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA69F">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 7, 5
SHP[1], 6
RDTG[]
MDAP[R], 6
SRP2[], 7
IP[], 2
SRP1[], 2
SHP[1], 41
SHP[1], 3
SRP1[], 3
SHP[1], 42
SRP1[], 6
SHP[1], 8
SRP1[], 8
SHP[1], 34
SHP[2], 17
SRP1[], 17
SHP[1], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA700">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 10
SHP[1], 13
MDRP[m&gt;RGr], 1
SHP[2], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA701">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 14
SHP[1], 17
MDRP[M&gt;RGr], 5
SHP[2], 26
MDRP[m&gt;RWh], 3
SHP[2], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA702">
/* VTTTalk Unicode 0xa702 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1595, 0, 1337

    </glyphProgram>

    <glyphProgram name="uniA703">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 14
SHP[1], 17
MDRP[M&gt;RGr], 5
SHP[2], 26
MDRP[m&gt;RWh], 3
SHP[2], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA704">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 13
SHP[1], 12
MDRP[m&gt;RWh], 0
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA705">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 17
SHP[1], 16
MDRP[M&gt;RWh], 4
SHP[2], 5
MDRP[m&gt;RWh], 3
SHP[2], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA706">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 13
SHP[1], 12
SHP[1], 0
MDAP[R], 0
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA707">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 17
SHP[1], 16
MDRP[M&gt;RWh], 4
SHP[2], 5
MDRP[m&gt;RWh], 3
SHP[2], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA708">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MIAP[R], 3, 2
SHP[1], 7
MDAP[R], 7
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA709">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MIAP[R], 3, 2
SHP[1], 7
MDAP[R], 7
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA70A">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MIAP[R], 3, 2
SHP[1], 7
SRP1[], 7
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA70B">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MIAP[R], 3, 2
SHP[1], 7
MDAP[R], 7
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA70C">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 13
MDAP[R], 13
SHP[1], 7
MIAP[R], 3, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA70D">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MIAP[R], 3, 2
SHP[1], 7
MDAP[R], 7
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA70E">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MIAP[R], 3, 2
SHP[1], 7
MDAP[R], 7
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA70F">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MIAP[R], 3, 2
SHP[1], 7
MDAP[R], 7
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA710">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MIAP[R], 3, 2
SHP[1], 7
MDAP[R], 7
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA711">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 13
MDAP[R], 13
SHP[1], 7
MIAP[R], 3, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA712">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 9
MIAP[R], 7, 2
SHP[1], 2
SRP1[], 2
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA713">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
MIAP[R], 7, 2
SHP[1], 2
MDAP[R], 2
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA714">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
MIAP[R], 7, 2
SRP2[], 6
IP[], 1
MDAP[R], 1
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA715">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
MIAP[R], 7, 2
SRP2[], 6
IP[], 1
MDAP[R], 1
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA716">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 1
SRP1[], 1
SHP[1], 2
MIAP[R], 7, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA717">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
MDRP[m&gt;RBl], 0
MDRP[m&gt;RWh], 13
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA718">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
MDRP[m&gt;RBl], 0
SHP[2], 1
SHP[1], 3
SRP1[], 3
SHP[1], 13
MDAP[R], 13
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA719">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 2
MDRP[m&gt;RWh], 13
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA71A">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
MDRP[m&gt;RBl], 4
SHP[1], 2
SRP1[], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA71B">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 10
MDRP[m&gt;RGr], 1
SHP[1], 2
SHP[1], 7
SHP[1], 11
SHP[1], 8
MDAP[R], 8
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA71C">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 10
MDRP[m&gt;RGr], 1
SHP[1], 2
SHP[1], 7
SHP[1], 11
SHP[1], 8
MDAP[R], 8
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA71D">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 13
MDRP[M&gt;RWh], 2
MDRP[m&gt;RBl], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA71E">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 13
MDRP[M&gt;RWh], 2
MDRP[m&gt;RWh], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA71F">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 13
SHP[1], 2
MDAP[R], 2
SHP[1], 3
MDAP[R], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA720">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 9
SHP[1], 1
SHP[1], 5
SHP[1], 8
SHP[1], 0
MDAP[R], 0
SHP[2], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA721">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 1
SHP[1], 3
SRP1[], 3
SHP[1], 5
SRP1[], 5
SHP[1], 4
SHP[1], 6
MDAP[R], 6
SHP[1], 10
MDAP[R], 10
SRP1[], 2
SHP[1], 9
SRP1[], 9
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA722">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 2, 114
SHP[2], 23
SHP[2], 12
MDAP[R], 12
SHP[1], 13
SHP[1], 25
RDTG[]
MDAP[R], 25
SHP[1], 47
SHP[1], 36
RTG[]
MDAP[R], 36
SHP[1], 37
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA723">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 6, 114
SHP[2], 21
SHP[2], 12
SRP1[], 12
SHP[1], 13
CALL[], 34, 11, 114
SHP[2], 35
SHP[2], 24
MDAP[R], 24
SHP[1], 43
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA724">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 22, 2, 114
SHP[2], 2
SHP[2], 12
MDAP[R], 12
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA725">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 20, 6, 114
SHP[2], 2
SHP[2], 11
MDAP[R], 11
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA726">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 13
MIAP[R], 23, 8
SHP[1], 27
CALL[], 24, 2, 114
SHP[2], 28
SRP2[], 23
IP[], 19
MDAP[R], 19
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA727">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 15, 114
SHP[2], 13
MIAP[R], 19, 10
SHP[1], 0
SHP[1], 34
CALL[], 20, 0, 114
CALL[], 27, 7, 114
SHP[2], 39
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA728">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 10
MDAP[R], 23
SHP[1], 22
SHP[1], 25
IP[], 19
MDAP[R], 19
SHP[1], 20
SHP[1], 27
MIAP[R], 37, 8
CALL[], 43, 2, 114
SHP[2], 39
SHP[2], 42
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA729">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 15, 114
SHP[2], 10
CALL[], 39, 6, 114
SHP[2], 38
SHP[2], 40
MDAP[R], 40
SRP1[], 0
IP[], 19
MDAP[R], 19
SHP[1], 27
SRP1[], 27
SHP[1], 20
SHP[2], 23
SRP1[], 23
SHP[1], 22
CALL[], 53, 11, 114
SHP[2], 46
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA72A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 9, 114
SHP[2], 48
SHP[2], 52
MDAP[R], 52
CALL[], 20, 3, 114
SHP[2], 25
MDAP[R], 25
SHP[2], 29
SRP1[], 5
IP[], 39
MDAP[R], 39
SHP[1], 38
SRP2[], 38
IP[], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA72B">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 17
SHP[1], 10
MDAP[R], 28
SHP[1], 27
SHP[1], 31
SRP2[], 17
IP[], 2
MDAP[R], 2
SHP[1], 0
SHP[1], 1
SHP[1], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA72C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 2, 114
SHP[2], 11
CALL[], 19, 9, 114
SHP[2], 26
SRP1[], 26
SHP[1], 2
MDAP[R], 2
SHP[1], 7
SRP1[], 7
SHP[1], 10
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA72D">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 7
SRP1[], 7
SHP[1], 3
SHP[1], 10
SRP1[], 10
SHP[1], 12
CALL[], 11, 6, 114
SHP[2], 4
SHP[2], 6
CALL[], 18, 15, 114
SHP[2], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA72E">
/* VTT 6.35 compiler */
SVTCA[Y]
RUTG[]
MIAP[R], 2, 8
SHP[1], 7
CALL[], 11, 2, 114
SHP[2], 4
SHP[2], 6
RTG[]
MIAP[R], 19, 9
SHP[1], 26
SHP[1], 40
MDAP[R], 40
SHP[1], 35
MDAP[R], 35
SHP[1], 36
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA72F">
/* VTT 6.35 compiler */
SVTCA[Y]
RUTG[]
MIAP[R], 2, 10
SHP[1], 7
SRP1[], 7
SHP[1], 3
CALL[], 11, 6, 114
SHP[2], 4
SHP[2], 6
RTG[]
MIAP[R], 18, 15
SHP[1], 25
SHP[1], 39
MDAP[R], 39
SHP[1], 34
MDAP[R], 34
SHP[1], 35
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA730">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 8, 10
CALL[], 9, 6, 114
SHP[2], 6
SRP2[], 8
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA731">
/* VTTTalk Unicode 0xa731 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 88, 0, 0

    </glyphProgram>

    <glyphProgram name="uniA732">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 16, 8
SHP[1], 19
SRP1[], 19
SHP[1], 5
CALL[], 17, 2, 114
SHP[2], 21
SHP[2], 3
SRP1[], 3
SHP[1], 7
SHP[2], 20
SRP1[], 20
SHP[1], 14
SRP1[], 14
SHP[1], 6
SRP1[], 6
SHP[1], 0
SRP1[], 16
IP[], 26
MDAP[R], 26
SHP[1], 27
SHP[1], 11
SRP1[], 11
SHP[1], 1
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA733">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 15, 7, 114
SHP[2], 5
CALL[], 42, 11, 114
SHP[2], 32
SRP1[], 15
IP[], 22
MDAP[R], 22
SHP[1], 21
SHP[1], 81
SRP1[], 81
SHP[1], 80
CALL[], 67, 7, 114
SHP[2], 57
MIAP[R], 77, 10
CALL[], 101, 11, 114
SHP[2], 91
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA734">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 5, 8
CALL[], 7, 2, 114
SHP[2], 12
SRP2[], 5
IP[], 2
MDAP[R], 2
SHP[1], 3
SRP1[], 3
SHP[1], 10
SRP1[], 7
SHP[1], 11
SRP1[], 11
SHP[1], 4
CALL[], 20, 9, 114
SHP[2], 57
CALL[], 32, 3, 114
SHP[2], 45
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA735">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 20, 11, 114
SHP[2], 11
CALL[], 46, 7, 114
SHP[2], 36
SRP2[], 20
IP[], 2
MDAP[R], 2
SHP[1], 29
SRP1[], 29
SHP[1], 31
CALL[], 57, 7, 114
SHP[2], 90
CALL[], 68, 11, 114
SHP[2], 79
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA736">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 8, 114
CALL[], 3, 2, 114
SHP[2], 9
SHP[2], 20
SRP2[], 1
IP[], 7
MDAP[R], 7
SHP[1], 8
CALL[], 15, 9, 114
SHP[2], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA737">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 20, 11, 114
SHP[2], 11
CALL[], 46, 7, 114
SHP[2], 36
SRP2[], 20
IP[], 2
MDAP[R], 2
SHP[1], 29
SRP1[], 29
SHP[1], 68
SRP1[], 68
SHP[1], 30
CALL[], 52, 6, 114
CALL[], 55, 10, 114
CALL[], 62, 11, 114
SHP[2], 75
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA738">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 8, 114
SHP[2], 17
SRP1[], 17
SHP[1], 13
CALL[], 4, 2, 114
SHP[2], 0
SHP[2], 10
SHP[2], 18
SRP2[], 1
IP[], 7
MDAP[R], 7
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA739">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 6, 114
CALL[], 4, 10, 114
CALL[], 20, 7, 114
SHP[2], 10
CALL[], 26, 10, 114
CALL[], 50, 11, 114
SHP[2], 40
SRP1[], 20
IP[], 31
MDAP[R], 31
SHP[1], 59
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA73A">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 1, 8
SHP[1], 17
SRP1[], 17
SHP[1], 13
SRP1[], 13
SHP[1], 9
SRP1[], 9
SHP[1], 15
CALL[], 4, 2, 114
SHP[2], 10
SRP2[], 1
IP[], 7
MDAP[R], 7
SHP[1], 8
SRP1[], 4
SHP[1], 14
SRP1[], 14
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA73B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 6, 114
MIAP[R], 3, 10
MIAP[R], 26, 11
SHP[1], 16
CALL[], 51, 7, 114
SHP[2], 41
SRP2[], 26
IP[], 7
MDAP[R], 7
SHP[1], 35
MIAP[R], 57, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA73C">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 14
MIAP[R], 19, 8
SHP[1], 23
CALL[], 21, 2, 114
SHP[2], 1
SHP[2], 25
SHP[2], 24
SRP1[], 24
SHP[1], 18
SRP1[], 19
IP[], 30
MDAP[R], 30
SHP[1], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA73D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 15, 114
SHP[2], 21
CALL[], 30, 11, 114
SHP[2], 0
CALL[], 55, 7, 114
SHP[2], 45
SRP2[], 30
IP[], 5
MDAP[R], 5
SHP[1], 39
CALL[], 61, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA73E">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 25, 3, 114
SHP[2], 16
CALL[], 36, 9, 114
SHP[2], 5
SRP1[], 25
IP[], 49
MDAP[R], 49
SHP[1], 43
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA73F">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 25, 7, 114
SHP[2], 16
CALL[], 36, 11, 114
SHP[2], 5
SRP1[], 25
IP[], 49
MDAP[R], 49
SHP[1], 43
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA740">
/* VTTTalk Unicode 0xa740 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 48, 74, 0
OFFSET[R], 1960, -121, 468

    </glyphProgram>

    <glyphProgram name="uniA741">
/* VTTTalk Unicode 0xa741 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 80, 97, 0
OFFSET[R], 1960, -121, 498

    </glyphProgram>

    <glyphProgram name="uniA742">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 8
SHP[1], 14
CALL[], 7, 2, 114
SHP[2], 13
SRP2[], 6
SLOOP[], 9
IP[], 2, 3, 10, 1, 11, 15, 0, 9, 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA743">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 10
SHP[1], 14
CALL[], 7, 0, 114
CALL[], 13, 6, 114
SRP2[], 6
SLOOP[], 9
IP[], 2, 3, 10, 11, 15, 1, 9, 0, 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA744">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 8
SHP[1], 14
CALL[], 7, 2, 114
SHP[2], 13
SRP2[], 6
SLOOP[], 9
IP[], 2, 3, 10, 1, 11, 15, 0, 9, 16
SHP[1], 21
MDAP[R], 21
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA745">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 10
SHP[1], 14
CALL[], 7, 0, 114
SHP[2], 21
MDAP[R], 21
SHP[1], 20
CALL[], 13, 6, 114
SRP2[], 6
SLOOP[], 9
IP[], 2, 3, 10, 11, 15, 1, 9, 0, 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA746">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 7, 8
SHP[1], 2
SHP[1], 3
CALL[], 10, 2, 114
SRP2[], 7
IP[], 9
MDAP[R], 9
SHP[1], 4
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA747">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 3, 10
CALL[], 6, 0, 114
SRP2[], 3
IP[], 5
MDAP[R], 5
SHP[1], 0
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA748">
/* VTTTalk Unicode 0xa748 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 49, 75, 0
OFFSET[R], 1960, -121, 528
SVTCA[Y]
CALL[], 11, 7, 2, 0, -125, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uniA749">
/* VTTTalk Unicode 0xa749 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 81, 90, 0
OFFSET[R], 1960, -121, 529
SVTCA[Y]
CALL[], 7, 3, 2, 0, -204, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uniA74A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 9, 114
SHP[2], 47
CALL[], 22, 3, 114
SHP[2], 35
SRP2[], 10
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA74B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 7, 114
SHP[2], 43
CALL[], 21, 11, 114
SHP[2], 32
SRP1[], 10
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA74C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 29, 9, 114
SHP[2], 66
CALL[], 41, 3, 114
SHP[2], 54
SHP[2], 15
SRP1[], 15
SHP[1], 8
SHP[1], 0
MDAP[R], 0
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA74D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 23, 11, 114
SHP[2], 45
CALL[], 34, 7, 114
SHP[2], 56
SHP[2], 15
MDAP[R], 15
SHP[1], 0
MDAP[R], 0
SHP[1], 1
SRP1[], 15
SHP[1], 8
SRP1[], 8
SHP[1], 11
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA74E">
/* VTTTalk Unicode 0xa74e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 52, 0, 0
OFFSET[R], 52, 980, 0

    </glyphProgram>

    <glyphProgram name="uniA74F">
/* VTTTalk Unicode 0xa74f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 84, 0, 0
OFFSET[R], 84, 799, 0

    </glyphProgram>

    <glyphProgram name="uniA750">
/* VTTTalk Unicode 0xa750 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 53, 75, 0
OFFSET[R], 1960, -121, -368
SVTCA[Y]
CALL[], 27, 1, 1, 0, -136, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uniA751">
/* VTTTalk Unicode 0xa751 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 85, 106, 0
OFFSET[R], 1960, -123, -901
SVTCA[Y]
CALL[], 50, 2, 2, 0, 166, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uniA752">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 32, 8
CALL[], 33, 2, 114
SHP[2], 30
SRP2[], 32
IP[], 18
MDAP[R], 18
SHP[1], 21
SHP[1], 2
SRP1[], 2
SHP[1], 9
MDAP[R], 9
SRP1[], 2
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA753">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 24, 14, 114
CALL[], 26, 6, 114
CALL[], 34, 7, 114
SHP[2], 63
CALL[], 45, 11, 114
SHP[2], 22
MDAP[R], 22
SHP[2], 52
SHP[2], 12
SRP1[], 12
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA754">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 38, 8
CALL[], 39, 2, 114
SHP[2], 0
MDAP[R], 0
SHP[2], 36
SRP1[], 38
IP[], 25
MDAP[R], 25
SHP[1], 26
SHP[1], 12
SRP1[], 12
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA755">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 26, 14, 114
CALL[], 29, 6, 114
CALL[], 36, 7, 114
SHP[2], 0
MDAP[R], 0
SHP[2], 65
CALL[], 47, 11, 114
SHP[2], 54
SHP[2], 12
SRP1[], 12
SHP[1], 30
SHP[1], 11
SRP1[], 11
SHP[1], 50
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA756">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 9, 114
SHP[2], 47
SHP[2], 2
MDAP[R], 2
SHP[1], 3
SHP[1], 6
SRP1[], 6
SHP[1], 5
SRP1[], 5
SHP[1], 0
SRP1[], 0
SHP[1], 1
SHP[2], 7
SRP1[], 7
SHP[1], 4
CALL[], 25, 3, 114
SHP[2], 36
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA757">
/* VTTTalk Unicode 0xa757 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 86, 0, 0
OFFSET[R], 1960, 455, -901
SVTCA[Y]
CALL[], 51, 22, 1, 1, -78, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uniA758">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 28, 9, 114
SHP[2], 17
SHP[2], 47
SRP1[], 47
SHP[1], 44
SHP[2], 54
MDAP[R], 54
SHP[1], 55
SHP[1], 46
SRP1[], 46
SHP[1], 45
CALL[], 39, 3, 114
SHP[2], 6
SRP2[], 28
IP[], 49
MDAP[R], 49
SHP[1], 48
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA759">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 13, 14, 114
SHP[2], 6
SRP1[], 6
SHP[1], 7
CALL[], 15, 6, 114
CALL[], 24, 7, 114
SHP[2], 56
CALL[], 35, 11, 114
SHP[2], 46
SRP1[], 24
IP[], 1
MDAP[R], 1
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA75A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 3, 114
SHP[2], 23
MIAP[R], 26, 8
SLOOP[], 4
IP[], 13, 28, 14, 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA75B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 7, 114
SHP[2], 23
MIAP[R], 26, 10
SLOOP[], 4
IP[], 14, 27, 15, 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA75C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 3, 114
SHP[2], 25
MIAP[R], 34, 8
SHP[1], 14
MDRP[m&gt;RWh], 30
SRP2[], 4
IP[], 31
MDAP[R], 31
SRP1[], 34
SHP[1], 36
SRP1[], 36
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA75D">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 4
SHP[1], 24
MIAP[R], 33, 8
SHP[1], 14
MDRP[m&gt;RWh], 29
SRP2[], 4
IP[], 30
MDAP[R], 30
SRP1[], 33
SHP[1], 35
SRP1[], 35
SHP[1], 34
SRP1[], 34
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA75E">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 12, 8
SHP[1], 1
MDAP[R], 1
SRP1[], 12
SHP[1], 8
SHP[1], 4
SRP1[], 4
SHP[1], 10
CALL[], 13, 2, 114
MDRP[m&gt;RWh], 3
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA75F">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 12, 10
MDRP[m&gt;RWh], 1
SHP[1], 8
SHP[1], 4
SRP1[], 4
SHP[1], 10
CALL[], 13, 6, 114
MDRP[m&gt;RWh], 3
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA760">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 3, 18
SHP[1], 10
SHP[1], 14
SHP[1], 24
MDAP[R], 24
SHP[1], 31
CALL[], 4, 2, 114
SHP[2], 6
SRP1[], 6
SHP[1], 16
SHP[1], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA761">
/* VTTTalk Unicode 0xa761 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 91, 0, 0
OFFSET[R], 94, 743, 0

    </glyphProgram>

    <glyphProgram name="uniA762">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
SHP[1], 16
MDAP[R], 16
SRP1[], 11
SHP[1], 20
CALL[], 42, 9, 114
SHP[2], 48
MDAP[R], 48
SHP[2], 52
SRP1[], 11
IP[], 61
IP[], 1
MDAP[R], 61
MDAP[R], 1
SRP1[], 61
SHP[1], 62
SHP[1], 66
SHP[1], 32
SRP1[], 32
SHP[1], 31
SRP1[], 31
SHP[1], 68
SRP1[], 1
SHP[1], 29
SRP1[], 29
SHP[1], 63
SRP1[], 63
SHP[1], 65
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA763">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
SHP[1], 16
MDAP[R], 16
SRP1[], 11
SHP[1], 20
MDAP[R], 40
SHP[1], 46
MDAP[R], 46
SRP1[], 40
SHP[1], 50
SRP2[], 11
IP[], 58
IP[], 1
MDAP[R], 58
MDAP[R], 1
SRP1[], 58
SHP[1], 63
SHP[1], 31
SRP1[], 31
SHP[1], 65
SRP1[], 1
SHP[1], 28
SRP1[], 28
SHP[1], 60
SRP1[], 60
SHP[1], 62
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA764">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 31
MDAP[R], 31
SHP[1], 30
SMD[], 128
MDRP[m&gt;RGr], 4
SHP[2], 27
MIAP[R], 3, 8
SRP2[], 0
IP[], 16
MDAP[R], 16
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA765">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 14, 114
CALL[], 11, 11, 114
SHP[2], 44
CALL[], 22, 7, 114
SHP[2], 33
SHP[2], 54
MDAP[R], 54
SHP[1], 53
CALL[], 52, 0, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA766">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
MDAP[R], 3
IP[], 14
IP[], 4
MDAP[R], 14
MDAP[R], 4
SRP1[], 14
SHP[1], 15
SRP1[], 4
SHP[1], 25
SRP1[], 3
SHP[1], 27
MDAP[R], 27
SHP[1], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA767">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 11, 114
SHP[2], 38
SHP[2], 46
RUTG[]
MDAP[R], 46
SHP[1], 45
CALL[], 17, 7, 114
SHP[2], 28
CALL[], 48, 14, 114
CALL[], 49, 0, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA768">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
MIAP[R], 0, 2
SHP[2], 5
SRP1[], 1
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA769">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 14, 114
CALL[], 3, 6, 114
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA76A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 20, 3, 114
SHP[2], 11
MIAP[R], 40, 8
SHP[1], 43
IP[], 53
MDAP[R], 53
SHP[1], 1
SHP[1], 2
SRP1[], 2
SHP[1], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA76B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 14, 114
SHP[2], 13
CALL[], 44, 7, 114
SHP[2], 35
SRP2[], 10
IP[], 22
MDAP[R], 22
SHP[1], 24
SHP[1], 0
SRP1[], 0
SHP[1], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA76C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 23, 0, 114
SHP[2], 7
CALL[], 43, 11, 114
SHP[2], 50
SRP1[], 23
IP[], 31
MDAP[R], 31
SHP[1], 18
SHP[1], 1
SRP1[], 1
SHP[1], 38
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA76D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 1, 114
SHP[2], 27
CALL[], 44, 15, 114
SHP[2], 51
SRP1[], 5
IP[], 13
MDAP[R], 13
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA76E">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 13, 114
SHP[2], 1
CALL[], 42, 5, 114
SHP[2], 12
SRP2[], 0
IP[], 32
MDAP[R], 32
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA76F">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 15, 114
SHP[2], 1
CALL[], 42, 7, 114
SHP[2], 12
SRP2[], 0
IP[], 32
MDAP[R], 32
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA770">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 37, 5
SHP[1], 11
SHP[1], 0
MDAP[R], 0
SHP[2], 1
SRP1[], 37
IP[], 29
MDAP[R], 29
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA771">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 0, 114
CALL[], 22, 7, 114
SHP[2], 54
CALL[], 33, 11, 114
MDRP[m&gt;RWh], 2
SHP[1], 12
SHP[1], 44
SRP2[], 22
IP[], 3
MDAP[R], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA772">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 0, 114
CALL[], 7, 11, 114
SHP[2], 6
MDRP[m&gt;RWh], 12
MDRP[m&gt;RWh], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA773">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 20, 7, 114
SHP[2], 9
MIAP[R], 37, 10
MDRP[m&gt;RWh], 2
SHP[1], 53
SRP1[], 53
SHP[1], 31
MDAP[R], 31
MDRP[m&gt;RWh], 0
SHP[1], 30
CALL[], 39, 6, 114
CALL[], 46, 7, 114
SHP[2], 58
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA774">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 20, 7, 114
SHP[2], 9
MIAP[R], 36, 10
MDRP[m&gt;RWh], 2
SHP[1], 31
MDAP[R], 31
MDRP[m&gt;RGr], 3
SHP[1], 30
CALL[], 39, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA775">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 18
CALL[], 7, 6, 114
CALL[], 20, 7, 114
MDRP[m&gt;RBl], 3
SHP[1], 9
SRP2[], 6
IP[], 2
MDAP[R], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA776">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
SHP[2], 23
MIAP[R], 25, 10
MDRP[m&gt;RWh], 34
MDRP[m&gt;RGr], 35
SRP2[], 0
IP[], 12
MDAP[R], 12
SHP[1], 13
SHP[1], 26
SRP1[], 26
SHP[1], 27
SRP1[], 25
SHP[1], 31
SRP1[], 31
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA777">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 6, 114
SHP[2], 2
SHP[2], 6
MDAP[R], 6
SRP0[], 3
MDRP[m&gt;RWh], 8
SHP[2], 7
MDAP[R], 7
CALL[], 21, 11, 114
SHP[2], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA778">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 18, 3, 114
SHP[2], 37
MIAP[R], 52, 8
SHP[1], 2
SMD[], 128
MDRP[m&gt;RGr], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA779">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
CALL[], 12, 9, 114
SHP[2], 40
SRP1[], 1
IP[], 22
MDAP[R], 22
SHP[1], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA77A">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
CALL[], 12, 11, 114
SHP[2], 41
SRP1[], 1
IP[], 22
MDAP[R], 22
SHP[1], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA77B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 12, 3, 114
SHP[2], 5
MDAP[R], 16
CALL[], 18, 2, 114
MIAP[R], 22, 8
SHP[1], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA77C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 14, 114
CALL[], 3, 6, 114
CALL[], 20, 7, 114
SHP[2], 9
MDAP[R], 25
SHP[1], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA77D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 2, 114
SHP[2], 2
SHP[2], 33
CALL[], 4, 9, 114
SHP[2], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA77E">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 9
SHP[2], 1
SRP1[], 1
SHP[1], 34
CALL[], 4, 2, 114
SHP[2], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA77F">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 16, 7, 114
SHP[2], 25
CALL[], 42, 14, 114
SHP[2], 43
SRP1[], 43
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA780">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 1, 2
SHP[1], 0
SHP[1], 6
MIAP[R], 4, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA781">
/* VTTTalk Unicode 0xa781 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 81, -13, -454

    </glyphProgram>

    <glyphProgram name="uniA782">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 1, 8
CALL[], 13, 3, 114
SHP[2], 6
MDAP[R], 18
CALL[], 20, 2, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA783">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 14, 114
CALL[], 3, 6, 114
CALL[], 11, 7, 114
SHP[2], 24
MIAP[R], 18, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA784">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 11, 3, 114
SHP[2], 4
MDAP[R], 14
CALL[], 16, 2, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA785">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 14, 114
CALL[], 3, 6, 114
CALL[], 20, 7, 114
SHP[2], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA786">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 21, 9, 114
SHP[2], 12
MDRP[m&gt;RGr], 16
CALL[], 35, 2, 114
SHP[2], 0
SHP[2], 34
SRP1[], 34
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA787">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 21, 11, 114
SHP[2], 12
CALL[], 34, 6, 114
SHP[2], 33
SHP[2], 0
SRP1[], 0
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA788">
/* VTTTalk Unicode 0xa788 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 375, -90, -1611

    </glyphProgram>

    <glyphProgram name="uniA789">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 21
CALL[], 3, 7, 114
SHP[2], 9
SRP1[], 21
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA78A">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 6
MDRP[m&gt;RWh], 2
SHP[2], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA78B">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA78C">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA78D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 6
CALL[], 9, 8, 114
SRP1[], 0
IP[], 4
MDAP[R], 4
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA78E">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 37, 0, 114
CALL[], 50, 11, 114
SHP[2], 43
SRP1[], 37
IP[], 6
MDAP[R], 6
SHP[1], 36
SHP[1], 14
MDAP[R], 14
SHP[1], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA78F">
/* VTTTalk Unicode 0xa78f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1132, 0, 0

    </glyphProgram>

    <glyphProgram name="uniA790">
/* VTTTalk Unicode 0xa790 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 51, 0, 0
OFFSET[R], 2017, 1161, 0
SVTCA[Y]
CALL[], 13, 2, 0, 0, 154, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uniA791">
/* VTTTalk Unicode 0xa791 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 83, 0, 0
OFFSET[R], 2017, 864, 0
SVTCA[Y]
CALL[], 31, 2, 0, 0, 154, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uniA792">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 32
CALL[], 11, 3, 114
SHP[2], 20
SRP2[], 0
IP[], 44
MDAP[R], 44
SHP[1], 43
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA793">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 31
CALL[], 11, 7, 114
SHP[2], 20
SRP2[], 0
IP[], 43
MDAP[R], 43
SHP[1], 42
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA794">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 15, 114
SHP[2], 13
CALL[], 27, 11, 114
SHP[2], 18
SRP1[], 18
SHP[1], 22
SRP1[], 22
SHP[1], 0
CALL[], 38, 7, 114
SHP[2], 47
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA795">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 15, 114
SHP[2], 13
MIAP[R], 20, 10
SHP[1], 35
SRP1[], 35
SHP[1], 0
CALL[], 21, 0, 114
CALL[], 28, 7, 114
SHP[2], 40
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA796">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 32, 8
SHP[1], 45
SHP[1], 46
CALL[], 33, 2, 114
SHP[2], 30
SRP1[], 32
IP[], 2
MDAP[R], 2
SHP[1], 19
SHP[1], 17
SRP1[], 17
SHP[1], 20
SRP1[], 2
SHP[1], 56
SRP1[], 56
SHP[1], 43
SRP1[], 43
SHP[1], 59
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA797">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 0, 114
MIAP[R], 3, 10
SHP[1], 65
MDAP[R], 65
CALL[], 11, 11, 114
SHP[2], 42
CALL[], 22, 7, 114
SHP[2], 33
SRP2[], 11
SLOOP[], 4
IP[], 37, 58, 17, 57
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA798">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 8
SHP[1], 15
CALL[], 20, 2, 114
SRP2[], 8
IP[], 2
MDAP[R], 2
SHP[1], 3
SRP1[], 20
SHP[1], 7
SRP1[], 7
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA799">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 5, 10
CALL[], 10, 1, 114
SHP[2], 17
CALL[], 25, 6, 114
SHP[2], 24
MDRP[m&gt;RWh], 3
SHP[2], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA79A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 34
CALL[], 7, 9, 114
SHP[2], 4
SHP[2], 41
CALL[], 23, 3, 114
SHP[2], 50
SRP2[], 7
IP[], 61
MDAP[R], 61
SHP[1], 60
SRP2[], 60
IP[], 15
CALL[], 27, 2, 114
SHP[2], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA79B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
CALL[], 14, 11, 114
SHP[2], 7
CALL[], 30, 7, 114
SHP[2], 39
CALL[], 69, 11, 114
SHP[2], 60
SRP1[], 30
IP[], 51
MDAP[R], 51
SHP[1], 20
SHP[1], 48
SRP1[], 48
SHP[1], 50
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA79C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 28
CALL[], 16, 3, 114
SHP[2], 40
SRP2[], 0
IP[], 51
MDAP[R], 51
SHP[1], 50
SRP2[], 50
IP[], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA79D">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 0, 11
CALL[], 35, 7, 114
SHP[2], 12
SRP2[], 0
IP[], 48
MDAP[R], 48
SHP[1], 24
SHP[1], 45
SRP1[], 45
SHP[1], 47
CALL[], 58, 11, 114
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA79E">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 9, 114
SHP[2], 26
CALL[], 36, 2, 114
SHP[2], 35
SHP[2], 31
SRP1[], 6
SRP2[], 31
IP[], 17
MDAP[R], 17
SHP[1], 16
SHP[1], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA79F">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 6, 114
SHP[2], 29
CALL[], 4, 11, 114
SHP[2], 24
SRP1[], 2
IP[], 15
MDAP[R], 15
SHP[1], 14
SHP[1], 0
SRP1[], 0
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA7A0">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 9, 114
SHP[2], 41
CALL[], 20, 3, 114
MDRP[m&gt;RGr], 25
SHP[1], 29
SRP2[], 9
IP[], 2
IP[], 48
MDAP[R], 2
MDAP[R], 48
SRP1[], 2
SHP[1], 3
SHP[1], 1
MDAP[R], 1
SHP[1], 0
SRP1[], 48
SHP[1], 47
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA7A1">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 4, 6
CALL[], 10, 15, 114
SHP[2], 18
CALL[], 30, 7, 114
SHP[2], 62
CALL[], 41, 11, 114
SHP[2], 52
SRP1[], 30
IP[], 2
MDAP[R], 2
SHP[1], 3
SHP[1], 1
MDAP[R], 1
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA7A2">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 8
SHP[1], 14
CALL[], 7, 2, 114
SHP[2], 13
SRP2[], 6
SLOOP[], 9
IP[], 2, 3, 10, 1, 0, 11, 15, 9, 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA7A3">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 10
CALL[], 7, 0, 114
CALL[], 13, 6, 114
SRP2[], 6
SLOOP[], 10
IP[], 2, 3, 10, 1, 11, 15, 0, 9, 16, 12
MIAP[R], 14, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA7A4">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 9, 8
SHP[1], 6
CALL[], 10, 2, 114
SHP[2], 13
SRP2[], 9
IP[], 2
MDAP[R], 2
IP[], 12
SRP2[], 10
IP[], 7
SHP[1], 3
SHP[1], 1
MDAP[R], 1
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA7A5">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 10
SHP[1], 22
CALL[], 7, 6, 114
CALL[], 15, 7, 114
SHP[2], 27
SRP2[], 6
IP[], 2
MDAP[R], 2
SHP[1], 3
SHP[1], 1
MDAP[R], 1
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA7A6">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 2, 114
SHP[2], 26
MIAP[R], 28, 8
SHP[1], 29
IP[], 15
MDAP[R], 15
SHP[1], 30
SHP[1], 16
SRP1[], 16
SLOOP[], 4
IP[], 2, 3, 1, 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA7A7">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 10
CALL[], 7, 6, 114
SRP2[], 6
SLOOP[], 4
IP[], 2, 3, 1, 0
CALL[], 24, 7, 114
SHP[2], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA7A8">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 19, 3, 114
SHP[2], 28
CALL[], 47, 9, 114
SHP[2], 58
SRP1[], 19
SLOOP[], 6
IP[], 4, 2, 3, 1, 0, 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA7A9">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 18, 7, 114
SHP[2], 27
CALL[], 45, 11, 114
SHP[2], 54
SRP1[], 18
SLOOP[], 8
IP[], 4, 40, 2, 3, 1, 0, 13, 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA7AA">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 23
SHP[2], 1
SRP1[], 1
SHP[1], 9
MDAP[R], 9
SHP[2], 30
MDAP[R], 25
SHP[1], 29
SRP1[], 29
SRP2[], 30
IP[], 20
MDAP[R], 20
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA7AB">
/* VTTTalk Unicode 0xa7ab */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 625, 0, 0

    </glyphProgram>

    <glyphProgram name="uniA7AC">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
MIAP[R], 7, 9
SHP[1], 14
CALL[], 24, 9, 114
SHP[2], 56
CALL[], 36, 3, 114
SHP[2], 44
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA7AD">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 39, 8
SHP[1], 40
SHP[1], 43
CALL[], 44, 2, 114
SRP2[], 43
IP[], 25
MDAP[R], 25
SHP[1], 18
SMD[], 192
MDRP[m&gt;RGr], 33
SHP[2], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA7B0">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 5, 8
SHP[1], 10
CALL[], 9, 2, 114
SHP[2], 11
SRP2[], 5
SLOOP[], 6
IP[], 4, 8, 1, 7, 3, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA7B1">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 2, 2, 114
MIAP[R], 7, 8
SHP[1], 3
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA7F7">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA7F8">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
SHP[1], 15
MDRP[m&gt;RGr], 10
SHP[2], 14
IP[], 2
MDAP[R], 2
SHP[1], 3
MDRP[m&gt;RGr], 7
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA7F9">
/* VTTTalk Unicode 0xa7f9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 897, 0, 0
OFFSET[R], 888, 577, 0

    </glyphProgram>

    <glyphProgram name="uniA7FA">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
SHP[1], 3
SHP[1], 14
SHP[1], 6
SRP1[], 6
SHP[1], 9
CALL[], 15, 6, 114
SHP[2], 7
SRP1[], 7
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA7FB">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 9
SHP[2], 11
MIAP[R], 1, 18
IP[], 6
MDAP[R], 6
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA7FC">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 11
CALL[], 9, 2, 114
SHP[2], 14
SRP1[], 11
IP[], 1
MDAP[R], 1
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA7FD">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
SHP[2], 7
SHP[2], 12
CALL[], 5, 2, 114
SHP[2], 10
SHP[2], 14
SRP2[], 0
IP[], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA7FE">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
CALL[], 0, 0, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA7FF">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 9
SHP[1], 13
SHP[1], 17
SHP[1], 5
CALL[], 3, 2, 114
SHP[2], 8
SHP[2], 15
SHP[2], 16
SHP[2], 4
SRP1[], 5
SRP2[], 4
SLOOP[], 4
IP[], 12, 0, 14, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA92E">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 17
SHP[1], 6
SMD[], 128
MDRP[m&gt;RBl], 0
SHP[2], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB30">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 7, 114
SHP[2], 44
CALL[], 22, 11, 114
SHP[2], 33
SRP1[], 10
IP[], 2
MDAP[R], 2
SHP[1], 3
CALL[], 49, 6, 114
CALL[], 63, 11, 114
SHP[2], 56
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB31">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 58
CALL[], 7, 11, 114
SHP[2], 69
CALL[], 32, 7, 114
SHP[2], 22
SRP2[], 7
IP[], 73
MDAP[R], 73
SHP[1], 17
SHP[1], 64
SRP1[], 64
SHP[1], 51
CALL[], 39, 7, 114
SHP[2], 36
SHP[2], 46
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB32">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 11, 114
SHP[2], 5
SHP[2], 3
SRP1[], 3
SHP[1], 2
SHP[1], 9
SRP1[], 9
SHP[1], 8
SHP[1], 10
SRP1[], 10
SHP[1], 0
CALL[], 7, 7, 114
SHP[2], 1
SRP1[], 1
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB33">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 11, 114
SHP[2], 40
CALL[], 15, 7, 114
SHP[2], 29
SRP2[], 4
IP[], 23
MDAP[R], 23
SHP[1], 22
SRP1[], 22
SHP[1], 3
RDTG[]
MDAP[R], 3
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB34">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 18, 11, 114
SHP[2], 55
CALL[], 29, 7, 114
SHP[2], 44
SRP2[], 18
IP[], 35
MDAP[R], 35
SHP[1], 1
SHP[1], 38
SRP1[], 38
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB35">
/* VTTTalk Unicode 0xab35 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 75, 0, 0

    </glyphProgram>

    <glyphProgram name="uniAB36">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 34, 6
CALL[], 43, 7, 114
SHP[2], 75
CALL[], 54, 11, 114
SHP[2], 65
SHP[2], 23
MDAP[R], 23
SHP[1], 12
SHP[2], 31
SRP1[], 31
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB37">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 19, 7, 114
SHP[2], 0
SHP[2], 38
MDAP[R], 38
SHP[1], 37
SHP[2], 48
MDAP[R], 48
SHP[1], 29
SHP[1], 9
SRP1[], 9
SHP[1], 8
MIAP[R], 60, 10
CALL[], 61, 0, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB38">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
CALL[], 3, 0, 114
SRP2[], 2
IP[], 9
MDAP[R], 9
SHP[1], 27
SHP[1], 22
MDAP[R], 22
SHP[1], 14
SRP1[], 9
SHP[1], 48
RDTG[]
MDAP[R], 48
SHP[1], 40
SHP[1], 35
RTG[]
MDAP[R], 35
SHP[1], 53
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB39">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 31, 10
CALL[], 32, 0, 114
SRP2[], 31
IP[], 12
MDAP[R], 12
SHP[1], 19
SHP[1], 4
MDAP[R], 4
SHP[1], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB3A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 11, 114
SHP[2], 26
SHP[2], 12
MDAP[R], 12
SHP[1], 19
MIAP[R], 34, 10
CALL[], 35, 6, 114
CALL[], 43, 7, 114
SHP[2], 55
MIAP[R], 50, 10
CALL[], 66, 7, 114
SHP[2], 78
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB3B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 24, 11, 114
SHP[2], 13
SHP[2], 31
MDAP[R], 31
SHP[1], 6
MIAP[R], 34, 10
CALL[], 35, 6, 114
CALL[], 43, 7, 114
SHP[2], 56
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB3C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 5, 15, 114
SHP[2], 25
SHP[2], 12
MDAP[R], 12
SHP[1], 19
MIAP[R], 37, 10
CALL[], 39, 6, 114
CALL[], 47, 7, 114
SHP[2], 59
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB3D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 11, 114
SHP[2], 3
SHP[2], 7
CALL[], 10, 7, 114
SHP[2], 1
SHP[2], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB3E">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 7, 114
MDRP[m&gt;RWh], 3
SHP[1], 2
SRP1[], 2
SHP[1], 5
SRP1[], 5
SHP[1], 6
SRP1[], 1
SHP[1], 18
SRP1[], 18
SHP[1], 0
SHP[1], 17
SRP1[], 17
SHP[1], 16
CALL[], 8, 11, 114
MDRP[m&gt;RWh], 10
SHP[1], 9
SRP1[], 9
SHP[1], 12
SRP1[], 12
SHP[1], 13
SRP1[], 8
SHP[1], 15
SRP1[], 15
SHP[1], 7
SHP[1], 14
SRP1[], 14
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB3F">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 22, 7, 114
SHP[2], 15
MDRP[m&gt;RBl], 39
CALL[], 33, 11, 114
SHP[2], 4
MDRP[m&gt;RWh], 37
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB40">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 7, 114
SHP[2], 39
CALL[], 17, 11, 114
SHP[2], 28
SRP1[], 6
IP[], 69
MDAP[R], 69
SHP[1], 71
CALL[], 44, 7, 114
SHP[2], 51
CALL[], 77, 11, 114
SHP[2], 62
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB41">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 7, 114
SHP[2], 40
CALL[], 15, 11, 114
SHP[2], 29
SRP1[], 4
IP[], 24
MDAP[R], 24
SHP[1], 21
CALL[], 53, 11, 114
MDRP[m&gt;RWh], 1
SHP[1], 86
CALL[], 64, 7, 114
MDRP[m&gt;RWh], 3
SHP[1], 75
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB42">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 4, 7, 114
SHP[2], 40
CALL[], 15, 11, 114
SHP[2], 29
SRP1[], 4
IP[], 24
MDAP[R], 24
SHP[1], 21
SHP[1], 1
MDAP[R], 1
SHP[1], 0
CALL[], 53, 11, 114
SHP[2], 86
CALL[], 64, 7, 114
SHP[2], 75
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB43">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 18, 11, 114
SHP[2], 11
CALL[], 29, 7, 114
SHP[2], 0
CALL[], 36, 7, 114
SHP[2], 69
CALL[], 47, 11, 114
SHP[2], 58
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB44">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 18, 11, 114
SHP[2], 11
SHP[2], 32
RUTG[]
MDAP[R], 32
CALL[], 40, 7, 114
SHP[2], 33
RTG[]
MDAP[R], 33
SHP[2], 73
SHP[2], 29
SRP1[], 29
SHP[1], 0
CALL[], 51, 11, 114
SHP[2], 62
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB45">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 14, 10
SHP[1], 1
CALL[], 29, 6, 114
SRP2[], 14
IP[], 20
MDAP[R], 20
SHP[1], 7
SRP1[], 7
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB46">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 12, 14, 114
CALL[], 20, 6, 114
SHP[2], 43
MIAP[R], 45, 10
IP[], 32
MDAP[R], 32
SHP[1], 33
SHP[1], 0
SRP1[], 0
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB47">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 18
CALL[], 3, 6, 114
SHP[2], 5
SRP1[], 5
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB48">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
CALL[], 3, 6, 114
CALL[], 28, 7, 114
SHP[2], 31
SHP[2], 16
SRP1[], 16
SHP[1], 13
CALL[], 34, 7, 114
SHP[2], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB49">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 6, 114
CALL[], 20, 7, 114
SHP[2], 9
CALL[], 33, 11, 114
SHP[2], 53
SHP[2], 40
MDAP[R], 40
SHP[1], 47
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB4A">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 6, 114
CALL[], 15, 11, 114
SHP[2], 36
SHP[2], 23
MDAP[R], 23
SHP[1], 30
CALL[], 70, 7, 114
SHP[2], 58
SRP1[], 58
SHP[1], 55
CALL[], 76, 7, 114
SHP[2], 51
SHP[2], 73
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB4B">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 11, 114
SHP[2], 7
CALL[], 30, 7, 114
SHP[2], 21
MDAP[R], 21
SHP[1], 1
SHP[2], 25
MDAP[R], 25
SHP[1], 35
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB4C">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 10, 7, 114
SHP[2], 5
MDAP[R], 5
SHP[1], 15
SHP[2], 41
MDAP[R], 41
SHP[1], 1
CALL[], 35, 11, 114
SHP[2], 19
MIAP[R], 46, 6
SHP[1], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB4D">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 1, 114
SHP[2], 13
CALL[], 24, 11, 114
SHP[2], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB4E">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 4, 10
CALL[], 11, 11, 114
SHP[2], 1
MDAP[R], 1
SHP[2], 24
CALL[], 17, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB4F">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 8, 10
CALL[], 15, 11, 114
SHP[2], 28
SHP[2], 2
MDAP[R], 2
SHP[1], 3
SRP1[], 3
SHP[1], 5
CALL[], 21, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB50">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 7, 114
SHP[2], 9
SRP1[], 9
SHP[1], 29
RDTG[]
MDAP[R], 29
RTG[]
MIAP[R], 16, 10
CALL[], 23, 11, 114
SHP[2], 35
CALL[], 46, 11, 114
SHP[2], 58
CALL[], 52, 6, 114
SHP[2], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB51">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 11, 114
SHP[2], 9
SRP1[], 9
SHP[1], 30
MDAP[R], 30
CALL[], 13, 10, 114
CALL[], 15, 6, 114
CALL[], 23, 7, 114
SHP[2], 35
SRP1[], 35
SHP[1], 12
SRP2[], 30
IP[], 41
IP[], 40
CALL[], 46, 7, 114
SHP[2], 58
MIAP[R], 53, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB52">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 14, 7, 114
SHP[2], 7
MIAP[R], 21, 6
MIAP[R], 24, 10
CALL[], 31, 11, 114
SHP[2], 44
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB53">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 14, 114
SHP[2], 6
CALL[], 11, 6, 114
SHP[2], 2
SRP2[], 9
SLOOP[], 4
IP[], 7, 10, 4, 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB54">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 12, 14, 114
CALL[], 15, 6, 114
SHP[2], 2
CALL[], 28, 15, 114
SHP[2], 7
SHP[2], 32
SHP[2], 20
MDAP[R], 20
SHP[1], 38
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB55">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 12, 14, 114
SHP[2], 10
SHP[2], 3
SRP1[], 3
SHP[1], 2
CALL[], 15, 6, 114
SHP[2], 6
SRP2[], 12
SLOOP[], 4
IP[], 11, 14, 8, 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB56">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 13, 10
CALL[], 16, 6, 114
SHP[2], 2
SRP2[], 13
SLOOP[], 4
IP[], 12, 15, 4, 1
CALL[], 29, 11, 114
SHP[2], 7
SHP[2], 33
SHP[2], 21
MDAP[R], 21
SHP[1], 39
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB57">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 10
MIAP[R], 8, 14
CALL[], 11, 6, 114
SHP[2], 2
SRP2[], 6
SLOOP[], 4
IP[], 7, 10, 4, 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB58">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 24, 11, 114
SHP[2], 0
SHP[2], 16
MDAP[R], 16
SHP[1], 6
CALL[], 30, 14, 114
CALL[], 33, 6, 114
SHP[2], 36
SRP2[], 24
SLOOP[], 4
IP[], 29, 32, 38, 35
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB59">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 10
CALL[], 8, 14, 114
SHP[2], 15
SRP1[], 15
SHP[1], 14
CALL[], 11, 6, 114
SHP[2], 2
SRP2[], 6
SLOOP[], 4
IP[], 7, 4, 10, 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB5A">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
CALL[], 8, 15, 114
SHP[2], 15
CALL[], 24, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB5B">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 8, 2
SHP[1], 0
SMD[], 128
MDRP[M&gt;RBl], 5
SHP[2], 13
SMD[], 64
MDRP[M&gt;RWh], 28
SHP[2], 20
SMD[], 128
MDRP[m&gt;RBl], 24
SHP[2], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB5C">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 27, 2
SHP[1], 17
MDAP[R], 17
SRP1[], 27
SHP[1], 38
SHP[1], 18
MDAP[R], 18
SHP[1], 7
MDAP[R], 7
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB5D">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 52
SHP[1], 51
MDAP[R], 51
SRP2[], 52
IP[], 16
MDAP[R], 16
SHP[1], 0
SHP[1], 32
SRP1[], 32
SHP[1], 31
SRP1[], 16
SHP[1], 40
MDAP[R], 40
SHP[1], 24
SHP[1], 8
SRP1[], 8
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB5E">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 27
SHP[1], 26
MDAP[R], 26
SRP2[], 27
IP[], 17
MDAP[R], 17
SHP[1], 9
SHP[1], 0
SRP1[], 0
SHP[1], 1
SRP1[], 17
SHP[1], 5
MDAP[R], 5
SHP[1], 21
SHP[1], 12
SRP1[], 12
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB5F">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 37, 2, 114
SHP[2], 22
MDAP[R], 22
SHP[2], 30
SHP[2], 6
MDAP[R], 6
SHP[1], 17
SHP[1], 25
MDAP[R], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB64">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 24
CALL[], 12, 7, 114
SHP[2], 35
MIAP[R], 46, 10
CALL[], 53, 7, 114
SHP[2], 60
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniAB65">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 28, 7, 114
SHP[2], 6
MIAP[R], 49, 10
SHP[1], 45
SHP[1], 50
SRP1[], 50
SHP[1], 16
SRP1[], 16
SHP[1], 40
SHP[1], 17
SRP1[], 17
SHP[1], 39
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniFE20">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
MDRP[m&gt;RGr], 0
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniFE21">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
MDRP[m&gt;RBl], 1
SHP[2], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniFE22">
/* VTTTalk Unicode 0xfe22 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1849, 0, 1597

    </glyphProgram>

    <glyphProgram name="uniFE23">
/* VTTTalk Unicode 0xfe23 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1850, 0, 1597

    </glyphProgram>

    <glyphProgram name="uniFE24">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniFE25">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniFE26">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniFE27">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SMD[], 128
MDRP[m&gt;RBl], 1
SHP[2], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniFE28">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RGr], 7
SHP[2], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniFE29">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 14
SHP[1], 5
SMD[], 128
MDRP[m&gt;RGr], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniFE2A">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 16
SHP[1], 7
SMD[], 128
MDRP[m&gt;RGr], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniFE2B">
/* VTTTalk Unicode 0xfe2b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1844, 0, -1604

    </glyphProgram>

    <glyphProgram name="uniFE2C">
/* VTTTalk Unicode 0xfe2c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1845, 0, -1604

    </glyphProgram>

    <glyphProgram name="uniFE2D">
/* VTTTalk Unicode 0xfe2d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1846, 0, -1604

    </glyphProgram>

    <glyphProgram name="uniFEFF">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uniFFFC">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uniFFFD">
/* VTT 6.35 compiler */

    </glyphProgram>

    <glyphProgram name="uogonek">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 11, 11, 114
SHP[2], 24
SHP[2], 4
SRP1[], 4
SHP[1], 29
SRP1[], 29
SHP[1], 28
CALL[], 17, 6, 114
SHP[2], 1
CALL[], 43, 15, 114
SHP[2], 36
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="upsilon">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 25, 11, 114
CALL[], 0, 6, 114
SRP1[], 25
SHP[1], 7
SHP[2], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="upsilondieresis">
/* VTTTalk Unicode 0x3cb */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 586, 0, 0
OFFSET[R], 107, 120, -21
SVTCA[Y]
CALL[], 52, 15, 1, 1, 162, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="upsilondieresistonos">
/* VTTTalk Unicode 0x3b0 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 586, 0, 0
OFFSET[R], 558, 34, -21
SVTCA[Y]
CALL[], 56, 15, 1, 1, 162, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="upsilonlatin">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 15, 7, 114
SHP[2], 16
SHP[2], 45
SRP1[], 45
SHP[1], 44
CALL[], 30, 11, 114
SHP[2], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="upsilontonos">
/* VTTTalk Unicode 0x3cd */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 586, 0, 0
OFFSET[R], 557, 291, -28
SVTCA[Y]
CALL[], 31, 15, 1, 1, 153, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uring">
/* VTTTalk Unicode 0x16f */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0
OFFSET[R], 395, 231, 11
SVTCA[Y]
CALL[], 39, 17, 1, 1, 134, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="utilde">
/* VTTTalk Unicode 0x169 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 90, 0, 0
OFFSET[R], 397, 91, 4
SVTCA[Y]
CALL[], 42, 17, 1, 1, 170, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="v">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 8, 10, 114
SHP[2], 3
CALL[], 9, 6, 114
SHP[2], 1
SRP2[], 8
IP[], 6
IP[], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="versicle">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 14, 8
MDRP[m&gt;RWh], 1
SHP[1], 10
CALL[], 15, 2, 114
SHP[2], 7
MDRP[m&gt;RWh], 5
SHP[2], 0
SHP[2], 4
SRP1[], 4
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="verticalbardbl">
/* VTTTalk Unicode 0x2016 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 97, -5, 0
OFFSET[R], 97, 282, 0

    </glyphProgram>

    <glyphProgram name="vscript">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 1, 11, 114
CALL[], 8, 6, 114
CALL[], 31, 7, 114
SHP[2], 24
SRP1[], 1
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="vturn">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 5
CALL[], 3, 6, 114
SHP[2], 7
SRP2[], 1
IP[], 0
IP[], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="w">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 10, 114
SHP[2], 4
SHP[2], 14
SHP[2], 18
CALL[], 10, 6, 114
SHP[2], 1
SHP[2], 12
SHP[2], 16
SRP2[], 9
SLOOP[], 6
IP[], 7, 11, 0, 17, 3, 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="wacute">
/* VTTTalk Unicode 0x1e83 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 92, 0, 0
OFFSET[R], 118, 538, 0
SVTCA[Y]
CALL[], 22, 1, 1, 1, 160, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="wcircumflex">
/* VTTTalk Unicode 0x175 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 92, 0, 0
OFFSET[R], 375, 292, 0
SVTCA[Y]
CALL[], 25, 21, 1, 1, 171, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="wdieresis">
/* VTTTalk Unicode 0x1e85 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 92, 0, 0
OFFSET[R], 107, 340, 0
SVTCA[Y]
CALL[], 43, 21, 1, 1, 183, 86
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="wgrave">
/* VTTTalk Unicode 0x1e81 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 92, 0, 0
OFFSET[R], 69, 394, 0
SVTCA[Y]
CALL[], 24, 21, 1, 1, 160, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="whiteCircle">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
CALL[], 8, 24, 106
CALL[], 0, 16, 106
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="won">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 17, 12
SHP[1], 8
SHP[1], 27
SRP1[], 27
SHP[1], 19
CALL[], 18, 4, 114
SRP2[], 17
IP[], 2
MDAP[R], 2
SHP[1], 3
MDRP[m&gt;RWh], 7
SHP[2], 6
SRP1[], 18
SHP[1], 10
SRP1[], 10
SHP[1], 21
SHP[1], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="wsuper">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 2
SHP[1], 0
SHP[2], 11
SHP[2], 16
MDAP[R], 10
SHP[1], 4
SRP2[], 6
SLOOP[], 3
IP[], 18, 8, 2
SHP[1], 20
SRP1[], 20
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="wturn">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 3, 6, 114
SHP[2], 7
SRP1[], 7
SHP[1], 15
SRP1[], 15
SHP[1], 19
MDAP[R], 5
SHP[1], 1
SHP[1], 13
SRP1[], 13
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="wynn">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
CALL[], 4, 6, 114
CALL[], 11, 7, 114
SRP2[], 1
IP[], 22
MDAP[R], 22
SHP[1], 23
SRP1[], 11
SHP[1], 34
SRP1[], 34
SHP[1], 0
SRP1[], 0
SHP[1], 5
SRP1[], 5
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="x">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 9, 10, 114
SHP[2], 6
CALL[], 11, 6, 114
SHP[2], 3
SRP2[], 9
SLOOP[], 4
IP[], 7, 4, 10, 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="xi">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 27, 3, 114
SHP[2], 5
MDAP[R], 51
IP[], 33
MDAP[R], 33
SHP[1], 15
SRP2[], 15
IP[], 17
IP[], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="xsuper">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 3
MDRP[m&lt;RGr], 5
SHP[2], 9
SLOOP[], 4
IP[], 7, 10, 4, 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="xsupnosp">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 2
SMD[], 192
MDRP[m&gt;RGr], 4
SHP[2], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="y">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 8, 15, 114
SHP[2], 15
CALL[], 24, 6, 114
SHP[2], 2
SRP2[], 8
SLOOP[], 3
IP[], 23, 22, 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="yacute">
/* VTTTalk Unicode 0xfd */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 94, 0, 0
OFFSET[R], 118, 283, 0
SVTCA[Y]
CALL[], 25, 1, 1, 1, 160, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="ycircumflex">
/* VTTTalk Unicode 0x177 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 94, 0, 0
OFFSET[R], 375, 37, 0
SVTCA[Y]
CALL[], 28, 1, 1, 1, 171, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="ydieresis">
/* VTTTalk Unicode 0xff */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 94, 0, 0
OFFSET[R], 107, 85, 0
SVTCA[Y]
CALL[], 46, 1, 1, 1, 183, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="yen">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 17, 4, 114
SHP[2], 9
CALL[], 20, 12, 114
SRP2[], 17
IP[], 2
MDAP[R], 2
SHP[1], 3
SRP2[], 3
IP[], 14
IP[], 8
SHP[2], 21
SRP1[], 21
SHP[1], 18
MDRP[m&gt;RWh], 7
SHP[2], 6
SHP[1], 16
SRP1[], 16
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="yen.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 17, 125
SHP[1], 9
MIAP[R], 20, 10
SRP2[], 17
IP[], 2
RUTG[]
MDAP[R], 2
SHP[1], 3
RTG[]
MDRP[m&gt;RWh], 7
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ygrave">
/* VTTTalk Unicode 0x1ef3 */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 94, 0, 0
OFFSET[R], 69, 139, 0
SVTCA[Y]
CALL[], 27, 1, 1, 1, 160, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="yhook">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 13
CALL[], 36, 6, 114
MDAP[R], 24
SHP[1], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ysuper">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 14
SHP[1], 22
SRP1[], 22
SHP[1], 21
MIAP[R], 23, 2
SHP[1], 1
SRP2[], 7
IP[], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="yturn">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 20
CALL[], 8, 1, 114
SHP[2], 15
SRP2[], 20
SLOOP[], 4
IP[], 21, 0, 22, 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="z">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 18
SHP[1], 6
SHP[1], 3
SRP1[], 3
SHP[1], 7
CALL[], 13, 6, 114
SHP[2], 9
SHP[2], 12
SRP1[], 12
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zacute">
/* VTTTalk Unicode 0x17a */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 95, 0, 0
OFFSET[R], 118, 290, 0
SVTCA[Y]
CALL[], 14, 13, 1, 1, 160, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="zbar">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 6
SHP[1], 10
SHP[1], 7
SRP1[], 7
SHP[1], 11
CALL[], 12, 6, 114
SRP1[], 6
IP[], 17
IP[], 2
MDAP[R], 17
MDAP[R], 2
SRP1[], 17
SHP[1], 16
SRP1[], 16
SHP[1], 8
SRP1[], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zcaron">
/* VTTTalk Unicode 0x17e */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 95, 0, 0
OFFSET[R], 376, 65, 0
SVTCA[Y]
CALL[], 20, 8, 1, 1, 169, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="zcurl">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 38, 10
SHP[1], 34
SRP1[], 34
SHP[1], 0
SHP[2], 1
SRP1[], 1
SHP[1], 39
SRP1[], 34
SHP[1], 16
MDAP[R], 16
SHP[1], 17
SRP1[], 17
SHP[1], 18
SRP1[], 16
SHP[1], 24
MDAP[R], 24
SHP[1], 9
CALL[], 45, 6, 114
SHP[2], 40
SHP[2], 44
SRP1[], 44
SHP[1], 36
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zdotaccent">
/* VTTTalk Unicode 0x17c */
/* ACT generated Fri Mar 27 17:57:47 2020 */

USEMYMETRICS[]
OFFSET[R], 95, 0, 0
OFFSET[R], 394, 264, 0
SVTCA[Y]
CALL[], 23, 8, 1, 1, 181, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="zero">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 6, 13, 114
CALL[], 18, 5, 114
SHP[2], 31
SRP1[], 6
SHP[1], 43
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zero.frac">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1863, 0, 664

    </glyphProgram>

    <glyphProgram name="zero.onum">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 11
SHP[1], 39
MIAP[R], 17, 126
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zero.pnum">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 21, 20, 0

    </glyphProgram>

    <glyphProgram name="zero.smcp">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 6, 11
SHP[1], 39
MIAP[R], 17, 126
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zero.sup">
/* VTT 6.35 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 32
MDRP[m&lt;RGr], 14
SHP[2], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zero.tnum">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

OFFSET[R], 2217, -66, 0

    </glyphProgram>

    <glyphProgram name="zerosub">
/* VTTTalk Unicode 0x2080 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1863, 0, -368

    </glyphProgram>

    <glyphProgram name="zerosuperior">
/* VTTTalk Unicode 0x2070 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

USEMYMETRICS[]
OFFSET[R], 1863, 0, 667

    </glyphProgram>

    <glyphProgram name="zeta">
/* VTT 6.35 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 41
MDAP[R], 41
SHP[1], 44
SRP1[], 44
SHP[1], 2
MDAP[R], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zrthook">
/* VTT 6.35 compiler */
SVTCA[Y]
MIAP[R], 2, 10
SHP[1], 3
SHP[1], 5
CALL[], 13, 6, 114
SHP[2], 8
SHP[2], 12
SRP1[], 12
SHP[1], 4
MIAP[R], 28, 15
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <extraProgram name="cvt">
/* Control Program */
/* ACT generated Thu Dec  5 13:36:29 2019 */

CATEGORY Stroke
CATEGORY StrokeInheritance

InstructionsOn @9..2047

DropOutCtrlOff @144

CvtCutIn = 1, 0@144 /* 1 pixel cut-in for over- and undershoots */

ClearTypeCtrl = 1

LinearAdvanceWidths = 0

/***** Height CVTs *****/
UpperCase
  Grey
  Y
  SquareHeight
      2:  1456 /* cap height */

Delta(1@9;16;23;26;30)

ASM("SVTCA[Y]")
ASM("CALL[], 2, 89")
      8:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 8, 89")
  RoundHeight
      3:    20 ~   2 @ 52 /* cap height overshoot */
      9:   -20 ~   8 @ 52 /* base line undershoot */

LowerCase
  SquareHeight
      0:  1536 /* lc ascender */

Delta(1@11;15;23;27)

ASM("SVTCA[Y]")
ASM("CALL[], 0, 89")
      6:  1082 /* x height */

Delta(1@12;14;16;27;29;31;48)

ASM("SVTCA[Y]")
ASM("CALL[], 6, 89")
     10:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 10, 89")
     14:  -416 /* lc descender */


ASM("SVTCA[Y]")
ASM("CALL[], 14, 89")
  RoundHeight
      1:    21 ~   0 @ 49 /* lc ascender overshoot */
      7:    20 ~   6 @ 52 /* x height overshoot */
     11:   -20 ~  10 @ 52 /* base line undershoot */
     15:   -11 ~  14 @ 94 /* lc descender undershoot */

Figure
  SquareHeight
      4:  1456 /* figure height */

Delta(1@9;16;23;26;30)


ASM("SVTCA[Y]")
ASM("CALL[], 4, 89")
     12:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 12, 89")
  RoundHeight
      5:    20 ~   4 @ 52 /* figure height overshoot */
     13:   -20 ~  12 @ 52 /* base line undershoot */

Other
  SquareHeight
     16:  1456 /* other height */
ASM("SVTCA[Y]")
ASM("CALL[], 16, 89")
     18:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 18, 89")
  RoundHeight
     17:    21 ~  16 @ 49 /* other height overshoot */
     19:   -21 ~  18 @ 49 /* base line undershoot */

/***** Reserved CVTs *****/
AnyGroup
  AnyColor
  AnyDirection
  AnyCategory
     20:     0 /* DO NOT USE!!! */

/***** Grand-Parent CVT *****/
AnyGroup
  Black
  X
  StrokeInheritance
     21:   189 /* 51x */

/***** Parent CVTs *****/
UpperCase
  Black
  X
  StrokeInheritance
     22:   192 /* 25x */
LowerCase
  Black
  X
  StrokeInheritance
     25:   186 /* 26x */
ASM("SVTCA[X]")
ASM("CALL[], 21, 25, 62, 22, 166, 90")

UpperCase
  Black
  Y
  StrokeInheritance
     23:   157 /* 22x */
ASM("SVTCA[X]")
ASM("CALL[], 23, 52, 22, 28, 91")
LowerCase
  Black
  Y
  StrokeInheritance
     26:   151 /* 6x */
ASM("SVTCA[X]")
ASM("CALL[], 26, 51, 25, 28, 91")

UpperCase
  Black
  Diag
  StrokeInheritance
     24:   157 /* 22x */
ASM("SVTCA[X]")
ASM("CALL[], 24, 52, 22, 28, 91")
LowerCase
  Black
  Diag
  StrokeInheritance
     27:   151 /* 6x */
ASM("SVTCA[X]")
ASM("CALL[], 27, 51, 25, 28, 91")

/***** StrokeInheritance CVTs *****/
UpperCase
  Black
  X
  StrokeInheritance
     28:    39 =  22 @  7 /* 2x */
     29:   192 =  22 @255 /* 31x */
  Y
  StrokeInheritance
     30:   157 =  23 @255 /* 34x */
  Diag
  StrokeInheritance
     31:   134 =  24 @ 45 /* 3x */
     32:   188 /* 21x */
ASM("SVTCA[X]")
ASM("CALL[], 32, 56, 24, 22, 92")
     33:   171 =  32 @ 61 /* 8x */

LowerCase
  Black
  X
  StrokeInheritance
     34:   186 =  25 @255 /* 29x */
  Y
  StrokeInheritance
     35:   154 /* 37x */
ASM("SVTCA[Y]")
ASM("CALL[], 35, 5, 26, 25, 92")
     36:   211 =  26 @ 18 /* 2x */
  Diag
  StrokeInheritance
     37:   179 /* 16x */
ASM("SVTCA[X]")
ASM("CALL[], 37, 51, 27, 25, 92")
     38:   153 =  37 @ 40 /* 6x */
     39:   480 =  25 @  4 /* 2x */

Figure
  Black
  X
  StrokeInheritance
     40:   150 /* 2x */
     41:   186 /* 16x */
  Y
  StrokeInheritance
     42:   154 /* 20x */
     43:   169 =  42 @ 64 /* 2x */
     44:   267 /* 1x */
  Diag
  StrokeInheritance
     45:   130 /* 1x */
     46:   174 /* 9x */
     47:   160 =  46 @ 74 /* 4x */

Other
  Black
  X
  StrokeInheritance
     48:   140 /* 11x */
     49:   149 =  48 @114 /* 3x */
     50:   185 /* 16x */
     51:   169 =  50 @ 64 /* 2x */
  Y
  StrokeInheritance
     52:    23 /* 1x */
     53:   147 /* 33x */
     54:   154 =  53 @147 /* 26x */
     55:   123 =  54 @ 34 /* 9x */
     56:   139 =  54 @ 79 /* 3x */
     57:   161 =  54 @114 /* 6x */
     58:   222 =  53 @ 14 /* 6x */
  Diag
  StrokeInheritance
     59:   160 /* 21x */
     60:   140 =  59 @ 52 /* 7x */
     61:   157 =  59 @147 /* 5x */
     62:   182 /* 5x */

/***** Stroke CVTs *****/
UpperCase
  Black
  X
  Stroke
     63:    39 =  28 @255 /* 2x */
     64:   192 =  29 @255 /* 31x */
  Y
  Stroke
     65:   157 =  30 @255 /* 30x */
     66:   164 =  30 @147 /* 4x */
  Diag
  Stroke
     67:   134 =  31 @255 /* 3x */
     68:   162 =  33 @114 /* 1x */
     69:   171 =  33 @255 /* 7x */
     70:   182 =  32 @114 /* 4x */
     71:   191 =  32 @255 /* 9x */

LowerCase
  Black
  X
  Stroke
     72:   186 =  34 @255 /* 29x */
  Y
  Stroke
     73:   130 =  35 @ 43 /* 1x */
     74:   142 =  35 @ 86 /* 2x */
     75:   154 =  35 @255 /* 31x */
     76:   162 =  35 @171 /* 2x */
     77:   178 =  35 @ 43 /* 1x */
     78:   211 =  36 @255 /* 2x */
  Diag
  Stroke
     79:   145 =  38 @128 /* 1x */
     80:   153 =  38 @255 /* 5x */
     81:   173 =  37 @171 /* 2x */
     82:   179 =  37 @255 /* 6x */
     83:   190 =  37 @ 94 /* 2x */
     84:   457 =  39 @ 45 /* 1x */
     85:   509 =  39 @ 36 /* 1x */

Figure
  Black
  X
  Stroke
     86:   150 =  40 @255 /* 2x */
     87:   186 =  41 @255 /* 16x */
  Y
  Stroke
     88:    71 =  42 @ 13 /* 1x */
     89:   152 =  42 @255 /* 15x */
     90:   157 =  42 @205 /* 2x */
     91:   169 =  43 @255 /* 2x */
     92:   267 =  44 @255 /* 1x */
  Diag
  Stroke
     93:   130 =  45 @255 /* 1x */
     94:   153 =  47 @147 /* 1x */
     95:   159 =  47 @255 /* 3x */
     96:   169 =  46 @128 /* 1x */
     97:   176 =  46 @255 /* 4x */

Other
  Black
  X
  Stroke
     98:   129 =  48 @103 /* 1x */
     99:   133 =  48 @171 /* 1x */
    100:   139 =  48 @255 /* 6x */
    101:   148 =  49 @255 /* 3x */
    102:   169 =  51 @255 /* 2x */
    103:   181 =  50 @205 /* 2x */
    104:   186 =  50 @255 /* 12x */
  Y
  Stroke
    105:    23 =  52 @255 /* 1x */
    106:    80 =  55 @ 24 /* 1x */
    107:    99 =  55 @ 45 /* 1x */
    108:   120 =  55 @255 /* 5x */
    109:   125 =  55 @205 /* 1x */
    110:   131 =  55 @ 94 /* 1x */
    111:   139 =  56 @255 /* 2x */
    112:   144 =  56 @205 /* 1x */
    113:   152 =  54 @255 /* 8x */
    114:   162 =  57 @255 /* 5x */
    115:   174 =  57 @ 79 /* 1x */
    116:   212 =  58 @103 /* 2x */
    117:   222 =  58 @255 /* 4x */
    118:   294 =  53 @  7 /* 1x */
  Diag
  Stroke
    119:   123 =  60 @ 61 /* 2x */
    120:   137 =  60 @255 /* 5x */
    121:   147 =  59 @ 64 /* 4x */
    122:   157 =  61 @255 /* 5x */
    123:   165 =  59 @255 /* 5x */
    124:   180 =  62 @255 /* 5x */


125: 1165 /*small cap square height*/
126: 16 ~   125 @ 52 /*small cap round height overshoot*/

    </extraProgram>

    <extraProgram name="fpgm">
/* Font-program */
/* ACT generated Thu Dec  5 13:36:29 2019 */

FDEF[], 9

/* Set fv to X
       pv perpendicular to italic angle

   CALL[], 9 */

#BEGIN
#PUSHOFF
SVTCA[X]
#PUSH, 11, 10
RS[]
SWAP[]
RS[]
NEG[]
SPVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 10

/* Set fv to italic angle
       pv to Y

   CALL[], 10 */

#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSH, 10, 11
RS[]
SWAP[]
RS[]
SFVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 16

/* Set fv to X
       pv perpendicular to adjusted italic angle

   CALL[], 16 */

#BEGIN
#PUSHOFF
SVTCA[X]
#PUSH, 6
RS[]
#PUSH, 7
RS[]
NEG[]
SPVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 31

/* fn 31 equalizes two cvts below a given ppem size

   CALL[], &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, 31 */

#BEGIN
#PUSHOFF

/* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
DUP[]
#PUSH, 64
LTEQ[]
IF[] /* #samples/pixel &lt;= 1 */

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    POP[] /* #samples/pixel not involved */
    MPPEM[]

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, &lt;act ppem size&gt; */

    GT[]
    IF[]
        RCVT[]
        WCVTP[]
    ELSE[]
        POP[]
        POP[]
    EIF[]

ELSE[] /* #samples/pixel &gt; 1 */

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    SWAP[]
    POP[] /* ppem Size not involved */
    #PUSH, 64

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;#samples/pixel&gt;, &lt;1&gt; */

    #PUSH, 4 /* child cvt */
    CINDEX[]
    RCVT[]
    #PUSH, 4 /* parent cvt */
    CINDEX[]
    RCVT[]
    SUB[]
    ABS[]

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;#samples/pixel&gt;, &lt;1&gt;, &lt;|[child cvt] - [parent cvt]|&gt; */

    ROLL[]
    MUL[]
    GT[]
    IF[] /* 1 &gt; #samples/pixel * delta cvt */
        RCVT[]
        WCVTP[]
    ELSE[]
        POP[]
        POP[]
    EIF[]

EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 40

/* Set fv to adjusted italic angle
       pv to Y

   CALL[], 40 */

#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSH, 7
RS[]
#PUSH, 6
RS[]
SFVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 70

/* fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, 70 */

#BEGIN
#PUSHOFF
MPPEM[]
GTEQ[]
SWAP[]
MPPEM[]
LTEQ[]
AND[]
IF[]
    DUP[]
    RCVT[]
    ROLL[]
    ADD[]
    WCVTP[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 71

/* fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;ppem&gt;, 71 */

#BEGIN
#PUSHOFF
MPPEM[]
EQ[]
IF[]
    DUP[]
    RCVT[]
    ROLL[]
    ADD[]
    WCVTP[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 72

/* fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, 72 */

#BEGIN
#PUSHOFF
MPPEM[]
GTEQ[]
SWAP[]
MPPEM[]
LTEQ[]
AND[]
IF[]
    SHPIX[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 73

/* fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;ppem&gt;, 73 */

#BEGIN
#PUSHOFF
MPPEM[]
EQ[]
IF[]
    SHPIX[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 74

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, &lt;flag&gt;, 74 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 70 */
    #PUSH, 70
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 75

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;ppem&gt;, &lt;flag&gt;, 75 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 71 */
    #PUSH, 71
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 76

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, &lt;flag&gt;, 76 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 72 */
    #PUSH, 72
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 77

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;ppem&gt;, &lt;flag&gt;, 77 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 73 */
    #PUSH, 73
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 78

/* apply minimum distance and round &lt;dist&gt; depending on s[2], &lt;code&gt;, and pv
   code = 0: position
   code = 1: distance
   code = 2: delta distance (for fractional inheritance)

   CALL[], &lt;dist&gt;, &lt;code&gt;, 78

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;dist&gt;, &lt;code&gt; */

SWAP[]
DUP[]
#PUSH, 0
LT[]
ROLL[]
ROLL[]
ABS[]

/* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt; */

#PUSH, 0, 3 /* code */
CINDEX[]
EQ[]
IF[] /* position */

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt; */

    #PUSH, 64

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt;, &lt;#samples/pixel&gt; */

ELSE[]

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt; */

    #PUSH, 1, 3 /* code */
    CINDEX[]
    EQ[]
    IF[] /* distance */
        #PUSH, 5 /* minimum distance */
        RS[]
        MAX[]
    EIF[]

    #PUSH, 79 /* #samples/pixel */
    CALL[]

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt;, &lt;#samples/pixel&gt; */

EIF[]

SWAP[]
#PUSH, 98 /* round to virtual grid */
CALL[]

/* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;[|dist|]&gt; */

SWAP[]
POP[]

/* STACK: &lt;negDist&gt;, &lt;[|dist|]&gt; */

SWAP[]
IF[]
    NEG[]
EIF[]

/* STACK: &lt;[dist]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 79

/* depending on rendering environment and pv determine #samples/pixel for rounding etc.

   notice that for PVs other than X or Y, this method will default to X, reflecting the
   bias inherent in the asymmetrical nature of ClearType

   CALL[], 79

   returns the #samples/pixel in 26.6 */

#BEGIN
#PUSHOFF

#PUSH, 8, 0
GPV[]
POP[]
EQ[]
ADD[]
RS[]

#PUSHON
#END
ENDF[]

FDEF[], 80

/* depending on rendering environment and pv determine actual stroke optimization method

   CALL[], 80

   returns with method on stack (see fn 112 for definition of method) */

#BEGIN
#PUSHOFF

#PUSH, 12, 0
GPV[]
POP[]
EQ[]
ADD[]
RS[]

#PUSHON
#END
ENDF[]

FDEF[], 81

   /* adjust advance width to compensate for rasterizer's rounding errors 

   CALL[], &lt;rsb&gt;, 81 */

#BEGIN
#PUSHOFF

/* STACK: &lt;rsb&gt; */

SVTCA[X]
DUP[]
GC[O]

/* STACK: &lt;rsb&gt;, &lt;rsb.x&gt; */
#PUSH, 2
RS[]
DUP[]
#PUSH, 4096 /* fract AW value in 26.6 */
DIV[]
#PUSH, 4096 /* 64 in 26.6 */
MUL[]
EVEN[] /* fract AW bit not set */
SWAP[]
#PUSH, 256 /* comp AW value in 26.6 */
DIV[]
#PUSH, 4096 /* 64 in 26.6 */
MUL[]
EVEN[] /* comp AW bit not set */
AND[]
IF[]
    #PUSH, 32
    ADD[]
    FLOOR[]
EIF[]

SCFS[]

#PUSHON
#END
ENDF[]

FDEF[], 83

/* CALL[], &lt;radicand&gt;, 83

   returns with square root of radicand on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;radicand&gt; */

#PUSH, 0, 2
CINDEX[]

/* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt; */

#WBeginLoop83:

    #PUSH, 2 /* low */
    CINDEX[]
    #PUSH, 2 /* high */
    CINDEX[]
    GTEQ[]
    #PUSH, WOffset83a
    SWAP[]
    JROT[], (WOffset83a=#WEndLoop83) /* while low &lt;= high */

    /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt; */

    #PUSH, 2 /* low */
    CINDEX[]
    #PUSH, 2 /* high */
    CINDEX[]
    ADD[]
    #PUSH, 32
    MUL[]

    /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

    DUP[]
    DUP[]
    #PUSH, 6 /* radicand */
    CINDEX[]
    SWAP[]
    DIV[]

    /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt;, &lt;mid&gt;, &lt;radicand/mid&gt; */

    LT[]
    IF[]

        /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

        ROLL[]
        POP[]
        #PUSH, 1
        ADD[]
        SWAP[]

        /* STACK: &lt;radicand&gt;, &lt;mid+1&gt;, &lt;high&gt; */

    ELSE[]

        DUP[]
        DUP[]
        #PUSH, 6 /* radicand */
        CINDEX[]
        SWAP[]
        DIV[]

        GT[]
        IF[]

            /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

            SWAP[]
            POP[]
            #PUSH, 1
            SUB[]

            /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;mid-1&gt; */

        ELSE[]

            /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

            ROLL[]
            POP[]
            SWAP[]
            POP[]
            DUP[]

            /* STACK: &lt;radicand&gt;, &lt;mid&gt;, &lt;mid&gt; */

        EIF[]

    EIF[]


    #PUSH, WOffset83b
    JMPR[], (WOffset83b=#WBeginLoop83)

#WEndLoop83:

/* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt; */

ADD[]
#PUSH, 32
MUL[]
SWAP[]
POP[]

/* STACK: &lt;mid&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 84

/* fn determines current rasterizing environment and stores it in s[2] as follows:
     bit 0 (value   1) = Grey-Scaling
     bit 1 (value   2) = ClearType(tm)
     bit 2 (value   4) = Compatible Width ClearType
     bit 3 (value   8) = Vertical Direction (horizontally striped) ClearType
     bit 4 (value  16) = BGR as opposed to RGB Devices
     bit 5 (value  32) = ClearType on Rapier CE Devices
     bit 6 (value  64) = ClearType with fractional advance widths
     bit 7 (value 128) = ClearType with non-ClearType direction anti-aliasing
     bit 8 (value 256) = ClearType with gray full-pixel

   s[2] is used e.g. in fns 74 through 77

   To test against any combination of these flags, add up the respective values.

   specific to the current rasterizing environment fn stores the following parameters
     s[5] = minimum distance
     s[8] = #samples/pixel in x-direction
     s[9] = #samples/pixel in y-direction
     s[12] = stroke optimization method in x-direction
     s[13] = stroke optimization method in y-direction

   CALL[], 84 */
   /* Version 2.1 20120101 */

#BEGIN
#PUSHOFF
#PUSH,2,0
WS[]            /* s[2] = grey scaling: off (by default) */
#PUSH,35,1      /* 35 = MS Rasterizer version 1.7 */
GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
LTEQ[]          /* 35 &lt;= version ? */
#PUSH,64,1      /* 64 = highest rasterizer version assigned to MS */
GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
GTEQ[]          /* 64 &gt;= version ? */
AND[]           /* 35 &lt;= version &amp;&amp; version &lt;= 64 ? */
IF[]            /* if so, we're running MS rasterizer version 1.7 or higher */
  #PUSH,4096,32 /* 4096 = flag returned by GETINFO if grey scaling bit is on */
  GETINFO[]     /* 32 = tell GETINFO to give us the grey scaling bit */
  EQ[]          /* 4096 == flag ? */
  IF[]          /* if so, we're running under grey scaling */
    #PUSH,2,1,2
    RS[]
    ADD[]
    WS[]        /* s[2] += grey scaling: on (by now) */
  EIF[]
  #PUSH,36,1      /* 36 = MS Rasterizer version 1.6+ (WinCE) or 1.8 (WinXP) */
  GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
  LTEQ[]          /* 36 &lt;= version ? (already tested version &lt;= 64) */
  IF[]            /* if so, we're running MS rasterizer version 1.6+ (WinCE) or 1.8 (WinXP) or higher */
    #PUSH,8192,64 /* 8192 = flag returned by GETINFO if ClearTypeTM bit is on */
    GETINFO[]     /* 64 = tell GETINFO to give us the ClearTypeTM bit */
    EQ[]          /* 8192 == flag ? */
    IF[]          /* if so, we're running under ClearTypeTM */
      #PUSH,2,2,2
      RS[]
      ADD[]
      WS[]        /* s[2] += ClearTypeTM: on (by now) */

      #PUSH,36,1    /* 36 = MS Rasterizer version 1.6+ (WinCE) */
      GETINFO[]
      EQ[]
      IF[] /***** we're running Rasterizer v1.6+ for WinCE with ClearType *****/

        #PUSH,2,32,2
        RS[]
        ADD[]
        WS[]        /* s[2] += Rapier CE: on (by now) */
        SVTCA[Y]
        MPPEM[]
        SVTCA[X]
        MPPEM[]
        GT[]
        IF[]
          #PUSH,2,8,2
          RS[]
          ADD[]
          WS[]
        EIF[]

      ELSE[] /***** we're running Rasterizer v1.8 (or higher) for WinXP with ClearType (or Win2k 2000 with ClearType patch) *****/

        #PUSH,16384,128 /* 16384 = flag returned by GETINFO if ClearTypeTM silly aw bit is on */
        GETINFO[]       /* 128 = tell GETINFO to give us the ClearTypeTM silly aw bit */
        EQ[]            /* 16384 == flag ? */
        IF[]            /* if so, we're running under ClearTypeTM silly aw */
          #PUSH,2,4,2
          RS[]
          ADD[]
          WS[]          /* s[2] += ClearTypeTM silly aw: on (by now) */
        EIF[]

        #PUSH,16384,128 /* 32768 = flag returned by GETINFO if ClearTypeTM in vertical direction bit is on */
        MUL[]           /* Assembler restriction: produce 32768 by multiplying 16384 by 2 (2 in F26.6 is 128) */
        #PUSH,256       /* 256 = tell GETINFO to give us the ClearTypeTM in vertical direction bit */
        GETINFO[]
        EQ[]            /* 32768 == flag ? */
        IF[]            /* if so, we're running ClearTypeTM in vertical direction */
        #PUSH,2,8,2
          RS[]
          ADD[]
          WS[]          /* s[2] += ClearTypeTM in vertical direction: on (by now) */
        EIF[]

        #PUSH,16384,256 /* 65536 = flag returned by GETINFO if ClearTypeTM in BGR order bit is on */
        MUL[]           /* Assembler restriction: produce 65536 by multiplying 16384 by 4 (4 in F26.6 is 256) */
        #PUSH,512       /* 512 = tell GETINFO to give us the ClearTypeTM in BGR order bit */
        GETINFO[]
        EQ[]            /* 65536 == flag ? */
        IF[]            /* if so, we're running under ClearTypeTM in BGR order */
          #PUSH,2,16,2
          RS[]
          ADD[]
          WS[]          /* s[2] += ClearTypeTM in BGR order: on (by now) */
        EIF[]

        #PUSH,38,1      /* 38 = MS Rasterizer version 1.9 */
        GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
        LTEQ[]          /* 38 &lt;= version ? (already tested version &lt;= 64) */
        IF[]            /* if so, we're running MS rasterizer version 1.9 (Windows Longhorn) or higher */

          #PUSH,16384,512  /* 131072 = flag returned by GETINFO if ClearTypeTM fractional advance widths bit is on */
          MUL[]            /* Assembler restriction: produce 131072 by multiplying 16384 by 8 (8 in F26.6 is 512) */
          #PUSH,1024       /* 1024 = tell GETINFO to give us the ClearTypeTM fractional advance widths bit */
          GETINFO[]
          EQ[]             /* 131072 == flag ? */
          IF[]             /* if so, we're running under ClearTypeTM fractional advance widths */
            #PUSH,2,64,2
            RS[]
            ADD[]
            WS[]           /* s[2] += ClearTypeTM fractional advance widths: on (by now) */
          EIF[]

          #PUSH,16384,1024 /* 262144 = flag returned by GETINFO if ClearTypeTM non-ClearType direction anti-aliasing bit is on */
          MUL[]            /* Assembler restriction: produce 262144 by multiplying 16384 by 16 (16 in F26.6 is 1024) */
          #PUSH,2048       /* 2048 = tell GETINFO to give us the ClearTypeTM non-ClearType direction anti-aliasing bit */
          GETINFO[]
          EQ[]             /* 262144 == flag ? */
          IF[]             /* if so, we're running under ClearTypeTM non-ClearType direction anti-aliasing */
            #PUSH,2,128,2
            RS[]
            ADD[]
            WS[]           /* s[2] += ClearTypeTM non-ClearType direction anti-aliasing: on (by now) */
          EIF[]

          #PUSH,40,1      /* 40 = Rasterizer v2.1 Windows 8, SubPixel */
          GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
          LTEQ[]          /* 40 &lt;= version ? (already tested version &lt;= 64) */
          IF[]            /* if so, we're running MS rasterizer version 2.1 (Windows 8) or higher */
            #PUSH,16384,2048 /* 524288 = flag returned by GETINFO if ClearTypeTM non-ClearType direction anti-aliasing bit is on */
            MUL[]            /* Assembler restriction: produce 524288 by multiplying 16384 by 32 (32 in F26.6 is 2048) */
            #PUSH,4096       /* 4096 = tell GETINFO to give us the ClearTypeTM gray full-pixel rendering bit */
            GETINFO[]
            EQ[]             /* 524288 == flag ? */
            IF[]             /* if so, we're running under ClearTypeTM gray full-pixel rendering */
            #PUSH,2,256,2
              RS[]
              ADD[]
              WS[]           /* s[2] += ClearTypeTM gray full-pixel rendering: on (by now) */
            EIF[]
          EIF[]

        EIF[] /* Vista or greater rasterizer */

      EIF[] /* Windows ClearType (Platt) */

    EIF[] /* ClearType Enabled */
  EIF[] /* ClearType enabled rasterizer */
EIF[] /* Microsoft Rasterizer */

/* store rasterizing environment specific parameters */

#PUSH, 0, 2
RS[]
EQ[]
IF[] /* for b&amp;w */
  #PUSH, 5, 64, 8, 64, 9, 64, 12, 2, 13, 2
ELSE[]
  #PUSH, 1, 2
  RS[]
  EQ[]
  IF[] /* for grey-scaling */
    #PUSH, 5, 64, 8, 256, 9, 256, 12, 1, 13, 1
  ELSE[]
    #PUSH, 128, 2
    RS[]
    GT[]
    IF[] /* for ClearType */
      #PUSH, 5, 64, 8, 384, 9, 64
    ELSE[] /* for y-anti-aliased ClearType */
      #PUSH, 256, 2
      RS[]
      GT[]
      IF[] /* Gray ClearType */
        #PUSH, 5, 64, 8, 384, 9, 320
      ELSE[] /* Gray ClearType */
        #PUSH, 384, 2
        RS[]
        GT[]
        IF[] /* Gray ClearType */
          #PUSH, 5, 64, 8, 512, 9, 64
        ELSE[] /* Gray ClearType y-anti-aliased */
          #PUSH, 5, 64, 8, 256, 9, 256
        EIF[]
      EIF[]
    EIF[]

    #PUSH,16384,128 /* b&amp;w aw? */
    GETINFO[]
    NEQ[]
    #PUSH,16384,512 /* fract aw? */
    MUL[]
    #PUSH,1024
    GETINFO[]
    NEQ[]
    AND[]
    IF[] /* natural widths */
      #PUSH, 12, 0, 13, 1
    ELSE[] /* compatible or fractional widths */
      #PUSH, 12, 0, 13, 1
    EIF[]

  EIF[]
EIF[]

WS[]
WS[]
WS[]
WS[]
WS[]

#PUSHON
#END
ENDF[]

FDEF[], 85

/* fn 85 equalizes double specified heights below a given ppem size

   CALL[], &lt;rel cvt&gt;, &lt;ppem size&gt;, &lt;abs cvt&gt;, 85 */
   /* Version 2.0 20141201 */

#BEGIN
#PUSHOFF

/* STACK: &lt;rel cvt&gt;, &lt;ppem size&gt;, &lt;abs cvt&gt; */

RCVT[] /* pick absolute (square) height */
#PUSH, 2, 78 /* 2 appears to work for heights and weights */
CALL[]
SWAP[]

/* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;ppem size&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
DUP[]
#PUSH, 64
LTEQ[]
IF[] /* #samples/pixel = 1 (or less...) */

    /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    POP[]
    MPPEM[]
    LTEQ[] /* specified ppem size &lt;= actual ppem size ? */
    IF[]

        /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt; */

        #PUSH, 2
        CINDEX[]
        RCVT[] /* pick relative height (overshoot) */
        #PUSH, 1, 78
        CALL[]
        ADD[] /* add overshoot to square height */

        /* STACK: &lt;rel cvt&gt;, &lt;[rel cvt] + [abs cvt]&gt; */

    EIF[]

ELSE[] /* #samples/pixel &gt; 1 */

    /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    SWAP[]
    MPPEM[]
    LTEQ[] /* specified ppem size &lt;= actual ppem size */
    IF[]

      /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;#samples/pixel&gt; */

      #PUSH, 3 /* rel cvt */
      CINDEX[]
      RCVT[]
      DUP[]
      ABS[]
      ROLL[]
      MUL[]
      #PUSH, 64

      /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;[rel cvt]&gt;, &lt;|[rel cvt]| * #samples/pixel&gt;, &lt;1&gt; */

      GTEQ[] /* #samples/pixel greater than or equal to 1 pixel */
      IF[]

          /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;[rel cvt]&gt; */

          #PUSH, 2, 78
          CALL[]
          ADD[] /* add overshoot to square height */

          /* STACK: &lt;rel cvt&gt;, &lt;[rel cvt] + [abs cvt]&gt; */

      ELSE[]

          /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;[rel cvt]&gt; */

          POP[]

          /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt; */

      EIF[]
    ELSE[]
          /* STACK: &lt;rel cvt&gt;,&lt;abs cvt&gt;,&lt;#samples/pixel&gt;*/
          POP[]
          /* STACK: &lt;rel cvt&gt;,&lt;abs cvt&gt;*/
    EIF[]

EIF[]

/* STACK: &lt;rel cvt&gt;, &lt;[act cvt]&gt; */

WCVTP[] /* make this the round height */
#PUSHON
#END
ENDF[]

FDEF[], 86

/* function to naturally space an accent above or below a base character

   CALL[], &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;distance&gt;, 86

   convert distance (fUnits) to pixels, round, and space child from parent by result
   this essentially implements the functionality of an MDRP[m&gt;RWh] instrunction for
   composites which lack a suitable implementation of "original" coordinates.
   roundMethod 0, 1, 2, and 3 round down to, to, up to, and to half virtual grid
   function assumes cvt #20 is reserved and can be used temporarily in here... */

#BEGIN
#PUSHOFF

/* extract the sign from distance */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;distance&gt; */

DUP[]
#PUSH, 0
LT[]
DUP[]
IF[]
    SWAP[]
    NEG[]
ELSE[]
    SWAP[]
EIF[]

/* scale distance using reserved cvt */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;|distance|&gt; */

#PUSH, 20, 20 /* reserved cvt */
ROLL[]
WCVTF[]
RCVT[]

/* round per round method and #samples/pixel in current pv */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;|distance|'&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
SWAP[]
#PUSH, 97, 6 /* round to virtual grid, roundMethod */
MINDEX[]
ADD[]
CALL[] /* round to virtual grid */

/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;[|distance|']&gt; */

/* apply minimum distance, if applicable */
ROLL[]
IF[]
    #PUSH, 5 /* minimum distance */
    RS[]
    MAX[]
EIF[]

/* fold the sign back into distance */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;negDist?&gt; &lt;[|distance|']&gt; */

SWAP[]
IF[]
    NEG[]
EIF[]

/* move child by [distance'] */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;[distance']&gt; */

SWAP[]
SRP0[]
MSIRP[m]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 87

/* fn places an accent &lt;c0&gt; &lt;c1&gt; on top of a base character &lt;p0&gt; &lt;p1&gt;
   fn uses the same constraint model as fn 111 (interpolate median),
   except that for composites there is no concept of original coordinates,
   hence the respective values are provided by the caller as &lt;partialFactor&gt;

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;partialFactor&gt;, 87 */

#BEGIN
#PUSHOFF

/* partialFactor: ((c0 + c1)/2 - p0)/(p1 - p0)
   target median: ((c0 + c1)/2 - p0)*(p1' - p0')/(p1 - p0)&gt; + p0' = partialFactor*(p1' - p0')
   source median: (c0' + c1')/2
   primed coordinates are [N]ew, other coordinates are [O]riginal */

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;p0&gt;, &lt;partialFactor&gt;, &lt;p1&gt; */

#PUSH, 3 /* p0 */
CINDEX[]
MD[N]
MUL[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;p0&gt;, &lt;((c0 + c1)/2 - p0)*(p1' - p0')/(p1 - p0)&gt; */

SWAP[] /* p0 */
GC[N]
ADD[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;targetMedian&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
SWAP[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;#samples/pixel&gt;, &lt;targetMedian&gt; */

#PUSH, 4 /* c0 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
MD[N]
#PUSH, 3 /* #samples/pixel */
CINDEX[]
MUL[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;#samples/pixel&gt;, &lt;targetMedian&gt;, &lt;numVirtualPixels&gt; */

ODD[]
DUP[]
ADD[]
#PUSH, 98
ADD[]
CALL[] /* round to (half) virtual grid */

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;[targetMedian]&gt; */

#PUSH, 3 /* c0 */
CINDEX[]
DUP[]
SRP0[]
GC[N]
ROLL[] /* c1 */
GC[N]
ADD[]
#PUSH, 32
MUL[]

/* STACK: &lt;c0&gt;, &lt;targetMedian&gt;, &lt;sourceMedian&gt; */

SUB[]

/* STACK: &lt;c0&gt;, &lt;offset&gt; */

MSIRP[m]

#PUSHON
#END
ENDF[]

FDEF[], 88

/* set up storage locations with the x and y components
   of the italic and adjusted italic angles as follows:

     s[ 6] = adjusted italic angle y
     s[ 7] = adjusted italic angle x
     s[10] = italic angle y
     s[11] = italic angle x

   while rendering in b&amp;w, determines the optimal phase
   for positioning italic strokes

     s[ 4] = optimal phase

   CALL[], &lt;riseCvt&gt;, &lt;runCvt&gt;, 88 */

#BEGIN
#PUSHOFF

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

#PUSH, 0 /* Use twilight points to calculate stroke angles */
SZPS[]

#PUSH, 2, 3 /* riseCvt */
CINDEX[]
#PUSH, 1, 4 /* runCvt */
CINDEX[]

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt;, &lt;2&gt;, &lt;riseCvt&gt;, &lt;1&gt;, &lt;runCvt&gt; */

SVTCA[X] /* Set twilight point 1 with italic run cvt in x */
MIAP[r]

SVTCA[Y] /* Set twilight point 2 with italic rise cvt in y */
MIAP[r]

#PUSH, 1, 2 /* and let the rasterizer do the math */
SPVTL[r]
GPV[]

#PUSH, 10 /* store the x and y components of the italic angle */
SWAP[]
NEG[]     /* notice that since we're essentially setting the pv to a line  */
WS[]      /* from (runCvt,0) to (0,riseCvt), the calculcated pv will be    */
#PUSH, 11 /* proportional to (runCvt,0) - (0,riseCvt) = (runCvt,-riseCvt). */
SWAP[]    /* Hence we have to mirror the result at the base line, which is */
WS[]      /* done by flipping (negating) the sign of the y component here. */

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

#PUSH, 2, 3 /* riseCvt */
CINDEX[]
#PUSH, 1, 4 /* runCvt */
CINDEX[]

SVTCA[X] /* same for the adjusted italic angle */
MIAP[R]  /* except to round the twilight point in x... */

SVTCA[Y]
MIAP[R]  /* ...and in y */

#PUSH, 1, 2
SPVTL[r]
GPV[]

#PUSH, 6
SWAP[]
NEG[]    /* same neg as above */
WS[]
#PUSH, 7
SWAP[]
WS[]

#PUSH, 1 /* restore graphics state */
SZPS[]

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

#PUSH, 0, 2
RS[]
EQ[]
IF[] /* running b&amp;w? */

    /* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */
    /* determine adjusted run' = run*[rise]/rise */

    RCVT[]
    SWAP[]
    RCVT[]
    DUP[]
    RTG[]
    ROUND[Bl]
    ROLL[]
    MUL[]
    SWAP[]
    DIV[]

    /* STACK: &lt;run'&gt; */
    /* determine phase = (run' - [run'])/2 = half the rounding error */

    DUP[]
    DUP[]
    #PUSH, 64
    LT[]
    IF[]
        CEILING[] /* optimize for "minimum italic angle" */
    ELSE[]
        FLOOR[] /* optimize for minimal number of jaggies */
    EIF[]
    SUB[]
    #PUSH, 32
    MUL[]

    /* STACK: &lt;phase&gt; */
    /* for its use on bottom italic edge, determine complement to full pixel */

    #PUSH, 64
    SWAP[]
    SUB[]

    /* and store in s[4] */

    #PUSH, 4
    SWAP[]
    WS[]

    /* STACK: */

ELSE[]

    /* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

    #PUSH, 4, 0
    WS[]
    POP[]
    POP[]

    /* STACK: */

EIF[]

RTG[]
SVTCA[X]

#PUSHON
#END
ENDF[]

FDEF[], 89

/* function rounds &lt;cvt&gt; depending on rendering environment and pv

   CALL[], &lt;cvt&gt;, 89 */

#BEGIN
#PUSHOFF

DUP[]
RCVT[]
#PUSH, 0, 78 /* roundDist */
CALL[]
WCVTP[]

#PUSHON
#END
ENDF[]

FDEF[], 90

/* below &lt;ppem&gt;: make both children the same as the (averaged) parent cvt
   at and above: calculate child cvt &lt;ch0&gt; as &lt;fraction&gt; of child cvt &lt;ch1&gt;

   CALL[], &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt;, &lt;ppem&gt;, 90 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt;, &lt;ppem&gt; */

MPPEM[]
LTEQ[]
#PUSH, 64, 79 /* #samples/pixel */
CALL[]
LT[]
OR[]
IF[] /* at or above ppem limit or rounding to less than a pixel */ 

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt; */

    DUP[]
    RCVT[]
    #PUSH, 1, 78 /* roundDist */
    CALL[]
    DUP[]
    ROLL[]
    ROLL[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;[ch1]&gt;, &lt;ch1&gt;, &lt;[ch1]&gt; */

    WCVTP[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;[ch1]&gt; */

    DUP[]
    #PUSH, 64, 4
    MINDEX[]
    SUB[]
    MUL[]
    SUB[]
    #PUSH, 1, 78 /* roundDist */
    CALL[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;[ch1] - [ch1]*(1-fraction)&gt; */

    WCVTP[]
    POP[] /* parent not involved */

    /* STACK: */

ELSE[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt; */

    SWAP[]
    POP[] /* fraction not involved */

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;ch1&gt; */

    ROLL[]
    RCVT[]
    #PUSH, 1, 78 /* roundDist */
    CALL[]

    /* STACK: &lt;ch0&gt;, &lt;ch1&gt;, &lt;[p]&gt; */

    DUP[]
    ROLL[]
    SWAP[]

    /* STACK: &lt;ch0&gt;, &lt;[p]&gt;, &lt;ch1&gt;, &lt;[p]&gt; */

    WCVTP[]
    WCVTP[]

    /* STACK: */

EIF[]

#PUSHON
#END
ENDF[]

FDEF[], 91

/* below &lt;ppem&gt;: make child cvt &lt;ch&gt; the same as parent cvt &lt;p&gt;
   at and above: calculate child cvt &lt;ch&gt; as &lt;fraction&gt; of parent cvt &lt;p&gt;

   CALL[], &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt;, &lt;ppem&gt;, 91 */

#BEGIN
#PUSHOFF

/* STACK: &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt;, &lt;ppem&gt; */

MPPEM[]
LTEQ[]
#PUSH, 64, 79 /* #samples/pixel */
CALL[]
LT[]
OR[]
IF[] /* at or above ppem limit or rounding to less than a pixel */ 

    /* STACK: &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt; */

    RCVT[]
    DUP[]
    ROLL[]

    /* STACK: &lt;ch&gt;, &lt;[p]&gt;, &lt;[p]&gt;, &lt;fraction&gt; */

    #PUSH, 64
    SUB[]
    MUL[]
    ADD[]

    /* STACK: &lt;ch&gt;, &lt;[p] + [p]*(fraction - 1)&gt; */

ELSE[]

    /* STACK: &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt; */

    SWAP[]
    POP[] /* fraction not involved */

    RCVT[]

    /* STACK: &lt;ch&gt;, [p] */

EIF[]

#PUSH, 1, 78 /* roundDist */
CALL[]
WCVTP[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 92

/* function to calculate a child cvt &lt;ch&gt;
   as a &lt;blend&gt; of two parent cvts &lt;p0&gt;, &lt;p1&gt;

   CALL[], &lt;ch&gt;, &lt;blend&gt;, &lt;p0&gt;, &lt;p1&gt;, 92 */

#BEGIN
#PUSHOFF

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;p0&gt;, &lt;p1&gt; */

SWAP[]
RCVT[]
DUP[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;p1&gt;, &lt;[p0]&gt;, &lt;[p0]&gt; */

ROLL[]
RCVT[]

SWAP[]
SUB[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt; */

DUP[]
ABS[]
#PUSH, 64
LTEQ[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;contrast &lt;= 1 pixel(s)?&gt; */

#PUSH, 4
CINDEX[]
DUP[]
#PUSH, 0
GTEQ[]
SWAP[]
#PUSH, 64
LTEQ[]
AND[]

AND[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;contrast &lt;= 1 pixel(s) &amp;&amp; blend &gt;= 0 &amp;&amp; blend &lt;= 64?&gt; */

#PUSH, 64, 79 /* #samples/pixel */
CALL[]
EQ[]

AND[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;contrast &lt;= 1 pixel(s) &amp;&amp; blend &gt;= 0 &amp;&amp; blend &lt;= 64 &amp;&amp; rounding to full pixel?&gt; */

IF[]

    /* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt; */

    ROLL[]
    GPV[]
    ABS[]
    SWAP[]
    ABS[]
    SWAP[]

    /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt;, &lt;|pv.x|&gt;, &lt;|pv.y|&gt; */

    GTEQ[] /* pv closer to x? */
    IF[]

        /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */
        /* bias towards p1: blend' := 1 - (1 - blend)² */

        #PUSH, 64, 64
        ROLL[]
        SUB[]
        DUP[]
        MUL[]
        SUB[]

        /* &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;1 - (1 - blend)²&gt; */

    ELSE[]

        /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */
        /* bias towards p0: blend' := blend² */

        DUP[]
        MUL[]

    /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend²&gt; */

    EIF[]

ELSE[]

    /* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt; */
    /* use unbiased blend */

    ROLL[]

    /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */

EIF[]

/* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */

MUL[]
#PUSH, 2, 78 /* roundDist */
CALL[]
ADD[]

/* STACK: &lt;ch&gt;, &lt;[ch]&gt; */

WCVTP[]

#PUSHON
#END
ENDF[]

FDEF[], 93

/* fn sets vectors to X (used in calculated calls)

   CALL[], 93 */

#BEGIN
#PUSHOFF
SVTCA[X]
#PUSHON
#END
ENDF[]

FDEF[], 94

/* fn sets vectors to Y (used in calculated calls)

   CALL[], 94 */

#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSHON
#END
ENDF[]

FDEF[], 95

/* Set fv to X, pv perpendicular to italic angle (used in calculated calls)

   CALL[], 95 */

#BEGIN
#PUSHOFF
SFVTCA[X]
#PUSH, 11, 10
RS[]
SWAP[]
RS[]
NEG[]
SPVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 96

/* Set fv to italic angle, pv to Y (used in calculated calls)

   CALL[], 96 */

#BEGIN
#PUSHOFF
#PUSH, 10, 11
RS[]
SWAP[]
RS[]
SFVFS[]
SPVTCA[Y]
#PUSHON
#END
ENDF[]

FDEF[], 97

/* round down to virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 97

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */
/* upscale argument by #samples/pixel */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

FLOOR[] /* round down to super grid */

/* Downscaling uses a DIV[] operation, which is implemented as floor(numerator/denominator).
   For round(numerator/denominator) instead, add ½ denominator to numerator before dividing.
   But since the division in 26.6 has to multiply the numerator by 2^6 (64) before dividing,
   we have to divide said ½ denominator by 64 before adding, hence the 8192 (= 128 in 26.6). */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 98

/* round to virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 98

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

#PUSH, 32 /* round to super grid */
ADD[]
FLOOR[]

/* see above for adjustments below */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 99

/* round up to virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 99

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

CEILING[] /* round up to super grid */

/* see above for adjustments below */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 100

/* round to half virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 100

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

FLOOR[]
#PUSH, 32 /* round to half super grid */
ADD[]

/* see above for adjustments below */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 101

/* determine actual distance to be used for emulating MDRP[&lt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 101

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

SWAP[]
MD[O]

/* round without minDist */

#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 102

/* determine actual distance to be used for emulating MDRP[&gt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 102

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

SWAP[]
MD[O]

/* round with minDist */

#PUSH, 1, 78 /* roundDist */
CALL[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 103

/* determine actual distance to be used for emulating MIRP[&lt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 103

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

SWAP[] /* c */
ROLL[] /* p */
MD[O]
SWAP[] /* cvt */

/* STACK: &lt;wNat&gt;, &lt;cvt&gt; */
/* do cvt cut-in test */

RCVT[]
ABS[]
#PUSH, 2
CINDEX[]
ABS[]
#PUSH, 2
CINDEX[]
SUB[]
ABS[]
#PUSH, 3 /* cvt cut-in */
RS[]

/* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt;, &lt;||wNat| - |wCvt||&gt;, &lt;cvt cut-in&gt; */

GT[]
IF[]

    /* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt; */
    /* cvt cut-in test failed */

    POP[]
    DUP[]
    ABS[]

    /* else cvt cut-in test succeeded */

EIF[]

/* STACK: &lt;wNat&gt;, &lt;|w|&gt; */
/* round without minDist */

#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: &lt;wNat&gt;, &lt;[w]&gt; */
/* inherit sign from wNat */

SWAP[]
#PUSH, 0
LT[]
IF[]
    NEG[]
EIF[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 104

/* determine actual distance to be used for emulating MIRP[&gt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 104

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

SWAP[] /* c */
ROLL[] /* p */
MD[O]
SWAP[] /* cvt */

/* STACK: &lt;wNat&gt;, &lt;cvt&gt; */
/* do cvt cut-in test */

RCVT[]
ABS[]
#PUSH, 2
CINDEX[]
ABS[]
#PUSH, 2
CINDEX[]
SUB[]
ABS[]
#PUSH, 3 /* cvt cut-in */
RS[]

/* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt;, &lt;||wNat| - |wCvt||&gt;, &lt;cvt cut-in&gt; */

GT[]
IF[]

    /* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt; */
    /* cvt cut-in test failed */

    POP[]
    DUP[]
    ABS[]

    /* else cvt cut-in test succeeded */

EIF[]

/* STACK: &lt;wNat&gt;, &lt;|w|&gt; */
/* round with minDist */

#PUSH, 1, 78 /* roundDist */
CALL[]

/* STACK: &lt;wNat&gt;, &lt;[w]&gt; */
/* inherit sign from wNat */

SWAP[]
#PUSH, 0
LT[]
IF[]
    NEG[]
EIF[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 105

/* emulate MDRP[&lt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 105 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

DUP[] /* c */
#PUSH, 3 /* p */
CINDEX[]
MD[O]
#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 106

/* emulate MDRP[&gt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 106 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

DUP[] /* c */
#PUSH, 3 /* p */
CINDEX[]
MD[O]
#PUSH, 1, 78 /* roundDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 107

/* emulate MIRP[&lt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 107 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

#PUSH, 3 /* p */
CINDEX[]
#PUSH, 3 /* c */
CINDEX[]
ROLL[] /* cvt */
#PUSH, 103 /* resActDist, cvt, noMinDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 108

/* emulate MIRP[&gt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 108 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

#PUSH, 3 /* p */
CINDEX[]
#PUSH, 3 /* c */
CINDEX[]
ROLL[] /* cvt */
#PUSH, 104 /* resActDist, cvt, minDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 109

/* fn symmetrically constrains a stroke &lt;p&gt;, &lt;c&gt; with &lt;cvt&gt;

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 109 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */
/* determine old median */

#PUSH, 3 /* &lt;p&gt; */
CINDEX[]
GC[N]
#PUSH, 3 /* &lt;c&gt; */
CINDEX[]
GC[N]
ADD[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;2*median&gt; */
/* lock parent */

#PUSH, 4 /* p */
CINDEX[]
MDAP[r]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;2*median&gt; */
/* link child */

#PUSH, 4 /* p */
CINDEX[]
#PUSH, 4 /* c */
CINDEX[]
#PUSH, 4 /* cvt */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;2*median&gt; */
/* determine new median */

#PUSH, 3 /* &lt;p&gt; */
CINDEX[]
GC[N]
#PUSH, 3 /* &lt;c&gt; */
CINDEX[]
GC[N]
ADD[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;2*median&gt;, &lt;2*median'&gt; */

SUB[]
#PUSH, 128
DIV[] /* floor to 1/64 for now */

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;deltaMedian&gt; */

DUP[]
ROLL[]
DUP[]
SRP0[]
SWAP[]
MSIRP[m]
SWAP[]
DUP[]
SRP0[]
SWAP[]
MSIRP[m]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 110

/* calculate offset for emulation of interpolation of median of
   &lt;c0&gt; and &lt;c1&gt; between parents &lt;p0&gt; and &lt;p1&gt; using current pv and fv

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, 110

   returns with offset on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt; */

#PUSH, 3 /* c0 */
CINDEX[]
GC[O]
#PUSH, 3 /* c1 */
CINDEX[]
GC[O]
ADD[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;c0 + c1&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
GC[O]
#PUSH, 128
MUL[]
SUB[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;c0 + c1 - 2*p0&gt; */

#PUSH, 2 /* p1 */
CINDEX[]
#PUSH, 6 /* p0 */
CINDEX[]
MD[N]
MUL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;(c0 + c1 - 2*p0)*(p1' - p0')&gt; */

SWAP[] /* p1 */
#PUSH, 5 /* p0 */
CINDEX[]
MD[O]
#PUSH, 128
MUL[]

/* prevent inadvertent divide-by-zero e.g. on non-spacing glyphs */
DUP[]
IF[]
    DIV[]
ELSE[]
    POP[]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;(c0 + c1 - 2*p0)*(p1' - p0')/(2*(p1 - p0))&gt; */

#PUSH, 4 /* p0 */
MINDEX[]
GC[N]
ADD[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;(c0'' + c1'')/2&gt; */

ROLL[] /* c0 */
GC[N]
ROLL[] /* c1 */
GC[N]
ADD[]
#PUSH, 32
MUL[]

/* STACK: &lt;(c0'' + c1'')/2&gt;, &lt;(c0' + c1')/2&gt; */

SUB[]

/* STACK: &lt;offset&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 111

/* emulate interpolation of median of &lt;c0&gt; and &lt;c1&gt;
   between parents &lt;p0&gt; and &lt;p1&gt; using current pv and fv

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, 111 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt; */

#PUSH, 4 /* p0 */
MINDEX[]
#PUSH, 4 /* c0 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 4 /* p1 */
MINDEX[]
#PUSH, 110 /* calc offset for interpolation of median */
CALL[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;offset&gt; */

DUP[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;offset&gt;, &lt;offset&gt; */

ROLL[]
DUP[]
SRP0[]
SWAP[]

/* STACK: &lt;c0&gt;, &lt;offset&gt;, &lt;c1&gt;, &lt;offset&gt; */

MSIRP[m]

SWAP[]
DUP[]
SRP0[]
SWAP[]

/* STACK: &lt;c0&gt;, &lt;offset&gt; */

MSIRP[m]

#PUSHON
#END
ENDF[]

FDEF[], 112


/* adjust (unrounded) stroke phase to target phase according to &lt;method&gt;

   method 0: round to nearest virtual pixel
   method 1: apply method 2 below 2 pixel wide strokes else method 0
   method 2: optimize for max #black pixels
   method 3: optimize for one edge aligned

   right?: boolean indicating a left (false) or right (true) stroke)

   CALL[], &lt;phase&gt;, &lt;weight&gt;, &lt;method&gt;, &lt;right?&gt;, 112

   returns with (rounded) adjusted phase on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;method&gt;, &lt;right?&gt; */

SWAP[]

DUP[]
#PUSH, 1
EQ[]
IF[]

    /* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;right?&gt;, &lt;method&gt; */
    /* replace method depending on stroke weight */

    POP[]
    #PUSH, 2 /* weight */
    CINDEX[]
    #PUSH, 2, 78 /* roundDist */
    CALL[]
    #PUSH, 128
    LT[]
    DUP[]
    ADD[]
EIF[]

DUP[]
ADD[]
ADD[]

/* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;method' = 2*method + right&gt; */

DUP[]
#PUSH, 1
LTEQ[]
IF[] /* just round to nearest virtual pixel */

    POP[]
    POP[]

    /* STACK: &lt;phase&gt; */

ELSE[]
    DUP[]
    #PUSH, 5
    LTEQ[]
    IF[] /* optimize for max #black pixels */

        POP[]

        /* STACK: &lt;phase&gt;, &lt;weight&gt; */

        DUP[]
        FLOOR[]
        SUB[]

        /* STACK: &lt;phase&gt;, &lt;fractWeight&gt; */

        #PUSH, 64
        SWAP[]
        SUB[]

        /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt; */

        #PUSH, 0, 3 /* phase */
        CINDEX[]
        LT[]
        #PUSH, 3 /* phase */
        CINDEX[]
        #PUSH, 3 /* 1-fractWeight */
        CINDEX[]
        LT[]
        AND[]
        IF[] /* if 0 &lt; phase &lt; 1-fractWeight then need to adjust phase */

            /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt; */

            DUP[]
            #PUSH, 3
            CINDEX[]
            SUB[]

            /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt;, &lt;1-fractWeight-phase&gt; */

            ROLL[]
            GTEQ[]
            IF[] /* error from phase to 1-fractWeight &gt;= error from 0 to phase */
                POP[]
                #PUSH, 0 /* target 0 as phase */
            EIF[]
            /* else target 1-fractWeight as phase, which is what's left on stack */

        ELSE[]

            /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt; */

            POP[]

        EIF[]

    ELSE[] /* optimize for one edge aligned */

        /* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;method'&gt; */

        #PUSH, 7
        EQ[]
        IF[] /* right flush */

            /* STACK: &lt;phase&gt;, &lt;weight&gt; */

            DUP[]
            FLOOR[]
            SUB[]

            /* STACK: &lt;phase&gt;, &lt;fractWeight&gt; */

            NEG[]
            SWAP[]
            POP[]

        ELSE[] /* left flush (and default) */

            /* STACK: &lt;phase&gt;, &lt;weight&gt; */

            POP[]
            POP[]
            #PUSH, 0

        EIF[]

    EIF[]

EIF[]

#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: phase */

#PUSHON
#END
ENDF[]

FDEF[], 113

/* fn calculates delta phase for optimal position of
   stroke bordered by &lt;p&gt; and &lt;c&gt; according to &lt;method&gt;
   (see fn 112 for definition of method)

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;method&gt;, 113

   returns with delta phase in interval ]-½,+½] on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;method&gt; */

    /* use sequence of parameters &lt;p&gt; and &lt;c&gt; to determine if this is
       a "left" stroke (in which case we may add grey to the right), or
       a "right" stroke (in which case we may add grey to the left) */

#PUSH, 2 /* c */
CINDEX[]
#PUSH, 4 /* p */
CINDEX[]
MD[O]
#PUSH, 0
GTEQ[]
IF[]
    #PUSH, 0 /* "left" stroke */
ELSE[]
    ROLL[]
    ROLL[]
    SWAP[]
    ROLL[]
    #PUSH, 1 /* "right" stroke */
EIF[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;method&gt;, &lt;right?&gt; */

#PUSH, 4 /* p */
CINDEX[]
GC[N]
DUP[]
FLOOR[]
SUB[]
DUP[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;method&gt;, &lt;right?&gt;, &lt;source phase&gt;, &lt;source phase&gt; */

#PUSH, 5 /* c */
MINDEX[]
#PUSH, 6 /* p */
MINDEX[]
MD[N]

/* STACK: &lt;method&gt;, &lt;right?&gt;, &lt;source phase&gt;, &lt;source phase&gt;, &lt;weight&gt; */

#PUSH, 5 /* method */
MINDEX[]
#PUSH, 5 /* right? */
MINDEX[]
#PUSH, 112 /* adjust to target stroke phase */
CALL[]

/* STACK: &lt;source phase&gt;, &lt;target phase&gt; */

SWAP[]
SUB[]

/* STACK: &lt;delta phase&gt; */
/* minimze phase into interval ]-½,+½] */

NEG[]
#PUSH, 32
ADD[]
DUP[]
FLOOR[]
SUB[]
#PUSH, 32
SUB[]
NEG[]

#PUSHON
#END
ENDF[]

FDEF[], 114

/* emulate MIAP instruction with rendering environment specific rounding

   CALL[], &lt;c&gt;, &lt;cvt&gt;, 114 */

#BEGIN
#PUSHOFF

/* STACK: &lt;c&gt;, &lt;cvt&gt; */

#PUSH, 2 /* c */
CINDEX[]
GC[N]
DUP[]

/* STACK: &lt;c&gt;, &lt;cvt&gt;, &lt;wNat&gt;, &lt;wNat&gt; */

ROLL[]
DUP[]
#PUSH, 0
LT[]
IF[]

    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;wNat&gt;, &lt;cvt&gt; */

    POP[]

    /* cvt &lt; 0 (no cvt used) =&gt; w = wNat */
    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;w&gt; */

    #PUSH, 2, 78 /* roundDist */
    CALL[]

ELSE[]

    RCVT[]

    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;wNat&gt;, &lt;wCvt&gt; */
    /* no cvt cut-in test (for eventual support of automatic small caps, superiors, and inferiors), pop wNat to use wCvt */

    SWAP[]
    POP[]

    /* leave value as rounded by cpgm */
    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;w&gt; */

EIF[]

SUB[]
NEG[]

/* STACK: &lt;c&gt;, &lt;wDelta&gt; */

#PUSH, 2
CINDEX[]
SRP0[]

MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 115

/* interpolates a point &lt;p&gt; in &lt;dirFlag&gt; between points &lt;lsb&gt; and &lt;rsb&gt;
   dirFlag: postRoundFlag*8 + dir
   dir: X = 0, Y = 1, X/ = 2, Y/ = 3, ...

   depending on rendering environment and pv may optimise point position

   CALL[], &lt;dirFlag&gt;, &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt;, 115 */

#BEGIN
#PUSHOFF

/* STACK: &lt;dirFlag&gt;, &lt;p0&gt;, &lt;p&gt;, &lt;p1&gt; */
/* separate postRoundFlag from dir */

#PUSH, 4 /* dirFlag */
MINDEX[]
DUP[]
#PUSH, 512
DIV[]
DUP[]
#PUSH, 512
MUL[]
ROLL[]
SWAP[]
SUB[]

/* STACK:, &lt;p0&gt;, &lt;p&gt;, &lt;p1&gt;, &lt;postRoundFlag&gt;, &lt;dir&gt; */

DUP[]
#PUSH, 93 /* setV */
ADD[]
CALL[]

/* STACK: &lt;p0&gt;, &lt;p&gt;, &lt;p1&gt;, &lt;postRoundFlag&gt;, &lt;dir&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
SRP1[]
ROLL[] /* p1 */
SRP2[]
ROLL[] /* p */
DUP[]
IP[]

/* STACK: &lt;p0&gt;, &lt;postRoundFlag&gt;, &lt;dir&gt;, &lt;p&gt; */

ROLL[] /* postRoundFlag */
IF[]

    /* STACK: &lt;p0&gt;, &lt;dir&gt;, &lt;p&gt; */

    #PUSH, 93, 4096, 4 /* setV, 64, dir */
    MINDEX[]
    MUL[]
    ODD[]
    ADD[]
    CALL[]

    /* STACK: &lt;p0&gt;, &lt;p&gt; */

    SWAP[]
    POP[]
    DUP[] /* p */
    SRP0[]
    DUP[]
    GC[N]
    DUP[]
    #PUSH, 2, 78 /* roundDist */
    CALL[]
    SWAP[]
    SUB[]

    /* STACK: &lt;p&gt;, &lt;[p.c]-p.c&gt; */

ELSE[]

    /* STACK: &lt;p0&gt;, &lt;dir&gt;, &lt;p&gt; */

    SWAP[]
    POP[]

    /* STACK: &lt;p0&gt;, &lt;p&gt; */

    DUP[]
    ROLL[]
    DUP[] /* p0 */
    SRP0[]
    MD[N]

    #PUSH, 2, 78 /* roundDist */
    CALL[]

    /* STACK: &lt;p&gt;, &lt;[p.dist]&gt; */

EIF[]

MSIRP[M]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 116

/* constrains a stroke in &lt;dir&gt;, defined by parent &lt;p&gt; and child &lt;c&gt;,
   and by cvt &lt;cvt&gt;, and interpolates it between points &lt;gp0&gt; and &lt;gp1&gt;
   dir: X = 0, Y = 1, X/ = 2
   sof: (stroke optimization flags ||, |&lt;, and &gt;| ) don't = 0, do = 1, leftBias = 2, rightBias = 3

   CALL[], &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;gp1&gt;, &lt;sof&gt;, 116 */

#BEGIN
#PUSHOFF

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;gp1&gt;, &lt;sof&gt; */

#PUSH, 93, 4096, 9 /* setV, 64, dir */
CINDEX[]
MUL[]
ODD[]
ADD[]
CALL[]

/* constrain stroke */

#PUSH, 5 /* p */
CINDEX[]
#PUSH, 5 /* c */
CINDEX[]
#PUSH, 5 /* cvt */
MINDEX[]
#PUSH, 109 /* symDist */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

#PUSH, 93, 7 /* setV, dir */
CINDEX[]
ADD[]
CALL[]

#PUSH, 5 /* gp0 */
CINDEX[]
#PUSH, 5 /* p */
CINDEX[]
#PUSH, 5 /* c */
CINDEX[]
#PUSH, 5 /* gp1 */
CINDEX[]
#PUSH, 111 /* interpolate median */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

#PUSH, 93, 4096, 8 /* setV, 64, dir */
MINDEX[]
MUL[]
ODD[]
ADD[]
CALL[]

/* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

DUP[]
#PUSH, 0
GT[]
IF[] /* optimize stroke position */

    #PUSH, 80
    CALL[]

    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;som&gt; */

    #PUSH, 5 /* p */
    CINDEX[]
    #PUSH, 5 /* c */
    CINDEX[]
    #PUSH, 7 /* p */
    CINDEX[]
    #PUSH, 7 /* c */
    CINDEX[]
    #PUSH, 5 /* som */
    CINDEX[]
    #PUSH, 113 /* get delta phase for optimal stroke position */
    CALL[]
    #PUSH, 2
    SLOOP[]
    SHPIX[]

    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;som&gt; */

    #PUSH, 0
    GT[]
    #PUSH, 2 /* sof */
    CINDEX[]
    #PUSH, 1
    GT[]
    AND[]
    IF[]

        /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
        /* determine total side-bearing space to see if we need to bias the black body */

        #PUSH, 4 /* p */
        CINDEX[]
        #PUSH, 6 /* gp0 */
        CINDEX[]
        MD[N]
        #PUSH, 3 /* gp1 */
        CINDEX[]
        #PUSH, 5 /* c */
        CINDEX[]
        MD[N]
        ADD[]
        DUP[]
        #PUSH, 64
        GT[]
        IF[]

            /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;totSBS&gt; */
            /* enough total side-bearing space left, leave it alone */
            POP[]

        ELSE[]

            /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;totSBS&gt; */
            /* 1 pixel or less total side-bearing space left */

            #PUSH, 0
            GT[]
            IF[]

                /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
                /* any total side-bearing space left at all */

                DUP[]
                #PUSH, 2
                EQ[]
                IF[]

                    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
                    /* move stroke flush left */

                    #PUSH, 4 /* p */
                    CINDEX[]
                    #PUSH, 4 /* c */
                    CINDEX[]
                    #PUSH, 7 /* gp0 */
                    CINDEX[]
                    #PUSH, 7 /* p */
                    CINDEX[]
                    MD[N]
                    #PUSH, 2
                    SLOOP[]
                    SHPIX[]

                ELSE[]

                    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
                    /* move stroke flush left */

                    #PUSH, 4 /* p */
                    CINDEX[]
                    #PUSH, 4 /* c */
                    CINDEX[]
                    #PUSH, 4 /* gp1 */
                    CINDEX[]
                    #PUSH, 6 /* c */
                    CINDEX[]
                    MD[N]
                    #PUSH, 2
                    SLOOP[]
                    SHPIX[]

                EIF[]

            EIF[]

        EIF[]

    EIF[]

EIF[]

/* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

POP[]
POP[]
POP[]
POP[]
POP[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 117

/* fn tries to place and constrain two strokes &lt;p0,c0,cvt0&gt; and &lt;p1,c1,cvt1&gt;
   between grandparents &lt;gp0&gt; and &lt;gp1&gt; in direction &lt;dir&gt;
   dir: X = 0, Y = 1, X/ = 2
   X/ (italic) is not yet implemented; to do so properly will need to factor
   the italic phase optimization part out of fn 131 and make it available to
   this fn.   

   CALL[], &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, 117 */

#BEGIN
#PUSHOFF

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */

#PUSH, 93, 4096, 11 /* setV, dir */
CINDEX[]
MUL[]
ODD[]
ADD[]
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */
/* interpolate black body */

#PUSH, 7 /* p0 */
CINDEX[]
#PUSH, 7 /* c0 */
CINDEX[]
#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 12 /* gp0 */
CINDEX[]
#PUSH, 12 /* p0 */
CINDEX[]
#PUSH, 9 /* c1 */
CINDEX[]
#PUSH, 8 /* gp1 */
CINDEX[]
#PUSH, 110 /* calc offset for interpolation of median */
CALL[]
#PUSH, 4
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */
/* constrain stroke0 */

#PUSH, 7 /* p0 */
CINDEX[]
#PUSH, 7 /* c0 */
CINDEX[]
#PUSH, 7 /* cvt0 */
MINDEX[]
#PUSH, 109 /* symDist */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */
/* constrain stroke1 */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 4 /* cvt1 */
MINDEX[]
#PUSH, 109 /* symDist */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt; */

#PUSH, 80
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
/* determine phase0 for optimal position of stroke0 */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 6 /* c0 */
CINDEX[]
#PUSH, 3 /* som */
CINDEX[]
#PUSH, 113 /* get delta phase for optimal stroke position */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt; */
/* forward to stroke1 position */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
#PUSH, 3 /* phase0 */
CINDEX[]
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt; */
/* determine phase1 for optimal position of stroke1 */

DUP[]
#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 5 /* som */
CINDEX[]
#PUSH, 113 /* get delta phase for optimal stroke position */
CALL[]
ADD[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt; */
/* undo forwarding to stroke1 position */

#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 4 /* phase0 */
CINDEX[]
NEG[]
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt; */
/* determine double average phase error */

#PUSH, 2 /* phase0 */
CINDEX[]
#PUSH, 2 /* phase1 */
CINDEX[]
ADD[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */

DUP[]
#PUSH, 64
GTEQ[]
IF[]

    /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */
    /* double average phase error &gt;= 1 pixel, correct to the left */

    POP[]
    #PUSH, 64
    SUB[]
    SWAP[]
    #PUSH, 64
    SUB[]
    SWAP[]

ELSE[]

    /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */

    #PUSH, -64
    LT[]
    IF[]

        /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */
        /* double average phase error &lt; -1 pixel, correct to the right */

        #PUSH, 64
        ADD[]
        SWAP[]
        #PUSH, 64
        ADD[]
        SWAP[]

    EIF[]

EIF[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt; */
/* apply corrected optimal phase0 to stroke0 */

#PUSH, 8 /* p0 */
CINDEX[]
#PUSH, 8 /* c0 */
CINDEX[]
#PUSH, 4 /* phase0 */
MINDEX[]
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase1&gt; */
/* apply corrected optimal phase1 to stroke1 */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
ROLL[] /* phase1 */
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */

DUP[]
#PUSH, 0
GT[]
IF[]

    /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
    /* determine total side-bearing space to see if we need to bias the black body */

    #PUSH, 6 /* p0 */
    CINDEX[]
    #PUSH, 8 /* gp0 */
    CINDEX[]
    MD[N]
    #PUSH, 3 /* gp1 */
    CINDEX[]
    #PUSH, 5 /* c1 */
    CINDEX[]
    MD[N]
    ADD[]
    DUP[]
    #PUSH, 64
    GT[]
    IF[]

        /* enough total side-bearing space left, leave it alone */
        POP[]

    ELSE[]

        /* 1 pixel or less total side-bearing space left */
        #PUSH, 0
        GT[]
        IF[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* any total side-bearing space left at all, move black-body flush left and start over */

            #PUSH, 6 /* p0 */
            CINDEX[]
            #PUSH, 6 /* c0 */
            CINDEX[]
            #PUSH, 6 /* p1 */
            CINDEX[]
            #PUSH, 6 /* c1 */
            CINDEX[]
            #PUSH, 11 /* gp0 */
            CINDEX[]
            #PUSH, 11 /* p0 */
            CINDEX[]
            MD[N]
            #PUSH, 4
            SLOOP[]
            SHPIX[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* optimize position of stroke0 forwarding phase0 to stroke1 */

            #PUSH, 6 /* p0 */
            CINDEX[]
            #PUSH, 6 /* c0 */
            CINDEX[]
            #PUSH, 6 /* p1 */
            CINDEX[]
            #PUSH, 6 /* c1 */
            CINDEX[]
            #PUSH, 10 /* p0 */
            CINDEX[]
            #PUSH, 10 /* c0 */
            CINDEX[]
            #PUSH, 7 /* som */
            CINDEX[]
            #PUSH, 113 /* get delta phase for optimal stroke position */
            CALL[]
            #PUSH, 4 /* apply to both strokes */
            SLOOP[]
            SHPIX[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* optimize position of stroke1 */

            #PUSH, 4 /* p1 */
            CINDEX[]
            #PUSH, 4 /* c1 */
            CINDEX[]
            #PUSH, 5 /* c1 */
            CINDEX[]
            #PUSH, 7 /* p1 */
            CINDEX[]
            #PUSH, 5 /* som */
            CINDEX[]
            #PUSH, 113 /* get delta phase for optimal stroke position */
            CALL[]
            #PUSH, 2 /* apply to second stroke only */
            SLOOP[]
            SHPIX[]

        ELSE[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* no total side-bearing space left, move stroke1 left by 1 pixel */

            #PUSH, 4 /* p1 */
            CINDEX[]
            #PUSH, 4 /* c1 */
            CINDEX[]
            #PUSH, -64, 2
            SLOOP[]
            SHPIX[]

        EIF[]

    EIF[]

EIF[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */

POP[]
POP[]
POP[]
POP[]
POP[]
POP[]
POP[]
POP[]

#PUSHON
#END
ENDF[]

FDEF[], 118

/* fn to set pv perpendicular to p1 and c0' such that distance
   c0'&lt;---p0 measures cvt or natural distance if cvt = -1.
   used as support to ResX|YDDist and ResX|YDLink

   CALL[], &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt&gt;, 118 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 3 /* c0 */
CINDEX[]
SDPVTL[R]
#PUSH, 3 /* p0 */
CINDEX[]
#PUSH, 3 /* c0 */
CINDEX[]
ROLL[] /* cvt */
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 101 /* resActDist, noCvt, noMinDist */
ELSE[]
    #PUSH, 104 /* resActDist, cvt, minDist */
EIF[]
CALL[]
ABS[]

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 4 /* p0 */
CINDEX[]
SPVTL[r]
#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 4 /* p0 */
CINDEX[]
MD[N]

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt; */
/* test if solution exists at all */

DUP[]
DUP[]
MUL[]
#PUSH, 3 /* w */
CINDEX[]
DUP[]
MUL[]
LTEQ[]
#PUSH, 0, 3 /* d */
CINDEX[]
EQ[]
OR[]

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt;, &lt;d² &lt;= w² or d = 0?&gt; */

IF[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt; */
    /* solution doesn't exist, hence prepare to bail out */

    POP[]
    POP[]
    SWAP[]
    POP[]
    SPVTL[R]

ELSE[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt; */
    /* solution exists, hence continue computation */

    DUP[]
    MUL[]
    #PUSH, 2 /* w */
    CINDEX[]
    DUP[]
    MUL[]
    SUB[]
    DUP[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d² - w²&gt;, &lt;d² - w²&gt; */

    #PUSH, 83 /* sqrt */
    CALL[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d² - w²&gt;, &lt;sqrt(d² - w²)&gt; */

    ROLL[] /* w */
    MUL[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;d² - w² =: dx&gt;, &lt;w·sqrt(d² - w²) =: dy&gt; */

    #PUSH, 5 /* p1 */
    CINDEX[]
    #PUSH, 5 /* p0 */
    CINDEX[]
    SDPVTL[R]
    #PUSH, 4 /* p0 */
    CINDEX[]
    #PUSH, 4 /* c0 */
    MINDEX[]
    MD[O]

    #PUSH, 0
    LT[]
    IF[]
        NEG[] /* dy */
    EIF[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;dx&gt;, &lt;dy&gt; */

    #PUSH, 4 /* p1 */
    MINDEX[]
    DUP[]
    SVTCA[X]
    GC[N]
    SWAP[]
    SVTCA[Y]
    GC[N]

    /* STACK: &lt;p0&gt;, &lt;dx&gt;, &lt;dy&gt;, &lt;p1.x&gt;, &lt;p1.y&gt; */

    #PUSH, 5 /* p0 */
    MINDEX[]
    DUP[]
    SVTCA[X]
    GC[N]
    SWAP[]
    SVTCA[Y]
    GC[N]

    /* STACK: &lt;dx&gt;, &lt;dy&gt;, &lt;p1.x&gt;, &lt;p1.y&gt;, &lt;p0.x&gt;, &lt;p0.y&gt; */

    #PUSH, 0 /* enter twilight zone */
    SZPS[]

    SVTCA[Y]
    #PUSH, 0
    SWAP[]
    SCFS[]
    SVTCA[X]
    #PUSH, 0
    SWAP[]
    SCFS[]

    /* STACK: &lt;dx&gt;, &lt;dy&gt;, &lt;p1.x&gt;, &lt;p1.y&gt; */

    SVTCA[Y]
    DUP[]
    #PUSH, 1
    SWAP[]
    SCFS[]
    #PUSH, 2
    SWAP[]
    SCFS[]
    SVTCA[X]
    DUP[]
    #PUSH, 1
    SWAP[]
    SCFS[]
    #PUSH, 2
    SWAP[]
    SCFS[]

    /* STACK: &lt;dx&gt;, &lt;dy&gt; */

    SWAP[]

    /* STACK: &lt;dy&gt;, &lt;dx&gt; */

    #PUSH, 2, 0, 1
    SFVTL[r]
    SWAP[]
    SHPIX[]

    /* STACK: &lt;dy&gt; */

    #PUSH, 2, 0, 1
    SFVTL[R]
    SWAP[]
    SHPIX[]

    /* STACK: */

    #PUSH, 2, 1
    SPVTL[R]

    #PUSH, 1 /* leave twilight zone */
    SZPS[]

EIF[]

#PUSHON
#END
ENDF[]

FDEF[], 119

/* align c with p unless fv is perpendicular to pv
   fv and pv assumed to be set prior to calling fn 119
   used as support to ResX|YDDist and ResX|YDLink

   CALL[], &lt;p&gt;, &lt;c&gt;, 119 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

SWAP[]
SRP0[]

/* STACK: &lt;c&gt; */

GFV[]
GPV[]

/* STACK: &lt;c&gt;, &lt;fv.x&gt;, &lt;fv.y&gt;, &lt;pv.x&gt;, &lt;pv.y&gt; */

ROLL[]
MUL[]
SWAP[]
ROLL[]
MUL[]
ADD[]
ABS[]

/* STACK: &lt;c&gt;, &lt;|pv.y*fv.y + pv.x*fv.x|&gt; */

#PUSH, 16384, 1024
MUL[]

/* the above dot product multiplies two 2.14 numbers in 26.6 arithmetic yielding a 2.22 number (2^14 * 2^14 / 2^6 = 2^22)
   like the rasterizer, we're comparing this number to 1/16: |fv1·pv| &lt; 1/16 means fv1 is within ±arcsin(1/16) or ±3.5833° perpendicular to pv
   in 2.22 format 1/16 is 2^18, but since the assembler won't allow us to push 2^18 = 262144, we make up this number as a multiplication
   the multiplication, in turn, is again done in 26.6 format, hence we multiply 16384 with 1024 (2^14 * 2^10 / 2^6 = 2^18) */

LT[]
IF[]

    /* fv is approximately perpendicular to pv which by itself is perpendicular
       to a line from p to c' (with c' the twilight point 2 computed in fn 118),
       i.e. fv is approximately parallel to line from p to c'. Given the usage
       of fn 119 this means that fv is approximately coincident with said line,
       or c is approximately aligned already, hence simply touch the point, but
       without involving the pv */

    /* STACK: &lt;c&gt; */

    #PUSH, 0
    SHPIX[]

ELSE[]

    /* STACK: &lt;c&gt; */

    ALIGNRP[]

EIF[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 120

/* support to ResX|YDDist and ResX|YDLink where fv0 and fv1 are x or y

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1&gt;, 120 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1&gt; */

#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 9 /* p0 */
CINDEX[]
#PUSH, 9 /* c0 */
CINDEX[]
#PUSH, 7 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1&gt; */

SWAP[]
#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 6 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
#PUSH, 5 /* p1 */
MINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
#PUSH, 5 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1&gt; */

#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 121

/* support to ResX|YDDist and ResX|YDLink where fv0 is x or y while fv1 is to-line

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt;, 121 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 7 /* p1 */
CINDEX[]
#PUSH, 10 /* p0 */
CINDEX[]
#PUSH, 10 /* c0 */
CINDEX[]
#PUSH, 8 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

ROLL[]
#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 7 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 6 /* p1 */
MINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 6 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 122

/* support to ResX|YDDist and ResX|YDLink where fv0 is to-line while fv1 is x or y

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1&gt;, 122 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1&gt; */

#PUSH, 7 /* p1 */
CINDEX[]
#PUSH, 10 /* p0 */
CINDEX[]
#PUSH, 10 /* c0 */
CINDEX[]
#PUSH, 8 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1&gt; */

ROLL[]
ROLL[]
SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 6 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
#PUSH, 5 /* p1 */
MINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
#PUSH, 5 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1&gt; */

#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 123

/* support to ResX|YDDist and ResX|YDLink where both fv0 and fv1 are to-line

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt;, 123 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 8 /* p1 */
CINDEX[]
#PUSH, 11 /* p0 */
CINDEX[]
#PUSH, 11 /* c0 */
CINDEX[]
#PUSH, 9 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 4 /* fv0.p0 */
MINDEX[]
#PUSH, 4 /* fv0.p1 */
MINDEX[]
SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 7 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 6 /* p1 */
MINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 6 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 124

/* determine on which side of edge p0-&gt;p1 is c
   by calculating vector product (c - p0) ^ (p1 - p0)

   CALL[], &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt;, 124

   returns with vector product on stack
   if vector product &lt; 0 then c is on the left of p0-&gt;p1
   if vector product &gt; 0 then c is on the right of p0-&gt;p1
   else c is exactly on p0-&gt;p1 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt; */

SPVTCA[X]
#PUSH, 3 /* p0 */
CINDEX[]
#PUSH, 3 /* c */
CINDEX[]
MD[O]
#PUSH, 4 /* p0 */
CINDEX[]
#PUSH, 3 /* p1 */
CINDEX[]
MD[O]

/* STACK: &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt;, &lt;a.x&gt;, &lt;b.x&gt; */

SPVTCA[Y]
#PUSH, 5 /* p0 */
CINDEX[]
#PUSH, 5 /* c */
MINDEX[]
MD[O]
#PUSH, 5 /* p0 */
MINDEX[]
#PUSH, 5 /* p1 */
MINDEX[]
MD[O]

/* STACK: &lt;a.x&gt;, &lt;b.x&gt;, &lt;a.y&gt;, &lt;b.y&gt; */

#PUSH, 4 /* a.x */
MINDEX[]
MUL[]

ROLL[] /* b.x */
ROLL[] /* a.y */
MUL[]

SUB[]

/* STACK: &lt;b.y*a.x - b.x*a.y&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 125

/* fn interpolates a pair of diagonal links between grand-parents gp0 and gp1 along pv
   pv: X = 0, Y = 1, X/ = 2; fv0 and fv1: x and y components in 2.14

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, 125 */

#BEGIN
#PUSHOFF

/* interpolate parents between grand-parents along pv */
/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

#PUSH, 93, 14 /* pv */
CINDEX[]
ADD[]
CALL[]

#PUSH, 12 /* gp0 */
MINDEX[]
SRP1[]
#PUSH, 5 /* gp1 */
MINDEX[]
SRP2[]

#PUSH, 10 /* p0 */
CINDEX[]
IP[]
#PUSH, 7 /* p1 */
CINDEX[]
IP[]

/* determine if this is a crisscrossed stroke */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

#PUSH, 10 /* p0 */
CINDEX[]
#PUSH, 10 /* c0 */
CINDEX[]
#PUSH, 9 /* p1 */
CINDEX[]
#PUSH, 124 /* c0 on which side of edge p0-&gt;p1? */
CALL[]
#PUSH, 0
LT[]

#PUSH, 11 /* p0 */
CINDEX[]
#PUSH, 8 /* c1 */
CINDEX[]
#PUSH, 10 /* p1 */
CINDEX[]
#PUSH, 124 /* c1 on which side of edge p0-&gt;p1? */
CALL[]
#PUSH, 0
LT[]

EQ[]
IF[]

    /* both childern on same side of parent edge p0&gt;-&gt;p1
       hence re-align children with parents perp to dpv. */
    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 7 /* p1 */
    CINDEX[]
    #PUSH, 11 /* p0 */
    CINDEX[]
    SDPVTL[R]

    #PUSH, 4 /* fv0.x */
    CINDEX[]
    #PUSH, 4 /* fv0.y */
    CINDEX[]
    SFVFS[]

    #PUSH, 10 /* p0 */
    CINDEX[]
    SRP0[]
    #PUSH, 9 /* c0 */
    CINDEX[]
    MDRP[m&lt;rBl]

    #PUSH, 2 /* fv1.x */
    CINDEX[]
    #PUSH, 2 /* fv1.y */
    CINDEX[]
    SFVFS[]

    #PUSH, 7 /* p1 */
    CINDEX[]
    SRP0[]
    #PUSH, 6 /* c1 */
    CINDEX[]
    MDRP[m&lt;rBl]

ELSE[]

    /* childern on opposite sides of "parent edge" p0&gt;-&gt;p1
       hence re-align children with parents per method for crisscrossed strokes */
    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 7 /* p1 */
    CINDEX[]
    #PUSH, 11 /* p0 */
    CINDEX[]
    #PUSH, 11 /* c0 */
    CINDEX[]
    #PUSH, -1, 118 /* no cvt0, no minDist */
    CALL[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 4 /* fv0.x */
    CINDEX[]
    #PUSH, 4 /* fv0.y */
    CINDEX[]
    SFVFS[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 7 /* p1 */
    CINDEX[]
    #PUSH, 10 /* c0 */
    CINDEX[]
    #PUSH, 119
    CALL[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 10 /* p0 */
    CINDEX[]
    #PUSH, 8 /* p1 */
    CINDEX[]
    #PUSH, 8 /* c1 */
    CINDEX[]
    #PUSH, -1, 118 /* no cvt1, no minDist */
    CALL[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 2 /* fv1.x */
    CINDEX[]
    #PUSH, 2 /* fv1.y */
    CINDEX[]
    SFVFS[]

    /* STACK: &lt;p0&gt;, &lt;c1&gt; */

    #PUSH, 10 /* p0 */
    CINDEX[]
    #PUSH, 7 /* c1 */
    CINDEX[]
    #PUSH, 119
    CALL[]

EIF[]

/* determine pre-link medians, measuring perpendicularly to p0-&gt;p1 */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

#PUSH, 10 /* p0 */
CINDEX[]
GC[N]
#PUSH, 10 /* c0 */
CINDEX[]
GC[N]
ADD[]

#PUSH, 8 /* p1 */
CINDEX[]
GC[N]
#PUSH, 8 /* c1 */
CINDEX[]
GC[N]
ADD[]

/* links */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;median0&gt;, &lt;median1&gt; */

#PUSH, 6 /* fv0.x */
CINDEX[]
#PUSH, 6 /* fv0.y */
CINDEX[]
SFVFS[]

#PUSH, 12 /* p0 */
CINDEX[]
#PUSH, 12 /* c0 */
CINDEX[]
#PUSH, 12 /* cvt0 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;median0&gt;, &lt;median1&gt; */

#PUSH, 4 /* fv1.x */
CINDEX[]
#PUSH, 4 /* fv1.y */
CINDEX[]
SFVFS[]

#PUSH, 9 /* p1 */
CINDEX[]
#PUSH, 9 /* c1 */
CINDEX[]
#PUSH, 9 /* cvt1 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

/* subtract post-link medians from pre-link ones */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;median0&gt;, &lt;median1&gt; */

SWAP[]

#PUSH, 10 /* p0 */
CINDEX[]
GC[N]
#PUSH, 10 /* c0 */
CINDEX[]
GC[N]
ADD[]

SUB[]
#PUSH, 32
MUL[]

SWAP[]

#PUSH, 8 /* p1 */
CINDEX[]
GC[N]
#PUSH, 8 /* c1 */
CINDEX[]
GC[N]
ADD[]

SUB[]
#PUSH, 32
MUL[]

/* finally move points by respective deltas */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;delta0&gt;, &lt;delta1&gt; */

#PUSH, 1, 12 /* pv */
CINDEX[]
EQ[]
IF[]
    SFVTCA[Y]
ELSE[]
    SFVTCA[X]
EIF[]

#PUSH, 10 /* p0 */
MINDEX[]
DUP[]
SRP0[]
#PUSH, 3 /* delta0 */
CINDEX[]
MSIRP[m]

#PUSH, 6 /* fv0.x */
MINDEX[]
#PUSH, 6 /* fv0.y */
MINDEX[]
SFVFS[]

#PUSH, 7 /* c0 */
MINDEX[]
DUP[]
SRP0[]
ROLL[] /* delta0 */
MSIRP[m]

/* STACK: &lt;pv&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;delta1&gt; */

#PUSH, 1, 7 /* pv */
MINDEX[]
EQ[]
IF[]
    SFVTCA[Y]
ELSE[]
    SFVTCA[X]
EIF[]

#PUSH, 5 /* p1 */
MINDEX[]
DUP[]
SRP0[]
#PUSH, 2 /* delta1 */
CINDEX[]
MSIRP[m]

ROLL[] /* fv0.x */
ROLL[] /* fv0.y */
SFVFS[]

SWAP[] /* c1 */
DUP[]
SRP0[]
SWAP[] /* delta1 */
MSIRP[m]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 126

/* glue code to fn 125 where both fv0 and fv1 are x or y

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1&gt;, 126 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1&gt; */

SWAP[] /* fv0 */
#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

ROLL[] /* fv1 */
#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 127

/* glue code to fn 125 where fv0 is to line and fv1 is x or y

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1&gt;, 127 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1&gt; */

ROLL[] /* fv0.0 */
ROLL[] /* fv0.1 */
SFVTL[r]
GFV[]

ROLL[] /* fv1 */
#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 128

/* glue code to fn 125 where fv0 is x or y and fv1 is to line

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt;, 128 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt; */

SFVTL[r]

#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

GFV[]

#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 129

/* glue code to fn 125 where both fv0 and fv1 are to line

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt;, 129 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt; */

#PUSH, 4 /* fv0.0 */
MINDEX[]
#PUSH, 4 /* fv0.1 */
MINDEX[]
SFVTL[r]
GFV[]
#PUSH, 4 /* fv1.0 */
MINDEX[]
#PUSH, 4 /* fv1.1 */
MINDEX[]
SFVTL[r]
GFV[]
#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 130

/* extrapolate x-coordinate of &lt;p&gt; to base line along italic angle
   returns with extrapolated x-coordinate on stack

   CALL[], &lt;p&gt;, 130 */

#BEGIN
#PUSHOFF

DUP[]
SVTCA[X]
GC[N]
SWAP[]
SVTCA[Y]
GC[N]

/* STACK: &lt;p.x&gt;, &lt;p.y&gt; */

#PUSH, 10 /* rise */
RS[]
#PUSH, 11 /* run */
RS[]

/* STACK: &lt;p.x&gt;, &lt;p.y&gt;, &lt;rise&gt;, &lt;run&gt; */

ROLL[]
MUL[]
SWAP[]
DIV[]
SUB[]

/* STACK: &lt;p.x - p.y*run/rise&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 131

/* constrains an italic stroke, defined by parents &lt;p0&gt; and &lt;p1&gt;, by
   children &lt;c0&gt; and &lt;c1&gt;, and by cvts &lt;cvt0&gt; and &lt;cvt1&gt;, and inter-
   polates it between points &lt;lsb&gt; and &lt;rsb&gt;

   for b&amp;w stroke additionally optimizes the resulting pixel pattern

   CALL[], &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, 131 */

#BEGIN
#PUSHOFF

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt; */

#PUSH, 9 /* pv perp italic, fv X */
CALL[]

/* lock parent edge */

#PUSH, 6 /* p0 */
CINDEX[]
MDAP[r]

#PUSH, 5 /* p1 */
CINDEX[]
RDTG[]
MDRP[m&lt;RBl]

/* link child edge */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 5 /* c0 */
CINDEX[]
#PUSH, 4 /* cvt0 */
CINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 3 /* cvt1 */
CINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

RTG[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt; */
/* interpolate median of p0 and c0 between lsb and rsb */

#PUSH, 8 /* lsb */
CINDEX[]
#PUSH, 7 /* p0 */
CINDEX[]
#PUSH, 6 /* c0 */
CINDEX[]
#PUSH, 10 /* rsb */
CINDEX[]
#PUSH, 111 /* interpolate median */
CALL[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt; */
/* if the two actual parent-&gt;child distances round to the same stroke weight */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 5 /* c0 */
CINDEX[]
#PUSH, 4 /* cvt0 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 102 /* resActDist, noCvt, minDist */
ELSE[]
    #PUSH, 104 /* resActDist, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;[dist0]&gt; */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 4 /* cvt1 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 102 /* resActDist, noCvt, minDist */
ELSE[]
    #PUSH, 104 /* resActDist, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;[dist0]&gt;, &lt;[dist1]&gt; */

EQ[]
IF[]

    /* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
    /* adjust median of p1 and c1 in parallel */

    RDTG[]
    #PUSH, 4 /* p0 */
    CINDEX[]
    SRP0[]
    #PUSH, 3 /* p1 */
    CINDEX[]
    MDRP[m&lt;RBl]

    #PUSH, 2 /* c0 */
    CINDEX[]
    SRP0[]
    #PUSH, 1 /* c1 */
    CINDEX[]
    MDRP[m&lt;RBl]

    #PUSH, 5 /* rsb */
    MINDEX[]
    POP[]
    #PUSH, 5 /* lsb */
    MINDEX[]
    POP[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */

ELSE[]

    /* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
    /* interpolate median of p1 and c1 between lsb and rsb independently */

    #PUSH, 6 /* lsb */
    MINDEX[]
    #PUSH, 4 /* p1 */
    CINDEX[]
    #PUSH, 3 /* c1 */
    CINDEX[]
    #PUSH, 8 /* rsb */
    MINDEX[]
    #PUSH, 111 /* interpolate median */
    CALL[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */

EIF[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
/* for b&amp;w only optimize pixel pattern */

#PUSH, 0, 2
RS[]
EQ[]
IF[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
    /* extrapolate c0 to base line */

    RDTG[]
    #PUSH, 2 /* c0 */
    CINDEX[]
    #PUSH, 130
    CALL[]

    /* extrapolate p0 to base line */

    #PUSH, 5 /* p0 */
    CINDEX[]
    #PUSH, 130
    CALL[]

    /* get parentPhase from extrapolated x-coordinate */

    DUP[]
    DUP[]
    ROUND[Bl]
    SUB[]

    #PUSH, 4 /* targetPhase */
    RS[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;parentPhase&gt;, &lt;targetPhase&gt; */
    /* shifting parent edge by deltaPhase optimizes stepping pattern on parent edge */

    SVTCA[X]
    SWAP[]
    SUB[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;deltaPhase&gt; */
    /* minimize the positioning error by mapping deltaPhase from [-63,63] to [-32,31] */

    #PUSH, 96
    ADD[]
    DUP[]
    ROUND[Bl]
    SUB[]
    #PUSH, 32
    SUB[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;deltaPhase&gt; */
    /* save minimized deltaPhase for child edge and shift parent edge */

    DUP[]
    #PUSH, 8 /* p0 */
    MINDEX[]
    #PUSH, 8 /* p1 */
    MINDEX[]
    ROLL[]
    #PUSH, 2
    SLOOP[]
    SHPIX[]

    /* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;deltaPhase&gt; */
    /* since child edge is linked perpendicular to italic angle,
       the resulting stroke would include unnecessary pixels,
       hence determine phase of distance between extrapolated
       x-coordinates (deltaDeltaPhase) */

    ROLL[]
    ROLL[]
    SUB[]
    DUP[]
    ROUND[Bl]
    SUB[]

    /* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;deltaPhase&gt;, &lt;deltaDeltaPhase&gt; */
    /* subtract from deltaPhase (don't shift quite as far...) */

    SUB[]

    /* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;deltaPhase'&gt; */
    /* shift parent edge */

    #PUSH, 2
    SLOOP[]
    SHPIX[]

    /* STACK: */

ELSE[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */

    POP[]
    POP[]
    POP[]
    POP[]

    /* STACK: */

EIF[]

RTG[]

#PUSHON
#END
ENDF[]

FDEF[], 132

/* for monochrome only: stack points &lt;p&gt; through &lt;c&gt; on top of &lt;p&gt; below &lt;ppem&gt;

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;ppem&gt;, 132 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;ppem&gt; */

MPPEM[]
GT[]
#PUSH, 1, 2
RS[]
GTEQ[]
AND[]
IF[]

    /* STACK: &lt;p&gt;, &lt;c&gt; */

    SWAP[]
    SRP0[]
    DUP[]
    SVTCA[X]
    ALIGNRP[]
    SVTCA[Y]
    ALIGNRP[]

ELSE[]

    /* STACK: &lt;p&gt;, &lt;c&gt; */

    POP[]
    POP[]
EIF[]

#PUSHON
#END
ENDF[]

FDEF[], 133

/* support fn for fns 134 and 135

   CALL[], &lt;align?&gt;, &lt;from&gt;, &lt;to&gt;, 133 */

#BEGIN
#PUSHOFF

SWAP[]

/* STACK: &lt;align?&gt;, &lt;to&gt;, &lt;from&gt; */

#WBeginLoop133:

#PUSH, 2 /* to */
CINDEX[]
#PUSH, 2 /* from */
CINDEX[]
GTEQ[]
IF[]

    /* STACK: &lt;align?&gt;, &lt;to&gt;, &lt;from&gt; */

    DUP[]
    #PUSH, 4 /* align? */
    CINDEX[]
    IF[]
        ALIGNRP[]
    ELSE[]
        IP[]
    EIF[]

    #PUSH, 1
    ADD[]

    #PUSH, WOffset133
    JMPR[], (WOffset133=#WBeginLoop133)

EIF[]

/* STACK: &lt;align?&gt;, &lt;to&gt;, &lt;from&gt; */

POP[]
POP[]
POP[]

#PUSHON
#END
ENDF[]

FDEF[], 134

/* support fn for italic IUP[?]
   assume pv and fv are set externally

   CALL[], &lt;p0&gt;, &lt;p1&gt;, 134 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;p1&gt; */

#PUSH, 2 /* p0 */
CINDEX[]
GC[O]
#PUSH, 2 /* p1 */
CINDEX[]
GC[O]
EQ[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;eq?&gt; */

ROLL[] /* p0 */
DUP[]
DUP[]
SRP0[]
SRP1[]
#PUSH, 1
ADD[]
ROLL[] /* p1 */
DUP[]
SRP2[]
#PUSH, 1
SUB[]

/* STACK: &lt;eq?&gt;, &lt;from&gt;, &lt;to&gt; */

#PUSH, 133
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 135

/* support fn for italic IUP[?]
   assume pv and fv are set externally

   CALL[], &lt;p0&gt;, &lt;end&gt;, &lt;start&gt;, &lt;p1&gt;, 135 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;end&gt;, &lt;start&gt;, &lt;p1&gt; */

#PUSH, 4 /* p0 */
CINDEX[]
GC[O]
#PUSH, 2 /* p1 */
CINDEX[]
GC[O]
EQ[]

/* STACK: &lt;p0&gt;, &lt;end&gt;, &lt;start&gt;, &lt;p1&gt;, &lt;eq?&gt; */

SWAP[]
DUP[]
SRP2[]
#PUSH, 1
SUB[]
SWAP[]
DUP[]

#PUSH, 6 /* p0 */
MINDEX[]
DUP[]
DUP[]
SRP0[]
SRP1[]
#PUSH, 1
ADD[]
#PUSH, 6 /* end */
MINDEX[]

/* STACK: &lt;start&gt;, &lt;to&gt;, &lt;eq?&gt;, &lt;eq?&gt;, &lt;from&gt;, &lt;end&gt; */

#PUSH, 133
CALL[]

ROLL[]
ROLL[]
#PUSH, 133
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 150
/* Function 150 takes 5 arguments */
/* VERSION 1.0 20120420 */

/* This function moves a point between a PPEM range */
/* for the given rasterizer mode (in Store 2) ClearType */
/* CALL[],&lt;point&gt;,&lt;amount&gt;,&lt;low PPEM&gt;,&lt;high PPEM&gt;, &lt;rasterizer mode&gt;, 150 */
/* &lt;low ppem&gt; Lowest PPEM range to be modified (inclusive) */
/* &lt;high ppem&gt; Highest PPEM range to be modified (inclusive) */
/* &lt;Point&gt; point to be modified */
/* &lt;amount&gt; Amount to move point, in ± 64ths */
/* &lt;rasterizer mode&gt; value in store 2 */
/* 150 Function number */
#BEGIN
#PUSHOFF
#PUSH, 2
RS[] /* read store 2 */
EQ[] /* is it = to the last arg? */
IF[] /* if so . . . */
    GPV[] /* Save current PV on stack to restore */
    SPVTCA[Y] /* We should only MPPEM with Y PV */
    ROLL[]
    MPPEM[] /* check cur. size against high ppem */
    GTEQ[]
    #PUSH, 4
    MINDEX[]
    MPPEM[] /* and low ppem */
    LTEQ[]
    AND[]
    IF[] /* if it's between, then */
        SPVFS[] /* Restore orig PV */
        SHPIX[] /* move the point by the amount */
    ELSE[]
       SPVFS[] /* Restore orig PV */
       POP[] /* otherwise remove the remaining arguments */
       POP[]
    EIF[]

ELSE[]
    POP[] /* remove the remaining arguments if the first test fails */
    POP[]
    POP[]
    POP[]
EIF[]
#END
#PUSHON
ENDF[]

FDEF[], 151
/* Function 151 takes 5 arguments */
/* VERSION 1.0 20120420 */

/* This function moves a point between a PPEM range */
/* for the given set of rasterizer flags (in Store 2) */
/* CALL[],&lt;point&gt;,&lt;amount&gt;,&lt;low PPEM&gt;,&lt;high PPEM&gt;, &lt;rasterizer mode&gt;, 151 */
/* &lt;low ppem&gt; Lowest PPEM range to be modified (inclusive) */
/* &lt;high ppem&gt; Highest PPEM range to be modified (inclusive) */
/* &lt;Point&gt; point to be modified */
/* &lt;amount&gt; Amount to move point, in ± 64ths */
/* &lt;rasterizer flag&gt; bit of a value in store 2 */
/* Function 151 differs from Function 150 in that instead of requiring an */
/* exact match with the value in store 2, a given set of flags (or bit values) */
/* can be referenced. For example, if the function should execute */
/* in any situation where ClearType with fractional AWs is enabled, */
/* (c.f. Function 84) irrespective of other flags (e.g. BGR as opposed */
/* to RGB Devices or non-ClearType direction anti-aliasing) then one */
/* would use a &lt;rasterizer flag&gt; value of 64. (c.f. Function 84.) */
/* The rasterizer values for &lt;rasterizer mode&gt; are defined in the function */
/* 84 header. */
/* EXAMPLE: */
/* If one wanted the move to occur if either subpixel positioned or full gray pixel */
/* then one would take the 64 (from subpixel positioned) and the 256 (from */
/* gray full-pixel) and add them to get 320. With a value of 320, the point will */
/* get moved if either subpixel positioned or full gray pixel is enabled. */
/* If one wanted to move to occur always if ClearType was on, independent of */
/* any subtype or spacing flag, one would set the rasterizer mode to 2. */

/* 151 Function number */
#BEGIN
#PUSHOFF
#PUSH, 152 /* Call function 152 with the rasterizer mode on the top of stack */
CALL[]
IF[] /* if so . . . */
    GPV[] /* Save current PV on stack to restore */
    SPVTCA[Y] /* We should only MPPEM with Y PV */
    ROLL[]
    MPPEM[] /* check cur. size against high ppem */
    GTEQ[]
    #PUSH, 4
    MINDEX[]
    MPPEM[] /* and low ppem */
    LTEQ[]
    AND[]
    IF[] /* if it's between, then */
        SPVFS[] /* Restore orig PV */
        SHPIX[] /* move the point by the amount */
    ELSE[]
        SPVFS[] /* Restore orig PV */
        POP[] /* otherwise remove the remaining arguments */
        POP[]
    EIF[]

ELSE[]
    POP[] /* remove the remaining arguments if the first test fails */
    POP[]
    POP[]
    POP[]
EIF[]
#END
#PUSHON
ENDF[]

FDEF[], 152
/* Function 152 takes 1 argument, a "bitfield" flag. */
/* VERSION 1.0 20111117 */
/*
Function 152 is intended to take a set of one or more bits as input and do an AND (e.g. mask) of those
bits with the set of flags returned by Function 84. Then determine if there is at least one
of these resultant bits that are set.

Function 152 returns TRUE if the match is successful, and FALSE if it is not successful.

If the parameter is zero, indicating no flags, then the function returns FALSE.

This function takes a maxiumum of 32 bit flags.

USES: Storage 2 (FN 84)
RETURNS: 0 or 1
*/

#BEGIN
#PUSHOFF
/* Input parameter is a set of one or more flags */

DUP[]
#PUSH, 2     /* Read FN 84 flags */
RS[]
EQ[]         /* If a simple match, return TRUE */
#PUSH, 1
SWAP[]

#PUSH, BEcln
SWAP[]
JROT[], (BEcln=#LEndClear)  /* Jump to end and clean up stack. */
POP[]
#PUSH, 0, 2
RS[]         /* Read FN 84 flags */
#PUSH, BEclr /* If no FN 84 flags, return FALSE */
SWAP[]

JROF[], (BEclr=#LEndClear)

POP[]
#PUSH, 2
RS[]
SWAP[]
#PUSH, 32   /* Maximum number of bits to loop through */
/* TopLoop: */
#LTopLoop:
   /* STACK
   Loop Iteration Count
   Updated (shifted) Input Value
   Updated (shifted) FN 84 Flag
   */
  DUP[]
  NOT[]
  IF[]    /* Exit the loop when done */
    POP[]
    POP[]
    POP[]
    #PUSH, 0, BDEnd /* 73  End */

    JMPR[], (BDEnd=#LEndFn)

  EIF[]
  ROLL[]
  ROLL[]
  DUP[]
  ROLL[]
  DUP[]
  ROLL[]
  SWAP[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Updated (shifted) Input Value
  Updated (shifted) FN 84 Flag
  Updated (Shifted) Input Value
  Loop Interation Count
  */

  /* Check to see if the lower-order bit is set in the FN 84 Flag */
  #PUSH, 4096 /* Convert to 26.6 by multiply by 64 x 64 */
  MUL[]
  ODD[]
  IF[]
    /* Check to see if the lower-order bit is set in the Input Value */
    #PUSH, 4096
    MUL[]
    ODD[]
    IF[]
      /* We can early out here once we find our first match */
      POP[]
      POP[]
      POP[]
      #PUSH, 1, BTEnd  /* 1 is the TRUE return code */
      JMPR[], (BTEnd=#LEndFn)
    EIF[]
  ELSE[]
    POP[]
  EIF[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Updated (shifted) Input Value
  Loop Interation Count
  */
  /* Shift both the Input Value and the FN 84 Flag each one bit right */
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    POP[]
    POP[]
    POP[]
    #PUSH, 0, BPEnd /* 0 is end condition of FALSE */

    JMPR[], (BPEnd=#LEndFn)

  EIF[]
  SWAP[]
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    POP[]
    POP[]
    POP[]
    #PUSH, 0, BZEnd /* End */

    JMPR[], (BZEnd=#LEndFn) 

  EIF[]
  ROLL[]
  #PUSH, 1
  SUB[]
  #PUSH, WReLoop  /* -77 TopLoop */

JMPR[], (WReLoop=#LTopLoop)

/* EndClear: */
#LEndClear:
SWAP[]
POP[]
#LEndFn:
/* End: */
#END
#PUSHON
ENDF[]

FDEF[], 153
/* Function 153 takes 1 argument, a "bitfield" flag. */
/* VERSION 1.0 20111117 */
/*
Function 153 is intended to take a set of one or more bits as input and do an AND (e.g. mask) of those
bits with the set of flags returned by Function 84. Then determine if ALL
of these resultant bits from the mask are set.

Function 153 returns TRUE if the match is successful, and FALSE if it is not successful.

If the parameter is zero, indicating no flags, then the function returns FALSE.

This function takes a maxiumum of 32 flags.

USES: Storage 2 (FN 84)
RETURNS: 0 or 1
*/

#BEGIN
#PUSHOFF
/* Input parameter is a set of one or more flags */

DUP[]
#PUSH, 2     /* Read FN 84 flags */
RS[]
EQ[]         /* If a simple match, return TRUE */
#PUSH, 1
SWAP[]

#PUSH, BEcln
SWAP[]
JROT[], (BEcln=#LEndClear)  /* Jump to end and clean up stack. */
POP[]
#PUSH, 0, 2
RS[]         /* Read FN 84 flags */
#PUSH, BEclr /* If no FN 84 flags, return FALSE */
SWAP[]

JROF[], (BEclr=#LEndClear)

POP[]
#PUSH, 0, 2   /* 0 is the boolean tracking success, start off with FALSE */
RS[]
ROLL[]
#PUSH, 32   /* Maximum number of bits to loop through */
/* TopLoop: */
#LTopLoop:
   /* STACK
   Loop Iteration Count
   Updated (shifted) Input Value
   Updated (shifted) FN 84 Flag
   Conditional boolean tracking success
   */
  DUP[]
  NOT[]
  IF[]    /* Exit the loop when done */
    POP[]
    POP[]
    POP[]
    #PUSH, BDEnd /* 73  End */

    JMPR[], (BDEnd=#LEndFn)

  EIF[]
  ROLL[]
  ROLL[]
  DUP[]
  ROLL[]
  DUP[]
  ROLL[]
  SWAP[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Updated (shifted) Input Value
  Updated (shifted) FN 84 Flag
  Updated (Shifted) Input Value
  Loop Interation Count
  Conditional boolean tracking success
  */

  /* Check to see if the lower-order bit is set in the FN 84 Flag */
  #PUSH, 4096 /* Convert to 26.6 by multiply by 64 x 64 */
  MUL[]
  ODD[]
  IF[]
    /* Check to see if the lower-order bit is set in the Input Value */
    #PUSH, 4096
    MUL[]
    ODD[]
    IF[]
      #PUSH, 4
      MINDEX[]
      #PUSH, 1  /* Set TRUE return code */
      OR[]      /* We OR this because we will immediately exit if we fail this test */
      #PUSH, 4
      MINDEX[]
      #PUSH, 4
      MINDEX[]
      #PUSH, 4
      MINDEX[]
    ELSE[]
      POP[]
      POP[]
      POP[]
      POP[]
      #PUSH, BTEnd , 0  /* 0 is the FALSE return code */
      SWAP[]
      JMPR[], (BTEnd=#LEndFn)

    EIF[]
  ELSE[]
    POP[]
  EIF[]
  #PUSH, 4 /* Can this be cleaned up and integrated with the code below? */
  MINDEX[]
  SWAP[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Conditional boolean tracking success
  Updated (shifted) Input Value
  Loop Interation Count
  */
  /* Shift both the Input Value and the FN 84 Flag each one bit right */
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    ROLL[]
    NOT[]
    ROLL[]
    AND[]
    SWAP[]
    POP[]
    SWAP[]
    POP[]
    #PUSH, BPEnd /* 29  End */

    JMPR[], (BPEnd=#LEndFn)

  EIF[]
  ROLL[]
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    POP[]
    POP[]
    SWAP[]
    POP[]
    #PUSH, BZEnd /* End */

    JMPR[], (BZEnd=#LEndFn)

  EIF[]
  #PUSH, 4
  MINDEX[]
  #PUSH, 1
  SUB[]
  #PUSH, WReLoop  /* -77 TopLoop */

JMPR[], (WReLoop=#LTopLoop)

/* EndClear: */
#LEndClear:
SWAP[]
POP[]
#LEndFn:
/* End: */
#END
#PUSHON
ENDF[]

    </extraProgram>

    <extraProgram name="ppgm">
/* auto-generated pre-program */
/* VTT 6.35 compiler */
/* Grey scaling? */
CALL[], 84

/* InstructionsOn */
#PUSHOFF
MPPEM[]
#PUSH, 2047
GT[]
MPPEM[]
#PUSH, 9
LT[]
OR[]
#PUSH, 1
GETINFO[]
#PUSH, 37
GTEQ[]
#PUSH, 1
GETINFO[]
#PUSH, 64
LTEQ[]
AND[]
#PUSH, 6
GETINFO[]
#PUSH, 0
NEQ[]
AND[]
OR[]
IF[]
    #PUSH, 1, 1
    INSTCTRL[]
EIF[]
#PUSHON

/* DropOutCtrlOff */
SCANCTRL[], 400

SCANTYPE[], 1
SCANTYPE[], 5

/* CvtCutIn */
SVTCA[Y]
SCVTCI[], 64
WS[], 3, 64
#PUSHOFF
MPPEM[]
#PUSH, 144
GTEQ[]
IF[]
#PUSH, 3, 0, 0
SCVTCI[]
WS[]
EIF[]
#PUSHON

/* ClearTypeCtrl */
#PUSHOFF
#PUSH, 2, 2
RS[]
LTEQ[]
IF[]
    #PUSH, 4, 3
    INSTCTRL[]
EIF[]
#PUSHON

/* LinearAdvanceWidths */
DLTC1[(2 @0 8)(2 @7 8)(2 @14 8)]
DLTC2[(2 @1 8)(2 @5 8)]
SVTCA[Y]
CALL[], 2, 89
SVTCA[Y]
CALL[], 8, 89
CALL[], 3, 52, 2, 85
CALL[], 9, 52, 8, 85
DLTC1[(0 @2 8)(0 @6 8)(0 @14 8)]
DLTC2[(0 @2 8)]
SVTCA[Y]
CALL[], 0, 89
DLTC1[(6 @3 8)(6 @5 8)(6 @7 8)]
DLTC2[(6 @2 8)(6 @4 8)(6 @6 8)]
DLTC3[(6 @7 8)]
SVTCA[Y]
CALL[], 6, 89
SVTCA[Y]
CALL[], 10, 89
SVTCA[Y]
CALL[], 14, 89
CALL[], 1, 49, 0, 85
CALL[], 7, 52, 6, 85
CALL[], 11, 52, 10, 85
CALL[], 15, 94, 14, 85
DLTC1[(4 @0 8)(4 @7 8)(4 @14 8)]
DLTC2[(4 @1 8)(4 @5 8)]
SVTCA[Y]
CALL[], 4, 89
SVTCA[Y]
CALL[], 12, 89
CALL[], 5, 52, 4, 85
CALL[], 13, 52, 12, 85
SVTCA[Y]
CALL[], 16, 89
SVTCA[Y]
CALL[], 18, 89
CALL[], 17, 49, 16, 85
CALL[], 19, 49, 18, 85
SVTCA[X]
CALL[], 21, 25, 62, 22, 166, 90
SVTCA[X]
CALL[], 23, 52, 22, 28, 91
SVTCA[X]
CALL[], 26, 51, 25, 28, 91
SVTCA[X]
CALL[], 24, 52, 22, 28, 91
SVTCA[X]
CALL[], 27, 51, 25, 28, 91
SVTCA[X]
CALL[], 28, 22, 7, 31
CALL[], 29, 22, 255, 31
SVTCA[Y]
CALL[], 30, 23, 255, 31
CALL[], 31, 24, 45, 31
SVTCA[X]
CALL[], 32, 56, 24, 22, 92
CALL[], 33, 32, 61, 31
SVTCA[X]
CALL[], 34, 25, 255, 31
SVTCA[Y]
CALL[], 35, 5, 26, 25, 92
SVTCA[Y]
CALL[], 36, 26, 18, 31
SVTCA[X]
CALL[], 37, 51, 27, 25, 92
CALL[], 38, 37, 40, 31
CALL[], 39, 25, 4, 31
CALL[], 43, 42, 64, 31
CALL[], 47, 46, 74, 31
SVTCA[X]
CALL[], 49, 48, 114, 31
CALL[], 51, 50, 64, 31
SVTCA[Y]
CALL[], 54, 53, 147, 31
CALL[], 55, 54, 34, 31
CALL[], 56, 54, 79, 31
CALL[], 57, 54, 114, 31
CALL[], 58, 53, 14, 31
CALL[], 60, 59, 52, 31
CALL[], 61, 59, 147, 31
SVTCA[X]
CALL[], 63, 28, 255, 31
CALL[], 64, 29, 255, 31
SVTCA[Y]
CALL[], 65, 30, 255, 31
CALL[], 66, 30, 147, 31
CALL[], 67, 31, 255, 31
CALL[], 68, 33, 114, 31
CALL[], 69, 33, 255, 31
CALL[], 70, 32, 114, 31
CALL[], 71, 32, 255, 31
SVTCA[X]
CALL[], 72, 34, 255, 31
SVTCA[Y]
CALL[], 73, 35, 43, 31
CALL[], 74, 35, 86, 31
CALL[], 75, 35, 255, 31
CALL[], 76, 35, 171, 31
CALL[], 77, 35, 43, 31
CALL[], 78, 36, 255, 31
CALL[], 79, 38, 128, 31
CALL[], 80, 38, 255, 31
CALL[], 81, 37, 171, 31
CALL[], 82, 37, 255, 31
CALL[], 83, 37, 94, 31
CALL[], 84, 39, 45, 31
CALL[], 85, 39, 36, 31
SVTCA[X]
CALL[], 86, 40, 255, 31
CALL[], 87, 41, 255, 31
SVTCA[Y]
CALL[], 88, 42, 13, 31
CALL[], 89, 42, 255, 31
CALL[], 90, 42, 205, 31
CALL[], 91, 43, 255, 31
CALL[], 92, 44, 255, 31
CALL[], 93, 45, 255, 31
CALL[], 94, 47, 147, 31
CALL[], 95, 47, 255, 31
CALL[], 96, 46, 128, 31
CALL[], 97, 46, 255, 31
SVTCA[X]
CALL[], 98, 48, 103, 31
CALL[], 99, 48, 171, 31
CALL[], 100, 48, 255, 31
CALL[], 101, 49, 255, 31
CALL[], 102, 51, 255, 31
CALL[], 103, 50, 205, 31
CALL[], 104, 50, 255, 31
SVTCA[Y]
CALL[], 105, 52, 255, 31
CALL[], 106, 55, 24, 31
CALL[], 107, 55, 45, 31
CALL[], 108, 55, 255, 31
CALL[], 109, 55, 205, 31
CALL[], 110, 55, 94, 31
CALL[], 111, 56, 255, 31
CALL[], 112, 56, 205, 31
CALL[], 113, 54, 255, 31
CALL[], 114, 57, 255, 31
CALL[], 115, 57, 79, 31
CALL[], 116, 58, 103, 31
CALL[], 117, 58, 255, 31
CALL[], 118, 53, 7, 31
CALL[], 119, 60, 61, 31
CALL[], 120, 60, 255, 31
CALL[], 121, 59, 64, 31
CALL[], 122, 61, 255, 31
CALL[], 123, 59, 255, 31
CALL[], 124, 62, 255, 31
CALL[], 126, 52, 125, 85
RTG[]

    </extraProgram>

  </TSI1>

  <TSI3>

    <glyphProgram name=".null">
/* VTTTalk Unicode 0x0 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="A">
/* Y direction */
ResYAnchor(2,8)
YShift(2,5)
ResYAnchor(3,2)
YShift(3,8)

YIPAnchor(3,12,2)
YShift(12,11)
YInterpolate(3,0,6,12)
YShift(12,13)
YShift(13,10)
YShift(3,7)
YShift(7,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="A.smcp">
/* Y direction */
YAnchor(1)
YShift(1,5)
YAnchor(3,125)
YShift(3,7)
YIPAnchor(3,12,1)
YInterpolate(3,6,0,12)
YShift(12,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="A.unic">
/* Y direction */
ResYAnchor(15,3)
YShift(15,5)
YAnchor(25,18)
ResYAnchor(50,9)
YShift(50,39)
YIPAnchor(15,30,50)
YShift(30,59)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="AE">
/* Y direction */
ResYAnchor(2,8)
YShift(2,14)
YShift(2,11)
YShift(11,12)
ResYAnchor(24,2)
YShift(24,3)
YShift(24,13)
YIPAnchor(24,19,7,2)
YShift(19,20)
YShift(7,8)
YShift(24,23)
YShift(23,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="AE.smcp">
/* Y direction */
YAnchor(13,10)
YShift(13,23)
YShift(23,2)
YShift(2,3)
YAnchor(15,125)
YIPAnchor(13,19,6,15)
YShift(19,20)
YShift(6,7)
YShift(15,24)
YShift(24,11)
YShift(11,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Aogonek">
/* Y direction */
ResYAnchor(2,8)
YShift(2,5)
YShift(5,15)
YShift(15,14)
ResYAnchor(3,2)
YShift(3,7)
YInterpolate(2,0,6,3)
YAnchor(29)
YShift(29,22)
YIPAnchor(3,12,29)
YShift(12,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Aogonek.smcp">
/* Y direction */
YAnchor(1,18)
YShift(1,5)
YShift(5,14)
YShift(5,15)
YAnchor(3,125)
YShift(3,8)
YAnchor(29)
YShift(29,22)
YIPAnchor(3,12,29)
YShift(12,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="B">
/* Y direction */
ResYAnchor(14,8)
YShift(14,27)
YShift(27,28)
ResYAnchor(15,2)
YShift(15,12)
YIPAnchor(15,38,14)
YShift(38,1)
YShift(38,39)
YShift(39,2)
YInterpolate(39,41,25,38)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="B.smcp">
/* Y direction */
YAnchor(13)
YAnchor(15,125)
YShift(15,12)
YIPAnchor(15,1,38,27,13)
YShift(1,2)
YInterpolate(1,25,41,2)
YShift(27,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Bhook">
/* Y direction */
YAnchor(31)
YAnchor(33,2)
YShift(33,8)
YAnchor(8)
YShift(33,1)
YShift(1,30)
YShift(33,16)
YAnchor(16)
YIPAnchor(16,19,45,31)
YShift(19,56)
YShift(19,20)
YShift(20,57)
YInterpolate(19,43,59,58,20)
YShift(45,46)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="C">
/* Y direction */
ResYAnchor(5,9)
YDist(5,0,&gt;=)
YShift(5,36)
ResYAnchor(16,3)
YDist(16,21,&gt;=)
YShift(16,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="C.smcp">
/* Y direction */
YAnchor(5)
YDist(5,0,&gt;=)
YShift(5,36)
YAnchor(16,126)
YDist(16,21,&gt;=)
YShift(16,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="C.ss06">
/* Y direction */
ResYAnchor(5,9)
YDist(5,0,&gt;=)
YShift(5,38)
ResYAnchor(17,3)
YDist(17,22,&gt;=)
YShift(17,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="CR">
/* VTTTalk Unicode 0xd */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="Chook">
/* Y direction */
ResYAnchor(24,9)
YShift(24,19)
YAnchor(19)
YShift(24,55)
ResYAnchor(35,3)
YShift(35,1)
YAnchor(1)
YShift(1,40)
YShift(35,7)
YAnchor(7)
YShift(7,14)
YShift(35,44)
YInterpolate(1,18,2,44)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="D">
/* VTTTalk Unicode 0x44 (D) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 29 8 */
/* CVT 30 2 */
/* Min and Max */
ResYAnchor(29,8)	/* min, CVT */
ResYAnchor(30,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(30,15) /*stroke, CVT of another stroke*/
YShift(15,14) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(29,1) /*stroke, CVT of another stroke*/
YShift(1,2) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="D.cn">
/* Y direction */
YAnchor(30,18)
YShift(30,1)
YShift(30,2)
ResYAnchor(31,2)
YShift(31,15)
YShift(31,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="D.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 28 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(15,125)	/* max */

/* YDir: Stroke #0 */
YShift(15,14) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(1,2) /*perpendicular to the stroke*/

/* Contour #1 */
YShift(15,26) /* max */
YShift(0,27) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="D.ss06">
/* Y direction */
YAnchor(0)
YShift(0,29)
YShift(0,2)
ResYAnchor(16,2)
YShift(16,15)
YShift(16,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Dcroat">
/* VTTTalk Unicode 0x110 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 29 8 */
/* CVT 30 2 */
/* Min and Max */
ResYAnchor(29,8)	/* min, CVT */
ResYAnchor(30,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(30,15) /*stroke, CVT of another stroke*/
YShift(15,14) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(30,33,29)
YAnchor(33)
YShift(33,34) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YShift(29,1) /*stroke, CVT of another stroke*/
YShift(1,2) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="Delta">
/* Y direction */
ResYAnchor(2,18)
YShift(2,5)
YShift(2,12)
YShift(12,13)
ResYAnchor(3,2)
YShift(3,7)
YInterpolate(2,6,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Delta.smcp">
/* Y direction */
YAnchor(9,10)
YShift(9,3)
YShift(3,2)
YShift(9,5)
YShift(5,0)
YAnchor(12,125)
YShift(12,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Dhook">
/* Y direction */
ResYAnchor(16,2)
YShift(16,33)
YShift(33,1)
YShift(16,46)
YShift(46,8)
YAnchor(8)
YShift(46,34)
YAnchor(18)
YShift(18,47)
YAnchor(19)
YShift(19,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Digamma">
/* Y direction */
ResYAnchor(6,8)
ResYAnchor(7,2)
YIPAnchor(7,10,6)
YDist(10,2,&gt;=)
YShift(10,11)
YShift(11,3)
YShift(7,15)
YShift(15,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Dtopbar">
/* VTTTalk Unicode 0x18b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 14 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
ResYAnchor(14,2)	/* max */

/* YDir: Stroke #0 */
YShift(14,13) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YIPAnchor(14,18,1)
YShift(18,10) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YShift(1,26) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="E">
/* Y direction */
ResYAnchor(6,8)
YShift(6,2)
YShift(6,3)
ResYAnchor(7,2)
YShift(7,14)
YShift(7,15)
YIPAnchor(7,10,6)
YShift(10,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="E.smcp">
/* Y direction */
YAnchor(6,10)
YShift(6,2)
YShift(6,3)
YAnchor(7,125)
YShift(7,14)
YShift(7,15)
YIPAnchor(6,10,7)
YShift(10,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="E.unic">
/* Y direction */
ResYAnchor(0,9)
YShift(0,37)
ResYAnchor(11,3)
YShift(11,26)
YIPAnchor(11,18,0)
YShift(18,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Eng">
/* Y direction */
ResYAnchor(0,2)
YShift(0,4)
YShift(0,5)
YShift(0,9)
ResYAnchor(3,8)
YShift(3,7)
YShift(7,6)
YAnchor(14)
YShift(14,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Eng.smcp">
/* Y direction */
YAnchor(5,10)
YShift(5,2)
YShift(2,10)
YShift(10,8)
YAnchor(6,125)
YShift(6,3)
YShift(6,9)
ResYAnchor(16,15)
YShift(16,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Eogonek">
/* Y direction */
ResYAnchor(6,8)
YShift(6,2)
YShift(2,3)
YShift(6,17)
YShift(17,16)
ResYAnchor(7,2)
YShift(7,15)
YShift(15,14)
YAnchor(31)
YShift(31,24)
YIPAnchor(7,11,31)
YShift(11,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Eogonek.smcp">
/* Y direction */
YAnchor(6,18)
YShift(6,5)
YShift(6,16)
YShift(16,17)
YAnchor(7,125)
YShift(7,14)
YShift(7,15)
YIPAnchor(6,10,7)
YShift(10,11)
YAnchor(31)
YShift(31,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Epsilon1">
/* Y direction */
ResYAnchor(11,3)
YDist(11,16)
YShift(11,20)
YAnchor(52)
YShift(52,42)
YDist(52,46)
YIPAnchor(52,33,11)
YShift(33,30)
YInterpolate(33,1,31,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Eth">
/* VTTTalk Unicode 0xd0 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 29 8 */
/* CVT 30 2 */
/* Min and Max */
ResYAnchor(29,8)	/* min, CVT */
ResYAnchor(30,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(30,15) /*stroke, CVT of another stroke*/
YShift(15,14) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(30,33,29)
YAnchor(33)
YShift(33,34) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YShift(29,1) /*stroke, CVT of another stroke*/
YShift(1,2) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="Eturn">
/* Y direction */
ResYAnchor(1,2)
YShift(1,0)
YShift(1,5)
YShift(5,2)
ResYAnchor(12,8)
YShift(12,13)
YShift(12,4)
YShift(4,15)
YIPAnchor(1,8,12)
YShift(8,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Euro">
/* Y direction */
ResYAnchor(7,13)
YShift(7,0)
ResYAnchor(18,5)
YShift(18,25)
YIPAnchor(7,38,18)
YShift(38,39)
YDist(38,43,&gt;=)
YShift(43,42)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Euro.smcp">
/* Y direction */
YAnchor(7,11)
YShift(7,0)
YAnchor(18,126)
YShift(18,25)
YIPAnchor(7,43,18)
YShift(43,42)
YShift(43,38)
YAnchor(38)
YShift(38,39)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="F">
/* VTTTalk Unicode 0x46 (F) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 8 */
/* CVT 3 2 */
/* Min and Max */
ResYAnchor(2,8)	/* min, CVT */
ResYAnchor(3,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(3,11) /*stroke, CVT of another stroke*/
YShift(11,10) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(3,6,2)
YAnchor(6)
YShift(6,7) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="F.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0,125)	/* max */

/* YDir: Stroke #0 */
YInterpolate(0,11,1)
YAnchor(11)
YShift(11,10) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(0,6,1)
YAnchor(6)
YShift(6,7) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="Fhook">
/* Y direction */
YAnchor(6)
YShift(6,13)
ResYAnchor(18,2)
YShift(18,28)
YShift(18,29)
YIPAnchor(6,24,18)
YShift(24,25)
YShift(25,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Fturn">
/* Y direction */
ResYAnchor(1,2)
YAnchor(3,8)
YShift(3,0)
YShift(3,10)
YIPAnchor(3,7,1)
YShift(7,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="G">
/* Y direction */
ResYAnchor(5,9)
YShift(5,36)
ResYAnchor(16,3)
YDist(16,21,&gt;=)
YShift(16,25)
YIPAnchor(16,42,5)
YShift(42,43)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="G.alt">
/* Y direction */
ResYAnchor(6,9)
YShift(6,37)
ResYAnchor(17,3)
YDist(17,22,&gt;=)
YShift(17,26)
YIPAnchor(17,44,6)
YShift(44,45)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="G.smcp">
/* Y direction */
YAnchor(5)
YShift(5,36)
YAnchor(16,126)
YShift(16,25)
YIPAnchor(16,42,5)
YShift(42,41)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="G.ss06">
/* Y direction */
ResYAnchor(5,9)
YShift(5,38)

ResYAnchor(17,3)
YDist(17,22,&gt;=)
YShift(17,26)

YIPAnchor(17,44,5)
YShift(44,45)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Gamma">
/* VTTTalk Unicode 0x393 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 8 */
/* CVT 5 2 */
/* Min and Max */
ResYAnchor(4,8)	/* min, CVT */
ResYAnchor(5,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(5,2) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="Gamma.smcp">
/* Y direction */
YAnchor(2,10)
YAnchor(3,125)
YShift(3,6)
YShift(3,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Gamma1">
/* VTTTalk Unicode 0x194 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(15)	/* min */
ResYAnchor(0,2)	/* max */

/* YDir: Stroke #0 */
YShift(15,38) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(0,31)

/* Extreme Max */
YShift(0,25)

/* Extreme Max */
YShift(0,6)

Smooth()

    </glyphProgram>

    <glyphProgram name="Gbar">
/* Y direction */
ResYAnchor(9,9)
YShift(9,41)
ResYAnchor(20,3)
YShift(20,29)
YIPAnchor(20,47,9)
YShift(47,48)
YDist(47,3,&gt;=)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Germandbls">
/* Y direction */
YAnchor(2,8)
ResYAnchor(10,3)
YShift(10,20)
ResYAnchor(48,9)
YShift(48,29)
YIPAnchor(48,37,10)
YInterpolate(37,4,0,10)
YShift(37,15)
YShift(37,39)
YShift(39,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Germandbls.smcp">
/* Y direction */
YAnchor(2,10)
YAnchor(9,126)
YShift(9,19)
YIPAnchor(2,0,9)
YShift(0,4)
ResYAnchor(47,11)
YShift(47,27)
YIPAnchor(47,35,9)
YShift(35,13)
YShift(35,38)
YShift(38,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Ghook">
/* Y direction */
ResYAnchor(24,9)
YShift(24,55)
YIPAnchor(7,61,24)
YShift(61,62)
ResYAnchor(35,3)
YShift(35,44)
YShift(35,1)
YAnchor(1)
YShift(1,40)

YShift(35,7)
YAnchor(7)
YShift(7,14)


/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Gsmallcap">
/* Y direction */
ResYAnchor(5,11)
YShift(5,30)
ResYAnchor(14,7)
YShift(14,21)
YIPAnchor(14,35,5)
YShift(35,36)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Gsmallcaphook">
/* Y direction */
YAnchor(6)
YShift(6,13)
ResYAnchor(23,11)
YShift(23,48)
ResYAnchor(32,7)
YShift(32,39)
YShift(32,36)
YShift(36,1)
YIPAnchor(23,53,32)
YShift(53,54)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="H">
/* VTTTalk Unicode 0x48 (H) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 6 8 */
/* CVT 7 2 */
/* Min and Max */
ResYAnchor(6,8)	/* min, CVT */
ResYAnchor(7,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(7,2,6)
YAnchor(2)
YShift(2,3) /*perpendicular to the stroke*/

/* Contour #2 */
YShift(7,8) /* max */
YShift(6,9) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="H.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 6 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(5)	/* min */
YAnchor(4,125)	/* max */

/* Contour #2 */
YShift(4,8) /* max */
YShift(5,9) /* min */


/* YDir: Stroke #0 */
YInterpolate(4,3,5)
YAnchor(3)
YShift(3,2) /*perpendicular to the stroke*/


Smooth()

    </glyphProgram>

    <glyphProgram name="Hbar">
/* Y direction */
ResYAnchor(10,8)
YShift(10,13)
ResYAnchor(11,2)
YShift(11,12)
YIPAnchor(11,6,10)
YShift(6,7)
YDist(6,2,&gt;=2)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Hbar.smcp">
/* Y direction */
YAnchor(6,10)
YShift(6,10)
YAnchor(7,125)
YShift(7,11)
YShift(7,15)
YAnchor(15)
YShift(15,14)
YDist(15,3,&gt;=2)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="I">
/* VTTTalk Unicode 0x49 (I) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 2 */
/* CVT 1 8 */
/* Min and Max */
ResYAnchor(1,8)	/* min, CVT */
ResYAnchor(0,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()

    </glyphProgram>

    <glyphProgram name="I.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0,125)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="Iota1">
/* Y direction */
ResYAnchor(0,0)
ResYAnchor(12,11)
YShift(12,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Ismallcap">
/* Y direction */
YAnchor(6,10)
YShift(6,11)
ResYAnchor(7,6)
YShift(7,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="J">
/* Y direction */
ResYAnchor(2,2)
ResYAnchor(7,9)
YShift(7,12)
YAnchor(12)
YShift(7,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="J.smcp">
/* Y direction */
YAnchor(1,125)
YAnchor(7)
YDist(7,12,&gt;=)
YShift(7,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="K">
/* Y direction */
ResYAnchor(2,8)
YShift(2,10)
ResYAnchor(3,2)
YShift(3,4)
YInterpolate(2,6,7,11,5,12,8,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="K.alt">
/* Y direction */
YAnchor(2,8)
ResYAnchor(3,2)
YIPAnchor(2,6,3)
YShift(6,7)
YShift(6,11)
YShift(11,12)
YAnchor(9,2)
YAnchor(10,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="K.alt2">
/* Y direction */
YAnchor(2,8)
YShift(2,10)
ResYAnchor(3,2)
YShift(3,9)
YInterpolate(2,6,11,7,8,12,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="K.smcp">
/* Y direction */
YAnchor(0,125)
YShift(0,4)
YAnchor(1)
YShift(1,10)
YInterpolate(1,6,7,11,5,12,8,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Khook">
/* Y direction */
YAnchor(2,18)
ResYAnchor(3,2)
YInterpolate(2,5,24,6,3)
YAnchor(4,18)
ResYAnchor(12,3)
YShift(12,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Koppa">
/* Y direction */
ResYAnchor(15,3)
YShift(15,22)
ResYAnchor(39,9)
YInterpolate(39,5,2,15)
YShift(5,3)
YShift(5,4)
YShift(5,6)
YShift(5,7)
YShift(2,1)
YShift(1,30)
YShift(2,31)
YShift(31,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="L">
/* VTTTalk Unicode 0x4c (L) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 6 8 */
/* CVT 7 2 */
/* Min and Max */
ResYAnchor(6,8)	/* min, CVT */
ResYAnchor(7,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(6,2) /*stroke, CVT of another stroke*/
YShift(2,3) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="L.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 6 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(2)	/* min */
YAnchor(4,125)	/* max */

/* YDir: Stroke #0 */
YShift(2,3) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(2,6)

Smooth()

    </glyphProgram>

    <glyphProgram name="Lambda">
/* Y direction */
ResYAnchor(2,8)
YShift(2,5)
ResYAnchor(3,2)
YShift(3,7)
YInterpolate(2,0,6,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Lambda.smcp">
/* Y direction */
YAnchor(8,125)
YShift(8,4)
YAnchor(9,10)
YShift(9,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Lslash">
/* VTTTalk Unicode 0x141 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 10 8 */
/* CVT 11 2 */
/* Min and Max */
ResYAnchor(10,8)	/* min, CVT */
ResYAnchor(11,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(10,6) /*stroke, CVT of another stroke*/
YShift(6,7) /*perpendicular to the stroke*/

/* Contour #0 */
YShift(11,0) /* max */
YShift(10,2) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="Lslash.smcp">
/* Y direction */
YAnchor(6,10)
YShift(6,2)
YShift(6,3)
YAnchor(7,125)
YIPAnchor(6,10,7)
YShift(10,11)
YShift(10,9)
YAnchor(9)
YShift(9,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Lsmallcap">
/* Y direction */
YAnchor(2)
YShift(2,3)
YShift(2,6)
ResYAnchor(4,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="M">
/* Y direction */
ResYAnchor(7,2)
YShift(7,0)
YShift(7,4)
YShift(7,12)
ResYAnchor(11,8)
YShift(11,5)
YShift(11,14)
YInterpolate(11,2,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="M.smcp">
/* Y direction */
YAnchor(0,125)
YShift(0,4)
YShift(0,7)
YShift(0,12)
YAnchor(5)
YShift(5,10)
YShift(5,14)
YInterpolate(5,2,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="M.unic">
/* Y direction */
ResYAnchor(6,3)
YShift(6,19)

ResYAnchor(30,3)
YShift(30,43)

ResYAnchor(51,2)
YAnchor(12)
YShift(12,37)
YShift(12,49)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="N">
/* Y direction */
ResYAnchor(5,8)
YShift(5,2)
ResYAnchor(7,2)
YShift(7,9)
YInterpolate(5,8,3,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="N.smcp">
/* Y direction */
YAnchor(0,125)
YShift(0,7)
YAnchor(1)
YShift(1,5)
YInterpolate(1,8,3,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="N.unic">
/* Y direction */
ResYAnchor(6,3)
YShift(6,19)
YAnchor(12)
YShift(12,25)
ResYAnchor(27,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Nhook">
/* Y direction */
YAnchor(6)
YShift(6,13)
ResYAnchor(18,2)
YShift(18,25)
YAnchor(20,18)
YInterpolate(20,26,21,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Nsmallcap">
/* Y direction */
ResYAnchor(6,6)
YShift(6,0)
YShift(6,1)
YAnchor(7,10)
YAnchor(8,10)
YShift(8,2)
YShift(8,3)
ResYAnchor(9,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="O">
/* VTTTalk Unicode 0x4f (O) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 6 9 */
/* CVT 17 3 */
/* Min and Max */
ResYAnchor(6,9)	/* min, CVT */
ResYAnchor(17,3)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(17,28) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(6,39) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="O.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */

/* Min and Max */
YAnchor(6,11)	/* min */
YAnchor(17,126)	/* max */

/* YDir: Stroke #0 */
YShift(17,28) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(6,39) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="O.ss06">
/* Y direction */
ResYAnchor(7,9)
YShift(7,45)
ResYAnchor(20,3)
YShift(20,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="OE">
/* Y direction */
YAnchor(0,3)
YShift(0,3)
YShift(0,7)
YShift(7,4)
YAnchor(25,9)
YShift(25,22)
YShift(25,18)
YShift(18,21)
ResYAnchor(38,8)
YShift(38,39)
YShift(38,41)
ResYAnchor(51,2)
YShift(51,40)
YShift(51,50)
YIPAnchor(51,46,38)
YShift(46,47)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="OE.smcp">
/* Y direction */
YAnchor(27,11)
YShift(27,17)
YAnchor(38,126)
YShift(38,6)
YShift(6,1)
YIPAnchor(27,52,38)
YShift(52,53)
YAnchor(48,10)
YShift(48,23)
YShift(48,45)
YShift(45,22)
YAnchor(49,125)
YShift(49,57)
YShift(57,56)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="OEsmallcap">
/* Y direction */
YAnchor(2,10)
YShift(2,3)
ResYAnchor(4,6)
YAnchor(5,10)
ResYAnchor(12,6)
ResYAnchor(16,11)
YShift(16,47)
ResYAnchor(27,7)
YShift(27,36)
ResYAnchor(31,6)
YShift(31,32)
YIPAnchor(5,10,31)
YShift(10,11)
YAnchor(52,10)
YShift(52,51)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="OI">
/* Y direction */
ResYAnchor(5,9)
YShift(5,18)
ResYAnchor(44,3)
YShift(44,31)
YInterpolate(5,26,23,44)
YAnchor(49)
ResYAnchor(54,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Ohorn">
/* Y direction */
ResYAnchor(16,9)
YShift(16,53)
ResYAnchor(28,3)
YShift(28,0)
YAnchor(0)
YShift(28,41)
YInterpolate(41,6,28)
YShift(6,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Omega">
/* Y direction */
ResYAnchor(29,3)
YShift(29,6)
ResYAnchor(50,18)
YShift(50,46)
YShift(50,51)
YShift(50,17)
YShift(17,52)
YShift(17,41)
YShift(41,47)
YShift(50,18)
YShift(18,40)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Omega.smcp">
/* Y direction */
YAnchor(29,126)
YShift(29,6)
YAnchor(49,10)
YShift(49,50)
YShift(50,17)
YShift(17,41)
YShift(17,18)
YShift(18,40)
YAnchor(51,10)
YShift(51,46)
YAnchor(52,10)
YShift(52,45)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Oopen">
/* Y direction */
ResYAnchor(25,3)
YShift(25,16)
YShift(25,20)
YAnchor(20)
ResYAnchor(36,9)
YShift(36,1)
YAnchor(1)
YShift(36,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Oslash">
/* VTTTalk Unicode 0xd8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 10 9 */
/* CVT 22 3 */
/* Min and Max */
ResYAnchor(10,9)	/* min, CVT */
ResYAnchor(22,3)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(22,35) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(10,47) /*perpendicular to the stroke*/

/* Contour #0 */
YShift(22,0) /* max */
YShift(10,1) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="Oslash.smcp">
/* Y direction */
ResYAnchor(6,11)
YShift(6,39)
YDownToGrid(45)
YShift(6,45)
YAnchor(45)
YAnchor(17,126)
YShift(17,28)
YUpToGrid(47)
YShift(17,47)
YAnchor(47)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="P">
/* VTTTalk Unicode 0x50 (P) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 14 8 */
/* CVT 15 2 */
/* Min and Max */
ResYAnchor(14,8)	/* min, CVT */
ResYAnchor(15,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(15,12) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(15,1,14)
YAnchor(1)
YShift(1,2) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="P.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 14 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(13)	/* min */
YAnchor(15,125)	/* max */

/* YDir: Stroke #0 */
YShift(15,12) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(15,1,13)
YAnchor(1)
YShift(1,2) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="Phi">
/* Y direction */
ResYAnchor(40,2)
YDist(40,11,&gt;=)
YShift(11,10)
YShift(11,30)
YShift(30,31)
ResYAnchor(41,8)
YDist(41,0,&gt;=)
YShift(0,1)
YShift(0,21)
YShift(21,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Phi.smcp">
/* Y direction */
YAnchor(42,10)
YDist(42,12,&gt;=)
YShift(12,30)
YAnchor(43,125)
YShift(43,0)
YAnchor(0)
YShift(0,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Phook">
/* Y direction */
YAnchor(31)
ResYAnchor(33,2)
YShift(33,8)
YAnchor(8)
YShift(33,34)
YShift(33,1)
YShift(1,30)
YIPAnchor(31,19,33)
YShift(19,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Pi">
/* VTTTalk Unicode 0x3a0 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 6 8 */
/* CVT 7 2 */
/* Min and Max */
ResYAnchor(6,8)	/* min, CVT */
ResYAnchor(7,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(7,4) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(6,2)

Smooth()

    </glyphProgram>

    <glyphProgram name="Pi.smcp">
/* Y direction */
YAnchor(3,125)
YShift(3,0)
YShift(3,2)
YShift(3,7)
YShift(3,11)
YAnchor(5)
YShift(5,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Psi">
/* Y direction */
ResYAnchor(13,2)
YShift(13,1)
YShift(13,29)
ResYAnchor(28,8)
YInterpolate(28,7,13)
YShift(7,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Psi.smcp">
/* Y direction */
YAnchor(13,125)
YShift(13,29)
YShift(29,0)
YAnchor(28,14)
YInterpolate(28,7,13)
YShift(7,6)
YShift(7,20)
YShift(20,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Q">
/* Y direction */
YAnchor(2)
ResYAnchor(10,9)
YShift(10,3)
YShift(10,43)
YShift(43,0)
ResYAnchor(21,3)
YShift(21,32)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Q.cn">
/* Y direction */
YAnchor(2)
YShift(2,1)
ResYAnchor(10,9)
YShift(10,3)
YShift(10,47)
YShift(47,0)
ResYAnchor(22,3)
YShift(22,35)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Q.smcp">
/* Y direction */
YAnchor(2)
YAnchor(21,126)
YShift(21,32)
YIPAnchor(21,10,2)
YShift(10,43)
YInterpolate(43,3,10)
YShift(3,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Q.ss06">
/* Y direction */
YAnchor(2)
YShift(2,1)
ResYAnchor(11,9)
YShift(11,49)
YShift(11,3)
YShift(3,0)
ResYAnchor(24,3)
YShift(24,37)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="R">
/* Y direction */
ResYAnchor(0,2)
YShift(0,22)
ResYAnchor(24,8)
YShift(24,25)
YShift(24,28)
YIPAnchor(0,11,24)
YShift(11,12)
YInterpolate(12,27,26,9,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="R.alt">
/* Y direction */
YAnchor(14,8)
ResYAnchor(15,2)
YShift(15,12)
YIPAnchor(14,1,15)
YShift(1,2)
YShift(1,26)
YShift(26,27)
YAnchor(38,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="R.smcp">
/* Y direction */
YAnchor(0,125)
YShift(0,23)
YAnchor(24)
YShift(24,26)
YIPAnchor(0,12,24)
YShift(12,13)
YInterpolate(13,27,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Rsmallcap">
/* Y direction */
YAnchor(2)
YShift(2,28)
ResYAnchor(4,6)
YShift(4,26)
YIPAnchor(4,15,2)
YShift(15,16)
YInterpolate(15,0,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Rsmallcapinv">
/* Y direction */
ResYAnchor(2,6)
YShift(2,7)
YAnchor(5)
YShift(5,8)
YIPAnchor(2,18,5)
YShift(18,19)
YInterpolate(18,0,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Rturnsuper">
/* Y direction */
YAnchor(5)
YShift(5,8)
YAnchor(6,2)
YShift(6,2)
YIPAnchor(5,16,6)
YShift(16,1)
YShift(16,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Rx">
/* Y direction */
ResYAnchor(10,2)
YShift(10,32)
YAnchor(34,8)
YShift(34,6)
YShift(6,0)
YIPAnchor(34,21,10)
YShift(21,22)
YShift(21,1)
YShift(1,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="S">
/* Y direction */
ResYAnchor(15,3)
YShift(15,20)
YAnchor(20)
YShift(15,24)
ResYAnchor(43,9)
YShift(43,49)
YAnchor(49)
YShift(43,54)
YInterpolate(43,38,10,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="S.smcp">
/* Y direction */
YAnchor(15,126)
YDist(15,20,&gt;=)
YShift(15,24)
YAnchor(43)
YDist(43,49,&gt;=)
YShift(43,54)
YInterpolate(43,38,10,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Sampi">
/* Y direction */
ResYAnchor(6,3)
YDist(6,0,&gt;=)
YShift(6,33)
YAnchor(19)
YShift(19,20)
YInterpolate(19,45,42,44,41,43,38,40,39,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Schwa">
/* VTTTalk Unicode 0x18f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 9 */
/* CVT 34 3 */
/* Min and Max */
ResYAnchor(0,9)	/* min, CVT */
ResYAnchor(34,3)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(34,26) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(34,9,0)
YAnchor(9)
YShift(9,6) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YShift(0,15) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="Sigma">
/* Y direction */
ResYAnchor(11,8)
YShift(11,2)
YShift(2,3)
YShift(3,12)
ResYAnchor(15,2)
YShift(15,7)
YShift(7,6)
YShift(6,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Sigma.smcp">
/* Y direction */
YAnchor(2,10)
YShift(2,3)
YShift(3,12)
YShift(2,10)
YAnchor(7,125)
YShift(7,14)
YShift(7,16)
YShift(16,6)
YInterpolate(10,13,8,9,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Stigma">
/* Y direction */
YAnchor(0)
YShift(0,1)
ResYAnchor(20,3)
YDist(20,25,&gt;=)
YShift(20,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="T">
/* Y direction */
ResYAnchor(1,8)
ResYAnchor(7,2)
YShift(7,6)
YShift(7,3)
YShift(3,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="T.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0,125)	/* max */

/* YDir: Stroke #0 */
YInterpolate(0,7,1)
YAnchor(7)
YShift(7,6) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="Tbar">
/* VTTTalk Unicode 0x166 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 8 */
/* CVT 7 2 */
/* Min and Max */
ResYAnchor(1,8)	/* min, CVT */
ResYAnchor(7,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(7,6) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YAnchor(11)
YShift(11,10) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(7,3)

Smooth()

    </glyphProgram>

    <glyphProgram name="Theta">
/* VTTTalk Unicode 0x398 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 10 9 */
/* CVT 22 3 */
/* Min and Max */
ResYAnchor(10,9)	/* min, CVT */
ResYAnchor(22,3)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(22,35) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(22,2,10)
YAnchor(2)
YShift(2,3) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YShift(10,47) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="Theta.smcp">
/* Y direction */
YAnchor(10,11)
YShift(10,43)
YAnchor(21,126)
YShift(21,32)
YIPAnchor(10,2,21)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Thook">
/* Y direction */
YAnchor(2)
ResYAnchor(7,2)
YShift(7,3)
YShift(7,16)
YAnchor(16)
YShift(7,25)
YShift(7,8)
YShift(8,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Thorn">
/* VTTTalk Unicode 0xde */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 2 */
/* CVT 3 8 */
/* Min and Max */
ResYAnchor(3,8)	/* min, CVT */
ResYAnchor(0,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(0,4,3)
YAnchor(4)
YShift(4,25) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(0,14,3)
YAnchor(14)
YShift(14,15) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="Thorn.smcp">
/* Y direction */
YAnchor(0,10)
YShift(0,4)
YAnchor(4)
YShift(4,5)
YAnchor(1,125)
YShift(1,16)
YAnchor(16)
YShift(16,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Tonefive">
/* Y direction */
ResYAnchor(0,4)
YAnchor(23)
YDist(23,29,&gt;=)
YShift(23,33)
YIPAnchor(0,6,13,23)
YShift(6,2)
YShift(2,9)
YShift(13,43)
YShift(43,4)
YShift(4,5)
YInterpolate(43,10,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Tonesix">
/* Y direction */
YAnchor(29,18)
YShift(29,32)
ResYAnchor(31,2)
YShift(31,1)
YIPAnchor(29,18,31)
YShift(18,42)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Tonetwo">
/* Y direction */
ResYAnchor(16,9)
YShift(16,5)
YShift(16,10)
YAnchor(10)
ResYAnchor(46,3)
YShift(46,36)
YShift(46,40)
YAnchor(40)
YInterpolate(16,21,51,46)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Trthook">
/* Y direction */
ResYAnchor(3,2)
YShift(3,2)
YShift(3,14)
YAnchor(7)
YShift(7,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="U">
/* VTTTalk Unicode 0x55 (U) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 6 9 */
/* CVT 11 2 */
/* Min and Max */
ResYAnchor(6,9)	/* min, CVT */
ResYAnchor(11,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(6,17) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(11,1)

Smooth()

    </glyphProgram>

    <glyphProgram name="U.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 6 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(6)	/* min */
YAnchor(0,125)	/* max */

/* YDir: Stroke #0 */
YShift(6,17) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(0,12)

Smooth()

    </glyphProgram>

    <glyphProgram name="U.unic">
/* Y direction */
ResYAnchor(1,2)
YShift(1,18)
YAnchor(4,18)
ResYAnchor(11,9)
YShift(11,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Uhorn">
/* Y direction */
ResYAnchor(16,9)
YShift(16,27)
ResYAnchor(21,2)
YShift(21,0)
YAnchor(0)
YShift(21,10)
YShift(10,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Uogonek">
/* Y direction */
ResYAnchor(6,9)
YShift(6,17)
YInterpolate(17,22,23,6)
ResYAnchor(11,2)
YShift(11,1)
YAnchor(37)
YShift(37,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Uogonek.smcp">
/* Y direction */
YAnchor(0,125)
YShift(0,12)
ResYAnchor(6,11)
YShift(6,17)
YShift(6,22)
YShift(22,23)
YAnchor(37)
YShift(37,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Upsilon2">
/* Y direction */
ResYAnchor(29,9)
YShift(29,6)
ResYAnchor(46,2)
YShift(46,18)
YShift(46,40)
YShift(46,53)
YShift(46,41)
YShift(41,17)
YShift(41,47)
YShift(41,52)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="V">
/* Y direction */
ResYAnchor(8,8)
YShift(8,3)
ResYAnchor(9,2)
YShift(9,1)
YInterpolate(8,6,0,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="V.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 8 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(3)	/* min */
YAnchor(1,125)	/* max */

/* Contour #1 */
YShift(1,5) /* max */
YShift(3,7) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="Vcursive">
/* Y direction */
ResYAnchor(0,9)
YShift(0,11)
ResYAnchor(28,3)
ResYAnchor(6,2)
YShift(28,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="W">
/* Y direction */
ResYAnchor(9,8)
YShift(9,4)
YShift(9,14)
YShift(9,18)
YShift(9,19)
ResYAnchor(10,2)
YShift(10,1)
YShift(10,12)
YShift(10,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="W.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 9 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(4)	/* min */
YAnchor(1,125)	/* max */

/* Contour #1 */
YShift(1,6) /* max */
YShift(4,8) /* min */

/* Contour #2 */
YShift(1,12) /* max */
YShift(4,14) /* min */

/* Contour #3 */
YShift(1,16) /* max */
YShift(4,18) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="X">
/* Y direction */
ResYAnchor(9,8)
YShift(9,6)
ResYAnchor(11,2)
YShift(11,3)
YInterpolate(9,7,4,10,1,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="X.smcp">
/* Y direction */
YAnchor(0,125)
YShift(0,3)
YAnchor(5)
YShift(5,9)
YInterpolate(5,7,10,4,1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Xi">
/* VTTTalk Unicode 0x39e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 8 */
/* CVT 9 2 */
/* Min and Max */
ResYAnchor(0,8)	/* min, CVT */
ResYAnchor(9,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(9,8) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(9,4,0)
YAnchor(4)
YShift(4,5) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YShift(0,1) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="Xi.smcp">
/* Y direction */
YAnchor(2,10)
YShift(2,3)
YAnchor(11,125)
YShift(11,10)
YIPAnchor(2,6,11)
YShift(6,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Y">
/* Y direction */
ResYAnchor(6,8)
ResYAnchor(8,2)
YShift(8,3)
YInterpolate(6,4,7,1,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Y.smcp">
/* Y direction */
YAnchor(1,125)
YShift(1,5)
ResYAnchor(12,10)
YInterpolate(12,8,7,3,4,6,0,10,13,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="YR">
/* Y direction */
ResYAnchor(4,2)
YShift(4,0)
YDist(4,1,&gt;=)
YShift(4,26)
YIPAnchor(4,15,28)
YShift(15,16)
YInterpolate(16,30,15)
YAnchor(28,18)
YAnchor(29)
YShift(29,32)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Yhook">
/* Y direction */
ResYAnchor(6,3)
YShift(6,13)
ResYAnchor(21,2)
YAnchor(28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Ysmallcap">
/* Y direction */
YAnchor(1)
YShift(1,5)
YAnchor(12,10)
YInterpolate(12,4,8,10,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Z">
/* Y direction */
ResYAnchor(6,8)
YShift(6,2)
YShift(2,3)
YShift(3,7)
ResYAnchor(13,2)
YShift(13,9)
YShift(13,12)
YShift(12,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Z.smcp">
/* Y direction */
YAnchor(2)
YShift(2,6)
YShift(2,3)
YShift(3,7)
YAnchor(8,125)
YShift(8,13)
YAnchor(13)
YShift(13,12)
YShift(12,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Zbar">
/* Y direction */
YAnchor(6)
YShift(6,10)
YShift(6,7)
YShift(7,11)
ResYAnchor(12,2)
YIPAnchor(12,17,2,6)
YShift(17,16)
YShift(16,8)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="a">
/* Y direction */
ResYAnchor(15,7)
YShift(15,5)
YShift(15,9)
ResYAnchor(25,10)
YShift(25,24)
ResYAnchor(49,11)
YShift(49,39)
YIPAnchor(15,58,49)
YShift(58,30)
YInterpolate(39,44,43,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="a.cn">
/* Y direction */
ResYAnchor(15,6)
YShift(15,5)

YAnchor(25,18)
ResYAnchor(48,11)
YShift(48,38)

YIPAnchor(15,30,48)
YShift(30,57)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="accountof">
/* Y direction */
YAnchor(12,3)
YShift(12,4)
YShift(12,24)
YAnchor(24)
YShift(24,21)
YAnchor(21)
YIPAnchor(24,33,12)
YShift(33,32)
YShift(12,86)
YAnchor(86)
YShift(86,83)
YAnchor(49,9)
YShift(49,75)
YShift(49,58)
YAnchor(58)
YShift(58,66)
YShift(49,84)
YAnchor(84)
YShift(84,85)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="acute">
/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="acutecomb">
/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="acutedotcomb">
/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=2)
YDist(0,13,&gt;=)
YShift(13,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="acutedotcomb.lc">
/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=2)
YDist(0,13,&gt;=)
YShift(13,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="acutesubnosp">
/* Y direction */
YAnchor(1)
YDist(1,0,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="addresssubject">
/* Y direction */
YAnchor(12,3)
YShift(12,4)
YShift(12,24)
YAnchor(24)
YShift(24,21)
YShift(24,41)
YShift(12,97)
YAnchor(97)
YShift(97,94)
YAnchor(49,9)
YShift(49,57)
YShift(49,72)
YAnchor(72)
YShift(72,79)
YShift(49,95)
YAnchor(95)
YShift(95,96)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ae">
/* Y direction */
ResYAnchor(15,7)
YShift(15,5)
YShift(15,62)
YShift(62,76)
ResYAnchor(41,11)
YShift(41,31)
YIPAnchor(15,69,23,41)
YInterpolate(23,20,37,0,41)
YShift(69,70)
YShift(23,50)
YShift(41,51)
YShift(51,87)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="afii300">
/* Y direction */
YAnchor(14)
YShift(14,1)
YShift(14,8)
YShift(14,0)
YShift(0,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="afii57596">
/* Y direction */
YAnchor(14)
YShift(14,1)
YShift(14,8)
YShift(14,0)
YShift(0,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="afii57598">
/* Y direction */
YAnchor(0)
YAnchor(7)
YShift(7,10)
YDist(7,8,&gt;=)
YShift(8,5)
YInterpolate(8,4,9,2,1,11,6,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="afii57636">
/* Y direction */
ResYAnchor(0,6)
YShift(0,15)
YShift(0,28)
YAnchor(17,10)
YIPAnchor(17,8,20,0)
YShift(17,19)
YShift(19,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="afii61664">
/* VTTTalk Unicode 0x200c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="alpha">
/* Y direction */
ResYAnchor(6,7)
YShift(6,40)
ResYAnchor(18,11)
YShift(18,29)
YShift(18,59)
YShift(59,52)
YAnchor(46,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="alpha.alt">
/* Y direction */
ResYAnchor(6,7)
YShift(6,39)
ResYAnchor(17,11)
YShift(17,28)
YAnchor(45,6)
YAnchor(48,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ampersand">
/* Y direction */
ResYAnchor(26,3)
YShift(26,7)
ResYAnchor(59,19)
YShift(59,17)
YAnchor(17)
YShift(59,43)
YShift(59,48)
YAnchor(48)
YInterpolate(59,35,18,0,15,34,1,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ampersand.smcp">
/* Y direction */
ResYAnchor(0,11)
YShift(0,51)
YAnchor(25,10)
YAnchor(34,126)
YShift(34,16)
YIPAnchor(0,56,34)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="anglesupnosp">
/* Y direction */
YAnchor(6)
YShift(6,2)
YShift(6,3)
YDist(6,4,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="angstrom">
/* Y direction */
YAnchor(1,8)
ResYAnchor(3,2)
YShift(3,7)
YShift(7,6)
YShift(6,0)
YIPAnchor(1,12,3)
YShift(12,13)
YUpToGrid(24)
YShift(3,24)
YAnchor(24)
YShift(24,30)
YShift(24,18)
YAnchor(18)
YShift(18,36)
YAnchor(5,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="aogonek">
/* Y direction */
ResYAnchor(15,7)
YShift(15,5)
YShift(15,9)
ResYAnchor(25,10)
YShift(25,60)
YShift(60,59)
ResYAnchor(49,11)
YShift(49,39)
ResYAnchor(74,15)
YShift(74,67)
YIPAnchor(15,58,74)
YShift(58,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="approxequal">
/* Y direction */
YAnchor(43)
YShift(43,36)
YDist(43,30,&gt;=2)
YShift(30,49)
YDist(30,17,&gt;=)
YShift(17,10)
YDist(17,4,&gt;=2)
YShift(4,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="archdblsubnosp">
/* Y direction */
YAnchor(12)
YShift(12,4)
YDist(12,1,&gt;=2)
YShift(1,7)
YShift(1,16)
YShift(1,23)
YAnchor(23)
YShift(12,28)
YAnchor(28)
YShift(28,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="arrowdown">
/* Y direction */
YAnchor(7)
YShift(7,2)
YAnchor(8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="arrowup">
/* Y direction */
YAnchor(7)
YShift(7,2)
YAnchor(8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="asciicircum">
/* Y direction */
YAnchor(3,2)
YDist(3,2)
YShift(2,5)
YInterpolate(2,0,6,3)
YShift(3,7)
YShift(7,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="asciitilde">
/* Y direction */
YAnchor(6)
YShift(6,16)
YAnchor(16)
YShift(6,28)
YDist(6,22,&gt;=2)
YShift(22,0)
YAnchor(0)
YShift(22,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ascript">
/* Y direction */
ResYAnchor(6,7)
YShift(6,40)
ResYAnchor(18,11)
YShift(18,29)
ResYAnchor(45,6)
ResYAnchor(59,11)
YShift(59,52)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ascriptturn">
/* Y direction */
ResYAnchor(6,11)
YShift(6,40)
ResYAnchor(18,6)
YShift(18,29)
YAnchor(45)
ResYAnchor(59,6)
YShift(59,52)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="asterisk">
/* Y direction */
ResYAnchor(6,2)
YDist(6,12)
YShift(12,14)
YInterpolate(12,13,1,7,4,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="at">
/* Y direction */
YAnchor(48)
YShift(48,41)
YAnchor(60)
YShift(60,29)
YShift(29,93)
YAnchor(93)
YShift(93,11)
YShift(93,100)
YShift(100,97)
ResYAnchor(82,19)
YShift(82,71)
YShift(82,5)
YShift(5,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="aturn">
/* Y direction */
ResYAnchor(15,11)
YShift(15,5)
ResYAnchor(25,6)
ResYAnchor(49,7)
YShift(49,39)
YIPAnchor(49,28,15)
YShift(28,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="b">
/* Y direction */
ResYAnchor(0,0)
ResYAnchor(4,10)
ResYAnchor(11,11)
YShift(11,43)
ResYAnchor(22,7)
YShift(22,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="b.ss06">
/* Y direction */
ResYAnchor(0,0)
ResYAnchor(4,10)
ResYAnchor(11,11)
YShift(11,43)
ResYAnchor(22,7)
YShift(22,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="babygamma">
/* Y direction */
ResYAnchor(4,7)
YShift(4,32)

ResYAnchor(67,7)
YShift(67,39)


ResYAnchor(18,11)
YShift(18,53)

YShift(18,19,52)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="backslash">
/* VTTTalk Unicode 0x5c (\) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 16 */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()

    </glyphProgram>

    <glyphProgram name="bar">
/* VTTTalk Unicode 0x7c (|) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16 */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()

    </glyphProgram>

    <glyphProgram name="barmidlongnosp">
/* Y direction */
YAnchor(2)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="bbar_uni1ABE">
/* Y direction */
ResYAnchor(0,0)
YAnchor(4,10)
ResYAnchor(11,11)
YShift(11,44)
ResYAnchor(22,7)
YShift(22,33)
YShift(22,50)
YAnchor(50)
YShift(50,49)
YUpToGrid(84)
YShift(22,84)
YAnchor(84)
YShift(84,69)
YShift(84,53)
YShift(53,68)
YShift(84,76)
YAnchor(76)
YShift(76,75)
YShift(76,61)
YAnchor(61)
YShift(61,62)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="beta">
/* Y direction */
ResYAnchor(9,11)
YShift(9,19)
YAnchor(29,3)
YShift(29,48)
YIPAnchor(9,28,29)
YShift(28,39)
YInterpolate(28,38,0,39)
YAnchor(53)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="beta1">
/* Y direction */
YAnchor(0)
YShift(0,55)
YDist(0,32,&gt;=)
YShift(32,39)
ResYAnchor(10,11)
YShift(10,64)
ResYAnchor(23,1)
YShift(23,46)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="bhook">
/* Y direction */
ResYAnchor(7,1)
YShift(7,14)

YAnchor(23)
ResYAnchor(30,11)
YShift(30,62)

ResYAnchor(41,7)
YShift(41,52)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="blackCircle">
/* VTTTalk Unicode 0x25cf */
/* ACT generated Tue Sep 16 09:34:43 2025 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="blackSquare">
/* VTTTalk Unicode 0x25a0 */
/* ACT generated Tue Sep 16 09:34:43 2025 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18 */
/* Min and Max */
ResYAnchor(0,18)	/* min, CVT */
YAnchor(1)	/* max */

/* CVTs - beginning */
/* CVTs - end */

    </glyphProgram>

    <glyphProgram name="braceleft">
/* Y direction */
YAnchor(0)
YShift(0,1)
YAnchor(19)
YShift(19,18)
YIPAnchor(0,28,19)
YShift(28,10)
YInterpolate(28,9,29,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="braceright">
/* Y direction */
YAnchor(1)
YShift(1,0)
YAnchor(20)
YShift(20,21)
YIPAnchor(1,31,20)
YShift(31,10)
YInterpolate(31,11,30,10)
/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="bracketleft">
/* VTTTalk Unicode 0x5b ([) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(6)	/* min */
YAnchor(7)	/* max */

/* YDir: Stroke #0 */
YShift(7,2) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(6,3) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="bracketright">
/* VTTTalk Unicode 0x5d (]) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(4)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YShift(1,0) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(4,5) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="breve">
/* Y direction */
YAnchor(5)
YShift(5,12)
YDist(5,9,&gt;=2)
YShift(9,1)
YAnchor(1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="breveacutecomb">
/* Y direction */
YAnchor(5)
YShift(5,13)
YUpToGrid(10)
YDist(5,10,&gt;=)
YShift(10,0)
YDist(10,19)
YDist(19,17,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="brevegravecomb">
/* Y direction */
YAnchor(5)
YShift(5,13)
YUpToGrid(0)
YDist(5,0,&gt;=)
YShift(0,10)
YUpToGrid(19)
YDist(0,19)
YDist(19,18,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="brevehookcomb">
/* Y direction */
YAnchor(5,16)
YUpToGrid(9)
YShift(5,9)
YAnchor(9)
YShift(9,0)
YShift(5,13)
YShift(9,17)
YAnchor(17)
YShift(17,18)
YShift(18,37)
YShift(17,28)
YAnchor(28)
YShift(28,27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="breveinvnosp">
/* Y direction */
YAnchor(1)
YDist(1,8)
YDist(1,13,&gt;=2)
YShift(13,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="breveinvsubnosp">
/* Y direction */
YAnchor(13)
YShift(13,5)
YDist(13,1,&gt;=2)
YShift(1,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="breveinvsubnosp_uni1ABD">
/* Y direction */
YAnchor(45)
YShift(45,37)
YShift(45,8)
YShift(8,24)
YShift(45,40)
YAnchor(40)
YShift(40,0)
YShift(40,33)
YShift(33,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="brevenosp">
/* Y direction */
YAnchor(5)
YShift(5,13)
YDist(5,8,&gt;=2)
YShift(8,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="brevesubnosp">
/* Y direction */
YAnchor(5)
YShift(5,13)
YDist(5,0,&gt;=2)
YShift(0,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="brevetildecomb">
/* Y direction */
YAnchor(5)
YShift(5,13)
YDist(5,9,&gt;=)
YShift(9,0)
YUpToGrid(21)
YShift(9,21)
YAnchor(21)
YShift(21,37)
YShift(21,28)
YShift(28,29)
YShift(21,33)
YAnchor(33)
YShift(33,25)
YShift(33,16)
YShift(16,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="bridgeinvsubnosp">
/* Y direction */
YAnchor(6)
YShift(6,3)
YShift(6,2)
YAnchor(2)
YShift(2,10)
YAnchor(10)
YDist(6,7,&gt;=2)
YShift(7,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="bridgesubnosp">
/* Y direction */
YAnchor(6)
YShift(6,2)
YAnchor(2)
YShift(6,1)
YShift(6,10)
YAnchor(10)
YDist(6,4,&gt;=)
YShift(4,9)
YAnchor(9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="brokenbar">
/* Y direction */
YAnchor(7,2)
YDist(7,6)
YDist(6,2,&gt;=)
YDist(2,1,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="btopbar">
/* Y direction */
YAnchor(0)
YShift(0,4)
YAnchor(3)
YShift(3,2)
ResYAnchor(15,9)
YShift(15,7)
YAnchor(7)
YShift(15,48)
YIPAnchor(3,26,15)
YShift(26,37)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="bullet">
/* Y direction */
YAnchor(11)
YDist(11,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="bullseye">
/* Y direction */
ResYAnchor(18,9)
YShift(18,55)
ResYAnchor(30,3)
YShift(30,43)
YIPAnchor(30,9,18)
YShift(9,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="c">
/* Y direction */
ResYAnchor(9,11)
YShift(9,0)
YShift(9,4)
YAnchor(4)
ResYAnchor(20,7)
YShift(20,25)
YAnchor(25)
YShift(20,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="c.ss06">
/* Y direction */
ResYAnchor(9,11)
YShift(9,0)
YShift(9,4)
YAnchor(4)
ResYAnchor(20,7)
YShift(20,25)
YAnchor(25)
YShift(20,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="c.ss07">
/* Y direction */
ResYAnchor(9,11)
YShift(9,0)
YShift(9,4)
YAnchor(4)
YShift(4,5)
ResYAnchor(20,7)
YShift(20,29)
YShift(20,25)
YAnchor(25)
YShift(25,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="cadauna">
/* Y direction */
ResYAnchor(9,5)
YShift(9,17)
YShift(9,63)
YAnchor(63)
YDist(9,0,&gt;=)
YShift(0,26)
ResYAnchor(34,13)
YShift(34,45)
YShift(34,59)
YAnchor(59)
YShift(34,61)
YAnchor(61)
YDist(34,39,&gt;=)
YShift(39,56)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="candrabindunosp">
/* Y direction */
YAnchor(5,16)
YDist(5,9,&gt;=2)
YShift(9,0)
YShift(5,13)
YUpToGrid(25)
YShift(13,25)
YAnchor(25)
YShift(25,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="caret">
/* Y direction */
YAnchor(7)
YShift(7,3)
YShift(7,1)
YAnchor(1)
YShift(1,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="caretinsertionpoint">
/* Y direction */
YAnchor(3)
YShift(3,0)
YAnchor(4)
YShift(4,7)
YShift(4,1)
YShift(1,2)
YInterpolate(4,5,6,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="caron">
/* Y direction */
YAnchor(0)
YShift(0,2)
YShift(0,4)
YShift(0,7)
YDist(0,6,&gt;=2)
YInterpolate(6,1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="carondotcomb">
/* Y direction */
YAnchor(18)
YDist(18,20,&gt;=2)
YShift(20,19)
YInterpolate(18,13,20)
YShift(20,14)
YShift(14,16)
YShift(14,9)
YAnchor(9)
YShift(9,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="carondotcomb.lc">
/* Y direction */
YAnchor(6)
YShift(6,0)
YAnchor(0)
YShift(0,2)
YInterpolate(6,1,0)
YUpToGrid(18)
YShift(0,18)
YAnchor(18)
YShift(18,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="caronnosp">
/* Y direction */
YAnchor(6)
YDist(6,0,&gt;=2)
YShift(0,2)
YInterpolate(6,1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="caronsubnosp">
/* Y direction */
YAnchor(6)
YDelta(6,-1@9..12)
YDist(6,0,&gt;=2)
YShift(0,2)
YInterpolate(6,1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ccurl">
/* Y direction */
ResYAnchor(30,11)
YShift(30,0)
YShift(30,14)
YAnchor(14)
YShift(14,15)
ResYAnchor(41,7)
YDist(41,46)
YShift(41,50)
YIPAnchor(30,7,41)
YShift(7,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="cedilla">
/* Y direction */
YAnchor(0,18)
YShift(0,2)
YShift(0,19)
YDist(0,10,&gt;=2)
YShift(10,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="cedillanosp">
/* VTTTalk Unicode 0x327 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18 */
/* Min and Max */
YAnchor(10)	/* min */
ResYAnchor(0,18)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()

    </glyphProgram>

    <glyphProgram name="cent">
/* Y direction */
ResYAnchor(17,13)
YDist(17,6,&gt;=)
YDist(17,12,&gt;=)
YShift(17,8)
YInterpolate(8,4,7,17)
ResYAnchor(28,7)
YDist(28,3,&gt;=)
YDist(28,33,&gt;=)
YShift(28,37)
YInterpolate(37,1,2,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="charactertie">
/* Y direction */
YAnchor(9)
YShift(9,0)
YDist(9,3,&gt;=)
YShift(3,4)
YShift(3,14)
YAnchor(14)
YShift(14,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="chi.alt">
/* Y direction */
ResYAnchor(3,6)
ResYAnchor(4,7)
YShift(4,31)
YAnchor(21)
YShift(21,1)
YAnchor(1)
YShift(21,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="chook">
/* Y direction */
ResYAnchor(27,11)
YShift(27,18)
YShift(27,22)
YAnchor(22)
ResYAnchor(38,7)
YShift(38,47)
YShift(38,1)
YAnchor(1)
YShift(1,43)

YShift(38,6)
YAnchor(6)

YShift(6,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="circumflex">
/* Y direction */
YAnchor(8)
YDist(8,3,&gt;=2)
YShift(3,1)
YInterpolate(3,4,8)
YShift(3,5)
YShift(5,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="circumflexacutecomb">
/* Y direction */
YAnchor(6)
YShift(6,4)
YDist(6,1,&gt;=2)
YInterpolate(6,5,1)
YShift(6,7)
YAnchor(7)
YDist(7,8,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="circumflexgravecomb">
/* Y direction */
YAnchor(4)
YShift(4,2)
YDist(4,6,&gt;=2)
YInterpolate(6,3,4)
YShift(4,8)
YAnchor(8)
YDist(8,7,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="circumflexhookcomb">
/* Y direction */
YAnchor(4)
YShift(4,2)
YDist(4,6,&gt;=2)
YInterpolate(4,3,6)
YShift(4,8)
YShift(8,9)
YShift(8,26)
YDist(8,18,&gt;=)
YShift(18,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="circumflexsubnosp">
/* Y direction */
YAnchor(8)
YDist(8,3,&gt;=2)
YShift(3,1)
YInterpolate(3,4,8)
YShift(3,5)
YShift(5,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="circumflextildecomb">
/* Y direction */
YAnchor(4)
YDist(4,6,&gt;=2)
YShift(6,12)
YShift(12,28)
YShift(12,19)
YShift(19,20)
YDist(12,24,&gt;=)
YShift(24,16)
YShift(24,7)
YShift(7,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="coloncurrency">
/* Y direction */
ResYAnchor(13,13)
YDist(13,8,&gt;=)
YShift(13,45)
YDist(13,1,&gt;=)
YShift(1,5)
ResYAnchor(24,5)
YDist(24,29,&gt;=)
YShift(24,33)
YDist(24,7,&gt;=)
YShift(7,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="comma">
/* Y direction */
YAnchor(0)
YDist(0,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="commaaboverightcomb">
/* Y direction */
YAnchor(10)
YDist(10,5,&gt;=3)
YShift(5,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="commaaccent">
/* Y direction */
YAnchor(9)
YDist(9,4,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="commaaccentrotate">
/* Y direction */
YAnchor(0)
YDist(0,5,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="commasuprevnosp">
/* Y direction */
YAnchor(6)
YDist(6,0,&gt;=2)
YShift(6,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="commaturnsupnosp">
/* Y direction */
YAnchor(0)
YDist(0,5,&gt;=2)
YShift(5,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="copyright">
/* Y direction */
ResYAnchor(57,3)
YShift(57,47)
YShift(47,13)
YShift(13,20)
YAnchor(67)
YShift(67,37)
YShift(37,4)
YShift(4,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="crossbar">
/* Y direction */
YAnchor(2)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="cruzeiro">
/* Y direction */
ResYAnchor(28,13)
YShift(28,1)
YDist(28,23,&gt;=)
YShift(28,60)
ResYAnchor(39,5)
YDist(39,44,&gt;=)
YShift(39,48)
YIPAnchor(28,3,39)
YShift(3,20)
YAnchor(20)
YShift(20,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="cstretch">
/* Y direction */
ResYAnchor(9,15)
YShift(9,0)
YDist(9,4,&gt;=)
ResYAnchor(20,7)
YDist(20,25,&gt;=)
YShift(20,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="currency">
/* VTTTalk Unicode 0xa4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 35 13 */
/* Min and Max */
ResYAnchor(35,13)	/* min, CVT */
/* YDir: Stroke #1 */
YShift(35,5) /*perpendicular to the stroke*/


YAnchor(25)
YShift(25,15) /*perpendicular to the stroke*/


Smooth()

    </glyphProgram>

    <glyphProgram name="cyrillichook">
/* Y direction */
YAnchor(0)
YDist(0,6,&gt;=)
YShift(6,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="cyrillichookleft">
/* Y direction */
YAnchor(1)
YDist(1,8,&gt;=)
YShift(8,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="cyrillictic">
/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="d">
/* Y direction */
ResYAnchor(1,0)
ResYAnchor(11,7)
YShift(11,43)
ResYAnchor(22,11)
YShift(22,4)
YAnchor(4)
YShift(22,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="d.ss06">
/* Y direction */
ResYAnchor(1,0)
ResYAnchor(11,7)
YShift(11,43)
ResYAnchor(22,11)
YShift(22,4)
YAnchor(4)
YShift(22,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dagger">
/* VTTTalk Unicode 0x2020 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 18 */
/* CVT 3 16 */
/* Min and Max */
ResYAnchor(2,18)	/* min, CVT */
ResYAnchor(3,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(3,7,2)
YAnchor(7)
YShift(7,6) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="daggerdbl">
/* VTTTalk Unicode 0x2021 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 3 16 */
/* CVT 10 18 */
/* Min and Max */
YAnchor(1)	/* min */
ResYAnchor(3,2)	/* max, CVT */

/* CVTs - beginning */
ResYAnchor(10,18)  /*knot, CVT*/ 
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(3,7,1)
YAnchor(7)
YShift(7,6) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(10,11) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="dasiaoxia">
/* Y direction */
YAnchor(15)
YShift(15,0)
YAnchor(0)
YDist(15,10,&gt;=2)
YShift(10,2)
YAnchor(2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dblapostrophe">
/* VTTTalk Unicode 0x2ee */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(5)	/* min */
YAnchor(0)	/* max */

/* Contour #1 */
YShift(0,11) /* max */
YShift(5,16) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="dcroat">
/* Y direction */
ResYAnchor(1,0)
ResYAnchor(11,7)
YShift(11,43)
YDist(11,50,&gt;=)
YShift(50,51)
ResYAnchor(22,11)
YShift(22,4)
YAnchor(4)
YShift(22,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dcroat_uni1ABE">
/* Y direction */
ResYAnchor(1,0)
YAnchor(4,10)
ResYAnchor(11,7)
YShift(11,43)
YDist(11,50)
YShift(50,51)
YDist(11,52)
YShift(52,67)
YDist(52,60,&gt;=)
YShift(60,61)
YShift(52,83)
YShift(83,68)
YDist(83,75,&gt;=)
YShift(75,74)
ResYAnchor(22,11)
YShift(22,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="degree">
/* Y direction */
YAnchor(4,3)
YShift(4,25)
YDist(4,12,&gt;=3)
YShift(12,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="degreecentigrade">
/* Y direction */
ResYAnchor(34,13)
YDist(34,29,&gt;=)
YShift(34,66)
ResYAnchor(45,5)
YDist(45,50,&gt;=)
YShift(45,54)
YShift(45,4)
YShift(4,26)
YDist(4,12,&gt;=)
YShift(12,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="degreefarenheit">
/* Y direction */
YAnchor(31,12)
ResYAnchor(32,4)
YShift(32,40)
YShift(32,4)
YAnchor(4)
YShift(4,26)
YDist(4,12,&gt;=)
YShift(12,19)
YIPAnchor(31,36,32)
YShift(36,35)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="delta">
/* Y direction */
ResYAnchor(4,1)
YShift(4,11)
ResYAnchor(30,11)
YShift(30,51)
YInterpolate(4,20,40,62,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="delta.alt">
/* Y direction */
ResYAnchor(0,2)
YShift(0,3)
ResYAnchor(17,11)
YShift(17,43)
YIPAnchor(17,28,0)
YShift(28,31)
YShift(28,56)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="deltaturn">
/* Y direction */
YAnchor(1)
YShift(1,2)
YShift(2,36)
ResYAnchor(17,7)
YShift(17,43)
YIPAnchor(1,28,17)
YShift(28,31)
YShift(28,56)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dhook">
/* Y direction */



ResYAnchor(55,1)
YShift(55,62)
YAnchor(4)

ResYAnchor(11,7)
YShift(11,43)

YShift(11,49)
YShift(49,1)

ResYAnchor(22,11)
YShift(22,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dieresis">
/* VTTTalk Unicode 0xa8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 3 17 */
/* Min and Max */
YAnchor(21)	/* min */
YShift(21,15) /*perpendicular to the stroke*/

YShift(21,9)

YAnchor(9)	/* min */
YShift(9,3) /*perpendicular to the stroke*/

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */

/* YDir: Stroke #1 */

Smooth()

    </glyphProgram>

    <glyphProgram name="dieresisacutecomb">
/* Y direction */
YAnchor(13)
YShift(13,7)
YUpToGrid(3)
YDist(13,3,&gt;=)
YDist(3,1,&gt;=2)
YShift(13,25)
YAnchor(25)
YShift(25,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dieresisacutecomb.lc">
/* Y direction */
YAnchor(21)
YShift(21,15)
YShift(21,9)
YShift(9,3)
YUpToGrid(24)
YShift(3,24)
YAnchor(24)
YDist(24,25,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dieresiscaroncomb">
/* Y direction */
YAnchor(3)
YShift(3,9)
YShift(3,15)
YShift(15,21)
YShift(3,30)
YAnchor(30)
YDist(30,24,&gt;=2)
YShift(24,31)
YInterpolate(30,25,24)
YShift(24,26)
YShift(26,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dieresiscaroncomb.lc">
/* Y direction */
YAnchor(3)
YShift(3,9)
YShift(3,15)
YShift(15,21)
YUpToGrid(30)
YShift(3,30)
YAnchor(30)
YDist(30,24,&gt;=2)
YShift(24,32)
YInterpolate(30,25,24)
YShift(24,26)
YShift(26,27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dieresisgravecomb">
/* Y direction */
YAnchor(7)
YShift(7,13)
YShift(7,2)
YAnchor(2)
YDist(2,3,&gt;=2)
YShift(7,19)
YShift(19,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dieresisgravecomb.lc">
/* Y direction */
YAnchor(3)
YShift(3,9)
YShift(3,15)
YShift(15,21)
YUpToGrid(26)
YShift(3,26)
YAnchor(26)
YDist(26,27,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dieresismacroncomb">
/* Y direction */
YAnchor(7)
YShift(7,13)
YDist(7,2,&gt;=)
YShift(2,3)
YDist(7,19)
YShift(19,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dieresismacroncomb.lc">
/* Y direction */
YAnchor(3)
YShift(3,9)
YDist(3,15)
YShift(15,21)
YDist(3,26,&gt;=)
YShift(26,27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dieresisnosp">
/* Y direction */
YAnchor(9)
YShift(9,3)
YShift(9,21)
YShift(21,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dieresisnosp_uni1ABB">
/* Y direction */
YAnchor(41)
YShift(41,0)
YShift(0,16)
YShift(41,35)
YShift(35,8)
YShift(8,24)
YShift(41,53)
YShift(53,47)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dieresistonos">
/* Y direction */
YAnchor(13)
YShift(13,7)
YShift(13,0)
YAnchor(0)
YDist(0,1,&gt;=2)
YShift(13,25)
YShift(25,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="digamma">
/* Y direction */
ResYAnchor(2,14)
ResYAnchor(3,6)
YIPAnchor(3,7,2)
YShift(7,14)
YShift(7,6)
YShift(6,13)
YAnchor(13)
YShift(3,11)
YShift(11,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="divide">
/* Y direction */
YAnchor(2,18)
YDist(2,3)
YDist(3,13)
YShift(13,7)
YDist(2,19)
YShift(19,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dollar">
/* Y direction */
ResYAnchor(20,5)
YDist(20,3,&gt;=)
YShift(20,26)
YAnchor(26)
YShift(20,31)
YInterpolate(31,2,1,20)
ResYAnchor(47,13)
YDist(47,6,&gt;=)
YShift(47,53)
YAnchor(53)
YInterpolate(47,8,43,16,35,20)
YShift(47,58)
YInterpolate(47,7,4,58)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dollar.smcp">
/* Y direction */
YAnchor(23,126)
YShift(23,0)
YAnchor(0)
YShift(23,32)
YShift(32,2)
YAnchor(51,11)
YShift(51,6)
YAnchor(6)
YInterpolate(51,8,36,23)
YShift(51,62)
YShift(62,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dotaccent">
/* Y direction */
YAnchor(9,16)
YShift(9,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dotbelow">
/* Y direction */
YAnchor(9)
YShift(9,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dotbelow_uni1ABD">
/* Y direction */
YAnchor(41)
YShift(41,0)
YShift(41,16)
YShift(41,35)
YShift(35,8)
YShift(35,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dotdblsubnosp">
/* Y direction */
YAnchor(9)
YShift(9,3)
YShift(9,21)
YAnchor(21)
YShift(21,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dotdblsubnosp_uni1ABD">
/* Y direction */
YAnchor(41)
YShift(41,0)
YShift(41,35)
YShift(35,8)
YShift(35,24)
YShift(41,53)
YShift(53,16)
YShift(53,47)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dotlessi">
/* VTTTalk Unicode 0x131 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 10 */
/* CVT 3 6 */
/* Min and Max */
ResYAnchor(2,10)	/* min, CVT */
ResYAnchor(3,6)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()

    </glyphProgram>

    <glyphProgram name="dotmacroncomb">
/* Y direction */
YAnchor(3)
YShift(3,9)
YDist(3,14,&gt;=)
YShift(14,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dotmacroncomb.lc">
/* Y direction */
YAnchor(3)
YShift(3,9)
YUpToGrid(13)
YShift(3,13)
YAnchor(13)
YShift(13,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dotnosp">
/* Y direction */
YAnchor(9)
YShift(9,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="drthook">
/* Y direction */
ResYAnchor(14,15)
YShift(14,7)
ResYAnchor(21,0)
ResYAnchor(31,7)
YShift(31,63)
ResYAnchor(42,11)
YShift(42,53)
YShift(53,0)
YShift(53,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dtopbar">
/* Y direction */
ResYAnchor(3,0)
YShift(3,2)
YShift(3,5)
ResYAnchor(26,11)
YShift(26,7)
YAnchor(7)
YShift(26,37)
ResYAnchor(15,7)
YShift(15,47)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dyogh">
/* Y direction */
ResYAnchor(0,6)
YShift(0,7)
YShift(7,2)
ResYAnchor(18,15)
YShift(18,27)
ResYAnchor(38,0)
ResYAnchor(40,10)
YShift(40,23)
ResYAnchor(48,7)
YShift(48,80)
ResYAnchor(59,11)
YShift(59,70)
YIPAnchor(59,36,0)
YShift(36,4)
YShift(36,5)
YShift(5,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dz">
/* Y direction */
YAnchor(2,10)
YShift(2,5)
YShift(2,3)
YShift(3,7)
ResYAnchor(13,6)
YShift(13,8)
YShift(13,12)
YShift(12,4)
ResYAnchor(15,0)
YAnchor(18,10)
ResYAnchor(25,7)
YShift(25,57)
ResYAnchor(36,11)
YShift(36,47)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dzcurl">
/* Y direction */
ResYAnchor(44,6)
YShift(44,39)
YShift(44,43)
YShift(43,35)
ResYAnchor(46,0)
YAnchor(49,10)
YShift(49,33)
YShift(33,30)
YShift(30,0)
YShift(33,34)
YShift(34,16)
YShift(34,38)
YShift(34,6)
YAnchor(6)
YShift(6,24)
ResYAnchor(56,7)
YShift(56,88)
ResYAnchor(67,11)
YShift(67,78)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="e">
/* Y direction */
ResYAnchor(0,11)
YShift(0,36)
ResYAnchor(11,7)
YShift(11,25)
YIPAnchor(11,18,0)
YShift(18,19)
YDelta(19,-1/64@15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="e.ss07">
/* Y direction */
ResYAnchor(0,11)
YShift(0,36)
ResYAnchor(11,7)
YShift(11,25)
YIPAnchor(11,18,0)
YShift(18,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="eight">
/* Y direction */
ResYAnchor(4,13)
YShift(4,29)
ResYAnchor(45,5)
YShift(45,53)
YIPAnchor(4,21,45)
YInterpolate(21,37,45)
YShift(21,61)
YInterpolate(61,13,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="eight.smcp">
/* Y direction */
YAnchor(5,11)
YShift(5,31)
YAnchor(49,126)
YShift(49,57)
YIPAnchor(5,14,49)
YShift(14,65)
YShift(14,23)
YShift(23,40)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="eight.sup">
/* Y direction */
YAnchor(4)
YShift(4,28)
YDist(4,44,&gt;=)
YShift(44,52)
YIPAnchor(4,20,44)
YShift(20,12,36,59)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="emdash">
/* Y direction */
YAnchor(2)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="endash">
/* Y direction */
YAnchor(2)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="eng">
/* Y direction */
ResYAnchor(2,10)
ResYAnchor(3,6)
ResYAnchor(11,7)
YShift(11,38)
ResYAnchor(21,15)
YShift(21,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="eng_uni1ABE">
/* Y direction */
YAnchor(1,10)
ResYAnchor(4,6)
ResYAnchor(11,7)
YShift(11,38)
YAnchor(21,15)
YShift(21,28)
YShift(21,43)
YAnchor(43)
YShift(43,58)
YShift(43,51)
YAnchor(51)
YShift(51,52)
YShift(51,67)
YShift(67,66)
YShift(43,59)
YShift(59,60)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="eogonek">
/* Y direction */
ResYAnchor(0,11)
YShift(0,36)
YInterpolate(0,45,44,36)
ResYAnchor(11,7)
YShift(11,25)
ResYAnchor(59,14)
YShift(59,52)
YIPAnchor(11,19,59)
YShift(19,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="epsilon">
/* Y direction */
ResYAnchor(22,11)
YShift(22,12)
ResYAnchor(43,7)
YShift(43,53)
YIPAnchor(22,3,43)
YShift(3,62)

YInterpolate(3,33,0,62)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="epsilon1rev">
/* Y direction */
ResYAnchor(11,11)
YDist(11,17,&gt;=)
YShift(11,21)
ResYAnchor(54,7)
YShift(54,44)
YDist(54,48,&gt;=)
YIPAnchor(54,31,11)
YShift(31,34)
YInterpolate(31,33,0,34)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="epsilon1revclosed">
/* Y direction */
ResYAnchor(22,7)
YShift(22,11)

ResYAnchor(43,11)
YShift(43,55)

YIPAnchor(43,64,22)
YShift(64,2)
YInterpolate(64,1,32,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="epsilon1revhook">
/* Y direction */
ResYAnchor(31,11)
YDist(31,37,&gt;=)
YShift(31,41)
ResYAnchor(74,7)
YShift(74,64)
YDist(74,68,&gt;=)
YIPAnchor(31,51,0,74)
YShift(51,54)
YInterpolate(51,53,20,54)
YShift(0,19)
YShift(0,1)
YShift(1,2)
YDist(0,14,&gt;=)
YShift(14,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="epsilonclosed">
/* Y direction */
ResYAnchor(11,7)
YShift(11,22)
YShift(22,17)
YShift(17,47)
ResYAnchor(53,11)
YShift(53,42)
YIPAnchor(53,33,11)
YShift(33,0)
YShift(33,30)
YShift(33,32)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="equal">
/* Y direction */
YAnchor(2,16)
YShift(2,3)
YAnchor(7,18)
YShift(7,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="equalsuperior">
/* Y direction */
YAnchor(6)
YShift(6,7)
YDist(6,3,&gt;=)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="erev">
/* Y direction */
ResYAnchor(0,11)
YShift(0,7)
ResYAnchor(33,7)
YShift(33,18)
YIPAnchor(33,27,0)
YShift(27,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="esh">
/* Y direction */
ResYAnchor(6,1)
YShift(6,13)
YAnchor(24)
YShift(24,31)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="eshcurl">
/* Y direction */
ResYAnchor(10,15)
YShift(10,26)
YShift(10,38)
YDist(10,18,&gt;=)
YShift(18,47)
YShift(18,32)
YShift(32,55)
ResYAnchor(60,1)
YShift(60,67)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="eshlooprev">
/* Y direction */
YAnchor(14)
YShift(14,7)
YAnchor(24)
YIPAnchor(24,36,14)
YShift(36,32)
YShift(24,44)
YInterpolate(36,1,44)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="eshshortrev">
/* Y direction */
ResYAnchor(13,7)
YShift(13,6)
ResYAnchor(31,15)
YShift(31,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="estimated">
/* Y direction */
YAnchor(4,11)
YShift(4,27)
YAnchor(14,7)
YShift(14,30)
YIPAnchor(4,23,14)
YShift(23,34)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="eta">
/* VTTTalk Unicode 0x3b7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 10 */
/* CVT 3 6 */
/* CVT 11 7 */
/* Min and Max */
YAnchor(17)	/* min */
ResYAnchor(11,7)	/* max, CVT */

/* CVTs - beginning */
ResYAnchor(2,10)  /*knot, CVT*/ 
ResYAnchor(3,6)  /*knot, CVT*/ 
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(11,24) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="eth">
/* Y direction */
YAnchor(1)
YShift(1,56)
ResYAnchor(12,11)
YShift(12,42)
YIPAnchor(1,22,12)
YShift(22,32)
YShift(22,54)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="eurocurrency">
/* Y direction */
YAnchor(12,5)
YShift(12,21)
YShift(12,1)
YAnchor(1)
YShift(1,0)
YAnchor(34,12)
YShift(34,35)
YShift(34,38)
YAnchor(39,4)
YShift(39,36)
YShift(39,46)
YIPAnchor(34,42,39)
YShift(42,43)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="exclam">
/* Y direction */
ResYAnchor(0,2)
ResYAnchor(13,11)
YDist(13,7)
YDist(7,2,&gt;=1)
YAnchor(2)
/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="exclamdown">
/* Y direction */
YAnchor(0)
YAnchor(13)
YDist(13,7)
YDist(7,1,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="f">
/* Y direction */
ResYAnchor(1,10)
ResYAnchor(6,1)
YShift(6,13)
ResYAnchor(21,6)
YShift(21,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="f_f_i">
/* Y direction */
ResYAnchor(1,10)
YShift(1,23)
YShift(23,45)
ResYAnchor(6,1)
YShift(6,13)
ResYAnchor(21,6)
YShift(21,20)
YShift(21,42)
YShift(21,46)
ResYAnchor(28,1)
YShift(28,35)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="f_f_l">
/* Y direction */
ResYAnchor(1,10)
YShift(1,23)
YShift(1,41)
ResYAnchor(6,1)
YShift(6,13)
ResYAnchor(21,6)
YShift(21,45)
YShift(21,20)
YShift(20,46)
ResYAnchor(28,1)
YShift(28,36)
ResYAnchor(43,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="f_l">
/* Y direction */
ResYAnchor(1,10)
YShift(1,19)
ResYAnchor(6,1)
YShift(6,14)
ResYAnchor(20,0)
ResYAnchor(26,6)
YShift(26,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="fi">
/* Y direction */
YAnchor(1,10)
ResYAnchor(6,1)
YShift(6,13)
ResYAnchor(20,6)
YShift(20,19)
ResYAnchor(23,10)
YAnchor(24,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="finalkaf">
/* Y direction */
ResYAnchor(14,7)
YDist(14,19,&gt;=)
YShift(14,23)

ResYAnchor(41,11)
YShift(41,50)
YInterpolate(41,0,27,14)
YAnchor(56,10)
ResYAnchor(57,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="finalmem">
/* Y direction */
YAnchor(6,18)
YShift(6,10)
YDist(6,7,&gt;=)
YShift(7,3)
YShift(3,2)
YShift(3,8)
YAnchor(19,2)
YShift(19,14)
YShift(19,16)
YShift(16,20)
YDist(19,17,&gt;=)
YShift(17,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="finalnun">
/* Y direction */
ResYAnchor(1,6)
ResYAnchor(10,11)
YShift(10,23)
ResYAnchor(42,7)
YShift(42,35)
ResYAnchor(62,15)
YShift(62,55)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="finaltsadi">
/* Y direction */
YAnchor(14)
YShift(14,4)
YAnchor(20)
YShift(20,30)
YAnchor(25,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="five">
/* Y direction */
ResYAnchor(2,4)
YShift(2,5)
ResYAnchor(19,13)
YShift(19,25)
YAnchor(25)
YShift(19,29)
YIPAnchor(2,9,19)
YShift(9,39)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="five.onum">
/* Y direction */
YAnchor(2,125)
YShift(2,5)
YAnchor(19)
YShift(19,26)
YIPAnchor(19,9,2)
YShift(9,36)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="five.smcp">
/* Y direction */
YAnchor(2,125)
YShift(2,5)
YAnchor(17,11)
YShift(17,25)
YIPAnchor(17,9,2)
YShift(9,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="five.sup">
/* Y direction */
YAnchor(17)
YShift(17,25)
YDist(17,3,&gt;=)
YShift(3,4)
YIPAnchor(17,9,3)
YShift(9,31)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="florin">
/* Y direction */
ResYAnchor(7,15)
YShift(7,10)
YShift(7,14)
YShift(14,11)
ResYAnchor(27,1)
YShift(27,30)
YShift(27,34)
YShift(34,31)
ResYAnchor(39,6)
YShift(39,21)
YShift(39,2)
YShift(2,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="four">
/* Y direction */
ResYAnchor(5,4)
YShift(5,11)
ResYAnchor(9,12)
YIPAnchor(5,2,9)
YInterpolate(5,6,2)
YShift(2,7)
YInterpolate(7,3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="four.onum">
/* Y direction */
YAnchor(2)
YShift(2,7)
YShift(7,3)
YAnchor(10)
YAnchor(11,125)
YShift(11,4)
YShift(11,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="four.smcp">
/* Y direction */
YAnchor(10,18)
YAnchor(11,125)
YShift(11,4)
YIPAnchor(10,1,11)
YShift(1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="four.sup">
/* Y direction */
YAnchor(10)
YDist(10,8,&gt;=)
YShift(8,5)
YShift(8,6)
YIPAnchor(10,1,8)
YShift(1,7)
YShift(7,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="fraction">
/* Y direction */
YUpToGrid(1)
YAnchor(1)
YShift(1,2)
YAnchor(3)
YShift(3,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="g">
/* Y direction */
ResYAnchor(0,6)
ResYAnchor(6,15)
YShift(6,14)
ResYAnchor(26,7)
YShift(26,58)
ResYAnchor(37,11)
YShift(37,48)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="g.alt">
/* Y direction */
ResYAnchor(5,7)
YShift(5,33)
ResYAnchor(55,15)
YShift(55,74)
YIPAnchor(55,15,5)
YInterpolate(55,83,15)
YShift(83,46)
YShift(83,65)
YShift(65,64)
YShift(15,24)
YInterpolate(15,38,37,24)
ResYAnchor(95,6)
YShift(95,93)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="g.ss06">
/* Y direction */
ResYAnchor(0,6)
ResYAnchor(6,15)
YShift(6,14)
ResYAnchor(26,7)
YShift(26,58)
ResYAnchor(37,11)
YShift(37,48)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="g.ss07">
/* Y direction */
ResYAnchor(0,6)
ResYAnchor(6,15)
YShift(6,13)
ResYAnchor(25,7)
YShift(25,57)
ResYAnchor(36,11)
YShift(36,47)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="gamma">
/* Y direction */
ResYAnchor(1,14)
ResYAnchor(13,6)
YShift(13,5)
YInterpolate(1,8,12,3,4,10,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="gamma1">
/* Y direction */
ResYAnchor(0,15)
YShift(0,22)

ResYAnchor(34,6)
YShift(34,14)


/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="gammasuper">
/* Y direction */
YAnchor(5,2)
YShift(5,1)
YDist(5,10,&gt;=)
YShift(10,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="gbar">
/* Y direction */
YAnchor(10)
YShift(10,18)
ResYAnchor(30,7)
ResYAnchor(4,6)

YShift(30,62)

ResYAnchor(41,11)
YShift(41,52)

YIPAnchor(41,2,10)

YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="germandbls">
/* VTTTalk Unicode 0xdf */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 10 */
/* CVT 8 1 */
/* CVT 27 11 */
/* Min and Max */
ResYAnchor(27,11)	/* min, CVT */
ResYAnchor(8,1)	/* max, CVT */

/* CVTs - beginning */
ResYAnchor(2,10)  /*knot, CVT*/ 
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(8,54) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(27,35) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="ghook">
/* Y direction */
ResYAnchor(25,15)
YShift(25,33)
ResYAnchor(45,7)
YShift(45,1)
YShift(45,19)
YShift(45,77)
ResYAnchor(56,11)
YShift(56,67)

YDist(45,7)
YShift(7,14)


/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="glottalstop">
/* Y direction */
ResYAnchor(21,1)
YShift(21,12)
YDist(21,16,&gt;=)

YAnchor(33)
YShift(33,0)
YShift(33,37)
YAnchor(36)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="glottalstopbar">
/* Y direction */
YAnchor(25)
YShift(25,16)
YAnchor(39)
YIPAnchor(25,2,39)
YShift(2,3)
YShift(3,37)
YAnchor(37)
YShift(37,5)
YShift(5,41)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="glottalstopbarinv">
/* Y direction */
YAnchor(22)
YDist(22,27,&gt;=)
YShift(22,31)
ResYAnchor(38,6)
YDist(38,8,&gt;=)
YShift(38,37)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="glottalstopinv">
/* Y direction */
YAnchor(2)
YShift(2,1)
YShift(2,36)
ResYAnchor(14,11)
YDist(14,19,&gt;=)
YShift(14,23)
YAnchor(37,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="glottalstoprevinv">
/* Y direction */
YAnchor(2)
YShift(2,1)
YShift(1,36)

ResYAnchor(14,1)
YDist(14,19,&gt;=)
YShift(14,23)
YAnchor(34)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="grave">
/* Y direction */
YAnchor(2)
YDist(2,3,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="gravecomb">
/* Y direction */
YAnchor(2)
YDist(2,3,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="gravesubnosp">
/* Y direction */
YAnchor(3)
YDist(3,2,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="greater">
/* Y direction */
YAnchor(2)
YAnchor(9)
YInterpolate(9,5,8,4,0,6,3,1,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="greaterequal">
/* Y direction */
YAnchor(12)
YShift(12,13)
YUpToGrid(9)
YDist(13,9,&gt;=)
YAnchor(9)

YShift(9,5)
YShift(9,2)
YAnchor(2)
YShift(2,1)
YInterpolate(2,3,7,6,0,4,8,9)


Smooth()

    </glyphProgram>

    <glyphProgram name="guilsinglleft">
/* Y direction */
YAnchor(0)
YAnchor(6)
YInterpolate(6,1,5,3,9,2,8,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="guilsinglright">
/* VTTTalk Unicode 0x203a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* YDir: Stroke #0 */
YInterpolate(5,8,0)
YAnchor(8)
YShift(8,2) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="h">
/* VTTTalk Unicode 0x68 (h) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 10 */
/* CVT 3 0 */
/* CVT 10 7 */
/* Min and Max */
ResYAnchor(2,10)	/* min, CVT */
ResYAnchor(3,0)	/* max, CVT */

/* CVTs - beginning */
ResYAnchor(10,7)  /*knot, CVT*/ 
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(10,22) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(2,17)

Smooth()

    </glyphProgram>

    <glyphProgram name="hbar">
/* Y direction */
ResYAnchor(2,10)
YShift(2,17)
ResYAnchor(3,0)
ResYAnchor(10,7)
YShift(10,22)
YLink(10,29)
YShift(29,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="henghook">
/* Y direction */
YAnchor(7)
YShift(7,14)

ResYAnchor(29,7)
YShift(29,41)

ResYAnchor(53,1)
YShift(53,60)

YAnchor(21)
YShift(20,0,36)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="hhook">
/* Y direction */
YAnchor(1)
YShift(1,17)
ResYAnchor(34,1)
YShift(34,41)

ResYAnchor(10,7)
YShift(10,0)
YShift(10,22)
YShift(10,27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="hhooksuper">
/* Y direction */
YAnchor(2)
YShift(2,29)
YAnchor(23,2)
YShift(23,34)
YShift(23,7)
YAnchor(7)
YShift(7,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="hook">
/* Y direction */
YAnchor(12)
YShift(12,11)
YDist(12,0,&gt;=2)
YShift(0,2)
YShift(0,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="hooksubpalatnosp">
/* Y direction */
YAnchor(0)
YAnchor(7)
YShift(7,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="hooksubretronosp">
/* Y direction */
YAnchor(0)
YAnchor(13)
YShift(13,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="hornnosp">
/* Y direction */
YAnchor(0)
YDist(0,5,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="hsuper">
/* Y direction */
YAnchor(2)
YShift(2,16)
YAnchor(10,2)
YDist(10,0,&gt;=)
YShift(10,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="hturn">
/* Y direction */
ResYAnchor(0,14)
ResYAnchor(1,6)
YShift(1,17)
ResYAnchor(10,11)
YShift(10,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="hungarumlaut">
/* Y direction */
YAnchor(4)
YShift(4,0)
YDist(4,5,&gt;=2)
YShift(5,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="hv">
/* Y direction */
YAnchor(2)
ResYAnchor(3,0)
ResYAnchor(10,7)
YShift(10,22)
ResYAnchor(27,11)
YShift(27,40)
YInterpolate(27,16,17,34,33,10)
ResYAnchor(46,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="hyphen">
/* VTTTalk Unicode 0x2d (-) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(2)	/* min */
YShift(2,3)	/* max */

/* YDir: Stroke #0 */

Smooth()

    </glyphProgram>

    <glyphProgram name="hyphenbullet">
/* Y direction */
YAnchor(3)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="hyphendot">
/* Y direction */
YAnchor(9)
YDist(9,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="i">
/* Y direction */
ResYAnchor(2,10)
ResYAnchor(3,6)
YDist(3,13,&gt;=)
YShift(13,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="infinity">
/* Y direction */
ResYAnchor(6,7)
YShift(6,43)
YShift(6,67)
YShift(67,78)
ResYAnchor(19,11)
YShift(19,30)
YShift(19,54)
YShift(54,91)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="integral">
/* Y direction */
ResYAnchor(4,15)
YShift(4,11)
ResYAnchor(20,1)
YShift(20,27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="interrobang">
/* Y direction */
YAnchor(26,3)
YDist(26,3,&gt;=)
YShift(26,17)
YShift(26,22)
ResYAnchor(46,11)
YShift(46,40)
YShift(40,2)
YAnchor(2)
YShift(2,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="iota">
/* Y direction */
ResYAnchor(0,6)
ResYAnchor(13,11)
YShift(13,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="iota1">
/* Y direction */
ResYAnchor(0,6)
ResYAnchor(14,11)
YShift(14,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="iotasubnosp">
/* VTTTalk Unicode 0x345 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(13)	/* min */
YAnchor(0)	/* max */

/* YDir: Stroke #0 */
YShift(13,6) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="iotasubnosp_uni1ABD">
/* Y direction */
YAnchor(32)
YShift(32,8)
YShift(32,24)
YShift(32,45)
YAnchor(45)
YShift(45,0)
YShift(45,16)
YShift(45,38)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="j">
/* Y direction */
ResYAnchor(0,6)
YDist(0,27,&gt;=)
YShift(27,21)
ResYAnchor(6,15)
YShift(6,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="jcrosstail">
/* Y direction */
ResYAnchor(33,15)
YShift(33,12)
YShift(33,6)
YAnchor(6)
YShift(6,41)
YShift(41,44)
YShift(44,17)
ResYAnchor(45,6)
YDist(45,55,&gt;=)
YShift(55,49)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="jdotlessbar">
/* Y direction */
ResYAnchor(4,6)
ResYAnchor(10,15)
YShift(10,17)
YIPAnchor(4,2,10)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="jsuper">
/* Y direction */
YAnchor(0,2)
YShift(0,27)
YAnchor(27)
YShift(27,21)
YAnchor(6)
YShift(6,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="k">
/* Y direction */
ResYAnchor(2,10)
YShift(2,10)
ResYAnchor(3,0)
YAnchor(9,6)
YInterpolate(2,6,7,11,5,12,8,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="k.alt">
/* Y direction */
YAnchor(2,10)
YShift(2,10)
ResYAnchor(3,0)
ResYAnchor(9,6)
YIPAnchor(2,6,9)
YShift(6,7)
YShift(6,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="k.alt2">
/* Y direction */
YAnchor(2,10)
YShift(2,10)
ResYAnchor(3,1)
ResYAnchor(9,6)
YIPAnchor(2,6,9)
YShift(6,7)
YShift(6,11)
YShift(11,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="kappa1">
/* Y direction */
ResYAnchor(2,6)
YShift(2,24)
YShift(24,25)
ResYAnchor(11,7)
YShift(11,14)
YShift(11,18)
ResYAnchor(31,11)
YShift(31,34)
YShift(31,38)
YShift(31,0)
YAnchor(0)
YShift(0,4)
YShift(4,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="kgreenlandic">
/* Y direction */
ResYAnchor(2,10)
YShift(2,10)
ResYAnchor(3,6)
YShift(3,9)
YIPAnchor(3,6,2)
YShift(6,11)
YShift(6,7)
YShift(7,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="khook">
/* Y direction */
ResYAnchor(1,18)
ResYAnchor(9,6)
YInterpolate(1,11,5,12,8,9)
YAnchor(10,18)
YAnchor(20,1)
YShift(20,27)
YInterpolate(9,14,0,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="koppa">
/* Y direction */
ResYAnchor(4,2)
ResYAnchor(10,10)
YIPAnchor(4,2,10)
YShift(2,5)
YShift(2,3)
YShift(3,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="kturn">
/* Y direction */
ResYAnchor(0,14)
ResYAnchor(1,6)
YAnchor(9,10)
ResYAnchor(13,6)
YInterpolate(9,8,12,5,11,7,6,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="l">
/* VTTTalk Unicode 0x6c (l) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 10 */
/* CVT 3 0 */
/* Min and Max */
ResYAnchor(2,10)	/* min, CVT */
ResYAnchor(3,0)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()

    </glyphProgram>

    <glyphProgram name="lambda">
/* Y direction */
ResYAnchor(2,10)
YShift(2,22)
YAnchor(22)
YShift(22,15)
ResYAnchor(5,0)
YShift(5,32)
YInterpolate(2,0,27,4,3,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="lambdabar">
/* Y direction */
ResYAnchor(9,1)
YShift(9,36)
YAnchor(26)
YShift(26,5)
YAnchor(5)
YShift(26,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="largerighthook">
/* Y direction */
YAnchor(1)
YShift(1,0)
YAnchor(12)
YShift(12,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="lbelt">
/* Y direction */
ResYAnchor(28,0)
YAnchor(29)
YIPAnchor(28,24,16,29)
YShift(24,7)
YShift(16,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="less">
/* Y direction */
YAnchor(2)
YAnchor(9)
YInterpolate(2,1,3,7,6,0,4,8,5,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="lessequal">
/* Y direction */
YAnchor(12)
YShift(12,13)
YUpToGrid(2)
YDist(13,2,&gt;=)
YAnchor(2)

YShift(2,1)
YShift(2,9)
YAnchor(9)
YShift(9,5)
YInterpolate(2,3,7,6,0,4,8,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="linevert">
/* Y direction */
YAnchor(0)
YDist(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="linevertsubnosp">
/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="linevertsubnosp_uni1ABD">
/* Y direction */
YAnchor(35)
YShift(35,8)
YShift(35,24)
YShift(35,34)
YShift(34,0)
YShift(34,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="lira">
/* Y direction */
YAnchor(1,12)
YShift(1,2)
YShift(2,9)
ResYAnchor(18,5)
YDist(18,23,&gt;=)
YShift(18,27)
YIPAnchor(1,38,18)
YShift(38,37)
YDist(38,33,&gt;=)
YShift(33,34)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="lira.smcp">
/* Y direction */
YAnchor(9,18)
YShift(9,17)
YShift(9,10)
YShift(10,18)
YAnchor(29,126)
YShift(29,38)
YIPAnchor(9,2,29)
YShift(2,3)
YDist(2,7,&gt;=)
YShift(7,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="lmidtilde_uni1ABE">
/* Y direction */
YAnchor(2,10)
ResYAnchor(3,0)
YIPAnchor(2,9,3)
YShift(9,27)
YShift(9,17)
YShift(17,18)
YShift(9,22)
YAnchor(22)
YShift(22,14)
YShift(22,4)
YShift(4,5)
YShift(22,38)
YAnchor(38)
YShift(38,39)
YShift(38,30)
YAnchor(30)
YShift(30,45)
YShift(30,46)
YShift(46,47)
YShift(38,54)
YShift(54,53)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="logicalnot">
/* Y direction */
YAnchor(3)
YShift(3,2)
YShift(2,6)
YInterpolate(2,7,3)
YAnchor(6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="longs">
/* Y direction */
ResYAnchor(1,10)
ResYAnchor(6,1)
YShift(6,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="longst">
/* Y direction */
ResYAnchor(3,6)
YShift(3,2)
YShift(3,24)
ResYAnchor(4,1)
YShift(4,13)
YShift(13,28)
YShift(28,9)
ResYAnchor(19,10)
ResYAnchor(41,11)
YShift(41,34)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="lozenge">
/* Y direction */
ResYAnchor(1,2)
YShift(1,11)
YShift(1,10)
YShift(10,3)
ResYAnchor(7,18)
YShift(7,14)
YShift(7,8)
YShift(8,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="lrthook">
/* Y direction */
ResYAnchor(0,0)
ResYAnchor(14,15)
YShift(14,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="lslash">
/* VTTTalk Unicode 0x142 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 6 10 */
/* CVT 7 0 */
/* Min and Max */
ResYAnchor(6,10)	/* min, CVT */
ResYAnchor(7,0)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* Contour #0 */
YShift(7,0) /* max */
YShift(6,2) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="lyogh">
/* Y direction */
ResYAnchor(0,6)
YShift(0,7)
ResYAnchor(18,15)
YShift(18,27)
YIPAnchor(0,36,18)
YShift(36,5)
YInterpolate(36,4,8,5)
ResYAnchor(37,0)
YAnchor(39)
YDist(39,22,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="m">
/* VTTTalk Unicode 0x6d (m) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 10 */
/* CVT 3 6 */
/* CVT 11 7 */
/* Min and Max */
ResYAnchor(2,10)	/* min, CVT */
ResYAnchor(11,7)	/* max, CVT */

/* CVTs - beginning */
ResYAnchor(3,6)  /*knot, CVT*/ 
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(11,23) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(11,34) /*stroke, CVT of another stroke*/
YShift(34,46) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(2,18)

/* Extreme Min */
YShift(2,41)

Smooth()

    </glyphProgram>

    <glyphProgram name="macron">
/* VTTTalk Unicode 0xaf */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 3 16 */
/* Min and Max */
YAnchor(2)	/* min */
YShift(2,3)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */

Smooth()

    </glyphProgram>

    <glyphProgram name="macronacutecomb">
/* Y direction */
YAnchor(3)
YShift(3,2)
YUpToGrid(4)
YShift(3,4)
YAnchor(4)
YDist(4,5,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="macronacutecomb.lc">
/* Y direction */
YAnchor(3)
YShift(3,2)
YDist(3,4,&gt;=)
YDist(4,5,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="macroncomb">
/* Y direction */
YAnchor(2)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="macroncomb_uni1ABB">
/* Y direction */
YAnchor(33)
YShift(33,16)
YShift(16,17)
YAnchor(34,16)
YShift(34,0)
YShift(0,15)
YShift(34,35)
YShift(35,8)
YShift(8,9)
YShift(8,24)
YShift(24,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="macrondieresiscomb">
/* Y direction */
YAnchor(3)
YShift(3,2)
YDist(3,13,&gt;=)
YShift(13,7)
YShift(13,25)
YShift(25,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="macrondieresiscomb.lc">
/* Y direction */
YAnchor(3)
YShift(3,2)
YDist(3,13,&gt;=)
YShift(13,7)
YShift(13,25)
YShift(25,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="macrongravecomb">
/* Y direction */
YAnchor(7)
YShift(7,6)
YUpToGrid(2)
YShift(7,2)
YAnchor(2)
YDist(2,3,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="macrongravecomb.lc">
/* Y direction */
YAnchor(3)
YShift(3,2)
YUpToGrid(6)
YShift(3,6)
YAnchor(6)
YDist(6,7,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="macronsubnosp">
/* Y direction */
YAnchor(3)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="mcapturn">
/* Y direction */
ResYAnchor(1,2)
YShift(1,18)
YShift(1,42)
YAnchor(4,18)
YAnchor(11)
YShift(11,24)
YIPAnchor(1,35,11)
YShift(35,48)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="mhook">
/* Y direction */
YAnchor(7)
YShift(7,14)
YAnchor(20)
ResYAnchor(22,6)
ResYAnchor(30,7)
YShift(30,42)
ResYAnchor(53,7)
YShift(53,65)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="mill">
/* Y direction */
YAnchor(6,10)
YDist(6,2,&gt;=)
YShift(6,22)
YShift(22,45)
ResYAnchor(7,6)
ResYAnchor(15,7)
YDist(15,3,&gt;=)
YShift(15,27)
ResYAnchor(38,7)
YShift(38,50)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="minus">
/* Y direction */
YAnchor(2)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="minussubnosp">
/* Y direction */
YAnchor(0)
YShift(0,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="minussuperior">
/* Y direction */
YAnchor(2)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="mturn">
/* Y direction */
ResYAnchor(0,11)
YShift(0,12)

ResYAnchor(23,11)
YShift(23,35)

ResYAnchor(6,6)
YShift(6,30)
YShift(6,47)

YAnchor(50)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="mturndescend">
/* Y direction */
ResYAnchor(1,6)
YShift(1,18)
YShift(1,41)
YAnchor(3)
ResYAnchor(11,11)
YShift(11,23)
ResYAnchor(34,11)
YShift(34,46)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="mu">
/* Y direction */
YAnchor(0)
YShift(0,28)
ResYAnchor(3,18)
ResYAnchor(11,19)
YShift(11,22)
YInterpolate(11,5,0)
YAnchor(29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="multiply">
/* VTTTalk Unicode 0xd7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

/* Contour #1 */
YShift(2,6) /* max */
YShift(0,4) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="n">
/* VTTTalk Unicode 0x6e (n) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 10 */
/* CVT 3 6 */
/* CVT 11 7 */
/* Min and Max */
ResYAnchor(2,10)	/* min, CVT */
ResYAnchor(11,7)	/* max, CVT */

/* CVTs - beginning */
ResYAnchor(3,6)  /*knot, CVT*/ 
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(11,23) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(2,18)

Smooth()

    </glyphProgram>

    <glyphProgram name="naira">
/* Y direction */
YAnchor(13,12)
YShift(13,10)
ResYAnchor(14,4)
YShift(14,17)
YIPAnchor(13,7,14)
YInterpolate(13,16,7)
YInterpolate(7,11,14)
YShift(7,6)
YDist(7,2,&gt;=)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="nbspace">
/* VTTTalk Unicode 0xa0 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="nine">
/* VTTTalk Unicode 0x39 (9) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 43 5 */
/* CVT 56 12 */
/* Min and Max */
ResYAnchor(56,12)	/* min, CVT */
ResYAnchor(43,5)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(43,12) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(43,33,56)
YAnchor(33)
YShift(33,22) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YShift(56,0) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="nine.alt">
/* Y direction */
ResYAnchor(42,5)
YShift(42,11)
ResYAnchor(53,13)
YShift(53,0)
YIPAnchor(53,32,42)
YShift(32,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="nine.onum">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(53)	/* min */
YAnchor(41)	/* max */

/* YDir: Stroke #0 */
YShift(41,11) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(41,31,53)
YAnchor(31)
YShift(31,21) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YShift(53,0) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="nine.smcp">
/* Y direction */
YAnchor(38,126)
YShift(38,12)
YAnchor(49,10)
YShift(49,1)
YIPAnchor(49,30,38)
YShift(30,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="nine.sup">
/* Y direction */
YAnchor(45)
YShift(45,1)
YDist(45,35,&gt;=)
YShift(35,10)
YUpToGrid(27)
YIPAnchor(45,27,35)
YShift(27,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="nlfthook">
/* Y direction */
YAnchor(7)
YShift(7,14)
ResYAnchor(22,6)
YInterpolate(7,21,0,22)
ResYAnchor(30,7)
YShift(30,42)
YAnchor(37,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="notequal">
/* Y direction */
YAnchor(11)
YDist(11,6,&gt;=)
YShift(6,7)
YShift(7,3)
YShift(3,0)
YShift(11,10)
YShift(10,1)
YShift(1,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="nrthook">
/* Y direction */
YAnchor(14)
YShift(14,7)
YAnchor(21,10)
ResYAnchor(23,6)
ResYAnchor(31,7)
YShift(31,43)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="nsuperior">
/* Y direction */
YAnchor(2)
YShift(2,17)
YAnchor(11,2)
YShift(11,4)
YAnchor(4)
YShift(11,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="numbersign">
/* VTTTalk Unicode 0x23 (#) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18 */
/* CVT 2 16 */
/* Min and Max */
ResYAnchor(0,18)	/* min, CVT */
ResYAnchor(2,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(2,9,0)
YAnchor(9)
YShift(9,10) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(2,14,0)
YAnchor(14)
YShift(14,13) /*perpendicular to the stroke*/

/* Contour #1 */
YShift(2,5) /* max */
YShift(0,4) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="numeralgreeksub">
/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="o">
/* Y direction */
ResYAnchor(6,7)
YShift(6,39)
ResYAnchor(17,11)
YShift(17,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="o.ss06">
/* Y direction */
ResYAnchor(6,7)
YShift(6,39)
ResYAnchor(17,11)
YShift(17,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="oe">
/* VTTTalk Unicode 0x153 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 49 7 */
/* CVT 60 11 */
/* Min and Max */
ResYAnchor(60,11)	/* min, CVT */
ResYAnchor(49,7)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(49,11) /*stroke, CVT of another stroke*/
YShift(11,25) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(49,82) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YInterpolate(49,18,60)
YAnchor(18)
YShift(18,19) /*perpendicular to the stroke*/

/* YDir: Stroke #3 */
YShift(60,71) /*perpendicular to the stroke*/

/* YDir: Stroke #4 */
YShift(60,0) /*stroke, CVT of another stroke*/
YShift(0,36) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="ogonek">
/* Y direction */
YAnchor(0)
YShift(0,1)
YDist(0,15,&gt;=2)
YShift(15,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ogoneknosp">
/* VTTTalk Unicode 0x328 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(15)	/* min */
YAnchor(0)	/* max */

/* YDir: Stroke #0 */
YShift(15,8) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="ohorn">
/* Y direction */
ResYAnchor(16,7)
YShift(16,0)
YAnchor(0)
YShift(16,49)
ResYAnchor(27,11)
YShift(27,38)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="oi">
/* Y direction */
ResYAnchor(10,11)
YShift(10,0)
ResYAnchor(21,7)
YShift(21,31)
YInterpolate(10,27,4,21)
YAnchor(43)
YAnchor(48,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="omega">
/* VTTTalk Unicode 0x3c9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 31 6 */
/* CVT 54 11 */
/* Min and Max */
ResYAnchor(54,11)	/* min, CVT */
ResYAnchor(31,6)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(54,41) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(54,10) /*stroke, CVT of another stroke*/
YShift(10,23) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(31,1)

Smooth()

    </glyphProgram>

    <glyphProgram name="omegaclosed">
/* Y direction */
YAnchor(24,11)
YShift(24,11)
ResYAnchor(35,7)
YShift(35,0)
YShift(35,34)
YShift(34,1)
YShift(34,17)
YAnchor(17)
YShift(17,51)
YAnchor(45,11)
YShift(45,58)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="one">
/* VTTTalk Unicode 0x31 (1) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 12 */
/* CVT 6 4 */
/* Min and Max */
ResYAnchor(1,12)	/* min, CVT */
ResYAnchor(6,4)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()

    </glyphProgram>

    <glyphProgram name="one.onum">
/* Y direction */
YAnchor(2,10)
YAnchor(6,125)
YShift(6,5)
YAnchor(5)
YShift(5,4)
YShift(4,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="one.smcp">
/* Y direction */
YAnchor(2,10)
YAnchor(6,125)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="one.sup">
/* Y direction */
YAnchor(1)
YDist(1,0)
YDelta(0,1@9;14;19;24;27;32)
YShift(0,3)
YShift(3,5)
YShift(5,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="onesuperior">
/* VTTTalk Unicode 0xb9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 6 16 */
/* Min and Max */
YAnchor(1)	/* min */
ResYAnchor(6,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()

    </glyphProgram>

    <glyphProgram name="oopen">
/* Y direction */
ResYAnchor(25,7)
YShift(25,16)
YDist(25,20)
ResYAnchor(36,11)
YDist(36,1)
YShift(36,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ordfeminine">
/* Y direction */
YAnchor(13,3)
YShift(13,8)
YDist(13,42,&gt;=4)
YDist(42,22)
YIPAnchor(42,26,13)
YShift(26,49)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ordmasculine">
/* VTTTalk Unicode 0xba */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 5 17 */
/* Min and Max */
YAnchor(14)	/* min */
ResYAnchor(5,3)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(5,32) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(14,23) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="oslash">
/* Y direction */
ResYAnchor(10,7)
YShift(10,0)
YAnchor(0)
YShift(10,43)
ResYAnchor(21,11)
YShift(21,1)
YAnchor(1)
YShift(21,32)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ounce">
/* Y direction */
YAnchor(18)
YDist(18,24,&gt;=)
YShift(18,28)
ResYAnchor(38,2)
YShift(38,45)
YIPAnchor(18,36,38)
YInterpolate(36,7,38)
YShift(36,4)
YShift(36,5)
YShift(5,9)
YShift(7,42)
YShift(7,0)
YShift(0,43)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="overscoredblnosp">
/* Y direction */
YAnchor(6)
YShift(6,7)
YDist(6,3,&gt;=)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="p">
/* Y direction */
ResYAnchor(2,14)
ResYAnchor(3,6)
ResYAnchor(11,11)
YShift(11,43)
ResYAnchor(22,7)
YShift(22,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="p.ss06">
/* Y direction */
ResYAnchor(2,14)
ResYAnchor(3,6)
ResYAnchor(11,11)
YShift(11,43)
ResYAnchor(22,7)
YShift(22,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="paragraph">
/* Y direction */
ResYAnchor(0,18)
ResYAnchor(11,2)
YDist(11,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="parenleft">
/* VTTTalk Unicode 0x28 (() */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(19)	/* min */
YAnchor(6)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="parenleftinferior">
/* VTTTalk Unicode 0x208d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(16)	/* min */
YAnchor(5)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="parenleftsuperior">
/* Y direction */
YAnchor(5)
YShift(5,6)
YAnchor(17)
YShift(17,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="parenright">
/* VTTTalk Unicode 0x29 ()) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(6)	/* min */
YAnchor(19)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="parenrightsub">
/* VTTTalk Unicode 0x208e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(5)	/* min */
YAnchor(16)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="parenrightsuperior">
/* Y direction */
YAnchor(5)
YShift(5,6)
YAnchor(17)
YShift(17,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="partialdiff">
/* Y direction */
ResYAnchor(18,0)
YShift(18,9)
ResYAnchor(31,11)
YShift(31,53)
YIPAnchor(31,0,18)
YShift(0,42)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="percent">
/* VTTTalk Unicode 0x25 (%) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 5 17 */
/* CVT 50 19 */
/* Min and Max */
ResYAnchor(50,13)	/* min, CVT */
ResYAnchor(5,5)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(5,32) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YDist(5,14)
YShift(14,23) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YDist(50,41)
YShift(41,68) /*perpendicular to the stroke*/

/* YDir: Stroke #3 */
YShift(50,59) /*perpendicular to the stroke*/

/* Contour #4 */
YShift(5,75) /* max */
YShift(50,73) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="period">
/* Y direction */
ResYAnchor(9,11)
YShift(9,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="periodcentered">
/* Y direction */
YAnchor(9)
YShift(9,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="pertenthousand">
/* Y direction */
YAnchor(5,5)
YShift(5,32)
YShift(5,14)
YAnchor(14)
YShift(14,23)
YAnchor(50,13)
YShift(50,59)
YShift(50,41)
YShift(41,68)
YShift(41,77)
YShift(77,104)
YShift(77,113)
YShift(113,140)
YShift(50,86)
YShift(86,95)
YShift(86,122)
YShift(122,131)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="perthousand">
/* Y direction */
YAnchor(5,5)
YShift(5,32)
YShift(5,14)
YAnchor(14)
YShift(14,23)
YAnchor(50,13)
YShift(50,59)
YShift(50,41)
YAnchor(41)
YShift(41,68)
YShift(41,77)
YAnchor(77)
YShift(77,104)
YShift(50,86)
YAnchor(86)
YShift(86,95)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="peseta">
/* Y direction */
YAnchor(14,12)
ResYAnchor(15,4)
YShift(15,12)
YIPAnchor(14,1,15)
YShift(1,2)
ResYAnchor(24,6)
YShift(24,25)
YDist(24,28,&gt;=)
YAnchor(41,13)
YShift(41,34)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="phi">
/* Y direction */
YAnchor(0)
ResYAnchor(15,11)
YShift(15,34)
ResYAnchor(24,6)
YShift(24,25)
YShift(24,5)
YShift(5,43)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="philatin">
/* Y direction */
ResYAnchor(6,7)
YShift(6,39)
YDist(6,45)
ResYAnchor(17,11)
YShift(17,28)
YDist(17,44)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="phook">
/* Y direction */
YAnchor(20)
ResYAnchor(30,11)
YShift(30,62)
ResYAnchor(41,7)
YShift(41,52)
YDist(41,14)
YShift(14,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="pi">
/* Y direction */
ResYAnchor(3,6)
YShift(3,2)
YShift(3,7)
YShift(3,9)
ResYAnchor(6,10)
ResYAnchor(21,11)
YShift(21,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="pipe">
/* VTTTalk Unicode 0x1c0 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 18  DISABLED for a NON-LATIN glyph */
/* CVT 3 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
ResYAnchor(0,2)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="plus">
/* Y direction */
YAnchor(2)
YDist(2,6)
YShift(2,3)
YDist(3,7)
YAnchor(7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="plusminus">
/* VTTTalk Unicode 0xb1 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 10 18 */
/* Min and Max */
ResYAnchor(10,18)	/* min, CVT */
YAnchor(4)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(4,3,10)
YAnchor(3)
YShift(3,2) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(10,11) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="plussubnosp">
/* Y direction */
YAnchor(4)
YDist(4,7,&gt;=)

YDist(7,2,&gt;=)
YDist(4,3,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="plussuperior">
/* Y direction */
YAnchor(3)
YShift(3,7)
YAnchor(7)
YShift(3,2)
YDownToGrid(6)
YShift(2,6)
YAnchor(6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="primerev1">
/* Y direction */
YAnchor(3)
YShift(3,2)
YAnchor(2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="primetripl1">
/* Y direction */
YAnchor(1)
YShift(1,0)
YAnchor(0)
YShift(0,4)
YShift(4,8)
YShift(1,5)
YShift(5,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="primetriplerev1">
/* Y direction */
YAnchor(11)
YShift(11,7)
YShift(7,3)
YShift(11,10)
YAnchor(10)
YShift(10,6)
YShift(6,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="product">
/* Y direction */
YAnchor(6)
YShift(6,2)
ResYAnchor(7,2)
YShift(7,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="psi">
/* Y direction */
ResYAnchor(0,6)
YShift(0,16)
YShift(0,32)
ResYAnchor(25,11)
YShift(25,7)
YAnchor(33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="published">
/* Y direction */
ResYAnchor(20,9)
YShift(20,0)
YShift(0,51)
ResYAnchor(30,3)
YShift(30,10)
YShift(10,53)
YAnchor(53)
YShift(53,50)
YIPAnchor(51,41,53)
YShift(41,42)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="q">
/* Y direction */
ResYAnchor(3,6)
ResYAnchor(4,14)
ResYAnchor(11,7)
YShift(11,43)
ResYAnchor(22,11)
YShift(22,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="q.ss06">
/* Y direction */
ResYAnchor(3,6)
ResYAnchor(4,14)
ResYAnchor(11,7)
YShift(11,43)
ResYAnchor(22,11)
YShift(22,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="qhook">
/* Y direction */
YAnchor(7,0)
YShift(7,14)
YShift(7,1)
YShift(1,21)
ResYAnchor(19,14)
ResYAnchor(30,7)
YShift(30,62)
ResYAnchor(41,11)
YShift(41,52)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="qofdagesh">
/* Y direction */
YAnchor(6)
YShift(6,2)
YDist(6,4,&gt;=)
YShift(4,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="question">
/* Y direction */
ResYAnchor(22,3)
YShift(22,13)
YShift(22,17)
YAnchor(17)
ResYAnchor(42,11)
YShift(42,36)
YShift(36,1)
YAnchor(1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="questiondown">
/* Y direction */
YAnchor(22)
YShift(22,13)
YShift(22,17)
YAnchor(17)
YAnchor(43,16)
YShift(43,37)
YAnchor(37)
YShift(37,0)
YAnchor(0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="quotedbl">
/* Y direction */
YAnchor(5)
YShift(5,11)
YDist(5,3)
YShift(3,9)

Smooth()

    </glyphProgram>

    <glyphProgram name="quotedblbase">
/* Y direction */
YAnchor(0)
YShift(0,11)
YDist(0,5)
YShift(5,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="quotedblreversed">
/* Y direction */
YAnchor(0)
YShift(0,11)
YDist(0,5)
YShift(5,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="quotedblx">
/* Y direction */
ResYAnchor(3,6)
YShift(3,7)
YShift(3,2)
YShift(2,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="quoteleft">
/* Y direction */
YAnchor(0)
YDist(0,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="quotereversed">
/* Y direction */
YAnchor(0)
YDist(0,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="quoteright">
/* Y direction */
YAnchor(0)
YDist(0,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="quotesinglbase">
/* Y direction */
YAnchor(0)
YDist(0,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="quotesingle">
/* Y direction */
YAnchor(5)
YDist(5,3)


Smooth()

    </glyphProgram>

    <glyphProgram name="r">
/* Y direction */
ResYAnchor(2,10)
ResYAnchor(3,6)
ResYAnchor(20,7)
YShift(20,5)
YShift(20,9)
YShift(9,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="radical">
/* Y direction */
ResYAnchor(1,2)
YAnchor(8,8)
YShift(8,4)
YAnchor(10)
YShift(10,11)
YShift(11,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="rdescend">
/* Y direction */
ResYAnchor(1,14)
ResYAnchor(20,7)
YShift(20,9)
ResYAnchor(4,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="registered">
/* Y direction */
ResYAnchor(73,3)
YShift(73,63)
ResYAnchor(83,19)
YIPAnchor(73,15,83)
YShift(15,12)
YShift(83,53)
YShift(53,13)
YAnchor(13)
YShift(13,41)
YDownToGrid(1)
YIPAnchor(15,1,13)
YShift(1,2)
YInterpolate(1,31,27,24,32,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="response">
/* Y direction */
ResYAnchor(6,2)
YShift(6,28)
YDist(6,5,&gt;=)
YShift(5,0)
YShift(5,4)
YShift(4,3)
ResYAnchor(30,8)
YDist(30,2,&gt;=)
YShift(30,31)
YIPAnchor(30,17,6)
YShift(17,18)
YShift(17,32)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="reverseddblprime">
/* Y direction */
YAnchor(7)
YShift(7,3)
YShift(7,6)
YAnchor(6)
YShift(6,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="rfishhook">
/* Y direction */
YAnchor(0)
ResYAnchor(7,7)
YShift(7,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="rfishhookrev">
/* Y direction */
YAnchor(0)
ResYAnchor(14,7)
YShift(14,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="rho">
/* VTTTalk Unicode 0x3c1 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 14 */
/* CVT 6 7 */
/* CVT 17 11 */
/* Min and Max */
ResYAnchor(0,14)	/* min, CVT */
ResYAnchor(6,7)	/* max, CVT */

/* CVTs - beginning */
ResYAnchor(17,11)  /*knot, CVT*/ 
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(6,41) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(17,30) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="rho1">
/* Y direction */
YAnchor(0)
ResYAnchor(40,7)
YShift(40,61)
YIPAnchor(0,26,40)
YShift(26,51)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ring">
/* Y direction */
YAnchor(11)
YShift(11,17)
YDist(11,4,&gt;=2)
YShift(4,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ringacute">
/* Y direction */
YAnchor(7)
YShift(7,25)
YUpToGrid(3)
YShift(7,3)
YAnchor(3)
YDist(3,1,&gt;=)
YShift(7,13)
YShift(13,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ringlefthalfsubnosp">
/* Y direction */
YAnchor(6)
YShift(6,7)
YDist(6,0,&gt;=2)
YShift(0,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ringrighthalfsubnosp">
/* Y direction */
YAnchor(0)
YShift(0,1)
YAnchor(8)
YShift(8,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ringsubnosp">
/* VTTTalk Unicode 0x325 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(11)	/* min */
YAnchor(4)	/* max */

/* YDir: Stroke #0 */
YShift(4,23) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(11,17) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="ringsubnosp_uni1ABD">
/* Y direction */
YAnchor(43)
YShift(43,0)
YShift(43,16)
YShift(43,49)
YShift(43,36)
YShift(36,8)
YShift(36,24)
YShift(36,55)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="rrthook">
/* Y direction */
YAnchor(14)
YShift(14,7)

ResYAnchor(40,7)
YShift(40,29)


ResYAnchor(23,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="rrthook_uni1ABE">
/* Y direction */
ResYAnchor(14,15)
YShift(14,7)
YShift(14,43)
YAnchor(43)
YShift(43,58)
YShift(43,51)
YAnchor(51)
YShift(51,52)
YShift(51,67)
YShift(67,66)
YShift(43,59)
YShift(59,60)
ResYAnchor(23,6)
ResYAnchor(40,7)
YShift(40,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="rsuper">
/* Y direction */
YAnchor(1)
YAnchor(19,2)
YShift(19,4)
YAnchor(4)
YShift(19,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="rturn">
/* Y direction */
ResYAnchor(0,11)
YShift(0,7)
ResYAnchor(19,6)
YAnchor(22,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="rturnascend">
/* Y direction */
ResYAnchor(1,0)
YAnchor(4,18)
ResYAnchor(20,11)
YShift(20,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="rturnrthook">
/* Y direction */
ResYAnchor(14,15)
YShift(14,7)
ResYAnchor(21,6)

ResYAnchor(40,11)

YShift(40,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="rturnsuper">
/* Y direction */
YAnchor(14)
YShift(14,4)
YShift(14,21)
YAnchor(21)
YAnchor(18,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="s">
/* Y direction */
ResYAnchor(14,7)
YShift(14,23)
ResYAnchor(41,11)
YShift(41,50)
YInterpolate(41,0,27,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="sampi">
/* VTTTalk Unicode 0x3e1 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 1 */
/* CVT 8 15 */
/* Min and Max */
ResYAnchor(8,15)	/* min, CVT */
ResYAnchor(1,1)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* Contour #1 */
YShift(1,17) /* max */
YShift(8,15) /* min */

/* Contour #2 */
YShift(1,21) /* max */
YShift(8,19) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="schwa">
/* Y direction */
ResYAnchor(0,7)
YShift(0,36)
ResYAnchor(11,11)
YShift(11,25)
YIPAnchor(0,20,11)
YShift(20,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="schwahook">
/* Y direction */
ResYAnchor(0,7)
YShift(0,37)
ResYAnchor(11,11)
YShift(11,26)
YIPAnchor(0,18,59,11)
YShift(18,19)
YShift(18,17)
YShift(18,46)
YShift(46,47)
YShift(19,45)
YShift(45,64)
YShift(59,52)

YShift(19,20)


/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="seagullsubnosp">
/* Y direction */
YAnchor(4)
YShift(4,12)
YDist(4,0,&gt;=2)
YShift(0,9)
YAnchor(9)
YShift(9,16)
YShift(9,25)
YAnchor(25)
YShift(4,20)
YAnchor(20)
YShift(20,28)


/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="section">
/* Y direction */
ResYAnchor(20,17)
YShift(20,29)
YAnchor(68)
YShift(68,79)
YInterpolate(68,83,63,0,1,5,43,93,53,49,48,15,33,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="servicemark">
/* Y direction */
YAnchor(27,2)
YShift(27,34)
YShift(27,10)
YShift(10,5)
YShift(10,6)
YShift(10,7)
YShift(10,1)
YAnchor(1)
YShift(1,2)
YShift(1,12)
YAnchor(49)
YShift(49,57)
YInterpolate(49,0,15,23,27)
YShift(49,9)
YAnchor(9)
YShift(9,4)
YAnchor(4)
YShift(4,11)
YAnchor(11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="seven">
/* Y direction */
ResYAnchor(3,12)
ResYAnchor(6,4)
YShift(6,5)
YShift(5,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="seven.alt">
/* Y direction */
YAnchor(8,12)
ResYAnchor(16,4)
YShift(16,15)
YShift(15,0)
YShift(15,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="seven.onum">
/* Y direction */
YAnchor(3)
YAnchor(6,125)
YShift(6,5)
YShift(5,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="seven.pnum">
/* Y direction */
ResYAnchor(3,12)
ResYAnchor(6,4)
YShift(6,5)
YShift(5,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="seven.smcp">
/* Y direction */
YAnchor(3,10)
YAnchor(6,125)
YShift(6,1)
YShift(6,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="seven.sup">
/* Y direction */
YAnchor(2)
YDist(2,6,&gt;=)
YShift(6,1)
YShift(6,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="shindagesh">
/* VTTTalk Unicode 0x2e1 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="sigma">
/* Y direction */
ResYAnchor(20,11)
YShift(20,31)
ResYAnchor(50,6)
YShift(50,6)
YShift(50,42)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="sigma1">
/* Y direction */
ResYAnchor(0,7)
YDist(0,5,&gt;=)
YShift(0,9)
YAnchor(27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="six">
/* VTTTalk Unicode 0x36 (6) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 4 */
/* CVT 44 13 */
/* Min and Max */
ResYAnchor(44,13)	/* min, CVT */
ResYAnchor(0,4)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(0,3) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(0,34,44)
YAnchor(34)
YShift(34,24) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YShift(44,14) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="six.alt">
/* Y direction */
ResYAnchor(0,5)
YShift(0,7)
ResYAnchor(48,13)
YShift(48,18)
YIPAnchor(48,38,0)
YShift(38,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="six.smcp">
/* Y direction */
YAnchor(0,126)
YShift(0,3)
YAnchor(39,11)
YShift(39,14)
YIPAnchor(39,31,0)
YShift(31,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="six.sup">
/* Y direction */
YAnchor(36)
YShift(36,12)
YDist(36,0,&gt;=)
YShift(0,3)
YDownToGrid(28)
YIPAnchor(36,28,0)
YShift(28,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="slash">
/* VTTTalk Unicode 0x2f (/) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16 */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()

    </glyphProgram>

    <glyphProgram name="slashlongnosp">
/* VTTTalk Unicode 0x338 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="slashshortnosp">
/* VTTTalk Unicode 0x337 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="space">
/* VTTTalk Unicode 0x20 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="spaceopenbox">
/* Y direction */
YAnchor(7)
YShift(7,2)
YDist(7,0,&gt;=)
YShift(0,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="squaresubnosp">
/* Y direction */
YAnchor(1)
YShift(1,4)
YDist(1,0,&gt;=3)
YShift(0,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="srthook">
/* Y direction */
YAnchor(14)
YShift(14,7)
ResYAnchor(34,7)
YShift(34,43)
ResYAnchor(61,11)
YShift(61,70)
YShift(61,66)
YAnchor(66)
YShift(66,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="st">
/* Y direction */
ResYAnchor(10,1)
YShift(10,20)
ResYAnchor(31,6)
YShift(31,16)
YShift(31,30)
ResYAnchor(45,11)
YShift(45,38)
ResYAnchor(64,7)
YShift(64,73)
YDist(64,69,&gt;=)
YShift(69,1)
ResYAnchor(91,11)
YDist(91,96,&gt;=)
YShift(91,100)
YInterpolate(91,50,59,64)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="sterling">
/* Y direction */
ResYAnchor(1,12)
YShift(1,2)
YShift(2,13)
YShift(13,12)
ResYAnchor(22,5)
YShift(22,31)
YIPAnchor(22,5,1)
YShift(5,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="sterling.smcp">
/* Y direction */
YAnchor(1,10)
YShift(1,13)
YShift(1,2)
YShift(2,14)
YAnchor(25,126)
YShift(25,34)
YIPAnchor(1,5,25)
YShift(5,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="stigma">
/* Y direction */
YAnchor(0)
ResYAnchor(20,7)
YDist(20,25,&gt;=)
YShift(20,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="summation">
/* Y direction */
YAnchor(11)
YShift(11,2)
YShift(11,10)
YShift(11,3)
YShift(3,12)
ResYAnchor(15,2)
YShift(15,7)
YShift(7,6)
YShift(6,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="t">
/* Y direction */
ResYAnchor(3,6)
YShift(3,2)
YAnchor(4)
ResYAnchor(17,11)
YShift(17,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tackdownsubnosp">
/* Y direction */
YAnchor(5)
YShift(5,2)
YDist(5,1,&gt;=2)
YShift(5,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tackleftsubnosp">
/* Y direction */
YAnchor(3)
YDist(3,2,&gt;=3)
YIPAnchor(2,6,3)
YShift(6,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tackrightsubnosp">
/* Y direction */
YAnchor(0)
YDist(0,3,&gt;=3)
YIPAnchor(3,6,0)
YShift(6,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tackupsubnosp">
/* Y direction */
YAnchor(0)
YDist(0,7,&gt;=2)
YShift(7,2)
YShift(7,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tau">
/* VTTTalk Unicode 0x3c4 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 3 6 */
/* CVT 17 11 */
/* Min and Max */
ResYAnchor(17,11)	/* min, CVT */
ResYAnchor(3,6)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(3,2) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(17,10) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(3,5)

Smooth()

    </glyphProgram>

    <glyphProgram name="tavdages">
/* Y direction */
ResYAnchor(12,3)
YShift(12,20)
YDist(12,35)
YShift(35,44)
YInterpolate(35,0,23,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tbar">
/* Y direction */
ResYAnchor(3,6)
YShift(3,4)
YAnchor(4)
YShift(3,2)
YShift(2,25)
YAnchor(25)
YShift(25,24)
ResYAnchor(17,11)
YShift(17,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tccurl">
/* Y direction */
ResYAnchor(29,11)
YShift(29,0)
YShift(0,7)
YAnchor(7)
YShift(7,20)


ResYAnchor(40,7)
YDist(40,45,&gt;=)
YShift(40,49)

ResYAnchor(63,6)
YShift(63,62)
YDist(63,64,&gt;=)

ResYAnchor(71,11)
YShift(71,13)
YShift(71,70)
YShift(70,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tel">
/* Y direction */
YAnchor(2)
YShift(2,18)
YShift(18,10)
YShift(10,19)
YShift(10,30)
YShift(30,26)
YShift(26,31)
YAnchor(7,2)
YShift(7,3)
YShift(7,6)
YShift(7,11)
YShift(11,14)
YShift(11,15)
YShift(11,27)
YIPAnchor(10,22,11)
YShift(22,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tesh">
/* Y direction */
ResYAnchor(3,6)
YShift(3,2)
YDist(3,4,&gt;=)

YShift(3,40)
YShift(40,24)

ResYAnchor(17,11)
YShift(17,10)
YShift(17,23)
ResYAnchor(28,1)
YShift(28,35)
ResYAnchor(46,15)
YShift(46,53)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="theta">
/* VTTTalk Unicode 0x3b8 */
/* ACT generated Tue Nov  3 08:51:00 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 13 11 */
/* Min and Max */
ResYAnchor(13,11)	/* min, CVT */
YAnchor(0)	/* max */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
ResYDist(0,26) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(0,48,13)
YAnchor(48)
ResYDist(48,32) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
ResYDist(13,40) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="thook">
/* Y direction */
ResYAnchor(7,1)
YShift(7,14)
ResYAnchor(22,6)
YShift(22,21)
YInterpolate(22,0,1,24,23,18,2,7)
YAnchor(36)
YShift(36,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="thorn">
/* VTTTalk Unicode 0xfe */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 14 */
/* CVT 3 0 */
/* CVT 10 11 */
/* CVT 21 7 */
/* Min and Max */
ResYAnchor(2,14)	/* min, CVT */
ResYAnchor(3,0)	/* max, CVT */

/* CVTs - beginning */
ResYAnchor(10,11)  /*knot, CVT*/ 
ResYAnchor(21,7)  /*knot, CVT*/ 
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(21,32) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(10,43) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="three">
/* Y direction */
ResYAnchor(18,5)
YShift(18,9)
YShift(18,13)
YAnchor(13)
ResYAnchor(41,13)
YShift(41,47)
YAnchor(47)
YShift(41,51)
YIPAnchor(18,29,41)
YShift(29,0)
YInterpolate(29,27,28,30,31,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="three.onum">
/* Y direction */
YAnchor(3,125)
YShift(3,2)
YShift(3,5)
YAnchor(15)
YShift(15,22)
YIPAnchor(15,30,3)
YShift(30,0)
YShift(30,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="three.smcp">
/* Y direction */
YAnchor(18,126)
YShift(18,9)
YAnchor(42,11)
YShift(42,52)
YIPAnchor(42,30,18)
YShift(30,29)
YShift(30,0)
YShift(0,31)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="three.sup">
/* Y direction */
YAnchor(36)
YShift(36,44)
YDist(36,16,&gt;=)
YShift(16,8)
YIPAnchor(36,26,16)
YShift(26,25)
YShift(26,0)
YShift(0,27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="threesuperior">
/* Y direction */
ResYAnchor(16,3)
YShift(16,8)
YShift(16,11)
YAnchor(11)
YDist(16,36,&gt;=4)
YShift(36,41)
YAnchor(41)
YShift(36,44)
YIPAnchor(16,26,36)
YShift(26,0)
YInterpolate(26,24,28,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tilde">
/* Y direction */
YAnchor(5)
YShift(5,23)
YShift(5,14)
YAnchor(14)
YShift(14,13)
YAnchor(13)
YDist(5,18,&gt;=2)
YDelta(18,1@15..26)
YShift(18,10)
YShift(18,1)
YAnchor(1)
YShift(1,0)
YAnchor(0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tildeacutecomb">
/* Y direction */
YAnchor(5)
YShift(5,12)
YShift(5,17)
YShift(17,9)
YShift(17,27)
YAnchor(27)
YShift(27,25)
YShift(5,21)
YShift(21,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tildeacutecomb.lc">
/* Y direction */
YAnchor(5)
YShift(5,13)
YShift(5,23)
YShift(5,18)
YAnchor(18)
YShift(18,0)
YShift(18,10)
YUpToGrid(29)
YShift(18,29)
YAnchor(29)
YShift(29,27)
YAnchor(27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tildecomb_uni1ABB">
/* Y direction */
YAnchor(37)
YShift(37,55)
YShift(37,45)
YShift(45,0)
YShift(0,15)
YShift(0,16)
YShift(16,17)
YShift(37,50)
YAnchor(50)
YShift(50,32)
YShift(50,42)
YShift(50,8)
YShift(8,9)
YShift(8,24)
YShift(24,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tildecomb_uni1ABC">
/* Y direction */
YAnchor(69)
YShift(69,87)
YShift(69,32)
YShift(32,48)
YShift(32,16)
YShift(16,0)
YShift(69,82)
YAnchor(82)
YShift(82,74)
YShift(82,8)
YShift(8,24)
YShift(24,40)
YShift(40,56)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tildedieresiscomb">
/* Y direction */
YAnchor(5)
YShift(5,21)
YShift(5,17)
YAnchor(17)
YShift(17,9)
YUpToGrid(33)
YShift(17,33)
YAnchor(33)
YShift(33,27)
YShift(33,45)
YShift(45,39)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tildedieresiscomb.lc">
/* Y direction */
YAnchor(29)
YShift(29,37)
YShift(29,47)
YDist(29,42,&gt;=2)
YShift(42,24)
YShift(42,34)
YUpToGrid(9)
YShift(42,9)
YAnchor(9)
YShift(9,3)
YShift(9,21)
YShift(21,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tildemacroncomb">
/* Y direction */
YAnchor(17,16)
YShift(17,9)
YShift(17,0)
YShift(0,1)
YDist(17,5,&gt;=2)
YShift(5,21)
YShift(5,12)
YShift(12,13)
YDist(17,26,&gt;=)
YShift(26,27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tildemacroncomb.lc">
/* Y direction */
YAnchor(5)
YShift(5,23)
YShift(5,18)
YAnchor(18)
YShift(18,10)
YUpToGrid(28)
YShift(18,28)
YAnchor(28)
YShift(28,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tildesubnosp">
/* Y direction */
YAnchor(5)
YShift(5,23)
YShift(5,13)
YAnchor(13)
YShift(13,14)
YDist(5,18,&gt;=2)
YShift(18,10)
YShift(18,0)
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tildesubnosp_uni1ABD">
/* Y direction */
YAnchor(37)
YShift(37,55)
YShift(37,16)
YShift(16,0)
YShift(37,50)
YAnchor(50)
YShift(50,42)
YShift(50,8)
YShift(8,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tildevertsupnosp">
/* Y direction */
YAnchor(13)
YDist(13,0,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tonefive">
/* Y direction */
ResYAnchor(2,6)
YShift(2,41)
YShift(2,40)
YShift(40,5)
YAnchor(18)
YShift(18,27)
YIPAnchor(2,10,18)
YShift(10,35)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tonesix">
/* Y direction */
ResYAnchor(15,0)
YShift(15,0)
YAnchor(18,18)
ResYAnchor(25,11)
YShift(25,58)
ResYAnchor(36,7)
YShift(36,47)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tonetwo">
/* Y direction */
ResYAnchor(14,11)
YShift(14,4)
YShift(14,8)
YAnchor(8)
ResYAnchor(42,7)
YShift(42,32)
YShift(42,36)
YAnchor(36)
YInterpolate(14,19,46,42)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tonos">
/* Y direction */
YAnchor(1)
YDist(1,0,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tpalatalhook">
/* Y direction */
YAnchor(6)
YShift(6,13)
ResYAnchor(21,6)
YShift(21,20)
YDist(21,22,&gt;=)
ResYAnchor(35,11)
YShift(35,28)
YInterpolate(28,0,1,35)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="trademark">
/* Y direction */
YAnchor(17)
YShift(17,6)
YShift(6,3)
YShift(3,0)
YAnchor(20,2)
YShift(20,19)
YShift(20,7)
YShift(7,10)
YInterpolate(6,9,4,1,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="trianglebullet">
/* Y direction */
YAnchor(0)
YAnchor(16)
YInterpolate(16,8,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="trthook">
/* Y direction */
ResYAnchor(3,6)
YShift(3,2)
YDist(3,4,&gt;=)
ResYAnchor(18,15)
YShift(18,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ts">
/* Y direction */
YAnchor(9,10)
YShift(9,6)
YShift(6,60)
YShift(9,58)
ResYAnchor(30,7)
YShift(30,39)
YInterpolate(58,15,52,25,43,30)
ResYAnchor(67,6)
YDist(67,0,&gt;=)
YShift(67,66)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tturn">
/* Y direction */
YAnchor(4)
YAnchor(17)
YShift(17,10)
YIPAnchor(17,0,4)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="two">
/* Y direction */
ResYAnchor(2,12)
YShift(2,31)
YShift(31,3)
ResYAnchor(21,5)
YShift(21,12)
YShift(21,16)
YAnchor(16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="two.onum">
/* Y direction */
YAnchor(2,18)
YShift(2,32)
YShift(32,3)
YAnchor(21,126)
YShift(21,12)
YShift(21,16)
YAnchor(16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="two.smcp">
/* Y direction */
YAnchor(2,18)
YShift(2,30)
YShift(30,3)
YAnchor(20,126)
YShift(20,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="two.sup">
/* Y direction */
YAnchor(2)
YDist(2,19,&gt;=)
YShift(19,11)
YShift(2,28)
YShift(28,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="twosuperior">
/* Y direction */
ResYAnchor(19,3)
YShift(19,11)
YDist(19,2,&gt;=4)
YShift(2,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="u">
/* Y direction */
ResYAnchor(11,11)
YShift(11,3)
YAnchor(3)
YShift(11,24)
ResYAnchor(17,6)
YShift(17,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ubar">
/* Y direction */
ResYAnchor(5,6)
YShift(5,22)
YAnchor(8)
ResYAnchor(15,11)
YShift(15,28)
YIPAnchor(5,2,15)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uhorn">
/* Y direction */
ResYAnchor(21,11)
YShift(21,14)
YAnchor(14)
YShift(21,34)
ResYAnchor(27,6)
YShift(27,0)
YAnchor(0)
YShift(27,11)
YShift(11,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="underscore">
/* Y direction */
YAnchor(3)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="underscoredbl">
/* Y direction */
YAnchor(7)
YShift(7,6)
YDist(7,3,&gt;=2)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="underscoredblnosp">
/* Y direction */
YAnchor(3)
YShift(3,2)
YDist(3,7,&gt;=2)
YShift(7,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="undertie">
/* Y direction */
YAnchor(0)
YShift(0,8)
YDist(0,5,&gt;=2)
YShift(5,4)
YShift(5,11)
YShift(11,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0002">
/* VTTTalk Unicode 0x2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni0009">
/* VTTTalk Unicode 0x9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni01B7">
/* Y direction */
YAnchor(28)
YShift(28,1)
YAnchor(1)
YShift(28,5)
ResYAnchor(36,2)
YIPAnchor(36,41,16,28)
YShift(41,40)
YShift(16,34)
YShift(16,17)
YShift(17,35)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni01B8">
/* Y direction */
YAnchor(5)
YShift(5,0)
YAnchor(0)
YShift(5,27)
ResYAnchor(33,2)
YIPAnchor(33,38,5)
YInterpolate(38,36,5)
YShift(38,37)
YShift(36,16)
YShift(36,35)
YShift(35,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni01B9">
/* Y direction */
ResYAnchor(0,6)
YShift(0,3)
YShift(0,7)
YAnchor(10)
YShift(10,4)
YInterpolate(10,6,8,4)
YAnchor(28)
YShift(28,18)
YDist(28,22,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni01BA">
/* Y direction */
ResYAnchor(0,6)
YShift(0,7)
YShift(7,2)
YAnchor(22)
YShift(22,12)
YIPAnchor(0,42,22)
YShift(42,5)
YShift(42,4)
YShift(4,3)
YShift(4,40)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni01BB">
/* Y direction */
YAnchor(6)
YShift(6,35)
YShift(35,7)
ResYAnchor(25,5)
YShift(25,16)
YDist(25,20,&gt;=)
YIPAnchor(25,2,6)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni01C5">
/* Y direction */
YAnchor(6,10)
YShift(6,2)
YShift(2,3)
YShift(3,7)
ResYAnchor(13,6)
YShift(13,8)
YShift(13,12)
YShift(12,4)
YDist(13,20,&gt;=)
YDist(20,14,&gt;=2)
YShift(14,21)
YInterpolate(20,15,14)
YShift(14,16)
YShift(16,18)
YAnchor(53,10)
YShift(53,24)
YShift(24,25)
ResYAnchor(54,2)
YShift(54,39)
YShift(39,38)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni01C6">
/* Y direction */
ResYAnchor(1,0)
YAnchor(4,10)
ResYAnchor(11,7)
YShift(11,43)
ResYAnchor(22,11)
YShift(22,33)
YAnchor(50,10)
YShift(50,54)
YShift(50,51)
YShift(51,55)
ResYAnchor(61,6)
YShift(61,56)
YShift(61,60)
YShift(60,52)
YDist(61,68,&gt;=)
YDist(68,62,&gt;=2)
YShift(62,64)
YShift(62,66)
YShift(62,69)
YInterpolate(68,63,62)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni01EF">
/* Y direction */
ResYAnchor(9,6)
YDist(9,6,&gt;=)
YDist(6,0,&gt;=2)
YDist(0,2,&gt;=)
YShift(0,4)
YShift(0,7)
YInterpolate(6,1,0)
YShift(9,16)
YShift(16,11)
ResYAnchor(27,14)
YShift(27,33)
YAnchor(33)
YShift(27,37)
YIPAnchor(27,45,9)
YShift(45,18)
YShift(18,12)
YShift(18,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni01F6">
/* Y direction */
ResYAnchor(4,2)
ResYAnchor(11,2)
ResYAnchor(12,6)
ResYAnchor(18,9)
YShift(18,30)
YIPAnchor(4,2,18)
YShift(2,3)
YShift(18,6)
YAnchor(6)
YInterpolate(6,10,23,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni01F7">
/* Y direction */
YAnchor(2)
ResYAnchor(3,2)
ResYAnchor(24,3)
YShift(24,21)
YIPAnchor(2,4,24)
YShift(4,5)
YShift(24,16)
YShift(16,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni021C">
/* Y direction */
ResYAnchor(21,3)
YShift(21,11)
YDist(21,15,&gt;=)
YAnchor(43)
YShift(43,44)
YInterpolate(43,0,1,32,33,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni021D">
/* Y direction */
ResYAnchor(20,7)
YShift(20,11)
YDist(20,15,&gt;=)
ResYAnchor(42,15)
YShift(42,43)
YInterpolate(42,0,1,31,32,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0220">
/* Y direction */
YAnchor(1)
ResYAnchor(15,3)
ResYAnchor(20,2)

YShift(15,6)
YAnchor(22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0221">
/* Y direction */
YAnchor(44)
YShift(44,16)
YDist(44,36,&gt;=3)
YShift(36,22)
ResYAnchor(55,0)
YAnchor(57)
ResYAnchor(65,7)
YShift(65,97)
ResYAnchor(76,11)
YShift(76,87)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0222">
/* Y direction */
ResYAnchor(11,9)
YShift(11,30)
ResYAnchor(49,3)
YShift(49,48)
YIPAnchor(11,20,49)
YShift(20,40)
YInterpolate(20,58,1,40)
YShift(49,68)
YShift(68,69)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0223">
/* Y direction */
YAnchor(10)
YShift(10,31)
YAnchor(48)
YShift(48,47)
YIPAnchor(10,20,48)
YShift(20,40)
YInterpolate(20,57,1,40)
YShift(48,67)
YShift(67,68)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0224">
/* Y direction */
ResYAnchor(9,2)
YShift(9,4)
YShift(9,8)
YShift(8,0)

YAnchor(10)
YAnchor(19)
YShift(19,2)
YShift(19,20)
YShift(20,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0225">
/* Y direction */
YAnchor(2,18)
YShift(2,5)
YShift(2,14)
YShift(2,3)
YShift(3,7)
YShift(3,15)
ResYAnchor(13,6)
YShift(13,8)
YShift(13,12)
YShift(12,4)
YAnchor(23,19)
YShift(23,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0234">
/* Y direction */
YAnchor(44)
YShift(44,16)
YShift(16,22)
YAnchor(22)
YShift(22,36)
ResYAnchor(57,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0235">
/* Y direction */
YAnchor(44)
YShift(44,16)
YShift(16,22)
YAnchor(22)
YShift(22,36)
YAnchor(55,18)
ResYAnchor(57,6)
ResYAnchor(65,7)
YShift(65,77)
YShift(77,59)
YAnchor(72,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0236">
/* Y direction */
YAnchor(0)
YShift(0,6)
ResYAnchor(46,11)
YShift(46,18)
YShift(18,24)
YAnchor(24)
YShift(24,38)
YIPAnchor(0,61,46)
YShift(61,60)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0237">
/* Y direction */
ResYAnchor(1,6)
ResYAnchor(6,15)
YShift(6,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0238">
/* Y direction */
ResYAnchor(6,11)
YShift(6,39)

ResYAnchor(17,7)
YShift(17,28)

ResYAnchor(45,0)

YAnchor(48)

ResYAnchor(55,7)
YShift(55,87)

ResYAnchor(66,11)
YShift(66,77)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0239">
/* Y direction */


ResYAnchor(2,6)


YAnchor(0)
ResYAnchor(12,7)
YShift(12,44)

ResYAnchor(66,7)
YShift(66,77)

ResYAnchor(23,11)
YShift(23,34)

ResYAnchor(55,11)
YShift(55,88)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni023A">
/* Y direction */
YAnchor(5,18)
YShift(5,1)
YAnchor(1)
ResYAnchor(7,2)
YShift(7,3)
YAnchor(3)
YShift(7,10)
YShift(7,11)
YShift(11,4)
YIPAnchor(5,16,7)
YShift(16,17)
YAnchor(9,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni023B">
/* Y direction */
ResYAnchor(9,9)
YDownToGrid(1)
YShift(9,1)
YAnchor(1)
YDist(9,4,&gt;=)
YShift(9,41)
ResYAnchor(20,3)
YUpToGrid(3)
YShift(20,3)
YAnchor(3)
YDist(20,25,&gt;=)
YShift(20,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni023C">
/* Y direction */
ResYAnchor(13,11)
YDist(13,1,&gt;=)
YShift(13,4)
YDist(13,8,&gt;=)
ResYAnchor(24,7)
YDist(24,3,&gt;=)
YDist(24,29,&gt;=)
YShift(24,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni023E">
/* Y direction */
YAnchor(6,18)
YDist(6,1,&gt;=)
ResYAnchor(11,2)
YDist(11,3,&gt;=)
YShift(11,7)
YShift(11,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni023F">
/* Y direction */
ResYAnchor(14,7)
YShift(14,23)
YDist(14,19,&gt;=)
YShift(19,18)
ResYAnchor(41,11)
YInterpolate(41,0,27,14)
YShift(41,49)
YShift(49,56)
YDist(41,63,&gt;=)
YShift(63,62)
YShift(41,66)
YInterpolate(66,44,41)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0240">
/* Y direction */
YAnchor(15)
YShift(15,8)
ResYAnchor(28,6)
YIPAnchor(28,33,23,15)
YShift(33,32)
YShift(23,26)
YShift(23,0)
YShift(0,27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0241">
/* Y direction */
ResYAnchor(21,3)
YShift(21,12)
YDist(21,16,&gt;=)
YAnchor(36,18)
YShift(36,37)
YAnchor(37)
YShift(37,0)
YShift(0,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0242">
/* Y direction */
ResYAnchor(4,7)
YShift(4,23)
YDist(4,27,&gt;=)
YAnchor(31,18)
YShift(31,28)
YAnchor(28)
YShift(28,14)
YShift(14,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0244">
/* Y direction */
ResYAnchor(4,2)
YShift(4,16)
ResYAnchor(10,9)
YShift(10,21)
YIPAnchor(4,2,10)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0245">
/* Y direction */
YAnchor(0)
YShift(0,6)
ResYAnchor(2,2)
YShift(2,8)
YInterpolate(0,5,1,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0246">
/* Y direction */
YAnchor(9)
YDist(9,2,&gt;=)
YShift(9,6)
YShift(9,7)
ResYAnchor(19,2)
YDist(19,3,&gt;=)
YShift(19,8)
YShift(19,18)
YIPAnchor(9,14,19)
YShift(14,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0247">
/* Y direction */
ResYAnchor(4,11)
YDist(4,1,&gt;=)
YShift(4,41)
ResYAnchor(15,7)
YDist(15,3,&gt;=)
YShift(15,30)
YIPAnchor(4,22,15)
YShift(22,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni024A">
/* Y direction */
ResYAnchor(5,9)
YShift(5,50)
YShift(5,53)
YShift(5,18)
YShift(18,1)
YShift(18,22)
ResYAnchor(44,3)
YInterpolate(5,26,23,44)
YShift(44,31)
YShift(31,27)
YShift(31,51)
ResYAnchor(52,2)
YAnchor(67)
YShift(67,60)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni024B">
/* Y direction */
ResYAnchor(2,6)
ResYAnchor(11,7)
YShift(11,43)
ResYAnchor(22,11)
YShift(22,33)
YShift(22,0)
YShift(0,48)
YAnchor(62,19)
YShift(62,55)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni024C">
/* Y direction */
ResYAnchor(0,2)
YShift(0,22)
YAnchor(23)
YShift(23,25)
YIPAnchor(0,11,23)
YShift(11,12)
YShift(11,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni024E">
/* Y direction */
ResYAnchor(4,2)
YShift(4,7)
YAnchor(9)
YIPAnchor(4,3,9)
YInterpolate(3,5,8,11,9)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni024F">
/* Y direction */
ResYAnchor(5,6)
YShift(5,24)
ResYAnchor(12,15)
YShift(12,19)
YIPAnchor(5,3,12)
YInterpolate(3,25,4,26,27,12)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0292">
/* Y direction */
ResYAnchor(0,15)
YShift(0,5)
YAnchor(5)
YShift(0,9)
ResYAnchor(22,6)
YIPAnchor(0,18,22)
YShift(18,19)
YShift(19,25)
YShift(22,21)
YShift(21,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0293">
/* Y direction */
ResYAnchor(0,15)
YShift(0,39)
YShift(0,9)
YAnchor(9)
YShift(9,49)
YShift(0,38)
YShift(38,37)
YShift(0,42)
YShift(42,45)
YShift(45,13)
YShift(45,36)

ResYAnchor(25,6)
YShift(25,24)
YShift(25,27)
YIPAnchor(0,21,25)
YShift(21,22)
YShift(22,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni029D.ccmp">
/* Y direction */
ResYAnchor(33,15)
YShift(33,12)
YShift(33,41)
YShift(41,6)
ResYAnchor(45,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02A9">
/* Y direction */
ResYAnchor(0,6)
YAnchor(2,10)

YShift(2,17)
YShift(2,28)

ResYAnchor(10,7)
YShift(10,23)

ResYAnchor(35,15)
YShift(35,42)

YAnchor(48,10)

ResYAnchor(53,1)

YShift(53,60)

ResYAnchor(68,6)
YShift(68,67)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02AB">
/* Y direction */
YAnchor(2,10)
YAnchor(6,10)
YShift(6,3)
YShift(3,7)
ResYAnchor(13,6)
YShift(13,4)
YShift(13,8)
YShift(13,12)
YAnchor(16,10)
ResYAnchor(17,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02AC">
/* Y direction */
ResYAnchor(10,2)
YShift(10,1)
YShift(1,21)
YShift(21,12)
YDist(10,9,&gt;=)
YShift(9,5)
YShift(9,19)
YShift(19,15)
YAnchor(31,18)
YShift(31,27)
YShift(27,41)
YShift(41,36)
YDist(31,32,&gt;=)
YShift(32,23)
YShift(23,43)
YShift(43,34)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02AE">
/* Y direction */
ResYAnchor(0,14)
ResYAnchor(1,6)
ResYAnchor(10,11)
YShift(10,23)
ResYAnchor(42,7)
YShift(42,35)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02B2.ccmp">
/* Y direction */
YAnchor(0)
YAnchor(6)
YShift(6,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02B9">
/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02BB">
/* Y direction */
YAnchor(0)
YDist(0,5,&gt;=)
YInterpolate(5,6,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02BD">
/* Y direction */


/* Y direction */
YAnchor(6)
YDist(6,0,&gt;=)
YInterpolate(6,5,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02BE">
/* Y direction */
YAnchor(8)
YShift(8,7)
YDist(8,0,&gt;=2)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02BF">
/* Y direction */

/* Y direction */
YAnchor(6)
YShift(6,7)
YDist(6,0,&gt;=2)
YShift(0,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02C0">
/* Y direction */
YAnchor(4)
YShift(4,27)
YDist(4,31,&gt;=)
YDist(4,34,&gt;=)
YDist(34,32,&gt;=)
YShift(32,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02C1">
/* Y direction */
YAnchor(29)
YShift(29,1)
YAnchor(1)
YShift(29,5)
YAnchor(35)
YDist(35,34,&gt;=)
YShift(34,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02C2">
/* Y direction */
YAnchor(2)
YShift(2,1)
YAnchor(9)
YShift(9,5)
YInterpolate(2,3,7,0,6,4,8,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02C3">
/* Y direction */
YAnchor(2)
YShift(2,1)
YAnchor(9)
YShift(9,5)
YInterpolate(2,3,7,0,6,4,8,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02C4">
/* Y direction */
YAnchor(1)
YShift(1,5)
YAnchor(3)
YShift(3,7)
YShift(7,4)
YShift(4,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02C5">
/* Y direction */
YAnchor(1)
YShift(1,5)
YAnchor(3)
YShift(3,7)
YShift(7,4)
YShift(4,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02CC">
/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02D0">
/* Y direction */
YAnchor(20,6)
YDist(20,14,&gt;=2)
YAnchor(41,10)
YDist(41,26,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02D1">
/* VTTTalk Unicode 0x2d1 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(12)	/* min */
YAnchor(0)	/* max */

/* Extreme Max */
YShift(0,6)

/* Extreme Min */
YShift(12,15)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02D3">
/* Y direction */
YAnchor(8)
YShift(8,9)
YDist(8,1,&gt;=)
YShift(1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02D4">
/* Y direction */
YAnchor(1)
YDist(1,3,&gt;=2)
YShift(1,4)
YShift(1,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02D5">
/* Y direction */
YAnchor(1)
YDist(1,0,&gt;=2)
YShift(1,5)
YShift(1,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02D6">
/* Y direction */
YAnchor(4)
YDist(4,3,&gt;=)
YDist(4,7,&gt;=)
YDist(7,2,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02D7">
/* Y direction */
YAnchor(3)
YShift(3,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02DE">
/* Y direction */
YAnchor(14)
YShift(14,7)
YDist(14,2,&gt;=)
YInterpolate(14,0,19,1,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E4">
/* Y direction */
ResYAnchor(23,3)
YShift(23,0)
YAnchor(0)
YShift(23,4)
YDist(23,15,&gt;=)
YDist(15,29,&gt;=)
YShift(15,12)
YShift(12,30)
YAnchor(28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5">
/* Y direction */
ResYAnchor(0,2)
YShift(0,7)
YAnchor(7)
YShift(7,6)
YAnchor(1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E5_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 5 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* YDir: Stroke #0 */
YShift(5,4) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(5,9)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E5_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 5 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* YDir: Stroke #0 */
YShift(5,4) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(5,9)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E5_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 5 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* YDir: Stroke #0 */
YShift(5,4) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(5,9)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E5_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 4 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(4)	/* max */

/* YDir: Stroke #0 */
YShift(4,3) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(4,8)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(4)	/* max */

/* Extreme Max */
YShift(4,7)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E6_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* Extreme Max */
YShift(5,8)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E6_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 16  DISABLED for a NON-LATIN glyph */
/* CVT 3 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(3)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YInterpolate(1,9,3)
YAnchor(9)
YShift(9,6) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(1,8)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E6_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(4)	/* max */

/* Extreme Max */
YShift(4,7)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E6_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 9 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* Extreme Max */
YShift(5,9)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E6_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 8 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(4)	/* max */

/* Extreme Max */
YShift(4,8)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 4 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(4)	/* max */

/* Extreme Max */
YShift(4,7)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E7_uni02E5">
/* Y direction */
YAnchor(0)
YAnchor(5)
YShift(5,8)
YInterpolate(0,3,6,2,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E7_uni02E6">
/* Y direction */
YAnchor(0)
YAnchor(5)
YShift(5,9)
YInterpolate(0,3,6,2,7,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E7_uni02E7">
/* Y direction */
YAnchor(1)
YShift(1,8)
YAnchor(3)
YIPAnchor(1,6,3)
YShift(6,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E7_uni02E8">
/* Y direction */
YAnchor(0)
YAnchor(5,2)
YShift(5,9)
YInterpolate(0,2,7,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E7_uni02E9">
/* Y direction */
YAnchor(0)
YAnchor(3)
YShift(3,6)
YInterpolate(0,4,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 4 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(4)	/* max */

/* Extreme Max */
YShift(4,7)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E8_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 5 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* Extreme Max */
YShift(5,8)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E8_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 5 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* Extreme Max */
YShift(5,9)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E8_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 5 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* Extreme Max */
YShift(5,9)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E8_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 3 18  DISABLED for a NON-LATIN glyph */
/* CVT 8 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(3)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YInterpolate(1,6,3)
YAnchor(6)
YShift(6,9) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(1,8)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E8_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 4 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(4)	/* max */

/* Extreme Max */
YShift(4,8)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 3 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(3)	/* max */

/* Extreme Max */
YShift(3,6)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E9_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 3 18  DISABLED for a NON-LATIN glyph */
/* CVT 5 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* Extreme Max */
YShift(5,8)

/* Extreme Min */
YShift(0,3)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E9_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 3 18  DISABLED for a NON-LATIN glyph */
/* CVT 5 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* Extreme Max */
YShift(5,9)

/* Extreme Min */
YShift(0,3)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E9_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 3 18  DISABLED for a NON-LATIN glyph */
/* CVT 5 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* Extreme Max */
YShift(5,9)

/* Extreme Min */
YShift(0,3)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E9_uni02E8">
/* Y direction */
YAnchor(0)
YShift(0,8)
YShift(0,3)
YShift(3,4)
YShift(3,9)
YAnchor(2)
YShift(2,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E5_uni02E9_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* CVT 6 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(4)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YShift(4,7) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(1,6)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6">
/* VTTTalk Unicode 0x2e6 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
ResYAnchor(0,2)

/* YDir: Stroke #0 */
YInterpolate(0,7,1)
YAnchor(7)
YShift(7,6) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 5 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E5_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(7)	/* max */

/* YDir: Stroke #0 */
YShift(7,4) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E5_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 6 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(6)	/* max */

/* Extreme Max */
YShift(6,9)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E5_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 6 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(6)	/* max */

/* Extreme Max */
YShift(6,9)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E5_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 6 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(6)	/* max */

/* Extreme Max */
YShift(6,9)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E5_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 5 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* Extreme Max */
YShift(5,8)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E6_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(7)	/* max */

/* YDir: Stroke #0 */
YInterpolate(7,5,0)
YAnchor(5)
YShift(5,4) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E6_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 9 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

/* YDir: Stroke #0 */
YInterpolate(8,5,0)
YAnchor(5)
YShift(5,4) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E6_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 9 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

/* YDir: Stroke #0 */
YInterpolate(8,5,0)
YAnchor(5)
YShift(5,4) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E6_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 8 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(7)	/* max */

/* YDir: Stroke #0 */
YInterpolate(7,4,0)
YAnchor(4)
YShift(4,3) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(6)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E7_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(7)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E7_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 9 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E7_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 16  DISABLED for a NON-LATIN glyph */
/* CVT 3 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(3)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YInterpolate(1,6,3)
YAnchor(6)
YShift(6,9) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E7_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 5 16  DISABLED for a NON-LATIN glyph */
/* CVT 6 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(6)	/* min */
YAnchor(4)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E7_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 8 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(7)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(6)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E8_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(7)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E8_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 9 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E8_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 9 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E8_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 16  DISABLED for a NON-LATIN glyph */
/* CVT 3 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(3)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YInterpolate(1,6,3)
YAnchor(6)
YShift(6,9) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E8_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 8 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(7)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 6 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E9_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 3 18  DISABLED for a NON-LATIN glyph */
/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(7)	/* max */

/* Extreme Min */
YShift(0,3)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E9_uni02E6">
/* Y direction */
YAnchor(0,18)
YShift(0,3)
YAnchor(8)
YInterpolate(3,6,2,4,5,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E9_uni02E7">
/* Y direction */
YAnchor(0)
YShift(0,3)
YAnchor(8)
YInterpolate(3,6,2,7,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E9_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 18  DISABLED for a NON-LATIN glyph */
/* CVT 8 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(7)	/* max */

/* Extreme Min */
YShift(0,2)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E6_uni02E9_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 16  DISABLED for a NON-LATIN glyph */
/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(4)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YShift(4,7) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7">
/* VTTTalk Unicode 0x2e7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
ResYAnchor(0,2)

/* YDir: Stroke #0 */
YInterpolate(0,6,1)
YAnchor(6)
YShift(6,7) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 5 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E5_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(7)	/* max */

/* YDir: Stroke #0 */
YShift(7,4) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E5_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 6 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(6)	/* max */

/* Extreme Max */
YShift(6,9)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E5_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 6 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(6)	/* max */

/* Extreme Max */
YShift(6,9)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E5_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 6 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(6)	/* max */

/* Extreme Max */
YShift(6,9)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E5_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 5 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(5)	/* max */

/* Extreme Max */
YShift(5,8)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(6)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E6_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 3 16  DISABLED for a NON-LATIN glyph */
/* CVT 5 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(5)	/* min */
YAnchor(3)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E6_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 16  DISABLED for a NON-LATIN glyph */
/* CVT 3 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(3)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YInterpolate(1,9,3)
YAnchor(9)
YShift(9,6) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E6_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 9 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E6_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 9 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E6_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 8 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(7)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E7_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(7)	/* max */

/* YDir: Stroke #0 */
YInterpolate(7,4,0)
YAnchor(4)
YShift(4,5) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E7_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* CVT 9 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

/* YDir: Stroke #0 */
YInterpolate(8,4,0)
YAnchor(4)
YShift(4,5) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E7_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* YDir: Stroke #0 */
YInterpolate(0,5,1)
YAnchor(5)
YShift(5,6) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E7_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 2 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* YDir: Stroke #0 */
YInterpolate(0,4,1)
YAnchor(4)
YShift(4,5) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E8_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 8 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E8_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E8_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E8_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* CVT 8 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(8)	/* min */
YAnchor(6)	/* max */

/* YDir: Stroke #0 */
YInterpolate(6,1,8)
YAnchor(1)
YShift(1,4) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E8_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 16  DISABLED for a NON-LATIN glyph */
/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(3)	/* min */
YAnchor(1)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 2 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E9_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* CVT 8 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Min */
YShift(1,4)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E9_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Min */
YShift(1,4)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E9_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Min */
YShift(1,4)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E9_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Min */
YShift(1,4)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E7_uni02E9_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(6)	/* max */

/* YDir: Stroke #0 */
YShift(1,4) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8">
/* VTTTalk Unicode 0x2e8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
ResYAnchor(0,2)

/* YDir: Stroke #0 */
YInterpolate(0,6,1)
YAnchor(6)
YShift(6,7) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 6 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E5_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 16  DISABLED for a NON-LATIN glyph */
/* CVT 6 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(6)	/* min */
YAnchor(4)	/* max */

/* YDir: Stroke #0 */
YShift(4,1) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E5_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 18  DISABLED for a NON-LATIN glyph */
/* CVT 8 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(2)	/* min */
YAnchor(0)	/* max */

/* Extreme Max */
YShift(0,8)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E5_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Max */
YShift(0,7)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E5_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Max */
YShift(0,7)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E5_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 18  DISABLED for a NON-LATIN glyph */
/* CVT 6 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Max */
YShift(0,6)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E6_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 8 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E6_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* CVT 8 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(8)	/* min */
YAnchor(6)	/* max */

/* YDir: Stroke #0 */
YInterpolate(6,4,8)
YAnchor(4)
YShift(4,1) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E6_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E6_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E6_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 2 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E7_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 8 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E7_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 16  DISABLED for a NON-LATIN glyph */
/* CVT 3 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(3)	/* min */
YAnchor(1)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E7_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* CVT 8 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(8)	/* min */
YAnchor(6)	/* max */

/* YDir: Stroke #0 */
YInterpolate(6,1,8)
YAnchor(1)
YShift(1,4) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E7_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E7_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 2 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E8_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 8 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* YDir: Stroke #0 */
YInterpolate(0,5,1)
YAnchor(5)
YShift(5,6) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E8_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* YDir: Stroke #0 */
YInterpolate(0,5,1)
YAnchor(5)
YShift(5,6) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E8_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* YDir: Stroke #0 */
YInterpolate(0,5,1)
YAnchor(5)
YShift(5,6) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E8_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 2 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* YDir: Stroke #0 */
YInterpolate(0,4,1)
YAnchor(4)
YShift(4,5) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 2 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E9_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* CVT 8 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Min */
YShift(1,4)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E9_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Min */
YShift(1,4)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E9_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Min */
YShift(1,4)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E9_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Min */
YShift(1,4)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E8_uni02E9_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(6)	/* max */

/* YDir: Stroke #0 */
YShift(1,4) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9">
/* VTTTalk Unicode 0x2e9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 6 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
ResYAnchor(0,2)

/* YDir: Stroke #0 */
YInterpolate(0,6,1)
YAnchor(6)
YShift(6,7) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* CVT 6 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Min */
YShift(1,4)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E5_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 18  DISABLED for a NON-LATIN glyph */
/* CVT 4 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(2)	/* min */
YAnchor(4)	/* max */

/* YDir: Stroke #0 */
YShift(4,1) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(2,7)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E5_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 8 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(4)	/* min */
YAnchor(0)	/* max */

/* Extreme Max */
YShift(0,3)

/* Extreme Min */
YShift(4,8)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E5_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 5 18  DISABLED for a NON-LATIN glyph */
/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Max */
YShift(0,7)

/* Extreme Min */
YShift(1,5)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E5_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 5 18  DISABLED for a NON-LATIN glyph */
/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Max */
YShift(0,7)

/* Extreme Min */
YShift(1,5)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E5_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* CVT 6 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Max */
YShift(0,6)

/* Extreme Min */
YShift(1,4)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Min */
YShift(1,4)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E6_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 5 18  DISABLED for a NON-LATIN glyph */
/* CVT 8 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Min */
YShift(1,5)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E6_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 18  DISABLED for a NON-LATIN glyph */
/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(2)	/* min */
YAnchor(6)	/* max */

/* YDir: Stroke #0 */
YInterpolate(6,4,2)
YAnchor(4)
YShift(4,1) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(2,9)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E6_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 5 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Min */
YShift(1,5)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E6_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 5 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Min */
YShift(1,5)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E6_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Min */
YShift(1,4)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Min */
YShift(1,4)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E7_uni02E5">
/* Y direction */
YAnchor(0)
YShift(0,3)
YAnchor(1)
YShift(1,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E7_uni02E6">
/* Y direction */
YAnchor(0)
YAnchor(1)
YShift(1,5)
YInterpolate(1,3,8,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E7_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 18  DISABLED for a NON-LATIN glyph */
/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(2)	/* min */
YAnchor(6)	/* max */

/* YDir: Stroke #0 */
YInterpolate(6,1,2)
YAnchor(1)
YShift(1,4) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(2,9)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E7_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 5 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Min */
YShift(1,5)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E7_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 4 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Min */
YShift(1,4)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Min */
YShift(1,4)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E8_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* CVT 8 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Min */
YShift(1,5)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E8_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Min */
YShift(1,5)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E8_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Min */
YShift(1,4)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E8_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* CVT 8 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(2)	/* min */
YAnchor(6)	/* max */

/* YDir: Stroke #0 */
YInterpolate(6,1,2)
YAnchor(1)
YShift(1,4) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(2,9)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E8_uni02E9">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 2 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* Extreme Min */
YShift(1,4)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E9_uni02E5">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 5 18  DISABLED for a NON-LATIN glyph */
/* CVT 8 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* YDir: Stroke #0 */
YInterpolate(0,5,1)
YAnchor(5)
YShift(5,6) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E9_uni02E6">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 5 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* YDir: Stroke #0 */
YInterpolate(0,5,1)
YAnchor(5)
YShift(5,6) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E9_uni02E7">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 5 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* YDir: Stroke #0 */
YInterpolate(0,5,1)
YAnchor(5)
YShift(5,6) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02E9_uni02E9_uni02E8">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 16  DISABLED for a NON-LATIN glyph */
/* CVT 5 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* YDir: Stroke #0 */
YInterpolate(0,5,1)
YAnchor(5)
YShift(5,6) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02EA">
/* Y direction */
YAnchor(2)
YShift(2,6)
YShift(6,3)
YAnchor(4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02EB">
/* VTTTalk Unicode 0x2eb */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 6 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(5)	/* min */
YAnchor(4)	/* max */

/* YDir: Stroke #0 */
YInterpolate(4,2,5)
YAnchor(2)
YShift(2,3) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02EC">
/* Y direction */
YAnchor(0)
YShift(0,7)
YShift(0,2)
YShift(2,4)
YDist(0,6,&gt;=2)
YInterpolate(6,1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02ED">
/* Y direction */
YAnchor(7)
YShift(7,6)
YDist(7,2,&gt;=)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02EF">
/* Y direction */
YAnchor(7)
YShift(7,3)
YDist(7,2,&gt;=)
YShift(2,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02F0">
/* VTTTalk Unicode 0x2f0 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(1)	/* min */
YAnchor(3)	/* max */

/* Contour #1 */
YShift(3,7) /* max */
YShift(1,5) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02F1">
/* Y direction */
YAnchor(9)
YShift(9,5)
YDist(9,2,&gt;=3)
YShift(2,1)
YInterpolate(2,3,7,0,6,4,8,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02F2">
/* VTTTalk Unicode 0x2f2 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Y direction */
YAnchor(6)
YShift(6,5)
YDist(6,3,&gt;=3)
YShift(3,4)
YInterpolate(6,0,9,7,1,2,8,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02F3">
/* Y direction */
YAnchor(3)
YShift(3,21)
YDist(3,9,&gt;=2)
YShift(9,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02F7">
/* Y direction */
YAnchor(5,19)
YShift(5,23)
YShift(5,13)
YShift(13,14)
YDist(5,18,&gt;=2)
YShift(18,10)
YShift(18,0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02F9">
/* VTTTalk Unicode 0x2f9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* YDir: Stroke #0 */
YInterpolate(0,4,1)
YAnchor(4)
YShift(4,7) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02FA">
/* Y direction */
YAnchor(0)
YShift(0,5)
YShift(5,6)
YAnchor(1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02FB">
/* Y direction */
YAnchor(0)
YDist(0,2,&gt;=2)
YShift(0,4)
YShift(4,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02FC">
/* Y direction */
YAnchor(1)
YShift(1,2)
YDist(1,5,&gt;=2)
YShift(1,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02FD">
/* Y direction */
YAnchor(2)
YShift(2,3)
YShift(2,6)
YAnchor(6)
YShift(6,10)
YDist(2,7,&gt;=2)
YShift(7,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02FE">
/* Y direction */
YAnchor(4)
YDist(4,6,&gt;=)
YShift(6,2)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02FF">
/* Y direction */
YAnchor(1)
YShift(1,8)
YShift(1,0)
YShift(0,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni030C">
/* Y direction */


/* Y direction */
YAnchor(0)
YDist(0,4,&gt;=2)
YShift(4,2)
YShift(4,6)
YShift(6,8)
YInterpolate(0,5,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni030C_uni1ABB">
/* Y direction */
YAnchor(38)
YShift(38,33)
YShift(38,0)
YShift(0,16)
YDist(38,32,&gt;=2)
YShift(32,34)
YShift(32,8)
YShift(8,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni030F">
/* Y direction */


YAnchor(0)
YShift(0,4)
YDist(0,3,&gt;=2)
YShift(3,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0313">
/* Y direction */
YAnchor(10)
YDist(10,5,&gt;=3)
YShift(5,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0315">
/* Y direction */
YAnchor(10)
YDist(10,5,&gt;=3)
YShift(5,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0326">
/* Y direction */
YAnchor(9)
YDist(9,4,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni032C">
/* Y direction */
YAnchor(3)
YDist(3,1,&gt;=2)
YShift(3,2,8)
YShift(3,6)
YInterpolate(3,5,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0346">
/* Y direction */
YAnchor(6)
YShift(6,1)
YShift(6,2)
YShift(2,10)
YAnchor(10)
YDist(6,4,&gt;=2)
YShift(4,9)
YAnchor(9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0347">
/* Y direction */
YAnchor(0)
YShift(0,3)
YDist(0,4,&gt;=2)
YShift(4,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0349">
/* Y direction */
YAnchor(7)
YShift(7,0)
YDist(7,3,&gt;=)
YShift(7,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni034A">
/* Y direction */
YAnchor(23)
YShift(23,10)
YShift(23,31)
YShift(23,41)
YShift(23,36)
YAnchor(36)
YShift(36,0)
YShift(36,18)
YShift(36,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni034B">
/* Y direction */
YAnchor(5)
YShift(5,13)
YShift(5,23)
YShift(5,18)
YAnchor(18)
YShift(18,0)
YShift(18,10)
YShift(18,35)
YAnchor(35)
YShift(35,29)
YShift(5,41)
YShift(41,47)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni034C">
/* Y direction */
YAnchor(4)
YShift(4,12)
YShift(4,22)
YDist(4,17,&gt;=2)
YShift(17,0)
YShift(17,9)
YShift(17,29)
YAnchor(29)
YShift(29,37)
YShift(29,47)
YDist(29,42,&gt;=2)
YShift(42,25)
YShift(42,34)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni034D">
/* Y direction */
YAnchor(2)
YShift(2,3)
YShift(3,8)
YShift(8,16)
YShift(2,5)
YShift(5,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni034E">
/* Y direction */
YAnchor(11)
YDist(11,1,&gt;=)
YShift(11,6)
YShift(11,2)
YShift(2,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni034F">
/* VTTTalk Unicode 0x34f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni0350">
/* Y direction */
YAnchor(7)
YShift(7,1)
YShift(7,2,8)
YShift(2,3)
YAnchor(3)
YShift(3,4)
YShift(7,6)
YAnchor(6)
YShift(6,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0351">
/* Y direction */
YAnchor(7)
YShift(7,8)
YDist(7,0,&gt;=)
YShift(0,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0352">
/* Y direction */
YAnchor(19)
YShift(19,25)
YShift(19,1)
YAnchor(1)
YShift(1,8)
YShift(1,5)
YShift(5,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0353">
/* Y direction */
YAnchor(6)
YShift(6,2)
YDist(6,4,&gt;=)
YShift(4,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0359">
/* Y direction */
YAnchor(5)
YDist(5,12,&gt;=)
YShift(12,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni035A">
/* VTTTalk Unicode 0x35a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(10)	/* min */
YAnchor(4)	/* max */

/* YDir: Stroke #0 */
YInterpolate(4,29,10)
YAnchor(29)
YShift(29,47) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(4,22) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YInterpolate(4,35,10)
YAnchor(35)
YShift(35,41) /*perpendicular to the stroke*/

/* YDir: Stroke #3 */
YShift(10,16) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni035B">
/* Y direction */
YAnchor(2)
YDist(2,23,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni035D">
/* Y direction */
YAnchor(6)
YShift(6,17)
YDist(6,12,&gt;=2)
YShift(12,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni035E">
/* Y direction */
YAnchor(2)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0360">
/* Y direction */
YAnchor(17,17)
YShift(17,10)
YDist(17,4,&gt;=)
YShift(4,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0361">
/* Y direction */
YAnchor(17)
YShift(17,6)
YDist(17,11,&gt;=2)
YShift(11,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0362">
/* Y direction */
YAnchor(2)
YShift(2,3)
YDist(3,8,&gt;=)
YDist(2,5,&gt;=)
YInterpolate(5,11,7,10,6,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0363">
/* Y direction */
YAnchor(11)
YDist(11,38,&gt;=3)
YShift(38,19)
YAnchor(19)
YInterpolate(38,31,24,22,4,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0364">
/* Y direction */
YAnchor(9)
YDist(9,0,&gt;=3)
YInterpolate(0,31,15,16,22,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0365">
/* Y direction */
YAnchor(3)
YDist(3,2,&gt;=3)
YDist(3,13,&gt;=)
YShift(13,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0366">
/* Y direction */
YAnchor(9)
YShift(9,27)
YDist(9,0,&gt;=3)
YShift(0,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0367">
/* Y direction */
YAnchor(15)
YShift(15,1)
YDist(15,4,&gt;=3)
YShift(4,10)
YAnchor(10)
YShift(10,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0368">
/* Y direction */
YAnchor(9)
YDist(9,0,&gt;=3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0369">
/* Y direction */
YAnchor(14)
YShift(14,1)
YAnchor(1)
YShift(14,32)
YDist(14,4,&gt;=3)
YShift(4,5)
YAnchor(5)
YShift(5,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni036A">
/* Y direction */
YAnchor(9)
YShift(9,0)
YAnchor(0)
YShift(9,20)
YDist(9,2,&gt;=3)
YShift(2,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni036B">
/* Y direction */
YAnchor(10)
YShift(10,4)
YAnchor(4)
YDist(10,2,&gt;=3)
YShift(2,16)
YShift(16,36)
YShift(10,30)
YShift(30,41)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni036C">
/* Y direction */
YAnchor(18)
YDist(18,2,&gt;=3)
YShift(18,4)
YAnchor(4)
YShift(18,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni036D">
/* Y direction */
YAnchor(3)
YShift(3,4)
YAnchor(4)
YDist(3,17,&gt;=3)
YShift(17,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni036E">
/* Y direction */
YAnchor(9)
YShift(9,1)
YDist(9,8,&gt;=3)
YShift(8,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni036F">
/* Y direction */
YAnchor(11)
YShift(11,2)
YDist(11,8,&gt;=3)
YShift(8,6)
YInterpolate(8,7,10,4,1,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0370">
/* VTTTalk Unicode 0x370 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 6 18  DISABLED for a NON-LATIN glyph */
/* CVT 7 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(5)	/* min */
ResYAnchor(4,2)	/* max */

/* YDir: Stroke #0 */
YInterpolate(4,2,5)
YAnchor(2)
YShift(2,3) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0371">
/* Y direction */
YAnchor(0)
ResYAnchor(14,7)
YShift(14,7)
YIPAnchor(14,22,0)
YShift(22,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0372">
/* Y direction */
ResYAnchor(4,2)
YShift(4,3)
YShift(4,11)
YShift(4,14)
YShift(4,15)
YDist(4,6,&gt;=)
YShift(6,2)
YAnchor(10,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0373">
/* Y direction */
YAnchor(2,18)
ResYAnchor(3,2)
YShift(3,6)
YShift(3,11)
YShift(3,12)
YDist(3,14,&gt;=)
YShift(14,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0377">
/* Y direction */
ResYAnchor(0,6)
YShift(0,24)
YShift(0,21)
YShift(21,20)
YAnchor(7)
YShift(7,14)
YShift(7,25)
YAnchor(25)
YShift(25,22)
YShift(25,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni037B">
/* Y direction */
ResYAnchor(25,7)
YShift(25,16)
YDist(25,20,&gt;=)
ResYAnchor(36,11)
YDist(36,1,&gt;=)
YShift(36,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni037C">
/* Y direction */
ResYAnchor(12,11)
YShift(12,43)
YDist(12,47,&gt;=)
ResYAnchor(23,7)
YDist(23,28,&gt;=)
YShift(23,32)
YIPAnchor(23,9,12)
YShift(9,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni037D">
/* Y direction */
ResYAnchor(25,7)
YShift(25,16)
YDist(25,20,&gt;=)
ResYAnchor(36,11)
YDist(36,1,&gt;=)
YShift(36,5)
YIPAnchor(25,40,36)
YShift(40,46)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni03CF">
/* Y direction */
ResYAnchor(0,2)
YShift(0,4)
YAnchor(2,18)
YInterpolate(2,6,7,14,15,0)
YAnchor(11,19)
YShift(11,12)
YShift(11,13)
YShift(13,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni03D1">
/* Y direction */
YAnchor(13)
YShift(13,45)
ResYAnchor(23,11)
YShift(23,35)
YIPAnchor(23,4,13)
YShift(4,54)
YDist(23,30,&gt;=)
YShift(30,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni03D2">
/* Y direction */
YAnchor(2,18)
YShift(2,3)
YShift(3,22)
YShift(3,24)
YShift(3,26)
ResYAnchor(38,3)
YShift(38,31)
YShift(38,9)
YShift(9,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni03D6">
/* VTTTalk Unicode 0x3d6 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 60 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(15)	/* min */
ResYAnchor(3,6)	/* max */

/* YDir: Stroke #0 */
YShift(3,2) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(3,60,15)
ResYAnchor(60,11)
YShift(60,47) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YShift(15,28) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(3,5)

/* Extreme Max */
YShift(3,38)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni03D7">
/* Y direction */
YAnchor(0,18)
YShift(0,37)
YShift(37,36)
ResYAnchor(2,6)
YShift(2,4)
YShift(2,5)
YAnchor(18)
YShift(18,25)
ResYAnchor(50,7)
YShift(50,43)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni03D8">
/* Y direction */
YAnchor(1)
ResYAnchor(10,9)
YShift(10,47)
YInterpolate(47,3,10)
ResYAnchor(22,3)
YShift(22,35)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni03D9">
/* Y direction */
ResYAnchor(2,14)
ResYAnchor(10,7)
YShift(10,43)
ResYAnchor(21,11)
YShift(21,32)
YInterpolate(32,3,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni03F5">
/* Y direction */
YAnchor(3)
YShift(3,0)
ResYAnchor(14,6)
YShift(14,17)
YIPAnchor(14,29,3)
YShift(29,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni03F6">
/* Y direction */
ResYAnchor(14,6)
YShift(14,13)
YAnchor(27)
YShift(27,0)
YIPAnchor(14,28,27)
YShift(28,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni03FB">
/* Y direction */
ResYAnchor(1,6)
YShift(1,6)
YShift(1,7)
YShift(1,12)
YAnchor(8)
YAnchor(11)
YShift(11,3)
YAnchor(3)
YInterpolate(11,0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni03FD">
/* Y direction */
ResYAnchor(25,3)
YShift(25,16)
YDist(25,20,&gt;=)
ResYAnchor(36,9)
YDist(36,1,&gt;=)
YShift(36,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni03FE">
/* Y direction */
ResYAnchor(5,9)
YDist(5,0,&gt;=)
YShift(5,37)
ResYAnchor(16,3)
YDist(16,21,&gt;=)
YShift(16,25)
YIPAnchor(16,50,5)
YShift(50,44)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni03FF">
/* Y direction */
ResYAnchor(25,3)
YShift(25,16)
YDist(25,20,&gt;=)
ResYAnchor(36,9)
YDist(36,1,&gt;=)
YShift(36,5)
YIPAnchor(25,40,36)
YShift(40,46)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0402">
/* VTTTalk Unicode 0x402 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 14 9 */
/* CVT 30 8 */
/* CVT 35 2 */
/* Min and Max */
ResYAnchor(14,9)	/* min, CVT */
ResYAnchor(35,2)	/* max, CVT */

/* CVTs - beginning */
ResYAnchor(30,8)  /*knot, CVT*/ 
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(35,34) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(35,5,14)
YAnchor(5)
YShift(5,24) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(35,31)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0402.smcp">
/* Y direction */
YAnchor(3,125)
YShift(3,2)
YShift(3,5)
YAnchor(4,10)
YIPAnchor(4,13,3)
YShift(13,32)
YAnchor(22,11)
YShift(22,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0404">
/* Y direction */
ResYAnchor(9,9)
YDist(9,4,&gt;=)
YShift(9,41)
ResYAnchor(20,3)
YDist(20,25,&gt;=)
YShift(20,29)
YIPAnchor(20,2,9)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0404.smcp">
/* Y direction */
YAnchor(9,11)
YShift(9,40)
YAnchor(20,126)
YShift(20,29)
YIPAnchor(9,1,20)
YShift(1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0405">
/* Y direction */
ResYAnchor(15,3)
YDist(15,20,&gt;=)
YShift(15,24)
ResYAnchor(43,9)
YDist(43,49,&gt;=)
YShift(43,54)
YInterpolate(43,38,10,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0409">
/* Y direction */
ResYAnchor(0,2)
YShift(0,35)
YShift(0,21)
YShift(21,20)
ResYAnchor(9,8)
YShift(9,10)
YIPAnchor(0,22,9)
YShift(22,46)
YShift(9,33)
YShift(33,36)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0409.smcp">
/* Y direction */
YAnchor(8,10)
YShift(8,11)
YAnchor(28,10)
YShift(28,31)
YAnchor(45,125)
YShift(45,1)
YShift(45,29)
YShift(45,44)
YIPAnchor(28,41,45)
YShift(41,40)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni040A">
/* Y direction */
ResYAnchor(6,8)
YShift(6,19)
YShift(19,22)
ResYAnchor(7,2)
YShift(7,21)
YIPAnchor(7,2,6)
YShift(2,3)
YShift(2,32)
YAnchor(32)
YShift(32,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni040A.smcp">
/* Y direction */
YAnchor(30,10)
YShift(30,10)
YShift(10,13)
YAnchor(31,125)
YShift(31,11)
YIPAnchor(30,26,31)
YShift(26,27)
YShift(26,22)
YAnchor(22)
YShift(22,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni040B">
/* VTTTalk Unicode 0x40b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 24 8 */
/* CVT 29 2 */
/* Min and Max */
ResYAnchor(24,8)	/* min, CVT */
ResYAnchor(29,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(29,28) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(29,17,24)
YAnchor(17)
YShift(17,6) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(24,1)

/* Extreme Max */
YShift(29,25)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni040B.smcp">
/* Y direction */
YAnchor(3,125)
YShift(3,2)
YShift(3,5)
YAnchor(4,10)
YShift(4,19)
YIPAnchor(4,13,3)
YShift(13,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni040F">
/* Y direction */
ResYAnchor(0,8)
YShift(0,3)
YInterpolate(3,11,0)
ResYAnchor(1,2)
YShift(1,6)
YAnchor(9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni040F.smcp">
/* Y direction */
YAnchor(10,10)
YShift(10,2)
YAnchor(2)
YShift(10,14)
YShift(10,7)
YShift(7,3)
YAnchor(11,125)
YShift(11,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0411">
/* Y direction */
ResYAnchor(4,8)
YShift(4,17)
YShift(17,20)
ResYAnchor(5,2)
YShift(5,19)
YShift(19,2)
YIPAnchor(5,30,4)
YShift(30,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0411.smcp">
/* Y direction */
YAnchor(13,125)
YShift(13,26)
YShift(26,27)
YAnchor(14,10)
YShift(14,11)
YIPAnchor(14,1,13)
YShift(1,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0414">
/* Y direction */
YAnchor(5)
YShift(5,9)
ResYAnchor(20,2)
YShift(20,16)
YShift(20,15)
YShift(15,14)
ResYAnchor(30,8)
YShift(30,7)
YShift(30,3)
YShift(3,32)
YShift(30,17)
YShift(17,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0414.smcp">
/* Y direction */
YAnchor(0,125)
YShift(0,17)
YShift(17,22)
YAnchor(9,10)
YShift(9,20)
YShift(9,28)
YShift(9,10)
YShift(10,23)
YShift(9,29)
YAnchor(29)
YShift(29,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0416">
/* Y direction */
ResYAnchor(1,2)
YShift(1,10)
YShift(1,14)
ResYAnchor(8,8)
YShift(8,12)
YShift(8,20)
YShift(8,15)
YAnchor(15)
YShift(15,0)
YShift(0,3)
YShift(3,9)
YShift(3,17)
YShift(3,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0416.smcp">
/* Y direction */
YAnchor(15,125)
YShift(15,3)
YShift(3,9)
YAnchor(21,10)
YShift(21,2)
YShift(2,10)
YIPAnchor(2,14,15)
YShift(14,6)
YShift(14,17)
YShift(17,7)
YShift(7,11)
YShift(11,12)
YShift(17,23)
YShift(23,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0417">
/* Y direction */
ResYAnchor(21,3)
YShift(21,11)
YDist(21,15,&gt;=)
ResYAnchor(42,9)
YDist(42,48,&gt;=)
YShift(42,52)
YIPAnchor(21,62,42)
YShift(62,2)
YInterpolate(2,32,0,62)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0417.smcp">
/* Y direction */
YAnchor(21,126)
YShift(21,11)
YAnchor(42,11)
YShift(42,52)
YIPAnchor(42,62,21)
YShift(62,1)
YShift(62,2)
YShift(2,31)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0418">
/* Y direction */
ResYAnchor(6,8)
YShift(6,4)
ResYAnchor(8,2)
YShift(8,2)
YInterpolate(6,0,5,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0418.smcp">
/* Y direction */
YAnchor(8,125)
YShift(8,5)
YShift(5,2)
YShift(5,1)


YAnchor(11,10)
YShift(11,7)
YShift(11,10)
YShift(11,3,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni041A.smcp">
/* Y direction */
YAnchor(2,10)
YShift(2,10)
YAnchor(3,125)
YShift(3,9)
YIPAnchor(2,6,3)
YShift(6,7)
YShift(7,11)
YShift(11,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni041B">
/* Y direction */
ResYAnchor(8,2)
YShift(8,4)
YShift(8,3)
YShift(3,2)
ResYAnchor(17,8)
YShift(17,5)
YShift(17,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni041B.smcp">
/* Y direction */
YAnchor(6,10)
YAnchor(8,125)
YShift(8,3)
YShift(3,2)
YShift(3,7)
YAnchor(16,10)
YShift(16,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0423">
/* Y direction */
ResYAnchor(8,9)
YShift(8,15)
ResYAnchor(24,2)
YShift(24,2)
YInterpolate(8,23,22,0,21,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0423.smcp">
/* Y direction */
YAnchor(7,11)
YShift(7,14)
YShift(14,22)
YShift(22,21)
YAnchor(23,125)
YShift(23,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0424">
/* VTTTalk Unicode 0x424 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(43)	/* min */
ResYAnchor(42,3)	/* max */

/* YDir: Stroke #0 */
YInterpolate(42,0,43)
YAnchor(0)
YShift(0,22) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(42,12,43)
YAnchor(12)
YShift(12,31) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0426">
/* Y direction */
YAnchor(1)
ResYAnchor(6,8)
YShift(6,9)
YShift(6,4)
YShift(4,5)
ResYAnchor(7,2)
YShift(7,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0426.smcp">
/* Y direction */
YAnchor(8,10)
YShift(8,2)
YAnchor(2)
YShift(8,11)
YShift(8,16)
YShift(8,9)
YShift(9,5)
YAnchor(13,125)
YShift(13,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0427">
/* VTTTalk Unicode 0x427 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 2 */
/* CVT 24 8 */
/* Min and Max */
ResYAnchor(24,8)	/* min, CVT */
ResYAnchor(0,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(0,17,24)
YAnchor(17)
YShift(17,6) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(0,23)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0427.smcp">
/* Y direction */
YAnchor(2)
YAnchor(14,125)
YShift(14,3)
YIPAnchor(2,9,14)
YShift(9,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0428">
/* VTTTalk Unicode 0x428 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 2 */
/* CVT 11 8 */
/* Min and Max */
ResYAnchor(11,8)	/* min, CVT */
ResYAnchor(0,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(11,2) /*perpendicular to the stroke*/
YShift(2,6) /*along top edge*/

/* Extreme Max */
YShift(0,9)

/* Extreme Max */
YShift(0,5)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0428.smcp">
/* Y direction */
YAnchor(14,125)
YShift(14,3)
YShift(14,6)
YShift(6,10)
YAnchor(15,16)
YShift(15,7)
YShift(7,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0429">
/* Y direction */
YAnchor(1)
ResYAnchor(6,2)
YShift(6,11)
YShift(6,15)
ResYAnchor(17,8)
YShift(17,4)
YShift(17,8)
YShift(8,5)
YShift(8,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0429.smcp">
/* Y direction */
YAnchor(8,10)
YShift(8,9)
YShift(8,19)
YShift(19,12)
YShift(12,16)
YShift(16,2)
YAnchor(2)
YShift(16,4)
YAnchor(21,125)
YShift(21,13)
YShift(13,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni042A">
/* VTTTalk Unicode 0x42a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 2 */
/* CVT 15 8 */
/* Min and Max */
ResYAnchor(15,8)	/* min, CVT */
ResYAnchor(1,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(1,0) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(1,28,15)
YAnchor(28)
YShift(28,4) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YShift(15,18) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(1,17)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni042A.smcp">
/* Y direction */
YAnchor(0,125)
YShift(0,1)
YShift(0,17)
YAnchor(18,10)
YShift(18,15)
YIPAnchor(18,5,0)
YShift(5,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni042B">
/* VTTTalk Unicode 0x42b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 11 8 */
/* CVT 12 2 */
/* Min and Max */
ResYAnchor(11,8)	/* min, CVT */
ResYAnchor(12,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(12,24,11)
YAnchor(24)
YShift(24,0) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(11,14) /*perpendicular to the stroke*/

/* Contour #1 */
YShift(12,25) /* max */
YShift(11,26) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni042C">
/* VTTTalk Unicode 0x42c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 11 8 */
/* CVT 12 2 */
/* Min and Max */
ResYAnchor(11,8)	/* min, CVT */
ResYAnchor(12,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(12,24,11)
YAnchor(24)
YShift(24,0) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(11,14) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni042C.smcp">
/* Y direction */
YAnchor(10,125)
YAnchor(9,10)
YShift(9,12)
YIPAnchor(9,22,10)
YShift(22,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni042D">
/* Y direction */
ResYAnchor(30,3)
YShift(30,21)
YDist(30,25,&gt;=)
ResYAnchor(41,9)
YDist(41,5,&gt;=)
YShift(41,9)
YIPAnchor(30,2,41)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni042D.smcp">
/* Y direction */
YAnchor(28,126)
YShift(28,19)
YAnchor(39,11)
YShift(39,8)
YIPAnchor(39,1,28)
YShift(1,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni042E">
/* VTTTalk Unicode 0x42e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 8 */
/* CVT 3 2 */
/* CVT 14 9 */
/* CVT 25 3 */
/* Min and Max */
ResYAnchor(14,9)	/* min, CVT */
ResYAnchor(25,3)	/* max, CVT */

/* CVTs - beginning */
ResYAnchor(2,8)  /*knot, CVT*/ 
ResYAnchor(3,2)  /*knot, CVT*/ 
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(25,36) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(25,6,14)
YAnchor(6)
YShift(6,7) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YShift(14,47) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni042E.smcp">
/* Y direction */
YAnchor(6,10)
YAnchor(7,125)
YIPAnchor(6,2,7)
YShift(2,3)
YAnchor(14,11)
YShift(14,47)
YAnchor(25,126)
YShift(25,36)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni042F">
/* Y direction */
ResYAnchor(9,2)
YShift(9,14)
ResYAnchor(25,8)
YShift(25,12)
YIPAnchor(12,0,9)
YShift(0,22)
YInterpolate(22,23,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni042F.smcp">
/* Y direction */
YAnchor(1,10)
YShift(1,25)
YAnchor(22,125)
YShift(22,27)
YIPAnchor(25,4,22)
YShift(4,0)
YShift(4,35)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0431">
/* VTTTalk Unicode 0x431 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 1 */
/* CVT 34 11 */
/* Min and Max */
ResYAnchor(34,11)	/* min, CVT */
ResYAnchor(0,1)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(0,23,34)
YAnchor(23)
YShift(23,48) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(34,58) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0432">
/* Y direction */
ResYAnchor(15,10)
YShift(15,29)
YShift(29,30)
ResYAnchor(16,6)
YShift(16,13)
YIPAnchor(16,40,1,15)
YShift(40,41)
YInterpolate(41,43,27,40)
YShift(1,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0433">
/* VTTTalk Unicode 0x433 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 10 */
/* CVT 5 6 */
/* Min and Max */
ResYAnchor(4,10)	/* min, CVT */
ResYAnchor(5,6)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(5,2) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0434">
/* Y direction */
ResYAnchor(0,6)
YShift(0,16)
YShift(16,21)
ResYAnchor(8,10)
YShift(8,19)
YShift(8,27)
YShift(8,22)
YShift(22,9)
YAnchor(24)
YShift(24,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0436">
/* Y direction */
ResYAnchor(2,6)
YShift(2,13)
YShift(13,19)
YAnchor(12,18)
YShift(12,7)
YShift(12,20)
YIPAnchor(12,0,2)
YShift(0,6)
YShift(0,3)
YShift(3,9)
YShift(3,17)
YShift(17,22)
YShift(0,16)
YShift(16,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0437">
/* Y direction */
ResYAnchor(20,7)
YShift(20,11)
YDist(20,15,&gt;=)
ResYAnchor(41,11)
YDist(41,46,&gt;=)
YShift(41,50)
YIPAnchor(20,59,41)
YShift(59,2)
YInterpolate(2,31,0,59)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0438">
/* Y direction */
ResYAnchor(6,10)
YShift(6,4)
ResYAnchor(8,6)
YShift(8,2)
YInterpolate(6,0,5,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni043A">
/* Y direction */
ResYAnchor(2,10)
YShift(2,10)
ResYAnchor(3,6)
YShift(3,9)
YIPAnchor(3,6,2)
YShift(6,11)
YShift(6,7)
YShift(7,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni043B">
/* Y direction */
ResYAnchor(8,6)
YShift(8,4)
YShift(8,3)
YShift(3,2)
ResYAnchor(17,10)
YShift(17,5)
YShift(17,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni043C">
/* Y direction */
ResYAnchor(9,10)
YShift(9,3)
YShift(9,11)
ResYAnchor(10,6)
YShift(10,1)
YShift(10,6)
YShift(10,12)
YInterpolate(9,0,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni043D">
/* VTTTalk Unicode 0x43d */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 6 10 */
/* CVT 7 6 */
/* Min and Max */
ResYAnchor(6,10)	/* min, CVT */
ResYAnchor(7,6)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(7,2,6)
YAnchor(2)
YShift(2,3) /*perpendicular to the stroke*/

/* Contour #2 */
YShift(7,8) /* max */
YShift(6,9) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni043F">
/* VTTTalk Unicode 0x43f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 6 10 */
/* CVT 7 6 */
/* Min and Max */
ResYAnchor(6,10)	/* min, CVT */
ResYAnchor(7,6)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(7,3) /*stroke, CVT of another stroke*/
YShift(3,2) /*perpendicular to the stroke*/

/* Contour #2 */
YShift(7,8) /* max */
YShift(6,9) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0441">
/* VTTTalk Unicode 0x441 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 9 11 */
/* CVT 20 7 */
/* Min and Max */
ResYAnchor(9,11)	/* min, CVT */
ResYAnchor(20,7)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(20,29) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(9,0) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0442">
/* VTTTalk Unicode 0x442 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 2 10 */
/* CVT 7 6 */
/* Min and Max */
ResYAnchor(2,10)	/* min, CVT */
ResYAnchor(7,6)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(7,6) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(7,3)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0444">
/* VTTTalk Unicode 0x444 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 51 7 */
/* CVT 62 11 */
/* CVT 87 14 */
/* CVT 88 0 */
/* Min and Max */
ResYAnchor(87,14)	/* min, CVT */
ResYAnchor(88,0)	/* max, CVT */

/* CVTs - beginning */
ResYAnchor(51,7)  /*knot, CVT*/ 
ResYAnchor(62,11)  /*knot, CVT*/ 
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(51,82) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(51,17) /*stroke, CVT of another stroke*/
YShift(17,30) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YShift(62,73) /*perpendicular to the stroke*/

/* YDir: Stroke #3 */
YShift(62,6) /*stroke, CVT of another stroke*/
YShift(6,39) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0446">
/* VTTTalk Unicode 0x446 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 10 */
/* CVT 1 6 */
/* Min and Max */
YAnchor(9)	/* min */
ResYAnchor(1,6)	/* max, CVT */

/* CVTs - beginning */
ResYAnchor(0,10)  /*knot, CVT*/ 
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(0,12) /*stroke, CVT of another stroke*/
YShift(12,13) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(0,3) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(1,6)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0447">
/* VTTTalk Unicode 0x447 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 6 */
/* CVT 1 10 */
/* Min and Max */
ResYAnchor(1,10)	/* min, CVT */
ResYAnchor(0,6)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(0,9,1)
YAnchor(9)
YShift(9,20) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(0,15)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0448">
/* VTTTalk Unicode 0x448 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 6 */
/* CVT 11 10 */
/* Min and Max */
ResYAnchor(11,10)	/* min, CVT */
ResYAnchor(0,6)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(11,2) /*perpendicular to the stroke*/
YShift(2,6) /*along top edge*/

/* Extreme Max */
YShift(0,9)

/* Extreme Max */
YShift(0,5)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0449">
/* Y direction */
YAnchor(1)
ResYAnchor(6,6)
YShift(6,11)
YShift(6,15)
ResYAnchor(17,10)
YShift(17,4)
YShift(17,8)
YShift(8,5)
YShift(8,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni044A">
/* VTTTalk Unicode 0x44a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 3 6 */
/* CVT 15 10 */
/* Min and Max */
ResYAnchor(15,10)	/* min, CVT */
ResYAnchor(3,6)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(3,2) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(3,4,15)
YAnchor(4)
YShift(4,28) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YShift(15,18) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(3,17)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni044B">
/* VTTTalk Unicode 0x44b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 11 10 */
/* CVT 12 6 */
/* Min and Max */
ResYAnchor(11,10)	/* min, CVT */
ResYAnchor(12,6)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(12,0,11)
YAnchor(0)
YShift(0,24) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(11,14) /*perpendicular to the stroke*/

/* Contour #1 */
YShift(12,25) /* max */
YShift(11,26) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni044C">
/* VTTTalk Unicode 0x44c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 11 10 */
/* CVT 12 6 */
/* Min and Max */
ResYAnchor(11,10)	/* min, CVT */
ResYAnchor(12,6)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(12,0,11)
YAnchor(0)
YShift(0,24) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(11,14) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni044D">
/* Y direction */
ResYAnchor(9,7)
YShift(9,0)
YDist(9,4,&gt;=)
ResYAnchor(20,11)
YDist(20,25,&gt;=)
YShift(20,29)
YIPAnchor(9,42,20)
YShift(42,43)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni044E">
/* VTTTalk Unicode 0x44e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 6 10 */
/* CVT 7 6 */
/* CVT 14 7 */
/* CVT 25 11 */
/* Min and Max */
ResYAnchor(25,11)	/* min, CVT */
ResYAnchor(14,7)	/* max, CVT */

/* CVTs - beginning */
ResYAnchor(6,10)  /*knot, CVT*/ 
ResYAnchor(7,6)  /*knot, CVT*/ 
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(14,47) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(14,2,25)
YAnchor(2)
YShift(2,3) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YShift(25,36) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni044F">
/* Y direction */
ResYAnchor(3,10)
YShift(3,7)
ResYAnchor(4,6)
YShift(4,9)
YIPAnchor(3,19,4)
YShift(19,18)
YInterpolate(19,1,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0452">
/* Y direction */
ResYAnchor(6,15)
YShift(6,13)
ResYAnchor(20,10)
ResYAnchor(21,0)
ResYAnchor(28,7)
YShift(28,40)
YDist(28,47,&gt;=)
YShift(47,48)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0454">
/* VTTTalk Unicode 0x454 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 13 11 */
/* CVT 24 7 */
/* Min and Max */
ResYAnchor(13,11)	/* min, CVT */
ResYAnchor(24,7)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(24,33) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(24,2,13)
YAnchor(2)
YShift(2,3) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YShift(13,4) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0459">
/* Y direction */
ResYAnchor(0,6)
YShift(0,35)
YShift(0,21)
YShift(21,20)
ResYAnchor(9,10)
YShift(9,10)
YShift(9,33)
YShift(33,36)
YIPAnchor(0,46,9)
YShift(46,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni045A">
/* VTTTalk Unicode 0x45a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 6 10 */
/* CVT 7 6 */
/* Min and Max */
ResYAnchor(6,10)	/* min, CVT */
ResYAnchor(7,6)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(7,2,6)
YAnchor(2)
YShift(2,3) /*perpendicular to the stroke*/
YShift(2,32) /*along bottom edge*/
YShift(3,8) /*along top edge*/

/* YDir: Stroke #1 */
YShift(6,19) /*stroke, CVT of another stroke*/
YShift(19,22) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(7,21)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni045B">
/* Y direction */
ResYAnchor(2,10)
YShift(2,17)
ResYAnchor(3,0)
ResYAnchor(10,7)
YShift(10,22)
YDist(10,29,&gt;=)
YShift(29,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni045F">
/* Y direction */
YAnchor(2)
ResYAnchor(4,6)
YShift(4,9)
ResYAnchor(11,10)
YShift(11,6)
YInterpolate(6,0,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0460">
/* Y direction */
ResYAnchor(0,2)
YShift(0,14)
YShift(0,26)
YShift(0,38)


ResYAnchor(7,9)
YShift(7,20)
ResYAnchor(31,9)
YShift(31,44)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0461">
/* Y direction */
ResYAnchor(0,6)
YShift(0,14)
YShift(0,26)
YShift(0,38)
ResYAnchor(7,11)
YShift(7,20)
ResYAnchor(31,11)
YShift(31,44)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0462">
/* Y direction */
YAnchor(11,8)
YShift(11,14)
YAnchor(12,2)
YIPAnchor(11,0,12)
YShift(0,24)
YDist(0,27,&gt;=)
YShift(27,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0463">
/* VTTTalk Unicode 0x463 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 10 10 */
/* CVT 11 1 */
/* Min and Max */
ResYAnchor(10,10)	/* min, CVT */
ResYAnchor(11,1)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(11,27,10)
YAnchor(27)
YShift(27,26) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(11,23,10)
YAnchor(23)
YShift(23,0) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YShift(10,13) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0464">
/* Y direction */
ResYAnchor(9,9)
YShift(9,41)
ResYAnchor(20,3)
YShift(20,29)
YAnchor(47,8)
ResYAnchor(48,2)
YIPAnchor(47,2,48)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0465">
/* Y direction */
ResYAnchor(13,11)
YShift(13,4)
YDist(13,8,&gt;=)
ResYAnchor(24,7)
YDist(24,29,&gt;=)
YShift(24,33)
YAnchor(46,10)
ResYAnchor(47,6)
YIPAnchor(46,2,47)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0466">
/* Y direction */
YAnchor(2,8)
YShift(2,5)
YShift(5,15)
ResYAnchor(3,2)
YShift(3,7)
YShift(3,6)
YShift(6,0)
YIPAnchor(2,12,3)
YShift(12,13)
YShift(12,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0467">
/* Y direction */
YAnchor(1,10)
YShift(1,5)
YShift(5,16)
ResYAnchor(3,6)
YShift(3,7)
YIPAnchor(1,12,3)
YShift(12,13)
YShift(12,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0468">
/* Y direction */
ResYAnchor(7,2)
YShift(7,11)
YShift(7,10)
YShift(10,4)
ResYAnchor(22,2)
YAnchor(24,8)
YIPAnchor(24,2,22)
YShift(2,3)
YShift(2,16)
YShift(16,17)
YShift(17,21)
YShift(24,6)
YShift(6,20)
YShift(20,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0469">
/* Y direction */
ResYAnchor(7,6)
YShift(7,11)
YAnchor(24,10)
YShift(24,6)
YShift(6,20)
YShift(20,9)
ResYAnchor(25,6)
YIPAnchor(24,2,25)
YShift(2,3)
YShift(2,16)
YShift(16,17)
YShift(17,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni046A">
/* Y direction */
YAnchor(1,8)
YShift(1,39)
YShift(39,13)
ResYAnchor(36,2)
YShift(36,28)
YIPAnchor(1,19,36)
YShift(19,6)
YShift(6,40)
YShift(19,35)
YShift(35,31)
YShift(31,27)
YShift(36,26)
YShift(26,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni046B">
/* Y direction */
YAnchor(1,10)
YShift(1,40)
YShift(40,13)
ResYAnchor(37,6)
YShift(37,29)
YIPAnchor(1,19,37)
YShift(19,6)
YShift(6,41)
YShift(19,36)
YShift(36,32)
YShift(37,27)
YShift(27,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni046C">
/* Y direction */
YAnchor(5,8)
YShift(5,9)
YShift(9,47)
YShift(47,21)
ResYAnchor(7,2)
YIPAnchor(5,2,7)
YShift(2,3)
YShift(2,27)
YShift(27,14)
YShift(14,48)
YShift(27,43)
YShift(43,39)
ResYAnchor(44,2)
YShift(44,36)
YShift(44,34)
YShift(34,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni046D">
/* Y direction */
YAnchor(6,10)
YShift(6,9)
YShift(9,48)
YShift(48,21)
ResYAnchor(7,6)
YIPAnchor(6,2,7)
YShift(2,3)
YShift(2,27)
YShift(27,14)
YShift(14,49)
YShift(27,44)
YShift(44,40)
YShift(7,45)
YShift(45,35)
YShift(35,34)
YShift(35,37)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni046E">
/* Y direction */
YAnchor(0,2)
YShift(0,23)
YDist(0,71,&gt;=)
YDist(71,65,&gt;=2)
YShift(65,72)
YInterpolate(71,66,65)
YShift(65,67)
YShift(67,69)
YAnchor(44,9)
YShift(44,43)
YIPAnchor(0,64,44)
YShift(64,12)
YShift(64,13)
YShift(64,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni046F">
/* Y direction */
YAnchor(0,6)
YShift(0,24)
YDist(0,72,&gt;=)
YDist(72,66,&gt;=2)
YShift(66,68)
YShift(66,70)
YShift(66,73)
YInterpolate(72,67,66)
YAnchor(45)


YIPAnchor(0,65,45)
YShift(65,12)
YShift(65,25)
YShift(65,13)


/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0472">
/* VTTTalk Unicode 0x472 */
/* ACT generated Tue Nov  3 08:51:00 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 3 */
/* CVT 12 9 */
/* Min and Max */
ResYAnchor(12,9)	/* min, CVT */
ResYAnchor(0,3)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
ResYDist(0,24) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(0,50,12)
YAnchor(50)
ResYDist(50,32) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
ResYDist(12,41) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0473">
/* VTTTalk Unicode 0x473 */
/* ACT generated Tue Nov  3 08:51:00 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 7 */
/* CVT 11 11 */
/* Min and Max */
ResYAnchor(11,11)	/* min, CVT */
ResYAnchor(0,7)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
ResYDist(0,22) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(0,39,11)
YAnchor(39)
ResYDist(39,27) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
ResYDist(11,33) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0474">
/* VTTTalk Unicode 0x474 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 5 3 */
/* CVT 18 8 */
/* CVT 19 2 */
/* Min and Max */
ResYAnchor(18,8)	/* min, CVT */
ResYAnchor(5,3)	/* max, CVT */

/* CVTs - beginning */
ResYAnchor(19,2)  /*knot, CVT*/ 
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(5,8) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(18,14)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0475">
/* Y direction */
ResYAnchor(5,7)
YShift(5,12)
ResYAnchor(22,10)
YShift(22,18)
ResYAnchor(23,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni047A">
/* Y direction */
ResYAnchor(14,9)
YDist(14,6,&gt;=)
YShift(14,51)
YUpToGrid(7)
YShift(51,7)
YAnchor(7)
ResYAnchor(26,3)
YDist(26,3,&gt;=)
YShift(26,39)
YDownToGrid(2)
YShift(39,2)
YAnchor(2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni047B">
/* Y direction */
ResYAnchor(14,7)
YDist(14,3,&gt;=)
YShift(14,47)
YDownToGrid(2)
YShift(47,2)
YAnchor(2)
ResYAnchor(25,11)
YDist(25,6,&gt;=)
YShift(25,36)
YUpToGrid(7)
YShift(36,7)
YAnchor(7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni047C">
/* Y direction */
ResYAnchor(33,2)
YShift(33,34)
YUpToGrid(22)
YShift(33,22)
YAnchor(22)
YShift(22,27)
YAnchor(27)
YShift(27,8)
YShift(8,17)
YShift(33,67)
YShift(67,66)
ResYAnchor(56,9)
YShift(56,44)
YShift(56,49)
YAnchor(49)
YShift(49,84)
ResYAnchor(78,9)
YShift(78,91)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni047D">
/* Y direction */
ResYAnchor(33,6)
YShift(33,34)
YUpToGrid(22)
YShift(33,22)
YAnchor(22)
YShift(22,27)
YAnchor(27)
YShift(27,8)
YShift(8,17)
YShift(33,68)
YShift(68,67)
ResYAnchor(57,11)
YShift(57,44)
YShift(57,50)
YAnchor(50)
YShift(50,85)
ResYAnchor(79,11)
YShift(79,92)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni047E">
/* Y direction */
ResYAnchor(15,9)
YShift(15,28)
ResYAnchor(21,2)
YShift(21,8)
YShift(8,33)
YShift(8,45)
YUpToGrid(7)
YShift(8,7)
YAnchor(7)
YShift(7,1)
YAnchor(1)
YShift(1,2)
YShift(1,5)
ResYAnchor(39,9)
YShift(39,52)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni047F">
/* Y direction */
ResYAnchor(15,11)
YShift(15,28)
ResYAnchor(21,6)
YShift(21,8)
YShift(8,33)
YShift(8,45)
YUpToGrid(7)
YShift(8,7)
YAnchor(7)
YShift(7,1)
YAnchor(1)
YShift(1,2)
YShift(1,5)
ResYAnchor(39,11)
YShift(39,52)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0480">
/* Y direction */
ResYAnchor(1,9)
YDist(1,36,&gt;=)
YShift(1,0)
YShift(0,37)
ResYAnchor(13,3)
YDist(13,18,&gt;=)
YShift(13,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0481">
/* Y direction */
ResYAnchor(1,11)
YDist(1,34,&gt;=)
YShift(1,0)
YShift(0,32)
ResYAnchor(12,7)
YDist(12,17,&gt;=)
YShift(12,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0482">
/* VTTTalk Unicode 0x482 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 6 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(5)	/* min */
YAnchor(15)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0483">
/* Y direction */
YAnchor(1)
YShift(1,2)
YAnchor(2)
YShift(1,4)
YUpToGrid(6)
YShift(4,6)
YAnchor(6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0484">
/* Y direction */
YAnchor(11)
YDist(11,6,&gt;=2)
YShift(6,15)
YShift(11,20)
YShift(20,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0485">
/* Y direction */
YAnchor(2)
YDist(2,0,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0486">
/* Y direction */
YAnchor(4)
YDist(4,1,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0487">
/* Y direction */
YAnchor(18,17)
YShift(18,8)
YDist(18,12,&gt;=2)
YDist(18,3,&gt;=2)
YShift(3,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni048C">
/* Y direction */
YAnchor(11,8)
YShift(11,14)
ResYAnchor(12,2)
YIPAnchor(11,0,12)
YShift(0,24)
YDist(0,27,&gt;=)
YShift(27,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni048D">
/* Y direction */
YAnchor(10,18)
YShift(10,13)
YShift(13,23)
YAnchor(23)
YShift(23,0)
ResYAnchor(27,2)
YDist(27,11,&gt;=)
YShift(27,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni048E">
/* VTTTalk Unicode 0x48e */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 18 8 */
/* CVT 19 2 */
/* Min and Max */
ResYAnchor(18,8)	/* min, CVT */
ResYAnchor(19,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(19,16) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(19,5,18)
YAnchor(5)
YShift(5,6) /*perpendicular to the stroke*/

/* Contour #0 */
YShift(6,3,0) /* max */
YShift(5,2,1) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni048F">
/* VTTTalk Unicode 0x48f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 10 */
/* CVT 6 14 */
/* CVT 7 6 */
/* CVT 15 11 */
/* CVT 26 7 */
/* Min and Max */
ResYAnchor(6,14)	/* min, CVT */
ResYAnchor(26,7)	/* max, CVT */

/* CVTs - beginning */
ResYAnchor(7,6)  /*knot, CVT*/ 
ResYAnchor(15,11)  /*knot, CVT*/ 
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(26,37) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(15,48) /*perpendicular to the stroke*/

YShift(15,2,1)
YShift(48,3,0)



Smooth()

    </glyphProgram>

    <glyphProgram name="uni0490">
/* Y direction */
ResYAnchor(8,8)
ResYAnchor(9,2)
YDist(9,3,&gt;=)
YShift(9,6)
YShift(6,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0490.smcp">
/* Y direction */
YAnchor(6,10)
YAnchor(7,125)
YShift(7,3)
YAnchor(3)
YShift(7,11)
YShift(11,10)
YShift(10,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0491">
/* Y direction */
ResYAnchor(8,10)
ResYAnchor(9,6)
YDist(9,3,&gt;=)
YShift(9,6)
YShift(6,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0492">
/* Y direction */
YAnchor(4,8)
ResYAnchor(5,2)
YShift(5,2)
YIPAnchor(4,7,5)
YShift(7,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0492.smcp">
/* Y direction */
YAnchor(2,10)
YAnchor(3,125)
YShift(3,7)
YShift(7,6)
YIPAnchor(2,10,3)
YShift(10,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0493">
/* Y direction */
YAnchor(4,10)
ResYAnchor(5,6)
YShift(5,2)
YIPAnchor(4,8,5)
YShift(8,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0494">
/* Y direction */
ResYAnchor(4,8)
ResYAnchor(5,2)
YShift(5,2)
YAnchor(18)
YShift(18,19)
YIPAnchor(5,7,18)
YShift(7,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0495">
/* Y direction */
YAnchor(11)
YShift(11,12)
ResYAnchor(25,10)
ResYAnchor(26,6)
YShift(26,23)
YIPAnchor(26,1,11)
YShift(1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0496.smcp">
/* Y direction */
YAnchor(19,125)
YShift(19,7)
YShift(7,13)
YAnchor(25,10)
YShift(25,6)
YIPAnchor(6,9,19)
YShift(9,12)
YShift(9,15)
YShift(9,16)
YShift(9,18)
YShift(18,21)
YShift(18,24)
YShift(24,27)
YShift(6,14)
YShift(14,1)
YAnchor(1)
YShift(14,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0498.smcp">
/* Y direction */
YAnchor(21,126)
YShift(21,11)
YDist(21,15,&gt;=)
ResYAnchor(42,11)
YDist(42,48,&gt;=)
YDist(42,64,&gt;=)
YShift(42,52)
YInterpolate(42,63,52)
YIPAnchor(21,62,42)
YShift(62,2)
YInterpolate(62,1,31,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni049A.smcp">
/* Y direction */
YAnchor(6,10)
YShift(6,14)
YShift(14,1)
YAnchor(1)
YShift(14,2)
YAnchor(7,125)
YShift(7,13)
YIPAnchor(6,10,7)
YShift(10,11)
YShift(10,15)
YShift(15,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni049C">
/* Y direction */
ResYAnchor(0,2)
YShift(0,8)
ResYAnchor(3,8)
YShift(3,16)
YIPAnchor(0,11,3)
YShift(11,7)
YAnchor(7)
YShift(11,12)
YShift(12,4)
YAnchor(4)
YInterpolate(12,14,11)
YShift(14,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni049C.smcp">
/* Y direction */
YAnchor(6,10)
YShift(6,14)
YAnchor(7,125)
YShift(7,13)
YIPAnchor(6,10,7)
YShift(10,3)
YAnchor(3)
YShift(10,11)
YShift(11,0)
YShift(10,15)
YShift(15,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni049D">
/* Y direction */
ResYAnchor(0,6)
YShift(0,9)
ResYAnchor(3,10)
YShift(3,16)
YIPAnchor(0,11,3)
YShift(11,7)
YAnchor(7)
YShift(11,12)
YShift(12,4)
YAnchor(4)
YShift(11,14)
YShift(14,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni049E">
/* Y direction */
ResYAnchor(2,8)
YShift(2,10)
ResYAnchor(3,2)
YShift(3,9)
YIPAnchor(3,17,6,2)
YShift(17,16)
YShift(6,7)
YInterpolate(6,11,7)
YShift(11,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni049F">
/* Y direction */
ResYAnchor(2,10)
YShift(2,10)
ResYAnchor(3,0)
YIPAnchor(3,17,6,2)
YShift(17,16)
YShift(6,7)
YInterpolate(7,11,6)
YShift(11,12)
ResYAnchor(4,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04A0">
/* Y direction */
ResYAnchor(3,2)
YShift(3,2)
YShift(3,7)
YShift(3,13)
ResYAnchor(6,8)
YShift(6,14)
YIPAnchor(3,10,6)
YShift(10,11)
YShift(10,15)
YShift(15,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04A0.smcp">
/* Y direction */
YAnchor(0,125)
YShift(0,3)
YShift(0,7)
YShift(7,13)
YAnchor(6,10)
YShift(6,14)
YIPAnchor(6,10,0)
YShift(10,11)
YShift(10,15)
YShift(15,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04A1">
/* Y direction */
ResYAnchor(3,6)
YShift(3,2)
YShift(3,7)
YShift(3,13)
ResYAnchor(6,10)
YShift(6,14)
YIPAnchor(3,10,6)
YShift(10,11)
YShift(10,15)
YShift(15,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04A2.smcp">
/* Y direction */
YAnchor(6,18)
YShift(6,10)
YDist(10,14,&gt;=)
YShift(10,15)
YAnchor(7,125)
YShift(7,11)
YIPAnchor(6,2,7)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04A4">
/* Y direction */
ResYAnchor(10,8)
YShift(10,13)
ResYAnchor(11,2)
YShift(11,12)
YShift(11,3)
YShift(3,2)
YIPAnchor(11,6,10)
YShift(6,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04A5">
/* Y direction */
ResYAnchor(10,10)
YShift(10,13)
ResYAnchor(11,6)
YShift(11,12)
YShift(11,3)
YShift(3,2)
YIPAnchor(11,6,10)
YShift(6,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04A6">
/* Y direction */
YAnchor(2)
ResYAnchor(6,8)
ResYAnchor(7,2)
YShift(7,4)
YAnchor(20)
YIPAnchor(7,9,20)
YShift(9,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04A7">
/* Y direction */
YAnchor(11)
YShift(11,12)
ResYAnchor(27,10)
ResYAnchor(28,6)
YShift(28,29)
YIPAnchor(28,1,11)
YShift(1,0)
YShift(28,24)
YShift(24,23)
YAnchor(30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04A8">
/* Y direction */
ResYAnchor(23,9)
YShift(23,46)
YShift(23,1)
YShift(1,0)

ResYAnchor(34,3)
YShift(34,35)
YShift(34,12)
YShift(12,57)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04A8.smcp">
/* Y direction */
YAnchor(13,126)
YShift(13,58)
YShift(13,35)
YShift(35,36)
YAnchor(24,11)
YShift(24,47)
YShift(24,1)
YAnchor(1)
YShift(1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04A9">
/* Y direction */
ResYAnchor(23,11)
YShift(23,46)
YShift(23,1)
YAnchor(1)
YShift(1,0)
ResYAnchor(34,7)
YShift(34,35)
YShift(34,12)
YShift(12,57)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04AA.smcp">
/* Y direction */
ResYAnchor(5,11)
YShift(5,42)
YAnchor(42)
YShift(5,36)
YShift(36,40)
YAnchor(16,126)
YShift(16,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04B0">
/* Y direction */
ResYAnchor(6,8)
ResYAnchor(8,2)
YShift(8,3)
YIPAnchor(8,11,6)
YInterpolate(8,1,4,7,11)
YShift(11,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04B1">
/* Y direction */
ResYAnchor(2,14)
ResYAnchor(13,6)
YShift(13,5)
YIPAnchor(2,16,13)
YShift(16,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04B2.smcp">
/* Y direction */
YAnchor(13,10)
YShift(13,10)
YShift(10,1)
YAnchor(1)
YShift(10,2)
YAnchor(15,125)
YShift(15,6)
YInterpolate(10,11,14,8,5,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04B4">
/* Y direction */
ResYAnchor(3,2)
YShift(3,2)
YShift(3,12)
YShift(3,16)
YAnchor(5)
ResYAnchor(10,8)
YShift(10,8)
YShift(10,13)
YShift(13,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04B4.smcp">
/* Y direction */
YAnchor(8,18)
YShift(8,2)
YAnchor(2)
YShift(8,4)
YShift(8,9)
YShift(8,12)
YAnchor(16,18)
YAnchor(21,125)
YShift(21,20)
YShift(21,13)
YShift(13,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04B5">
/* Y direction */
ResYAnchor(4,10)
YShift(4,16)
YShift(4,7)
YShift(7,8)
ResYAnchor(5,6)
YShift(5,10)
YAnchor(13)
YIPAnchor(5,3,13)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04B8">
/* Y direction */
ResYAnchor(4,2)
YShift(4,27)
ResYAnchor(28,8)
YIPAnchor(28,21,4)
YShift(21,2)
YAnchor(2)
YShift(21,10)
YShift(10,3)
YAnchor(3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04B8.smcp">
/* Y direction */
YAnchor(6,10)
YAnchor(18,125)
YShift(18,7)
YIPAnchor(6,13,18)
YShift(13,3)
YAnchor(3)
YShift(13,24)
YShift(24,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04B9">
/* Y direction */
ResYAnchor(4,6)
YShift(4,18)
ResYAnchor(5,10)
YShift(5,13)
YAnchor(13)
YDownToGrid(1)
YShift(13,1)
YAnchor(1)
YShift(13,24)
YShift(24,0)
YAnchor(0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04BA">
/* VTTTalk Unicode 0x4ba */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 23 8 */
/* CVT 24 2 */
/* Min and Max */
ResYAnchor(23,8)	/* min, CVT */
ResYAnchor(24,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(24,17,23)
YAnchor(17)
YShift(17,6) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(23,1)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04BA.smcp">
/* Y direction */
YAnchor(0,18)
YAnchor(1,125)
YIPAnchor(0,9,1)
YShift(9,20)
YAnchor(15,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04BC">
/* Y direction */
ResYAnchor(10,9)
YShift(10,47)
ResYAnchor(21,3)
YShift(21,36)
YIPAnchor(21,28,10)
YShift(28,6)
YShift(28,29)
YShift(29,1)
YAnchor(1)
YShift(29,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04BC.smcp">
/* Y direction */
YAnchor(0,11)
YShift(0,45)
YAnchor(11,126)
YShift(11,34)
YIPAnchor(0,17,11)
YShift(17,29)
YShift(29,24)
YAnchor(24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04BD">
/* Y direction */
ResYAnchor(9,11)
YShift(9,46)
ResYAnchor(20,7)
YShift(20,35)
YIPAnchor(9,27,20)
YShift(27,5)
YShift(27,28)
YShift(28,1)
YAnchor(1)
YShift(28,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04C3">
/* Y direction */
ResYAnchor(2,8)
ResYAnchor(3,2)
YShift(3,9)
YAnchor(22)
YShift(22,23)
YIPAnchor(3,7,22)
YShift(7,8)
YShift(7,11)
YShift(7,6)
YShift(6,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04C4">
/* Y direction */
YAnchor(1)
ResYAnchor(3,6)
YIPAnchor(1,11,3)
YShift(11,7)
YShift(11,10)
YShift(10,6)
ResYAnchor(9,6)
YAnchor(21)
YShift(21,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04C7">
/* Y direction */
ResYAnchor(0,2)
YShift(0,5)
YAnchor(10)
YShift(10,17)
YIPAnchor(0,2,10)
YShift(2,23)
ResYAnchor(25,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04C8">
/* Y direction */
ResYAnchor(0,6)
YShift(0,5)
ResYAnchor(10,15)
YShift(10,17)
YIPAnchor(0,2,10)
YShift(2,23)
ResYAnchor(25,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04D8">
/* VTTTalk Unicode 0x4d8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 3 */
/* CVT 11 9 */
/* Min and Max */
ResYAnchor(11,9)	/* min, CVT */
ResYAnchor(0,3)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(0,37) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(0,20,11)
YAnchor(20)
YShift(20,17) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YShift(11,26) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04D8.smcp">
/* Y direction */
YAnchor(0,126)
YShift(0,36)
YAnchor(11,11)
YShift(11,25)
YIPAnchor(11,20,0)
YShift(20,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04E0">
/* Y direction */
ResYAnchor(0,2)
YShift(0,7)
ResYAnchor(18,9)
YShift(18,28)
YInterpolate(18,37,0)
YShift(37,4)
YShift(37,8)
YShift(8,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04E0.smcp">
/* Y direction */
YAnchor(0,125)
YShift(0,7)
YAnchor(19,11)
YShift(19,29)
YIPAnchor(19,38,0)
YShift(38,4)
YShift(38,5)
YShift(5,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04E1">
/* Y direction */
ResYAnchor(0,6)
YShift(0,7)
YAnchor(18)
YDist(18,24,&gt;=)
YShift(18,28)
YIPAnchor(18,37,0)
YShift(37,4)
YShift(37,5)
YShift(5,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04E8.smcp">
/* VTTTalk Unicode 0xffff */
/* ACT generated Tue Nov  3 08:51:00 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 11 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(11)	/* min */
YAnchor(0)	/* max */

/* YDir: Stroke #0 */
ResYDist(0,22) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(0,45,11)
YAnchor(45)
ResYDist(45,29) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
ResYDist(11,37) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04FE">
/* Y direction */
ResYAnchor(0,2)
YShift(0,3)
YAnchor(5)
YShift(5,9)
YIPAnchor(0,14,5)
YInterpolate(0,1,4,10,14)
YInterpolate(14,7,5)
YShift(14,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04FF">
/* Y direction */
ResYAnchor(0,6)
YShift(0,3)
YAnchor(5)
YShift(5,9)
YIPAnchor(0,14,5)
YInterpolate(0,1,10,4,14)
YInterpolate(14,7,5)
YShift(14,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0500">
/* Y direction */
ResYAnchor(13,2)
YAnchor(16)
YShift(16,11)
YIPAnchor(13,0,16)
YShift(0,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0502">
/* Y direction */
ResYAnchor(13,2)
YAnchor(16)
YShift(16,26)
YIPAnchor(13,0,16)
YShift(0,3)
YShift(0,37)
YAnchor(37)
YShift(16,11)
YShift(11,27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0503">
/* Y direction */
ResYAnchor(6,7)
YShift(6,39)

ResYAnchor(18,11)
YShift(18,29)

ResYAnchor(45,1)

YAnchor(59)
ResYAnchor(68,11)
YShift(68,51)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0504">
/* Y direction */
ResYAnchor(14,2)
YShift(14,13)
YAnchor(58)
ResYAnchor(67,9)
YShift(67,50)
YIPAnchor(67,1,14)
YShift(1,2)
YShift(1,39)
YShift(39,40)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0505">
/* Y direction */
ResYAnchor(13,6)
YShift(13,12)


ResYAnchor(51,11)
YShift(51,34)


YShift(51,42)
YAnchor(42)

YIPAnchor(51,1,13)
YShift(1,2)

YShift(1,27)
YShift(1,61)
YShift(61,62)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0506">
/* Y direction */
YAnchor(2)
YShift(2,1)
YShift(1,32)
YShift(32,33)

ResYAnchor(13,2)
YShift(13,12)

YAnchor(44)
YShift(44,63)

YAnchor(57)
YShift(57,58)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0507">
/* Y direction */
ResYAnchor(13,6)
YShift(13,12)

YAnchor(43,10)
YShift(43,62)
YIPAnchor(43,1,13)
YShift(1,2)
YShift(1,31)
YShift(31,32)
YAnchor(56)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0508">
/* Y direction */
YAnchor(8)
YShift(8,11)
ResYAnchor(21,2)
YShift(21,0)
YShift(21,20)
YShift(21,23)
ResYAnchor(47,9)
YShift(47,30)
YShift(47,38)
YAnchor(38)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0509">
/* Y direction */
ResYAnchor(8,10)
YShift(8,11)

ResYAnchor(21,6)
YShift(21,0)
YShift(21,20)
YShift(21,23)

ResYAnchor(47,11)
YShift(47,30)
YShift(47,39)
YAnchor(39)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni050A">
/* Y direction */
ResYAnchor(4,2)
YAnchor(6,8)
YIPAnchor(6,3,4)
YShift(3,0)

ResYAnchor(8,2)
ResYAnchor(31,9)
YShift(31,14)
YShift(31,22)
YAnchor(22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni050B">
/* Y direction */
YAnchor(5,10)
ResYAnchor(7,6)
YIPAnchor(5,2,7)
YShift(2,3)

ResYAnchor(9,6)
ResYAnchor(33,11)
YShift(33,16)
YShift(33,25)
YAnchor(25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni050C">
/* Y direction */
ResYAnchor(0,9)
YShift(0,29)
YShift(0,37)
YAnchor(37)
ResYAnchor(11,3)
YShift(11,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni050D">
/* Y direction */
ResYAnchor(15,11)
YShift(15,0)
YShift(15,7)
YAnchor(7)
ResYAnchor(26,7)
YShift(26,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni050E">
/* Y direction */
ResYAnchor(3,2)
YShift(3,2)
YShift(3,5)

ResYAnchor(29,9)
YShift(29,12)
YShift(29,20)
YAnchor(20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni050F">
/* Y direction */
ResYAnchor(3,6)
YShift(3,2)
YShift(3,5)
ResYAnchor(28,11)
YShift(28,11)
YShift(28,19)
YAnchor(19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0510">
/* Y direction */
ResYAnchor(23,9)
YShift(23,13)
YDist(23,17,&gt;=)
ResYAnchor(44,3)
YDist(44,49,&gt;=)
YShift(44,53)
YIPAnchor(23,2,44)
YShift(2,63)
YInterpolate(2,34,0,63)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0514">
/* Y direction */
YAnchor(8)
YShift(8,10)
ResYAnchor(18,2)
YShift(18,1)
YShift(1,20)
ResYAnchor(22,2)
ResYAnchor(24,2)
YAnchor(28,8)
YInterpolate(28,29,26,32,23,24)
YAnchor(31,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0515">
/* Y direction */
ResYAnchor(0,6)
YShift(0,21)
YShift(21,20)
YShift(21,33)
YShift(33,24)
YAnchor(31,10)
YShift(31,28)
YShift(31,8)
YShift(8,10)
YInterpolate(31,29,26,32,23,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0516">
/* Y direction */
YAnchor(22,8)
YShift(22,4)
ResYAnchor(23,2)
YShift(23,3)
YShift(23,20)
YIPAnchor(22,9,23)
YShift(9,10)
YShift(9,5)
YShift(5,1)
YShift(1,6)
YShift(6,2)
YShift(2,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0517">
/* Y direction */
YAnchor(5,6)
YAnchor(6,10)
YAnchor(11,14)
YAnchor(14,6)
ResYAnchor(21,11)
YShift(21,54)
ResYAnchor(32,7)
YShift(32,43)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0518">
/* Y direction */
ResYAnchor(21,2)
YShift(21,11)
YShift(21,26)
YShift(26,10)
YAnchor(24)
YShift(24,36)
YShift(24,2)
YShift(2,3)
YIPAnchor(24,12,6,21)
YShift(12,34)
YShift(12,35)
YShift(6,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0519">
/* Y direction */
YAnchor(2,10)
ResYAnchor(4,6)
YShift(4,9)
YIPAnchor(2,20,4)
YShift(20,1)
YShift(20,17)
YAnchor(48)
YShift(48,49)
ResYAnchor(30,11)
YShift(30,67)
YAnchor(41,7)
YShift(41,56)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni051E">
/* Y direction */
YAnchor(6,8)
ResYAnchor(7,2)
YIPAnchor(6,10,7)
YShift(10,12)
YShift(10,15)
ResYAnchor(13,2)
YAnchor(14,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni051F">
/* Y direction */
YAnchor(6,10)
YShift(6,14)
ResYAnchor(7,6)
YShift(7,13)
YIPAnchor(6,10,7)
YShift(10,11)
YShift(10,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0520">
/* Y direction */
YAnchor(0)
YShift(0,7)
YAnchor(25)
YShift(25,16)
YAnchor(40,8)
ResYAnchor(42,2)
YShift(42,37)
YShift(37,36)
YShift(37,41)
YAnchor(50,8)
YShift(50,52)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0521">
/* Y direction */
ResYAnchor(0,15)
YShift(0,7)
YAnchor(25)
YShift(25,16)
YAnchor(40,10)
ResYAnchor(42,6)
YShift(42,37)
YShift(37,41)
ResYAnchor(50,10)
YShift(50,52)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0522">
/* Y direction */
YAnchor(28)
YShift(28,35)
YAnchor(46,8)
ResYAnchor(47,2)
YIPAnchor(46,42,47)
YShift(42,43)
YShift(43,17)
YAnchor(17)
YShift(17,6)
YAnchor(50,8)
ResYAnchor(51,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0523">
/* Y direction */
YAnchor(5)
YShift(5,16)
ResYAnchor(26,15)
YShift(26,33)
YAnchor(44,10)
YShift(44,48)
ResYAnchor(45,6)
YShift(45,49)
YIPAnchor(44,40,45)
YShift(40,41)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0524">
/* Y direction */
YAnchor(8,8)
YShift(8,4)
YDist(4,2,&gt;=)
YShift(4,11)
ResYAnchor(9,2)
YShift(9,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0525">
/* Y direction */
YAnchor(8,10)
YShift(8,4)
YDist(4,2,&gt;=)
YShift(4,11)
ResYAnchor(9,6)
YShift(9,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0526">
/* Y direction */
YAnchor(1,8)
ResYAnchor(2,2)
YAnchor(8)
YShift(8,23)
YAnchor(18,8)
YShift(18,13)
YDist(18,16,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0527">
/* Y direction */
YAnchor(4,10)
YDist(4,2,&gt;=)
YShift(4,28)
YAnchor(16,10)
ResYAnchor(17,0)
ResYAnchor(22,7)
YShift(22,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0528">
/* Y direction */
YAnchor(6,9)
YShift(6,13)
ResYAnchor(25,2)
YAnchor(28,8)
YIPAnchor(28,20,25)
YShift(20,21)
ResYAnchor(29,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0529">
/* Y direction */
ResYAnchor(6,15)
YShift(6,13)
ResYAnchor(25,6)
YAnchor(28,10)
YIPAnchor(28,20,25)
YShift(20,21)
ResYAnchor(29,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni052A">
/* Y direction */
YAnchor(2,8)
YShift(2,32)
YShift(32,25)
YAnchor(10,8)
YAnchor(16,8)
YShift(16,44)
YShift(16,21)
YShift(21,45)
YAnchor(20,9)
YShift(20,24)
ResYAnchor(35,2)
YShift(35,29)
YIPAnchor(2,6,35)
YShift(6,5)
YShift(6,7)
YShift(7,12)
YShift(35,30)
YShift(30,3)
YShift(3,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni052B">
/* Y direction */
ResYAnchor(30,6)
YShift(30,14)
YShift(30,35)
YShift(30,3)
YShift(3,9)
YAnchor(41,10)
YShift(41,21)
YShift(41,23)
YShift(23,36)
YShift(41,33)
YShift(33,2)
YShift(2,10)
YIPAnchor(33,6,30)
YShift(6,7)
YShift(6,11)
YShift(11,12)
YShift(41,42)
YAnchor(42)
YShift(42,39)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni052C">
/* Y direction */
YAnchor(14,8)
YShift(14,23)
YShift(14,8)
YShift(8,3)
YShift(8,16)
YShift(14,9)
YAnchor(9)
YShift(9,2)
ResYAnchor(25,2)
YShift(25,12)
YShift(12,20)
YShift(20,24)
YIPAnchor(14,34,25)
YShift(34,31)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni052D">
/* Y direction */
YAnchor(3,10)
YShift(3,4)
YShift(4,11)
YShift(3,16)
YShift(16,8)
YShift(8,15)
YShift(15,12)
YShift(16,17)
YAnchor(17)
YShift(17,14)
ResYAnchor(26,6)
YShift(26,0)
YShift(0,5)
YShift(5,10)
YShift(5,1)
YShift(1,6)
YUpToGrid(21)
YIPAnchor(17,21,26)
YShift(21,32)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni052E">
/* Y direction */
ResYAnchor(0,2)
YShift(0,9)
YAnchor(7,8)
YShift(7,2)
YDist(7,5,&gt;=)
ResYAnchor(16,8)
YShift(16,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni052F">
/* Y direction */
ResYAnchor(0,6)
YShift(0,9)
YAnchor(7,10)
YShift(7,2)
YDist(7,5,&gt;=)
ResYAnchor(16,10)
YShift(16,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1AB0">
/* Y direction */
YAnchor(2)
YDist(2,4,&gt;=2)
YShift(4,7)
YInterpolate(2,6,12,0,4)
YShift(2,14)
YShift(14,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1AB1">
/* Y direction */
YAnchor(34)
YShift(34,40)
YShift(34,9)
YShift(9,3)
YShift(34,21)
YShift(21,15)
YShift(34,28)
YAnchor(28)
YShift(28,46)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1AB2">
/* Y direction */
YAnchor(0,16)
YShift(0,20)
YDist(0,9,&gt;=)
YShift(9,31)
YShift(9,51)
YShift(51,69)
YShift(0,40)
YShift(40,60)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1AB3">
/* Y direction */
YAnchor(0,17)
YAnchor(10,16)
YShift(10,3)
YShift(10,7)
YShift(10,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1AB5">
/* Y direction */
YAnchor(11)
YShift(11,23)
YShift(11,2)
YShift(2,14)
YDist(11,9,&gt;=)
YShift(9,6)
YInterpolate(9,19,7,22,10,4,16,13,1,11)
YShift(9,21)
YShift(21,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1AB6">
/* Y direction */
YAnchor(5)
YShift(5,16)
YShift(5,25)
YShift(25,57)
YShift(57,26)
YShift(57,46)
YShift(46,35)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1AB7">
/* Y direction */
YAnchor(0)
YDist(0,13,&gt;=2)
YShift(13,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1AB8_uni1ABD">
/* Y direction */
YAnchor(32)
YShift(32,8)
YShift(32,45)
YShift(45,0)
YShift(45,38)
YShift(45,63)
YShift(63,16)
YShift(63,56)
YShift(32,50)
YShift(50,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1AB9">
/* VTTTalk Unicode 0x1ab9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(1)	/* min */
YAnchor(3)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1AB9_uni1ABD">
/* Y direction */
YAnchor(35)
YShift(35,24)
YShift(24,8)
YShift(35,33)
YShift(33,0)
YShift(33,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1ABA">
/* Y direction */
YAnchor(0)
YShift(0,13)
YAnchor(15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1ABA_uni1ABD">
/* Y direction */
YAnchor(32)
YShift(32,38)
YShift(32,45)
YShift(32,47)
YAnchor(47)
YShift(32,0)
YShift(0,8)
YShift(32,16)
YShift(16,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1ABB">
/* Y direction */
YAnchor(8)
YShift(8,9)
YDist(8,0,&gt;=)
YShift(0,15)
YShift(0,16)
YShift(16,17)
YShift(8,24)
YShift(24,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1ABC">
/* Y direction */
YAnchor(8)
YShift(8,9)
YDist(8,0,&gt;=)
YShift(0,15)
YShift(0,16)
YShift(16,31)
YShift(16,32)
YShift(32,33)
YShift(32,48)
YShift(48,49)
YShift(8,24)
YShift(24,25)
YShift(24,40)
YShift(40,39)
YShift(40,56)
YShift(56,55)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1ABC.w1">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 32 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

/* Contour #1 */
YShift(8,24) /* max */
YShift(0,16) /* min */

/* Contour #2 */
YShift(8,40) /* max */
YShift(0,32) /* min */

/* Contour #3 */
YShift(8,56) /* max */
YShift(0,48) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1ABC.w2">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 32 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

/* Contour #1 */
YShift(8,24) /* max */
YShift(0,16) /* min */

/* Contour #2 */
YShift(8,40) /* max */
YShift(0,32) /* min */

/* Contour #3 */
YShift(8,56) /* max */
YShift(0,48) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1ABC.w3">
/* Y direction */
YAnchor(32)
YShift(32,47)
YShift(32,0)
YShift(0,15)
YShift(0,48)
YShift(48,49)
YShift(48,16)
YShift(16,17)
YShift(32,40)
YAnchor(40)
YShift(40,41)
YShift(40,8)
YShift(8,9)
YShift(8,24)
YShift(24,23)
YShift(24,56)
YShift(56,55)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1ABD">
/* Y direction */
YAnchor(8)
YShift(8,9)
YDist(8,0,&gt;=)
YShift(0,15)
YShift(0,16)
YShift(16,17)
YShift(8,24)
YShift(24,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1ABE">
/* VTTTalk Unicode 0x1abe */
/* ACT generated Thu Dec  5 13:36:29 2019 */
/* Y direction */
YAnchor(8)
YShift(8,9)
YDist(8,0,&gt;=)
YShift(0,15)
YShift(0,16)
YShift(16,17)
YShift(8,24)
YShift(24,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1ABE.w1">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

/* Contour #1 */
YShift(8,24) /* max */
YShift(0,16) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1ABE.w2">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

/* Contour #1 */
YShift(8,24) /* max */
YShift(0,16) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1ABE.w3">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

/* Contour #1 */
YShift(8,24) /* max */
YShift(0,16) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D00">
/* Y direction */
YAnchor(1)
YShift(1,5)
ResYAnchor(3,6)
YShift(3,7)
YShift(3,6)
YShift(6,0)
YIPAnchor(3,12,1)
YShift(12,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D01">
/* Y direction */
YAnchor(2)
YShift(2,3)
YAnchor(13)

ResYAnchor(15,6)
YShift(15,12)
YShift(15,24)
YShift(15,11)
YShift(11,10)
YIPAnchor(13,19,15)
YShift(19,20)
YAnchor(23)
YIPAnchor(13,6,15)
YShift(6,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D02">
/* Y direction */
ResYAnchor(15,11)
YShift(15,5)

ResYAnchor(41,7)
YShift(41,31)

YShift(31,0)
YShift(0,20)
YShift(20,36)
YShift(20,37)
ResYAnchor(51,7)
YShift(51,87)

ResYAnchor(62,11)
YShift(62,76)

YIPAnchor(62,71,51)
YShift(71,68)
YShift(71,21)
YShift(21,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D03">
/* Y direction */
ResYAnchor(24,6)
YShift(24,21)
YAnchor(37,10)
YShift(37,23)
YShift(37,38)
YIPAnchor(37,1,24)
YShift(1,0)
YShift(0,10)
YShift(0,49)
YShift(49,7)
YShift(1,9)
YShift(9,6)
YShift(9,48)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D04">
/* Y direction */
ResYAnchor(5,11)
YDist(5,0,&gt;=)
YShift(5,36)
ResYAnchor(16,7)
YDist(16,21,&gt;=)
YShift(16,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D05">
/* Y direction */
YAnchor(0)
YShift(0,27)
YAnchor(1)
YShift(1,2)

ResYAnchor(15,6)
YShift(15,14)
YShift(15,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D07">
/* Y direction */
YAnchor(2)
YShift(2,3)
YShift(2,6)
ResYAnchor(4,6)
YShift(4,14)
YShift(4,15)
YIPAnchor(4,10,2)
YShift(10,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D09">
/* Y direction */
YAnchor(14)
YDist(14,3,&gt;=)
YShift(3,9)
YAnchor(15,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D0A">
/* Y direction */
ResYAnchor(1,6)
ResYAnchor(7,11)
YShift(7,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D0B">
/* Y direction */
ResYAnchor(0,6)
YShift(0,9)

YAnchor(1)
YShift(1,10)

YIPAnchor(0,6,1)
YShift(6,7)
YShift(6,11)
YShift(11,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D0C">
/* Y direction */
YAnchor(2)
YShift(2,3)
YShift(2,6)

ResYAnchor(4,6)
YShift(4,8)
YShift(8,9)
YShift(8,10)
YShift(10,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D0D">
/* Y direction */
ResYAnchor(1,6)
YShift(1,6)
YShift(1,7)
YShift(1,12)
YAnchor(3)
YShift(3,8)
YShift(3,11)
YInterpolate(3,0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D0F">
/* Y direction */
ResYAnchor(6,11)
YShift(6,39)
ResYAnchor(17,7)
YShift(17,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D10">
/* Y direction */
ResYAnchor(25,7)
YShift(25,16)
ResYAnchor(36,11)
YShift(36,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D11">
/* Y direction */
YAnchor(1)
YShift(1,18)
YAnchor(9)
YShift(9,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D12">
/* Y direction */
YAnchor(5)
YShift(5,4)
YShift(5,23)
YShift(23,24)
YAnchor(14)
YShift(14,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D13">
/* Y direction */
YAnchor(5)
YShift(5,22)
YAnchor(13)
YShift(13,32)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D14">
/* Y direction */
ResYAnchor(0,7)
YShift(0,36)
ResYAnchor(11,11)
YShift(11,25)
YIPAnchor(11,17,0)
YShift(17,20)
ResYAnchor(49,11)
YShift(49,82)
ResYAnchor(60,7)
YShift(60,71)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D15">
/* Y direction */
ResYAnchor(16,11)
YShift(16,25)
ResYAnchor(50,7)
YShift(50,39)
YShift(50,45)
YAnchor(45)
YShift(45,6)
YShift(45,35)
YShift(45,56)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D16">
/* Y direction */
ResYAnchor(20,7)
YShift(20,7)
YDist(20,13,&gt;=)
YShift(13,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D17">
/* Y direction */
ResYAnchor(7,11)
YShift(7,20)
YDist(7,14,&gt;=)
YShift(14,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D18">
/* Y direction */
YAnchor(13)
ResYAnchor(15,6)
YShift(15,12)
YIPAnchor(15,1,13)
YShift(1,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D19">
/* Y direction */
YAnchor(2,10)
YShift(2,7)
ResYAnchor(4,6)
YShift(4,9)
YIPAnchor(2,19,4)
YShift(19,1)
YShift(19,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D1A">
/* Y direction */
ResYAnchor(2,6)
YShift(2,27)
YAnchor(5,10)
YShift(5,25)
YIPAnchor(5,16,2)
YShift(16,15)
YShift(15,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D1C">
/* Y direction */
ResYAnchor(6,11)
YShift(6,17)
ResYAnchor(11,6)
YShift(11,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D1D">
/* Y direction */
YAnchor(2)
YShift(2,1)
YShift(1,6)
YShift(6,5)
YAnchor(15)
YShift(15,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D1E">
/* Y direction */
YAnchor(26)
YUpToGrid(18)
YDist(26,18,&gt;=)
YShift(18,12)
YShift(26,25)
YShift(25,30)
YAnchor(39)
YShift(39,40)
YDownToGrid(0)
YDist(39,0,&gt;=)
YShift(0,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D1F">
/* Y direction */
YAnchor(2)
YShift(2,1)
YShift(1,6)
YAnchor(36)
YShift(36,37)
YIPAnchor(2,15,36)
YShift(15,16)
YShift(15,27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D23">
/* Y direction */
ResYAnchor(10,11)
YDist(10,15,&gt;=)
YShift(10,19)
ResYAnchor(29,6)
YIPAnchor(10,27,29)
YShift(27,32)
YShift(27,1)
YShift(1,34)
YShift(29,36)
YShift(36,31)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D24">
/* Y direction */
ResYAnchor(24,7)
YShift(24,4)
ResYAnchor(53,11)
YShift(53,33)
YInterpolate(53,15,42,16,43,13,14,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D25">
/* Y direction */
ResYAnchor(0,7)
YAnchor(20,11)
YShift(20,13)
YShift(13,10)
YShift(10,23)
YShift(10,36)
ResYAnchor(26,11)
YShift(26,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D27">
/* Y direction */
YAnchor(1,10)
YShift(1,5)
ResYAnchor(3,6)
YShift(3,7)
YShift(7,6)
YShift(6,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D2A">
/* Y direction */
YAnchor(2,10)
ResYAnchor(17,6)
YShift(17,3)
YShift(3,4)
YIPAnchor(2,11,17)
YShift(11,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D2C">
/* Y direction */
YAnchor(2)
YShift(2,5)
YAnchor(3)
YShift(3,7)
YShift(3,6)
YShift(6,0)
YIPAnchor(2,12,3)
YShift(12,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D2D">
/* Y direction */
YAnchor(1)
YShift(1,14)
YAnchor(24)
YShift(24,3)
YShift(24,13)
YShift(24,23)
YIPAnchor(24,19,7,11,1)
YShift(19,20)
YShift(7,8)
YShift(11,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D2E">
/* Y direction */
YAnchor(13)
YAnchor(15)
YShift(15,12)
YIPAnchor(15,1,26,13)
YShift(1,2)
YShift(1,36)
YShift(36,24)
YShift(24,39)
YShift(39,38)
YShift(26,27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D2F">
/* Y direction */
YAnchor(17)
YAnchor(19)
YShift(19,16)
YIPAnchor(19,2,5,40,30,17)
YShift(2,3)
YShift(5,6)
YShift(30,31)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D30">
/* Y direction */
YAnchor(0)
YShift(0,27)
YAnchor(1)
YShift(1,2)
YAnchor(15)
YShift(15,14)
YShift(15,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D31">
/* Y direction */
YAnchor(2)
YShift(2,3)
YShift(2,6)
YAnchor(4)
YIPAnchor(4,15,10,2)
YShift(15,14)
YShift(10,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D32">
/* Y direction */
YAnchor(1)
YShift(1,0)
YShift(1,6)
YAnchor(4)
YIPAnchor(1,8,12,4)
YShift(8,9)
YShift(12,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D33">
/* Y direction */
YAnchor(5)
YShift(5,35)
YAnchor(16)
YShift(16,24)
YIPAnchor(16,40,5)
YShift(40,41)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D34">
/* Y direction */
YAnchor(4)
YShift(4,8)
YAnchor(5)
YShift(5,9)
YIPAnchor(4,2,5)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D35">
/* VTTTalk Unicode 0x1d35 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D36">
/* VTTTalk Unicode 0x1d36 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(7)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YShift(7,16) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D37">
/* Y direction */
YAnchor(0)
YShift(0,4)
YAnchor(1)
YShift(1,10)
YInterpolate(1,6,11,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D38">
/* VTTTalk Unicode 0x1d38 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(2)	/* min */
YAnchor(4)	/* max */

/* YDir: Stroke #0 */
YShift(2,3) /*perpendicular to the stroke*/

/* Extreme Min */
YShift(2,6)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D39">
/* Y direction */
YAnchor(0)
YShift(0,7)
YShift(0,12)
YShift(0,4)
YAnchor(5)
YShift(5,10)
YShift(5,14)
YInterpolate(5,2,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D3A">
/* Y direction */
YAnchor(1)
YShift(1,5)
YShift(1,9)
YAnchor(3)
YShift(3,8)
YShift(3,4)
YShift(4,2)
YAnchor(10,18)
YShift(10,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D3B">
/* Y direction */
YAnchor(0)
YShift(0,4)
YShift(0,8)
YAnchor(2)
YShift(2,9)
YShift(2,5)
YShift(5,3)
YAnchor(11,18)
YShift(11,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D3C">
/* VTTTalk Unicode 0x1d3c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(6)	/* min */
YAnchor(17)	/* max */

/* YDir: Stroke #0 */
YShift(17,28) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(6,39) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D3D">
/* Y direction */
YAnchor(16)
YShift(16,27)
YShift(16,6)
YAnchor(6)
YShift(6,37)
YShift(6,46)
YShift(46,56)
YAnchor(41)
YShift(41,51)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D3E">
/* Y direction */
YAnchor(12)
YAnchor(14)
YShift(14,11)
YIPAnchor(14,1,12)
YShift(1,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D3F">
/* Y direction */
YAnchor(0)
YShift(0,21)
YAnchor(22)
YShift(22,24)
YShift(22,27)
YIPAnchor(0,11,22)
YShift(11,12)
YShift(11,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D40">
/* VTTTalk Unicode 0x1d40 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0)	/* max */

/* YDir: Stroke #0 */
YInterpolate(0,7,1)
YAnchor(7)
YShift(7,6) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D41">
/* VTTTalk Unicode 0x1d41 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(6)	/* min */
YAnchor(0)	/* max */

/* YDir: Stroke #0 */
YShift(6,17) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(0,12)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D42">
/* VTTTalk Unicode 0x1d42 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(4)	/* min */
YAnchor(1)	/* max */

/* Contour #1 */
YShift(1,6) /* max */
YShift(4,8) /* min */

/* Contour #2 */
YShift(1,12) /* max */
YShift(4,14) /* min */

/* Contour #3 */
YShift(1,16) /* max */
YShift(4,18) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D43">
/* Y direction */
ResYAnchor(13,3)
YShift(13,5)
YDownToGrid(44)
YShift(13,44)
YAnchor(44)
YShift(44,23)
YAnchor(23)
YShift(44,35)
YIPAnchor(44,28,13)
YShift(28,51)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D44">
/* Y direction */
ResYAnchor(44,3)
YShift(44,23)
YAnchor(23)
YShift(44,35)
YDownToGrid(13)
YShift(44,13)
YAnchor(13)
YIPAnchor(13,51,44)
YShift(51,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D45">
/* Y direction */
ResYAnchor(6,3)
YShift(6,38)
YShift(6,43)
YAnchor(43)
YAnchor(17,8)
YShift(17,28)
YShift(17,56)
YShift(56,49)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D46">
/* Y direction */
YAnchor(45)
YShift(45,58)
YShift(45,0)
YShift(0,11)
ResYAnchor(74,3)
YShift(74,67)
YShift(74,37)
YShift(37,28)
YIPAnchor(74,50,45)
YShift(50,53)
YShift(53,21)
YAnchor(21)
YShift(21,44)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D47">
/* Y direction */
YAnchor(11)
YShift(11,3)
YAnchor(3)
YShift(11,42)
ResYAnchor(22,3)
YShift(22,1)
YAnchor(1)
YShift(22,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D48">
/* Y direction */
ResYAnchor(11,3)
YShift(11,0)
YAnchor(0)
YShift(11,42)
YAnchor(22)
YShift(22,3)
YAnchor(3)
YShift(22,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D49">
/* Y direction */
YAnchor(0)
YShift(0,34)
ResYAnchor(11,3)
YShift(11,24)
YIPAnchor(0,16,11)
YShift(16,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D4A">
/* Y direction */
ResYAnchor(0,3)
YShift(0,33)
YAnchor(11)
YShift(11,24)
YIPAnchor(11,16,0)
YShift(16,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D4B">
/* Y direction */
YAnchor(5)
YShift(5,25)
ResYAnchor(52,3)
YShift(52,32)
YIPAnchor(5,16,52)
YShift(16,42)
YShift(16,41)
YShift(41,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D4C">
/* Y direction */
YAnchor(25)
YShift(25,5)
ResYAnchor(34,3)
YShift(34,55)
YIPAnchor(25,14,34)
YShift(14,45)
YShift(14,46)
YShift(46,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D4D">
/* Y direction */
ResYAnchor(25,3)
YShift(25,0)
YAnchor(0)
YShift(25,56)
YAnchor(36)
YShift(36,47)
YShift(36,13)
YAnchor(13)
YShift(13,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D4E">
/* Y direction */
YAnchor(2)
YShift(2,7)
YAnchor(7)
YShift(7,13)
ResYAnchor(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D4F">
/* Y direction */
YAnchor(2)
YShift(2,10)
YAnchor(9,2)
YShift(9,0)
YAnchor(0)
YInterpolate(2,6,7,11,12,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D50">
/* Y direction */
YAnchor(6,3)
YShift(6,17)
YShift(6,25)
YAnchor(25)
YShift(6,32)
YShift(32,43)
YAnchor(23)
YShift(23,12)
YShift(12,38)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D51">
/* Y direction */
YAnchor(6,3)
YShift(6,17)
YShift(6,25)
YAnchor(25)
YAnchor(23)
YShift(23,33)
YAnchor(33)
YShift(33,40)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D52">
/* Y direction */
YAnchor(6,3)
YShift(6,38)
YAnchor(17)
YShift(17,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D53">
/* Y direction */
YAnchor(21,3)
YShift(21,14)
YAnchor(31)
YShift(31,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D54">
/* Y direction */
YAnchor(19,3)
YShift(19,7)
YShift(19,12)
YAnchor(12)
YShift(12,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D55">
/* Y direction */
YAnchor(0)
YShift(0,14)
YAnchor(7)
YShift(7,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D56">
/* Y direction */
YAnchor(0)
YAnchor(22,3)
YShift(22,3)
YAnchor(3)
YShift(22,33)

YAnchor(11)
YShift(11,42)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D57">
/* Y direction */
YAnchor(3,2)
YShift(3,2)
YShift(3,4)
YAnchor(4)
YAnchor(17)
YShift(17,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D58">
/* Y direction */
YAnchor(6)
YShift(6,17)
YShift(6,25)
YAnchor(25)
YAnchor(11,2)
YShift(11,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D59">
/* Y direction */
YAnchor(22)
YShift(22,21)
YShift(21,1)
YShift(21,11)
YAnchor(11)
YShift(11,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D5A">
/* Y direction */
YAnchor(0)
YShift(0,11)
YShift(0,21)
YShift(21,32)
YShift(21,46)
YAnchor(46)
YAnchor(5,2)
YShift(5,26)
YShift(26,43)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D5B">
/* Y direction */
YAnchor(8)
YShift(8,4)
YAnchor(9,2)
YShift(9,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D5C">
/* Y direction */
YAnchor(0,2)
YAnchor(20)
YShift(20,13)
YShift(20,26)
YShift(26,23)
YShift(26,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D5D">
/* Y direction */
YAnchor(26)
YShift(26,44)
YAnchor(49)
YIPAnchor(26,25,9,49)
YShift(25,35)
YShift(25,36)
YShift(36,0)
YShift(9,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D5E">
/* Y direction */
YAnchor(2)
YShift(2,3)
YShift(3,12)
YShift(12,8)
YAnchor(13,2)
YShift(13,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D5F">
/* Y direction */
YAnchor(4)
YShift(4,11)
YAnchor(28)
YShift(28,47)
YInterpolate(28,56,37,19,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D60">
/* Y direction */
YAnchor(5,3)
YShift(5,38)
YShift(5,21)
YAnchor(21)
YShift(21,22)
YAnchor(14)
YShift(14,0)
YAnchor(0)
YShift(14,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D61">
/* Y direction */
YAnchor(1)
YShift(1,20)
YAnchor(20)
YShift(20,13)
YAnchor(4,2)
YShift(4,3)
YAnchor(3)
YShift(4,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D62">
/* Y direction */
YAnchor(2)
YAnchor(3)
YDist(3,13,&gt;=)
YShift(13,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D62.ccmp">
/* Y direction */
YAnchor(3)
YDist(3,1,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D68">
/* Y direction */
YAnchor(5)
YShift(5,36)
YAnchor(16)
YShift(16,26)
YShift(16,42)
YAnchor(42)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D6B">
/* Y direction */
ResYAnchor(1,6)
ResYAnchor(11,11)
YShift(11,24)

ResYAnchor(17,6)
ResYAnchor(29,11)
YShift(29,66)
ResYAnchor(40,7)
YShift(40,55)
YIPAnchor(29,46,40)
YShift(46,49)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D6C">
/* Y direction */
ResYAnchor(0,0)
YAnchor(4,10)
ResYAnchor(11,11)
YShift(11,44)
ResYAnchor(22,7)
YShift(22,33)

YDist(22,54,&gt;=)
YShift(54,72)
YShift(54,62)
YShift(62,63)
YDist(54,67,&gt;=2)
YShift(67,59)
YShift(67,49)
YShift(49,50)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D6D">
/* Y direction */
ResYAnchor(1,0)
YAnchor(4,10)
ResYAnchor(11,7)
YShift(11,43)
YDist(11,53,&gt;=)
YShift(53,71)
YDist(53,66,&gt;=2)
YShift(66,48)
YShift(48,49)
YShift(66,58)
YShift(58,61)
YShift(61,62)
ResYAnchor(22,11)
YShift(22,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D6E">
/* Y direction */
YAnchor(1,10)
ResYAnchor(6,1)
YShift(6,13)
ResYAnchor(21,6)
YShift(21,20)
YDist(21,40,&gt;=)
YShift(40,32)
YShift(40,22)
YShift(22,23)
YDist(40,27,&gt;=2)
YShift(27,45)
YShift(27,35)
YShift(35,36)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D6F">
/* Y direction */
YAnchor(32,10)
YShift(32,48)
YShift(48,71)
ResYAnchor(33,6)
ResYAnchor(41,7)
YShift(41,53)
YIPAnchor(32,20,41)
YDist(20,5,&gt;=)
YShift(5,26)
YShift(26,0)
YShift(0,1)
YShift(20,11)
YShift(11,16)
YShift(16,15)
ResYAnchor(64,7)
YShift(64,76)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D70">
/* Y direction */
YAnchor(30,10)
YShift(30,46)
ResYAnchor(32,6)
ResYAnchor(39,7)
YShift(39,51)
YIPAnchor(30,5,39)
YShift(5,25)
YDist(5,19,&gt;=)
YShift(19,11)
YShift(11,34)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D71">
/* Y direction */
ResYAnchor(2,14)
ResYAnchor(3,6)
ResYAnchor(11,11)
YShift(11,44)
YDist(11,67,&gt;=)
YShift(67,59)
YDist(67,54,&gt;=)
YShift(54,72)
ResYAnchor(22,7)
YShift(22,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D72">
/* Y direction */
ResYAnchor(2,10)
ResYAnchor(3,6)
YIPAnchor(2,28,3)
YShift(28,46)
YDist(28,41,&gt;=)
YShift(41,33)
ResYAnchor(20,7)
YShift(20,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D73">
/* Y direction */
YAnchor(1,10)
ResYAnchor(6,7)
YShift(6,13)
YIPAnchor(1,23,6)
YShift(23,41)
YDist(23,36,&gt;=)
YShift(36,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D74">
/* Y direction */
ResYAnchor(42,7)
YShift(42,51)
ResYAnchor(69,11)
YShift(69,78)
YIPAnchor(69,4,42)
YInterpolate(69,28,4)
YInterpolate(4,37,42)
YShift(4,25)
YDist(4,18,&gt;=)
YShift(18,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D75">
/* Y direction */
ResYAnchor(3,6)
YDist(3,4,&gt;=)
ResYAnchor(17,11)
YShift(17,10)
YIPAnchor(17,27,3)
YShift(27,45)
YDist(27,40,&gt;=)
YShift(40,32)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D76">
/* Y direction */
YAnchor(32,10)
YShift(32,29)
YShift(29,33)
ResYAnchor(39,6)
YShift(39,34)
YIPAnchor(32,5,39)
YShift(5,23)
YDist(5,18,&gt;=)
YShift(18,10)
YShift(39,38)
YShift(38,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D77">
/* Y direction */
ResYAnchor(6,7)
YShift(6,14)
ResYAnchor(26,15)
YShift(26,0)
YAnchor(0)
YShift(26,58)
YIPAnchor(26,37,6)
YShift(37,48)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D79">
/* Y direction */
ResYAnchor(0,6)
YShift(0,2)
YShift(0,4)
YShift(4,39)
ResYAnchor(5,15)
YShift(5,24)
YInterpolate(5,15,14,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D7A">
/* Y direction */
ResYAnchor(7,6)
YShift(7,6)
YDist(7,8,&gt;=)
ResYAnchor(21,11)
YShift(21,1)
YAnchor(1)
YShift(21,14)
YAnchor(28,10)
YShift(28,43)
ResYAnchor(29,0)
ResYAnchor(36,7)
YShift(36,3)
YAnchor(3)
YShift(36,48)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D7D">
/* Y direction */
ResYAnchor(5,14)
ResYAnchor(15,11)
YShift(15,48)

ResYAnchor(26,7)
ResYAnchor(8,6)

YShift(26,37)
YIPAnchor(26,3,5)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D7E">
/* Y direction */
ResYAnchor(4,6)
YShift(4,16)
ResYAnchor(10,11)
YShift(10,21)
YIPAnchor(4,2,10)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D7F">
/* Y direction */
ResYAnchor(19,7)
YShift(19,20)
YShift(19,49)
YShift(49,48)
ResYAnchor(34,11)
YShift(34,4)
YIPAnchor(19,2,34)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D80">
/* Y direction */
ResYAnchor(6,15)
YShift(6,13)

YAnchor(18,0)
YAnchor(21)

ResYAnchor(29,11)
YShift(29,0)
YShift(29,62)

ResYAnchor(40,7)
YShift(40,51)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D81">
/* Y direction */
ResYAnchor(6,15)
YShift(6,13)
ResYAnchor(19,0)
YAnchor(22)
YShift(22,0)
ResYAnchor(29,7)
YShift(29,61)
ResYAnchor(40,11)
YShift(40,51)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D82">
/* Y direction */
ResYAnchor(6,15)
YShift(6,13)

YAnchor(19)

YShift(19,0)

YAnchor(24,1)

YShift(24,31)

ResYAnchor(39,6)
YShift(39,38)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D83">
/* Y direction */
ResYAnchor(6,15)
YShift(6,13)

YAnchor(19,10)
YShift(19,0)

YAnchor(20,6)

YAnchor(26,15)
YShift(26,34)

YAnchor(46,7)
YShift(46,78)

YAnchor(57,11)
YShift(57,68)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D84">
/* Y direction */
ResYAnchor(6,15)
YShift(6,13)
YAnchor(20,10)
ResYAnchor(21,0)
ResYAnchor(27,6)
YInterpolate(20,24,25,29,23,30,27)
YAnchor(28,10)
YShift(28,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D85">
/* Y direction */
ResYAnchor(6,15)
YShift(6,13)
YAnchor(20,10)
YShift(20,0)
YShift(20,19)
YAnchor(21,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D86">
/* Y direction */
ResYAnchor(6,15)
YShift(6,13)

YAnchor(19,10)

ResYAnchor(22,6)

ResYAnchor(29,7)
YShift(29,41)

YAnchor(36,10)

ResYAnchor(52,7)

YShift(52,64)

YAnchor(59,10)
YShift(59,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D87">
/* Y direction */
ResYAnchor(6,15)
YShift(6,13)
YAnchor(19,10)
ResYAnchor(21,6)
ResYAnchor(29,7)
YShift(29,41)
YAnchor(36,10)
YShift(36,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D88">
/* Y direction */
ResYAnchor(6,15)
YShift(6,13)
ResYAnchor(19,14)
ResYAnchor(21,6)
ResYAnchor(29,11)
YShift(29,0)
YShift(29,62)
ResYAnchor(40,7)
YShift(40,51)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D89">
/* Y direction */
ResYAnchor(6,15)
YShift(6,13)
YAnchor(19,10)
ResYAnchor(21,6)
ResYAnchor(38,7)
YShift(38,27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D8A">
/* Y direction */
ResYAnchor(6,15)
YShift(6,13)
ResYAnchor(32,7)
YShift(32,41)
ResYAnchor(59,11)
YInterpolate(59,54,27,32)
YShift(59,68)
YShift(68,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D8B">
/* Y direction */
ResYAnchor(6,15)
YShift(6,13)
YAnchor(19,10)
YShift(19,0)
YShift(19,21)
ResYAnchor(26,1)
YShift(26,33)
ResYAnchor(44,15)
YShift(44,51)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D8C">
/* Y direction */
ResYAnchor(6,15)
YShift(6,13)
YAnchor(21,6)
YAnchor(28,10)
YShift(28,0)
YShift(28,19)
YShift(19,23)
ResYAnchor(29,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D8D">
/* Y direction */
ResYAnchor(6,15)
YShift(6,13)
ResYAnchor(20,6)
YAnchor(26,10)
YShift(26,0)
YShift(26,24)
ResYAnchor(29,6)
YInterpolate(26,25,28,22,19,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D8E">
/* Y direction */
ResYAnchor(6,15)
YShift(6,13)
YAnchor(20,10)
YShift(20,24)
YShift(20,21)
YShift(21,0)
YShift(21,25)
ResYAnchor(31,6)
YShift(31,26)
YShift(31,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D8F">
/* Y direction */
ResYAnchor(14,15)
YShift(14,7)
ResYAnchor(35,7)
YShift(35,25)
YAnchor(45,10)
YShift(45,0)
ResYAnchor(69,11)
YShift(69,59)
YIPAnchor(69,49,35)
YShift(49,48)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D90">
/* Y direction */
ResYAnchor(6,7)
YShift(6,40)
ResYAnchor(18,11)
YShift(18,29)
ResYAnchor(45,6)
ResYAnchor(58,11)
YShift(58,51)
YShift(51,65)
ResYAnchor(79,15)
YShift(79,72)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D91">
/* Y direction */
ResYAnchor(15,15)
YShift(15,7)
ResYAnchor(25,10)
YShift(25,1)
ResYAnchor(32,7)
YShift(32,22)
YShift(32,64)
YShift(32,70)
ResYAnchor(43,11)
YShift(43,54)
ResYAnchor(76,1)
YShift(76,83)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D92">
/* Y direction */
ResYAnchor(14,15)
YShift(14,7)
ResYAnchor(20,11)
YShift(20,56)
YShift(56,0)
ResYAnchor(31,7)
YShift(31,45)
YIPAnchor(20,37,31)
YShift(37,40)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D93">
/* Y direction */
ResYAnchor(14,15)
YShift(14,7)
ResYAnchor(42,11)
YShift(42,32)
YShift(32,36)
YShift(36,1)
ResYAnchor(63,7)
YShift(63,73)
YIPAnchor(42,22,63)
YShift(22,52)
YShift(22,83)
YShift(83,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D94">
/* Y direction */
ResYAnchor(14,15)
YShift(14,7)
ResYAnchor(31,11)
YShift(31,41)
YShift(41,37)
YShift(37,0)
ResYAnchor(74,7)
YShift(74,64)
YIPAnchor(31,50,74)
YShift(50,53)
YShift(50,55)
YShift(55,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D95">
/* Y direction */
ResYAnchor(14,15)
YShift(14,7)
ResYAnchor(22,7)
YShift(22,59)
ResYAnchor(33,11)
YShift(33,48)
YIPAnchor(33,41,22)
YShift(41,21)
YShift(41,40)
YShift(40,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D96">
/* Y direction */
ResYAnchor(14,15)
YShift(14,7)
YAnchor(22,10)
YShift(22,0)
ResYAnchor(23,6)
YDist(23,33,&gt;=)
YShift(33,27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D96.ccmp">
/* Y direction */
YAnchor(2,10)
YShift(2,23)
ResYAnchor(3,6)
YAnchor(17,15)
YShift(17,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D97">
/* Y direction */
ResYAnchor(14,15)
YShift(14,7)
ResYAnchor(20,11)
YShift(20,29)
YShift(29,25)
YShift(25,0)
ResYAnchor(49,7)
YShift(49,40)
YDist(49,44,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D98">
/* Y direction */
ResYAnchor(14,15)
YShift(14,7)
ResYAnchor(26,1)
YShift(26,33)
YAnchor(44)
YShift(44,1)
YShift(44,51)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D99">
/* Y direction */
ResYAnchor(14,15)
YShift(14,7)
ResYAnchor(24,10)
YShift(24,0)
ResYAnchor(31,11)
YShift(31,44)
ResYAnchor(37,6)
YShift(37,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D9A">
/* Y direction */
YAnchor(14)
YShift(14,7)

YShift(7,38)
YAnchor(38)
YShift(38,48)
YShift(48,44)
YShift(44,1)
ResYAnchor(20,6)
YShift(20,27)
YShift(27,22)
YIPAnchor(14,56,20)
YShift(56,23)
YShift(56,29)
YShift(29,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D9B">
/* Y direction */
YAnchor(0)
YShift(0,22)
YShift(0,61)
YAnchor(61)
ResYAnchor(11,3)
YShift(11,33)
YShift(11,55)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D9C">
/* Y direction */
YAnchor(8)
YShift(8,0)
ResYAnchor(19,3)
YShift(19,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D9D">
/* Y direction */
YAnchor(26)
YShift(26,13)
YShift(26,0)
YShift(0,7)
YShift(7,19)
ResYAnchor(37,3)
YShift(37,46)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D9E">
/* Y direction */
YAnchor(12)
YShift(12,37)
YAnchor(20)
YShift(20,29)
YShift(20,49)
YShift(49,48)
YShift(49,50)
YShift(50,51)
YShift(50,0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1D9F">
/* Y direction */
YAnchor(0)
YShift(0,9)
ResYAnchor(36,3)
YShift(36,28)
YInterpolate(0,17,44,20,36)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DA0">
/* Y direction */
YAnchor(1)
ResYAnchor(20,2)
YShift(20,19)
YUpToGrid(6)
YShift(20,6)
YAnchor(6)
YShift(6,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DA1">
/* Y direction */
ResYAnchor(0,2)
YShift(0,21)
YAnchor(21)
YShift(21,20)
YAnchor(6)
YShift(6,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DA3">
/* Y direction */
YAnchor(0)
ResYAnchor(15,2)
YShift(15,1)
YIPAnchor(0,10,15)
YShift(10,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DA4">
/* Y direction */
YAnchor(2)
ResYAnchor(3,2)
YUpToGrid(13)
YShift(3,13)
YAnchor(13)
YShift(13,7)
YIPAnchor(2,18,3)
YShift(18,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DA4.ccmp">
/* Y direction */
YAnchor(0)
YAnchor(1)
YIPAnchor(0,6,1)
YShift(6,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DA5">
/* Y direction */
ResYAnchor(0,2)
YAnchor(13)
YShift(13,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DA6">
/* Y direction */
ResYAnchor(7,3)
YShift(7,3)
YShift(7,6)
YAnchor(10)
YShift(10,2)
YShift(10,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DA7">
/* Y direction */
ResYAnchor(11,3)
YShift(11,7)
YShift(11,10)
YAnchor(14)
YShift(14,6)
YShift(14,15)
YIPAnchor(14,2,11)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DA8">
/* Y direction */
YAnchor(10)
YShift(10,30)
YShift(30,24)
YAnchor(24)
YShift(24,17)
ResYAnchor(38,2)
YUpToGrid(48)
YShift(38,48)
YAnchor(48)
YShift(48,42)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DA8.ccmp">
/* Y direction */
YAnchor(38)
YDist(38,10,&gt;=)
YShift(10,30)
YDist(10,17,&gt;=)
YShift(17,0)
YShift(17,24)
YShift(17,37)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DA9">
/* Y direction */
YAnchor(3)
YAnchor(15)
YShift(15,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DAA">
/* Y direction */
YAnchor(2)
YShift(2,5)
YShift(2,18)
YShift(18,11)
YAnchor(3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DAB">
/* Y direction */
YAnchor(6)
YShift(6,2)
YShift(6,3)
ResYAnchor(7,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DAC">
/* Y direction */
YAnchor(6,2)
YShift(6,17)
YAnchor(23)
YShift(23,12)
YShift(12,38)
YShift(38,48)
YShift(12,54)
YAnchor(54)
YShift(54,61)
YAnchor(24,2)
YAnchor(32,2)
YShift(32,43)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DAD">
/* Y direction */
YAnchor(31)
YShift(31,42)
YShift(31,6)
YShift(6,17)
YShift(6,21)
YAnchor(21)
YAnchor(36,2)
YShift(36,11)
YShift(11,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DAE">
/* Y direction */
YAnchor(6,2)
YShift(6,17)
YAnchor(12)
YShift(12,21)
YAnchor(21)
YShift(21,28)
YAnchor(33,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DAF">
/* Y direction */
YAnchor(6,2)
YShift(6,17)
YAnchor(23)
YShift(23,37)
YAnchor(37)
YShift(37,30)
YAnchor(25,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DB0">
/* Y direction */
YAnchor(6)
YShift(6,9)
YShift(9,0)
YShift(9,1)
YAnchor(7,2)
YShift(7,2)
YShift(7,3)
YShift(7,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DB1">
/* Y direction */
YAnchor(6,2)
YShift(6,38)
YAnchor(17)
YShift(17,28)
YIPAnchor(17,44,6)
YShift(44,45)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DB2">
/* Y direction */
YAnchor(48,2)
YShift(48,79)
YShift(48,85)
YAnchor(85)
YShift(48,17)
YShift(17,28)
YAnchor(59)
YShift(59,70)
YShift(59,84)
YAnchor(84)
YShift(59,6)
YShift(6,37)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DB3">
/* Y direction */
YAnchor(12,2)
YShift(12,20)
YAnchor(35)
YShift(35,44)
YShift(44,40)
YAnchor(40)
YShift(40,64)
YShift(35,59)
YAnchor(59)
YShift(59,52)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DB4">
/* Y direction */
YAnchor(7)
YShift(7,14)
YAnchor(24)
YShift(24,31)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DB5">
/* Y direction */
YAnchor(3,2)
YShift(3,2)
YShift(3,4)
YAnchor(4)
YAnchor(17)
YShift(17,10)
YShift(17,23)
YShift(17,29)
YAnchor(29)
YShift(29,36)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DB6">
/* Y direction */
YAnchor(0,2)
YShift(0,21)
YAnchor(16)
YShift(16,6)
YShift(16,24)
YAnchor(24)
YIPAnchor(16,29,0)
YShift(29,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DB7">
/* Y direction */
YAnchor(30)
YShift(30,0)
YAnchor(45,2)
YShift(45,44)
YShift(45,15)
YShift(15,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DB8">
/* Y direction */
YAnchor(6)
YShift(6,17)
YAnchor(11,2)
YShift(11,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DB9">
/* Y direction */
YAnchor(6,2)
YAnchor(12)
YShift(12,0)
YAnchor(34,2)
YShift(34,27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DBA">
/* Y direction */
YAnchor(7)
YShift(7,0)
YAnchor(8,2)
YShift(8,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DBB">
/* Y direction */
YAnchor(2)
YShift(2,6)
YShift(2,3)
YShift(3,7)
YAnchor(13,2)
YShift(13,8)
YShift(13,12)
YShift(12,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DBC">
/* Y direction */
YAnchor(2)
YShift(2,6)
YShift(2,3)
YShift(3,7)
YShift(3,30)
YShift(2,25)
YAnchor(25)
YShift(25,18)
YAnchor(13,2)
YShift(13,8)
YShift(13,12)
YShift(12,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DBD">
/* Y direction */
YAnchor(2)
YShift(2,1)
YShift(2,6)
YShift(2,3)
YShift(3,7)
YShift(3,15)
YShift(2,30)
YShift(30,29)
YAnchor(13,2)
YShift(13,4)
YShift(13,8)
YShift(13,12)
YAnchor(43,8)
YShift(43,36)
YAnchor(36)
YShift(36,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DBE">
/* Y direction */
YAnchor(0,2)
YShift(0,2)
YShift(0,7)
YAnchor(17)
YShift(17,25)
YIPAnchor(17,33,0)
YShift(33,4)
YShift(33,9)
YShift(9,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DBF">
/* Y direction */
YAnchor(0)
YShift(0,22)
YAnchor(11,3)
YShift(11,33)
YIPAnchor(0,45,11)
YShift(45,46)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DC0">
/* Y direction */
YAnchor(13)
YShift(13,7)
YUpToGrid(2)
YShift(13,2)
YAnchor(2)
YDist(2,3,&gt;=2)
YShift(2,25)
YAnchor(25)
YShift(25,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DC1">
/* Y direction */
YAnchor(9)
YShift(9,3)
YUpToGrid(15)
YShift(9,15)
YAnchor(15)
YDist(15,13,&gt;=2)
YShift(15,25)
YAnchor(25)
YShift(25,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DC2">
/* Y direction */
YAnchor(3)
YShift(3,50)
YDist(3,27,&gt;=)
YShift(27,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DC3">
/* Y direction */
YAnchor(7)
YShift(7,2)
YShift(7,3)
YShift(7,6)
YShift(7,0)
YShift(0,1)
YShift(7,5)
YShift(5,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DC4">
/* Y direction */
YAnchor(1)
YShift(1,0)
YDist(1,3,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DC5">
/* Y direction */
YAnchor(3)
YShift(3,0)
YDist(3,2,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DC6">
/* Y direction */
YAnchor(5)
YShift(5,2)
YDist(5,4,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DC7">
/* Y direction */
YAnchor(4)
YShift(4,1)
YDist(4,5,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DC8">
/* Y direction */
YAnchor(1)
YShift(1,4)
YDist(1,0,&gt;=2)
YShift(0,7)
YInterpolate(0,3,8,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DC9">
/* Y direction */
YAnchor(1)
YShift(1,4)
YDist(1,9,&gt;=2)
YShift(9,7)
YInterpolate(9,3,8,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DCA">
/* Y direction */
YAnchor(3)
YDist(3,2,&gt;=)
YShift(3,18)
YAnchor(18)
YShift(18,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DCB">
/* Y direction */
YAnchor(7)
YShift(7,15)
YShift(15,1)
YShift(1,12)
YAnchor(12)
YShift(12,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DCC">
/* Y direction */
YAnchor(5)
YShift(5,4)
YShift(4,13)
YShift(13,10)
YAnchor(10)
YShift(10,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DCD">
/* Y direction */
YAnchor(8)
YDist(8,5,&gt;=2)
YShift(5,3)
YInterpolate(5,4,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DCE">
/* Y direction */
YAnchor(15)
YDist(15,0,&gt;=3)
YShift(0,1)
YShift(15,8)
YInterpolate(8,12,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DCF">
/* Y direction */
YAnchor(18)
YShift(18,6)
YShift(18,2)
YAnchor(2)
YShift(2,3)
YShift(18,7)
YShift(7,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DD0">
/* Y direction */
YAnchor(0)
YDist(0,30,&gt;=)
YShift(30,34)
YShift(30,37)
YShift(30,18)
YShift(18,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DD1">
/* Y direction */
YAnchor(35)
YShift(35,22)
YShift(35,7)
YShift(7,6)
YDist(35,15,&gt;=)
YShift(15,0)
YShift(15,29)
YShift(29,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DD2">
/* Y direction */
YAnchor(8)
YShift(8,27)
YShift(8,17)
YAnchor(17)
YIPAnchor(17,0,8)
YShift(0,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DD3">
/* Y direction */
YAnchor(4)
YShift(4,11)
YUpToGrid(7)
YDist(4,7,&gt;=2)
YShift(7,14)
YShift(7,0)
YShift(0,21)
YShift(4,18)
YShift(18,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DD4">
/* Y direction */
YAnchor(11)
YShift(11,49)
YDist(11,32,&gt;=3)
YShift(32,40)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DD5">
/* Y direction */
YAnchor(11)
YShift(11,4)
YDist(11,32,&gt;=3)
YInterpolate(32,18,39,11)
YShift(32,40)
YShift(40,58)
YShift(11,49)
YShift(49,67)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DD6">
/* Y direction */
YAnchor(16)
YShift(16,1)
YAnchor(1)
YShift(16,9)
YDist(16,43,&gt;=3)
YShift(43,24)
YAnchor(24)
YShift(24,4)
YAnchor(4)
YInterpolate(43,29,50,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DD7">
/* Y direction */
YAnchor(28)
YShift(28,35)
YDist(28,19,&gt;=)
YShift(19,44)
YShift(19,0)
YShift(0,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DD8">
/* Y direction */
YAnchor(1)
YShift(1,0)
YShift(1,10)
YAnchor(10)
YShift(10,35)
YIPAnchor(10,18,1)
YShift(18,27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DD9">
/* Y direction */
YAnchor(1)
YShift(1,0)
YShift(1,10)
YAnchor(10)
YShift(10,35)
YIPAnchor(10,18,1)
YShift(18,27)
YShift(18,45)
YShift(45,46)
YShift(1,47)
YShift(47,44)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DDA">
/* Y direction */
YAnchor(27)
YShift(27,12)
YAnchor(12)
YShift(27,45)
YDist(27,18,&gt;=3)
YShift(18,37)
YDownToGrid(7)
YShift(18,7)
YAnchor(7)
YShift(7,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DDB">
/* Y direction */
YAnchor(8)
YShift(8,15)
YDist(8,0,&gt;=3)
YShift(0,23)
YInterpolate(0,28,29,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DDC">
/* Y direction */
YAnchor(9)
YDist(9,0,&gt;=)
YDist(9,1,&gt;=3)
YShift(1,10)
YInterpolate(1,6,7,11,12,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DDD">
/* Y direction */
YAnchor(0)
YAnchor(3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DDE">
/* Y direction */
YAnchor(7)
YDist(7,6,&gt;=3)
YShift(6,2)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DDF">
/* Y direction */
YAnchor(10)
YShift(10,5)
YShift(5,1)
YShift(1,12)
YDist(10,9,&gt;=3)
YShift(9,4)
YShift(4,0)
YShift(4,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DE0">
/* Y direction */
YAnchor(10)
YShift(10,4)
YAnchor(4)
YDist(10,2,&gt;=3)
YShift(2,16)
YShift(10,21)
YShift(21,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DE1">
/* Y direction */
YAnchor(7)
YShift(7,2)
YShift(7,3)
YShift(7,11)
YDist(7,6,&gt;=3)
YShift(6,9)
YShift(9,0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DE2">
/* Y direction */
YAnchor(13)
YShift(13,10)
YDist(13,12,&gt;=3)
YShift(12,39)
YInterpolate(12,1,29,30,2,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DE3">
/* Y direction */
YAnchor(4)
YShift(4,19)
YDist(4,22,&gt;=3)
YInterpolate(22,11,23,12,24,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DE4">
/* Y direction */
YAnchor(12)
YDist(12,34,&gt;=3)
YInterpolate(34,30,8,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DE5">
/* Y direction */
YAnchor(0)
YAnchor(5)
YShift(5,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DE6">
/* Y direction */
YAnchor(13)
YShift(13,8)
YDist(13,2,&gt;=3)
YShift(2,5)
YShift(2,3)
YShift(3,7)
YShift(13,12)
YShift(12,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DE7">
/* Y direction */
YAnchor(9)
YShift(9,28)
YShift(9,37)
YAnchor(37)
YDist(9,0,&gt;=3)
YShift(0,19)
YShift(0,49)
YAnchor(49)
YShift(49,42)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DE8">
/* Y direction */
YAnchor(14)
YShift(14,2)
YAnchor(2)
YShift(14,32)
YDist(14,5,&gt;=3)
YShift(5,4)
YAnchor(4)
YShift(5,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DE9">
/* Y direction */
YAnchor(23)
YShift(23,39)
YShift(23,7)
YAnchor(7)
YShift(7,15)
YShift(7,43)
YAnchor(43)
YInterpolate(7,22,31,0,32,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DEA">
/* Y direction */
YAnchor(29)
YShift(29,22)
YDist(29,0,&gt;=3)
YShift(0,13)
YInterpolate(0,7,6,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DEB">
/* Y direction */
YAnchor(3)
YShift(3,2)
YShift(2,5)
YAnchor(5)
YShift(3,9)
YAnchor(9)
YShift(9,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DEC">
/* Y direction */
YAnchor(44)
YAnchor(47)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DED">
/* Y direction */
YAnchor(13)
YShift(13,31)
YDist(13,4,&gt;=3)
YShift(4,22)
YShift(4,2)
YShift(2,1)
YShift(4,3)
YShift(3,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DEE">
/* Y direction */
YAnchor(5)
YShift(5,4)
YAnchor(4)
YShift(5,23)
YDist(5,14,&gt;=3)
YShift(14,1)
YAnchor(1)
YShift(14,32)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DEF">
/* Y direction */
YAnchor(5)
YShift(5,12)
YAnchor(21)
YShift(21,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DF0">
/* Y direction */
YAnchor(19)
YShift(19,5)
YDist(19,14,&gt;=3)
YShift(14,8)
YAnchor(8)
YShift(14,25)
YShift(14,2)
YShift(2,1)
YShift(14,3)
YShift(3,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DF1">
/* Y direction */
YAnchor(10)
YShift(10,12)
YShift(10,1)
YShift(1,21)
YDist(10,9,&gt;=3)
YShift(9,5)
YShift(5,19)
YShift(19,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DF2">
/* Y direction */
YAnchor(35)
YShift(35,28)
YUpToGrid(9)
YShift(35,9)
YAnchor(9)
YShift(9,3)
YShift(9,21)
YShift(21,15)
YDist(35,62,&gt;=3)
YShift(62,43)
YAnchor(43)
YShift(62,55)
YInterpolate(62,48,69,35)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DF3">
/* Y direction */
YAnchor(33)
YShift(33,51)
YUpToGrid(9)
YShift(33,9)
YAnchor(9)
YShift(9,3)
YShift(9,21)
YShift(21,15)
YDist(33,24,&gt;=3)
YShift(24,42)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DF4">
/* Y direction */
YAnchor(39)
YShift(39,25)
YUpToGrid(9)
YShift(39,9)
YAnchor(9)
YShift(9,3)
YShift(9,21)
YShift(21,15)
YDist(39,34,&gt;=3)
YShift(34,28)
YAnchor(28)
YShift(34,45)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DFC">
/* Y direction */
YAnchor(17)
YShift(17,6)
YDist(17,11,&gt;=2)
YShift(11,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DFD">
/* Y direction */
YAnchor(17)
YShift(17,0)
YShift(17,9)
YDist(17,4,&gt;=)
YShift(4,12)
YShift(4,22)
YDist(4,42,&gt;=)

YAnchor(42)
YShift(42,25)
YShift(42,34)
YShift(42,29)
YAnchor(29)
YShift(29,37)
YShift(29,47)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1DFF">
/* Y direction */
YAnchor(13)
YShift(13,15)
YDist(13,18,&gt;=)
YShift(18,12)
YDownToGrid(4)
YShift(18,4)
YAnchor(4)
YShift(4,1)
YShift(4,2)
YShift(4,3)
YShift(4,7)
YShift(4,8)
YDist(4,5,&gt;=)
YShift(5,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1E9B">
/* Y direction */
YAnchor(0,10)
ResYAnchor(6,1)
YShift(6,13)
YDist(6,27,&gt;=)
YShift(27,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1E9C">
/* Y direction */
YAnchor(4,10)
ResYAnchor(10,1)
YShift(10,17)
YInterpolate(4,2,3,1,0,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1E9D">
/* Y direction */
YAnchor(0,10)
ResYAnchor(6,1)
YShift(6,13)
YDownToGrid(21)
YShift(13,21)
YAnchor(21)
YShift(21,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1EFB">
/* Y direction */
YAnchor(6)
YShift(6,10)
YAnchor(7)
YShift(7,11)
YDist(7,3,&gt;=)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1EFC">
/* Y direction */
ResYAnchor(10,9)
YShift(10,33)
ResYAnchor(21,2)
YShift(21,22)
YIPAnchor(10,1,21)
YShift(1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1EFD">
/* VTTTalk Unicode 0x1efd */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Y direction */
ResYAnchor(10,9)
YShift(10,33)
YAnchor(21)
YShift(21,22)
YIPAnchor(10,1,21)
YShift(1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1EFE">
/* Y direction */
ResYAnchor(9,2)
YShift(9,1)
ResYAnchor(10,9)
YShift(10,26)
YShift(10,18)
YAnchor(18)
YShift(18,34)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1EFF">
/* Y direction */
ResYAnchor(4,6)
YShift(4,36)
YAnchor(21)
YShift(21,5)
YShift(21,29)
YAnchor(29)
YShift(29,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1F16A">
/* Y direction */
YAnchor(10,2)
YShift(10,5)
YShift(10,9)
YAnchor(9)
YShift(9,4)
YShift(4,0)
YShift(4,11)
YShift(11,22)
YAnchor(22)
YShift(22,15)
YShift(10,12)
YShift(12,1)
YShift(10,31)
YAnchor(31)
YShift(31,38)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1F16B">
/* Y direction */
YAnchor(10,2)
YShift(10,5)
YShift(10,9)
YAnchor(9)
YShift(9,4)
YAnchor(4)
YShift(4,0)
YShift(4,11)
YShift(11,37)
YShift(37,16)
YShift(37,17)
YShift(10,12)
YShift(12,1)
YShift(12,38)
YShift(38,27)
YShift(27,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1FBD">
/* Y direction */
YAnchor(0)
YDist(0,4,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1FBE">
/* Y direction */
YAnchor(0)
YDist(0,12,&gt;=)
YShift(12,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1FBF">
/* Y direction */
YAnchor(9)
YDist(9,4,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1FC0">
/* Y direction */
YAnchor(5)
YShift(5,23)
YShift(5,13)
YShift(13,14)
YDist(5,18,&gt;=2)
YShift(18,10)
YShift(18,0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1FC1">
/* Y direction */
YAnchor(3)
YShift(3,9)
YShift(3,15)
YShift(15,21)
YDist(3,29,&gt;=)
YShift(29,45)
YShift(29,36)
YShift(36,37)
YDist(29,41,&gt;=2)
YShift(41,33)
YShift(41,24)
YShift(24,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1FCD">
/* Y direction */
YAnchor(15)
YShift(15,4)
YShift(4,3)
YDist(15,10,&gt;=)
YShift(10,2)
YAnchor(2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1FCE">
/* Y direction */
YAnchor(15)
YShift(15,2)
YDist(15,10,&gt;=)
YShift(10,0)
YAnchor(0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1FCF">
/* Y direction */
YAnchor(33)
YDist(33,28,&gt;=)
YDist(33,5,&gt;=)
YShift(5,21)
YShift(5,17)
YAnchor(17)
YShift(17,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1FDD">
/* Y direction */
YAnchor(7)
YShift(7,4)
YDist(7,13,&gt;=)
YShift(13,2)
YAnchor(2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1FDE">
/* Y direction */
YAnchor(7)
YShift(7,2)
YAnchor(2)
YDist(7,13,&gt;=)
YShift(13,5)
YAnchor(5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1FDF">
/* Y direction */
YAnchor(1)
YDist(1,7,&gt;=)
YDist(1,15,&gt;=)
YShift(15,31)
YShift(15,27)
YAnchor(27)
YShift(27,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1FED">
/* Y direction */
YAnchor(9)
YShift(9,3)
YShift(9,21)
YShift(21,15)
YShift(9,26)
YAnchor(26)
YDist(26,27,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1FEE">
/* Y direction */
YAnchor(9)
YShift(9,3)
YShift(9,21)
YShift(9,24)
YAnchor(24)
YDist(24,25,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1FEF">
/* Y direction */
YAnchor(3)
YDist(3,1,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1FFD">
/* Y direction */
YAnchor(5)
YDist(5,2,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1FFE">
/* Y direction */
YAnchor(1)
YDist(1,7,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2000">
/* VTTTalk Unicode 0x2000 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni2001">
/* VTTTalk Unicode 0x2001 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni2002">
/* VTTTalk Unicode 0x2002 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni2003">
/* VTTTalk Unicode 0x2003 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni2004">
/* VTTTalk Unicode 0x2004 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni2005">
/* VTTTalk Unicode 0x2005 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni2006">
/* VTTTalk Unicode 0x2006 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni2007">
/* VTTTalk Unicode 0x2007 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni2008">
/* VTTTalk Unicode 0x2008 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni2009">
/* VTTTalk Unicode 0x2009 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni2009.fra">
/* VTTTalk Unicode 0xffff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni200A">
/* VTTTalk Unicode 0x200a */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni200B">
/* VTTTalk Unicode 0x200b */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni202F">
/* VTTTalk Unicode 0x202f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni2045">
/* Y direction */
YAnchor(10)
YShift(10,7)
YAnchor(11)
YShift(11,6)
YIPAnchor(11,2,10)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2046">
/* Y direction */
YAnchor(5)
YShift(5,4)
YAnchor(8)
YShift(8,9)
YIPAnchor(5,2,8)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni204A">
/* Y direction */
YAnchor(1,6)
YShift(1,0)
ResYAnchor(3,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni204B">
/* Y direction */
YAnchor(0)
YShift(0,2)
YAnchor(2)
ResYAnchor(11,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni204C">
/* Y direction */
YAnchor(0)
YShift(0,12)
YAnchor(3)
YShift(3,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni204D">
/* Y direction */
YAnchor(1)
YShift(1,11)
YAnchor(2)
YShift(2,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni204F">
/* Y direction */
YAnchor(3,7)
YShift(3,9)
YAnchor(17)
YDist(17,12,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2050">
/* Y direction */
YAnchor(0)
YShift(0,8)
YDist(0,5,&gt;=)
YShift(5,4)
YShift(5,11)
YShift(11,12)
YAnchor(17)
YShift(17,25)
YDist(17,22,&gt;=)
YShift(22,21)
YShift(22,28)
YShift(28,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2052">
/* Y direction */
YAnchor(1)
YAnchor(3,2)
YIPAnchor(1,25,7,3)
YShift(25,19)
YShift(7,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2053">
/* Y direction */
YAnchor(16)
YShift(16,9)
YDist(16,4,&gt;=)
YShift(4,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2054">
/* Y direction */
YAnchor(0)
YShift(0,8)
YDist(0,11,&gt;=)
YShift(11,12)
YShift(11,5)
YShift(5,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2055">
/* Y direction */
YAnchor(11)
YDist(11,10,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2057">
/* Y direction */
YAnchor(1)
YShift(1,0)
YAnchor(0)
YShift(0,4)
YShift(4,8)
YShift(8,12)
YShift(1,5)
YShift(5,9)
YShift(9,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni205F">
/* VTTTalk Unicode 0x205f */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni2071">
/* Y direction */
YAnchor(1)
YDist(1,0)
YDist(0,13)
YShift(13,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2071.ccmp">
/* Y direction */
YAnchor(3)
YDist(3,1,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2094">
/* Y direction */
YAnchor(11)
YShift(11,24)
YDist(11,0,&gt;=3)
YShift(0,34)
YInterpolate(11,19,16,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2099">
/* Y direction */
YAnchor(6)
YShift(6,17)
YShift(6,24)
YAnchor(24)
YAnchor(11)
YShift(11,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni209A">
/* Y direction */
YAnchor(0)
YAnchor(22)
YShift(22,3)
YAnchor(3)
YShift(22,32)
YIPAnchor(22,11,0)
YShift(11,41)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20AD">
/* Y direction */
ResYAnchor(6,12)
YShift(6,14)
ResYAnchor(7,4)
YShift(7,13)
YIPAnchor(6,2,7)
YShift(2,3)
YShift(3,11)
YShift(2,10)
YShift(10,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20AE">
/* Y direction */
YAnchor(10,12)
ResYAnchor(15,4)
YShift(15,11)
YShift(15,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20AF">
/* Y direction */
ResYAnchor(21,5)
YShift(21,12)
YDist(21,32,&gt;=)

ResYAnchor(37,13)
YShift(37,68)
YShift(37,45)
YAnchor(45)
YShift(45,62)

ResYAnchor(56,13)
YShift(56,0)
YShift(56,1)

YAnchor(85)
YShift(85,120)
ResYAnchor(96,13)
YShift(96,109)
YAnchor(126)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20B0">
/* Y direction */
YAnchor(39)
YShift(39,50)
YAnchor(66)
YShift(66,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20B1">
/* Y direction */
ResYAnchor(22,12)
ResYAnchor(23,4)
YDownToGrid(10)
YIPAnchor(22,10,23)
YShift(10,9)
YShift(23,20)
YIPAnchor(10,2,20)
YShift(2,3)
YDist(2,7,&gt;=)
YShift(7,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20B2">
/* Y direction */
ResYAnchor(9,13)
YDist(9,2,&gt;=)
YShift(9,41)
ResYAnchor(20,5)
YDist(20,3,&gt;=)
YDist(20,25,&gt;=)
YShift(20,29)
YIPAnchor(9,47,20)
YShift(47,48)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20B3">
/* Y direction */
YAnchor(9,12)
ResYAnchor(11,4)
YShift(11,15)
YIPAnchor(9,7,11)
YShift(7,6)
YDist(7,2,&gt;=)
YShift(2,3)
YShift(7,21)
YShift(21,20)
YShift(11,14)
YShift(14,8)
YAnchor(13,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20B4">
/* Y direction */
ResYAnchor(8,5)
YShift(8,0)
YDist(8,3,&gt;=)
ResYAnchor(32,13)
YShift(32,48)
YDist(32,52,&gt;=)
YIPAnchor(32,30,8)
YDist(30,25,&gt;=)
YShift(25,26)
YShift(26,16)
YShift(30,29)
YShift(29,40)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20B4.smcp">
/* Y direction */
YAnchor(9,126)
YShift(9,17)
YAnchor(34,11)
YShift(34,43)
YIPAnchor(34,57,9)
YDist(57,52,&gt;=)
YShift(52,25)
YShift(52,53)
YShift(57,56)
YShift(56,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20B5">
/* Y direction */
ResYAnchor(9,13)
YDist(9,2,&gt;=)
YDist(9,4,&gt;=)
YShift(9,41)
ResYAnchor(20,5)
YDist(20,3,&gt;=)
YDist(20,25,&gt;=)
YShift(20,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20B6">
/* Y direction */
YAnchor(17)
YShift(17,10)
YShift(17,25)
YAnchor(25)
YAnchor(23)
YIPAnchor(23,3,17)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20B7">
/* Y direction */
ResYAnchor(62,5)
YDist(62,67,&gt;=)
YShift(62,71)
ResYAnchor(90,13)
YDist(90,37,&gt;=)
YShift(37,11)
YShift(11,22)
YShift(90,101)
YShift(101,32)
YAnchor(32)
YShift(32,43)
YShift(32,6)
YShift(6,17)
YShift(6,25)
YShift(25,95)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20B8">
/* Y direction */
YAnchor(2,12)
ResYAnchor(11,4)
YShift(11,10)
YDownToGrid(7)
YDist(11,7,&gt;=2)
YShift(7,3)
YShift(7,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20B8.smcp">
/* Y direction */
YAnchor(2,10)
YAnchor(11,125)
YShift(11,10)
YDist(11,7,&gt;=2)
YShift(7,3)
YShift(7,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20B9">
/* Y direction */
YAnchor(4,12)
ResYAnchor(17,4)
YShift(17,16)
YDownToGrid(26,2)
YIPAnchor(4,26,2,17)
YShift(26,6)
YShift(6,5)
YShift(2,3)
YShift(17,32)
YShift(32,31)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20BA">
/* Y direction */
YAnchor(3,4)
YAnchor(11,13)
YShift(11,1)
YShift(11,15)
YIPAnchor(11,4,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20BB">
/* Y direction */
YAnchor(6)
YShift(6,5)
YAnchor(33,4)
YShift(33,16)
YShift(33,25)
YAnchor(25)
YShift(25,22)
YShift(25,50)
YInterpolate(6,61,63,39,41,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20BC">
/* Y direction */
YAnchor(30,10)
YShift(30,1)
YShift(30,14)
ResYAnchor(31,6)
YIPAnchor(30,21,31)
YShift(21,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20BD">
/* Y direction */
YAnchor(14,12)
ResYAnchor(15,4)
YShift(15,12)
YIPAnchor(14,0,15)
YShift(0,3)
YDist(0,24,&gt;=)
YShift(24,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20BD.smcp">
/* Y direction */
YAnchor(14,10)
YAnchor(15,125)
YShift(15,12)
YUpToGrid(1)
YIPAnchor(14,1,15)
YShift(1,2)
YDist(1,28,&gt;=)
YShift(28,27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20BE">
/* Y direction */
ResYAnchor(6,5)
YShift(6,2)
YAnchor(8,12)
YShift(8,9)
YShift(8,43)
YIPAnchor(8,22,6)
YShift(22,33)
YShift(22,28)
YAnchor(28)
YShift(28,0)
YShift(0,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20E3">
/* VTTTalk Unicode 0x20e3 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(7)	/* min */
YAnchor(20)	/* max */

/* YDir: Stroke #0 */
YShift(20,33) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(7,46) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20F0">
/* Y direction */
YAnchor(8)
YDist(8,0,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2105">
/* Y direction */
ResYAnchor(14,5)
YShift(14,22)
YShift(14,73)
YAnchor(73)
YDist(14,5,&gt;=)
YShift(5,31)
ResYAnchor(48,13)
YShift(48,57)
YShift(48,71)
YAnchor(71)
YDist(48,39,&gt;=)
YShift(39,66)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2113">
/* Y direction */
YAnchor(1)
YShift(1,0)
YAnchor(12)
YShift(12,36)
YIPAnchor(1,24,12)
YShift(24,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2116">
/* Y direction */
YAnchor(45,12)
YShift(45,42)
YAnchor(46,4)
YShift(46,49)
YShift(46,9)
YAnchor(9)
YShift(9,36)
YDist(9,18,&gt;=)
YShift(18,27)
YDist(18,3,&gt;=)
YShift(3,2)
YInterpolate(42,48,43,46)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2116.smcp">
/* Y direction */
YAnchor(3)
YShift(3,2)
YUpToGrid(18)
YShift(3,18)
YAnchor(18)
YShift(18,27)
YAnchor(45,10)
YShift(45,42)
YAnchor(46,125)
YShift(46,49)
YShift(46,9)
YAnchor(9)
YShift(9,36)
YInterpolate(45,48,43,46)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni213B">
/* Y direction */
YAnchor(2,16)
YShift(2,14)
YShift(14,17)
YShift(17,35)
YShift(35,32)
YAnchor(3,16)
YShift(3,7)
YIPAnchor(2,24,10,3)
YShift(24,25)
YShift(10,11)
YShift(3,15)
YShift(15,19)
YShift(15,37)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni214D">
/* Y direction */
YAnchor(3)
YShift(3,7)
YDist(3,1,&gt;=)
YShift(1,5)
YIPAnchor(1,11,3)
YShift(11,10)
YShift(3,6)
YShift(6,0)
YAnchor(51,19)
YShift(51,60)
YDist(51,26,&gt;=)
YShift(26,35)
YInterpolate(51,14,39,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni214F">
/* Y direction */
YAnchor(97)
YShift(97,20)
YShift(97,0)
YShift(0,1)
YShift(97,78)
YShift(78,39)
YShift(78,59)
YShift(59,58)
YShift(97,106)
YAnchor(106)
YShift(106,11)
YShift(106,87)
YShift(87,30)
YShift(87,68)
YShift(68,49)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2180">
/* Y direction */
YAnchor(33,8)
YShift(33,30)
YShift(30,1)
YShift(30,32)
YShift(33,58)
YShift(58,2)
ResYAnchor(44,2)
YShift(44,31)
YShift(31,16)
YShift(44,47)
YShift(47,15)
YShift(15,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2181">
/* Y direction */
YAnchor(30,8)
YShift(30,1)
YShift(1,2)
YDist(30,33,&gt;=2)
YShift(33,34)
ResYAnchor(31,2)
YShift(31,16)
YShift(16,15)
YDist(31,47,&gt;=2)
YShift(47,46)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2182">
/* Y direction */
YAnchor(59,8)
YShift(59,30)
YShift(30,0)
YShift(59,84)
YShift(84,85)
YShift(85,1)
YDist(59,87,&gt;=2)
YShift(87,32)
YShift(87,109)
YShift(109,33)
YAnchor(70,2)
YShift(70,31)
YShift(31,15)
YShift(70,73)
YShift(73,14)
YShift(14,13)
YDist(70,96,&gt;=2)
YShift(96,46)
YShift(96,99)
YShift(99,44)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2183">
/* Y direction */
ResYAnchor(25,3)
YShift(25,16)
YDist(25,20,&gt;=)
ResYAnchor(36,9)
YDist(36,1,&gt;=)
YShift(36,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2184">
/* Y direction */
ResYAnchor(25,7)
YShift(25,16)
ResYAnchor(36,11)
YShift(36,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2185">
/* Y direction */
ResYAnchor(5,9)
YShift(5,36)
YShift(5,42)
YAnchor(42)
YShift(5,43)
YAnchor(43)
ResYAnchor(16,3)
YDist(16,21,&gt;=)
YShift(16,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2186">
/* Y direction */
YAnchor(3)
YShift(3,2)
YShift(3,7)
ResYAnchor(8,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni27E6">
/* VTTTalk Unicode 0x27e6 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(6)	/* min */
YAnchor(7)	/* max */

/* YDir: Stroke #0 */
YShift(7,2) /*perpendicular to the stroke*/
YShift(2,10) /*along bottom edge*/

/* YDir: Stroke #1 */
YShift(6,3) /*perpendicular to the stroke*/
YShift(3,11) /*along top edge*/

/* Extreme Max */
YShift(7,15)

/* Extreme Min */
YShift(6,14)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni27E7">
/* VTTTalk Unicode 0x27e7 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(4)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YShift(1,0) /*perpendicular to the stroke*/
YShift(0,8) /*along bottom edge*/

/* YDir: Stroke #1 */
YShift(4,5) /*perpendicular to the stroke*/
YShift(5,13) /*along top edge*/

/* Extreme Max */
YShift(1,10)

/* Extreme Min */
YShift(4,12)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni27E8">
/* VTTTalk Unicode 0x27e8 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(4)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni27E9">
/* VTTTalk Unicode 0x27e9 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(4)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni27EB">
/* VTTTalk Unicode 0x27eb */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(4)	/* min */
YAnchor(0)	/* max */

/* Contour #1 */
YShift(0,6) /* max */
YShift(4,10) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni27EC">
/* VTTTalk Unicode 0x27ec */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(2)	/* min */
YAnchor(5)	/* max */

/* Contour #1 */
YShift(5,10) /* max */
YShift(2,11) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni27ED">
/* VTTTalk Unicode 0x27ed */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 4 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(6)	/* min */
YAnchor(3)	/* max */

/* Contour #1 */
YShift(3,10) /* max */
YShift(6,9) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni27EE">
/* VTTTalk Unicode 0x27ee */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(3)	/* min */
YAnchor(6)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni27EF">
/* VTTTalk Unicode 0x27ef */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(7)	/* min */
YAnchor(4)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2B4E">
/* Y direction */
YAnchor(0)
YAnchor(11)
YShift(11,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2B4F">
/* Y direction */
YAnchor(0)
YAnchor(10)
YShift(10,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2B5A">
/* Y direction */
YAnchor(0)
YAnchor(8)
YShift(8,21)
YShift(8,30)
YAnchor(30)
YShift(30,35)
YShift(35,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2B5B">
/* Y direction */
YAnchor(19)
YShift(19,6)
YShift(19,13)
YAnchor(13)
YShift(13,12)
YAnchor(30)
YShift(30,0)
YShift(30,27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2B5C">
/* Y direction */
YAnchor(11)
YShift(11,2)
YShift(11,6)
YAnchor(31)
YShift(31,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2B5D">
/* Y direction */
YAnchor(0)
YShift(0,17)
YAnchor(10)
YShift(10,2)
YShift(10,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2B5E">
/* Y direction */
YAnchor(0)
YShift(0,4)
YAnchor(2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2B5F">
/* Y direction */
YAnchor(0)
YShift(0,4)
YAnchor(2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C62">
/* Y direction */
YAnchor(6,8)
YShift(6,2)
YShift(6,3)
ResYAnchor(7,2)
YIPAnchor(6,13,7)
YShift(13,31)
YDist(13,26,&gt;=)
YShift(26,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C64">
/* Y direction */
YAnchor(14)
YShift(14,7)
ResYAnchor(20,2)
YShift(20,42)
YIPAnchor(14,31,20)
YShift(31,32)
YShift(31,46)
YAnchor(45,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C65">
/* Y direction */
ResYAnchor(19,7)
YDist(19,3,&gt;=)
YShift(19,9)
ResYAnchor(29,10)
ResYAnchor(53,11)
YDist(53,1,&gt;=)
YShift(53,43)
YIPAnchor(53,33,19)
YShift(33,32)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C66">
/* Y direction */
ResYAnchor(7,6)
YDist(7,3,&gt;=)
YShift(7,6)
YDist(7,8,&gt;=)
ResYAnchor(21,11)
YDist(21,1,&gt;=)
YShift(21,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C69">
/* Y direction */
YAnchor(7,8)
YShift(7,15)
YDist(15,2,&gt;=)
YShift(15,4)
ResYAnchor(8,2)
YShift(8,14)
YInterpolate(7,11,12,16,10,17,13,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C6A">
/* Y direction */
YAnchor(7,10)
YShift(7,15)
YShift(15,0)
YDist(15,3,&gt;=)
ResYAnchor(8,0)
ResYAnchor(14,6)
YInterpolate(15,11,12,16,10,17,13,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C6B">
/* Y direction */
YAnchor(6,8)
YDist(6,2,&gt;=)
YShift(6,9)
YShift(6,7)
YShift(7,3)
YShift(7,11)
ResYAnchor(17,2)
YShift(17,12)
YShift(17,16)
YShift(16,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C6C">
/* Y direction */
YAnchor(7,10)
YDist(7,3,&gt;=)
YShift(7,4)
YShift(7,10)
YShift(7,8)
YShift(8,0)
YShift(8,12)
ResYAnchor(18,6)
YShift(18,13)
YShift(18,17)
YShift(17,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C6D">
/* Y direction */
ResYAnchor(6,9)
YShift(6,19)
ResYAnchor(45,3)
YShift(45,32)
ResYAnchor(53,2)
ResYAnchor(68,9)
YShift(68,61)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C6E">
/* Y direction */
YAnchor(6)
YShift(6,13)
ResYAnchor(25,2)
YShift(25,18)
YShift(18,21)
YShift(21,30)
YAnchor(29,8)
YShift(29,24)
YShift(24,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C6F">
/* Y direction */
YAnchor(3,10)
YShift(3,9)
ResYAnchor(4,2)
YShift(4,6)
YIPAnchor(3,12,4)
YShift(12,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C70">
/* Y direction */
ResYAnchor(6,3)
YShift(6,19)
ResYAnchor(45,9)
YShift(45,32)
YAnchor(53,8)
ResYAnchor(68,3)
YShift(68,61)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C71">
/* Y direction */
ResYAnchor(5,7)
YShift(5,14)
YAnchor(20,10)
YShift(20,24)
ResYAnchor(25,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C72">
/* Y direction */
YAnchor(9,8)
YShift(9,5)
YShift(9,34)
YShift(34,30)
ResYAnchor(10,2)
YShift(10,1)
YShift(1,36)
ResYAnchor(17,3)
YShift(17,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C73">
/* Y direction */
YAnchor(9,10)
YShift(9,5)
YShift(9,35)
YShift(35,31)
ResYAnchor(10,6)
YShift(10,1)
YShift(1,37)
ResYAnchor(17,7)
YShift(17,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C74">
/* Y direction */
ResYAnchor(1,6)
YAnchor(8,10)
YShift(8,4)
ResYAnchor(14,7)
YShift(14,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C75">
/* Y direction */
ResYAnchor(4,2)
YAnchor(5)
YIPAnchor(4,2,5)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C76">
/* Y direction */
ResYAnchor(4,6)
YAnchor(5)
YIPAnchor(4,2,5)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C77">
/* Y direction */
ResYAnchor(5,6)
YShift(5,42)
YShift(5,23)
YAnchor(23)
YShift(23,24)
ResYAnchor(15,11)
YShift(15,0)
YShift(15,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C78">
/* Y direction */
YAnchor(18,11)
YShift(18,5)
ResYAnchor(23,11)
YShift(23,59)
ResYAnchor(34,7)
YShift(34,48)
YIPAnchor(23,40,34)
YShift(40,43)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C79">
/* Y direction */
ResYAnchor(14,1)
YShift(14,7)
YAnchor(24,10)
ResYAnchor(40,11)
YShift(40,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C7A">
/* Y direction */
ResYAnchor(6,7)
YShift(6,39)
ResYAnchor(17,11)
YShift(17,56)
YShift(17,28)
YShift(28,63)
YShift(63,70)
YAnchor(70)
YShift(70,48)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C7B">
/* Y direction */
YAnchor(0,10)
YShift(0,1)
YShift(0,3)
YShift(3,4)
YAnchor(13,6)
YShift(13,5)
YShift(13,12)
YShift(13,14)
YIPAnchor(3,11,13)
YShift(11,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C7C.ccmp">
/* Y direction */
YAnchor(0)
YAnchor(6)
YShift(6,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C7D">
/* Y direction */
YAnchor(9)
YShift(9,1)
YShift(9,8)
YAnchor(8)
YShift(8,4)
YShift(8,6)
YShift(6,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C7E">
/* Y direction */
ResYAnchor(35,3)
YDist(35,40,&gt;=)
YShift(35,44)
ResYAnchor(63,9)
YShift(63,14)
YAnchor(14)
YShift(14,7)
YInterpolate(63,20,48,35)
YDist(63,69,&gt;=)
YShift(69,0)
YShift(63,74)
YShift(74,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2C7F">
/* Y direction */
YAnchor(2,8)
YShift(2,3)
YShift(2,10)
YShift(2,11)
YShift(2,24)
YAnchor(24)
YShift(24,17)
ResYAnchor(9,2)
YShift(9,4)
YShift(9,8)
YShift(8,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DE0">
/* Y direction */
YAnchor(0)
YAnchor(19)
YShift(19,40)
YInterpolate(19,49,31,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DE1">
/* Y direction */
YAnchor(14)
YShift(14,11)
YDist(14,13,&gt;=3)
YInterpolate(13,34,1,23,37,2,35,14)
YShift(13,25)
YShift(25,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DE2">
/* Y direction */
YAnchor(5)
YShift(5,2)
YDist(5,4,&gt;=3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DE3">
/* Y direction */
YAnchor(0)
YShift(0,1)
YDist(0,7,&gt;=3)
YShift(7,17)
YShift(7,25)
YShift(7,8)
YShift(8,20)
YShift(7,26)
YAnchor(26)
YShift(26,23)
YShift(0,14)
YShift(14,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DE4">
/* Y direction */
YAnchor(1)
YDist(1,8,&gt;=3)
YInterpolate(8,16,0,21,6,22,9,18,3,1)
YDist(8,12,&gt;=)
YDist(12,20,&gt;=)
YShift(1,13)
YShift(13,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DE5">
/* Y direction */
YAnchor(3)
YShift(3,20)
YDist(3,46,&gt;=3)
YShift(46,28)
YInterpolate(46,36,12,37,13,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DE6">
/* Y direction */
YAnchor(3)
YShift(3,9)
YDist(3,2,&gt;=3)
YDist(2,10,&gt;=)
YInterpolate(2,6,11,12,7,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DE7">
/* Y direction */
YAnchor(8)
YShift(8,3)
YShift(3,2)
YShift(3,7)
YDist(8,15,&gt;=3)
YShift(15,6)
YShift(15,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DE8">
/* Y direction */
YAnchor(10)
YShift(10,5)
YShift(5,1)
YShift(1,12)
YDist(10,9,&gt;=3)
YShift(9,4)
YShift(9,11)
YInterpolate(9,0,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DE9">
/* Y direction */
YAnchor(7)
YShift(7,11)
YDist(7,6,&gt;=3)
YShift(6,10)
YIPAnchor(6,2,7)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DEB">
/* Y direction */
YAnchor(7)
YShift(7,2)
YShift(7,4)
YShift(4,11)
YDist(7,6,&gt;=3)
YShift(6,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DEC">
/* Y direction */
YAnchor(5)
YShift(5,4)
YAnchor(4)
YShift(5,23)
YDist(5,14,&gt;=3)
YShift(14,1)
YAnchor(1)
YShift(14,32)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DEE">
/* Y direction */
YAnchor(7)
YDist(7,2,&gt;=3)
YShift(7,3)
YShift(7,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DF0">
/* Y direction */
YAnchor(1)
YShift(1,5)
YDist(1,0,&gt;=3)
YShift(0,10)
YAnchor(10)
YShift(0,12)
YShift(0,3)
YShift(3,4)
YShift(3,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DF1">
/* Y direction */
YAnchor(13)
YShift(13,3)
YDist(13,2,&gt;=3)
YIPAnchor(2,8,13)
YShift(8,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DF2">
/* Y direction */
YAnchor(15)
YShift(15,3)
YShift(15,7)
YDist(15,14,&gt;=3)
YShift(14,8)
YShift(14,11)
YShift(11,2)
YShift(2,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DF3">
/* Y direction */
YAnchor(17)
YShift(17,9)
YShift(9,13)
YDist(17,16,&gt;=3)
YShift(16,0)
YShift(16,5)
YShift(16,8)
YShift(16,12)
YShift(12,3)
YAnchor(3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DF4">
/* Y direction */
YAnchor(13)
YShift(13,31)
YDist(13,4,&gt;=)
YShift(4,22)
YInterpolate(4,2,3,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DF5">
/* Y direction */
YAnchor(9)
YShift(9,12)
YDist(9,0,&gt;=3)
YShift(0,21)
YShift(0,30)
YShift(9,35)
YShift(35,31)
YShift(31,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DF6">
/* Y direction */
YAnchor(14)
YShift(14,7)
YDist(14,22,&gt;=3)
YShift(22,0)
YAnchor(0)
YInterpolate(22,32,29,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DF7">
/* Y direction */
YAnchor(9)
YShift(9,22)
YDist(9,0,&gt;=3)
YShift(0,31)
YInterpolate(0,15,16,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DF8">
/* Y direction */
YAnchor(10)
YDist(10,5,&gt;=3)
YShift(5,0)
YInterpolate(5,13,17,2,6,14,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DF9">
/* Y direction */
YAnchor(16)
YShift(16,41)
YDist(41,0,&gt;=)
YShift(0,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DFA">
/* Y direction */
YAnchor(10)
YDist(10,9,&gt;=)
YShift(9,12)
YInterpolate(9,20,0,23,24,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DFB">
/* Y direction */
YAnchor(7)
YDist(7,6,&gt;=3)
YInterpolate(6,2,3,7)
YShift(6,8)
YAnchor(8)
YShift(8,26)
YShift(7,17)
YAnchor(17)
YShift(17,35)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DFC">
/* Y direction */
YAnchor(7)
YDist(7,6,&gt;=3)
YInterpolate(6,2,3,32,53,7)
YShift(6,46)
YAnchor(46)
YShift(46,27)
YAnchor(27)
YShift(46,39)
YShift(7,19)
YAnchor(19)
YShift(19,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DFD">
/* Y direction */
YAnchor(7)
YShift(7,3)
YDist(7,2,&gt;=3)
YShift(2,5)
YShift(2,16)
YInterpolate(2,12,17,13,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DFE">
/* Y direction */
YAnchor(5)
YShift(5,14)
YShift(14,0)
YShift(14,17)
YDist(5,19,&gt;=3)
YInterpolate(19,2,3,9,8,34,7,4,11,12,24,23,5)
YShift(19,10)
YShift(10,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2DFF">
/* Y direction */
YAnchor(4)
YDist(4,7,&gt;=3)
YInterpolate(7,3,0,4)
YShift(3,42)
YShift(42,19)
YShift(42,11)
YShift(11,41)
YShift(0,31)
YShift(31,12)
YShift(31,15)
YShift(7,27)
YShift(27,18)
YShift(18,37)
YShift(4,13)
YShift(13,22)
YShift(22,8)
YShift(22,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E00">
/* Y direction */
YAnchor(6)
YAnchor(7,2)
YShift(7,3)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E01">
/* Y direction */
YAnchor(6)
YAnchor(7,2)
YShift(7,3)
YShift(3,2)
YDownToGrid(11)
YShift(2,11)
YAnchor(11)
YShift(11,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E02">
/* Y direction */
YAnchor(0,3)
YAnchor(6)
YInterpolate(6,2,7,4,1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E03">
/* Y direction */
YAnchor(0,3)
YAnchor(6)
YInterpolate(6,2,7,4,1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E04">
/* Y direction */
YAnchor(0,3)
YAnchor(6)
YIPAnchor(6,11,0)
YInterpolate(6,2,11)
YInterpolate(11,4,3,7,1,0)
YShift(11,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E05">
/* Y direction */
YAnchor(0,3)
YAnchor(5)
YIPAnchor(5,11,0)
YInterpolate(5,2,11)
YInterpolate(11,4,3,1,0)
YShift(11,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E06">
/* Y direction */
YAnchor(6)
YAnchor(11,2)
YShift(11,7)
YShift(7,3)
YShift(3,0)
YShift(11,10)
YShift(10,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E07">
/* Y direction */
YAnchor(6)
YAnchor(8,2)
YShift(8,3)
YAnchor(11,2)
YShift(11,7)
YShift(11,10)
YShift(10,2)
YIPAnchor(6,15,11)
YShift(15,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E08">
/* Y direction */
YAnchor(15)
YShift(15,4)
YAnchor(33,2)
YShift(33,22)
YIPAnchor(15,39,33)
YShift(39,45)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E09">
/* Y direction */
ResYAnchor(33,3)
YShift(33,22)
YShift(33,15)
YAnchor(15)
YShift(15,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E0A">
/* Y direction */
ResYAnchor(35,3)
YShift(35,23)
YShift(35,16)
YAnchor(16)
YShift(16,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E0B">
/* Y direction */
YAnchor(7)
YShift(7,2)
YShift(7,4)
YShift(7,13)
YDist(7,8,&gt;=)
YShift(8,5)
YShift(8,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E0C">
/* Y direction */
YAnchor(1)
YShift(1,0)
YDist(1,3,&gt;=)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E0D">
/* Y direction */
YAnchor(1)
YShift(1,0)
YAnchor(3)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E0F">
/* Y direction */
YAnchor(3)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E10">
/* Y direction */
YAnchor(3)
YShift(3,2)
YShift(2,4)
YShift(4,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E11">
/* Y direction */
YAnchor(0)
YShift(0,1)
YShift(0,4)
YShift(4,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E12">
/* Y direction */
YAnchor(1)
YShift(1,0)
YDist(1,9,&gt;=3)
YShift(9,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E13">
/* Y direction */
YAnchor(1)
YShift(1,2)
YShift(1,25)
YAnchor(25)
YShift(25,19)
YAnchor(3)
YShift(3,0)
YShift(3,7)
YAnchor(7)
YShift(7,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E14">
/* Y direction */
YAnchor(16)
YDist(16,0)
YDist(16,8)
YAnchor(18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E15">
/* Y direction */
YAnchor(8)
YShift(8,9)
YShift(8,17)
YShift(8,0)
YShift(0,1)
YAnchor(18)
YShift(18,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E16">
/* VTTTalk Unicode 0x2e16 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(19)	/* min */
YAnchor(25)	/* max */

/* YDir: Stroke #0 */
YShift(25,31) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(25,8,19)
YAnchor(8)
YShift(8,2) /*perpendicular to the stroke*/

/* YDir: Stroke #2 */
YShift(19,13) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E17">
/* Y direction */
YAnchor(3)
YShift(3,2)
YShift(2,1)
YDist(3,6)
YShift(6,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E18">
/* Y direction */
ResYAnchor(26,9)
YDist(26,2)
YShift(26,17)
YShift(17,21)
YAnchor(21)
ResYAnchor(46,3)
YShift(46,40)
YShift(40,4)
YAnchor(4)
YShift(4,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E1A">
/* Y direction */
YAnchor(27)
YShift(27,26)
YDist(27,9,&gt;=)
YShift(9,3)
YShift(9,21)
YShift(21,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E1B">
/* Y direction */
YAnchor(36)
YShift(36,42)
YDist(36,18,&gt;=)
YShift(18,10)
YShift(18,5)
YAnchor(5)
YShift(5,23)
YShift(36,30)
YAnchor(30)
YShift(30,48)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E1C">
/* VTTTalk Unicode 0x2e1c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(3)	/* min */
YAnchor(1)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E1D">
/* Y direction */
YAnchor(1)
YShift(1,0)
YAnchor(3)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E1E">
/* Y direction */
YAnchor(35)
YShift(35,29)
YDist(35,18,&gt;=)
YShift(18,10)
YShift(18,5)
YAnchor(5)
YShift(5,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E1F">
/* Y direction */
YAnchor(29)
YShift(29,35)
YDist(29,5,&gt;=)
YShift(5,23)
YShift(5,18)
YAnchor(18)
YShift(18,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E22">
/* Y direction */
YAnchor(5,2)
YShift(5,2)
YDist(5,4,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E23">
/* Y direction */
YAnchor(1,2)
YShift(1,0)
YDist(1,4,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E24">
/* Y direction */
YAnchor(5)
YShift(5,2)
YDist(5,4,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E25">
/* Y direction */
YAnchor(1)
YDist(1,4,&gt;=)
YShift(1,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E26">
/* VTTTalk Unicode 0x2e26 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(2)	/* min */
YAnchor(10)	/* max */

/* YDir: Stroke #0 */
YShift(10,13) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(2,21) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E27">
/* VTTTalk Unicode 0x2e27 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(12)	/* max */

/* YDir: Stroke #0 */
YShift(12,11) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(0,1) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E2E">
/* Y direction */
ResYAnchor(13,3)
YShift(13,18)
YAnchor(18)
YShift(13,22)
YAnchor(38,19)
YShift(38,44)
YShift(44,1)
YAnchor(1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E2F">
/* Y direction */
YAnchor(13)
YDist(13,0,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E32">
/* Y direction */
YAnchor(0)
YDist(0,4,&gt;=3)
YShift(4,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E35">
/* Y direction */
YAnchor(9,11)
YShift(9,3)
YAnchor(12)
YDist(12,16,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E36">
/* Y direction */
ResYAnchor(0,2)
YAnchor(1)
YIPAnchor(0,7,1)
YShift(7,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E37">
/* Y direction */
ResYAnchor(0,2)
YAnchor(1)
YIPAnchor(0,7,1)
YShift(7,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E38">
/* Y direction */
ResYAnchor(1,2)
YAnchor(3)
YIPAnchor(3,7,1)
YShift(7,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E39">
/* Y direction */
ResYAnchor(21,3)
YShift(21,30)
YAnchor(61)
YShift(61,0)
YShift(61,60)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E3A">
/* Y direction */
YAnchor(2)
YShift(2,6)
YShift(2,3)
YShift(3,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E3B">
/* Y direction */
YAnchor(2)
YShift(2,3)
YShift(2,10)
YShift(10,6)
YShift(3,11)
YShift(11,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E3C">
/* Y direction */
YAnchor(2)
YShift(2,6)
YDist(2,0,&gt;=)
YShift(0,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E3F">
/* Y direction */
YAnchor(2)
YShift(2,6)
YAnchor(3,4)
YShift(3,7)
YShift(3,24)
YAnchor(24)
YShift(24,33)
YShift(24,13)
YAnchor(13)
YShift(13,42)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E41">
/* Y direction */
YAnchor(0)
YDist(0,5,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2E42">
/* Y direction */
YAnchor(0)
YShift(0,11)
YDist(0,5,&gt;=)
YShift(5,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA640">
/* Y direction */
YAnchor(31,8)
YShift(31,17)
YShift(31,35)
YDist(31,4,&gt;=)
YShift(4,26)
YShift(4,22)
YAnchor(22)
YShift(22,8)
YShift(22,0)
YShift(0,1)
YShift(31,32)
YShift(32,36)
ResYAnchor(42,2)
YShift(42,38)
YShift(42,41)
YShift(41,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA641">
/* Y direction */
YAnchor(38,10)
YShift(38,18)
YShift(38,42)
YDist(38,4,&gt;=)
YShift(4,27)
YShift(27,23)
YAnchor(23)
YShift(23,8)
YShift(27,31)
YAnchor(31)
YShift(31,0)
YShift(38,39)
YShift(39,43)
ResYAnchor(49,6)
YShift(49,44)
YShift(49,48)
YShift(48,40)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA644">
/* Y direction */
ResYAnchor(0,9)
YShift(0,50)
YDist(0,55,&gt;=)
ResYAnchor(30,3)
YShift(30,20)
YDist(30,24,&gt;=)
YInterpolate(0,45,15,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA645">
/* Y direction */
ResYAnchor(0,11)
YShift(0,45)
ResYAnchor(28,7)
YShift(28,18)
YInterpolate(0,41,14,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA646">
/* Y direction */
ResYAnchor(0,0)
ResYAnchor(13,11)
YShift(13,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA648">
/* Y direction */
YAnchor(4,8)
YShift(4,11)
ResYAnchor(7,2)
YIPAnchor(4,1,7)
YInterpolate(4,12,1)
YShift(1,2)
YShift(1,6)
YShift(6,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA649">
/* Y direction */
YAnchor(6,10)
YShift(6,0)
ResYAnchor(13,6)
YShift(13,12)
YIPAnchor(6,16,13)
YShift(16,2)
YShift(16,8)
YShift(16,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA64A">
/* Y direction */
ResYAnchor(17,2)
YShift(17,18)
YShift(17,52)
YShift(17,53)
ResYAnchor(33,9)
YShift(33,65)
YShift(65,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA64B">
/* Y direction */
YAnchor(18)
YShift(18,19)
YShift(18,51)
YShift(18,52)
ResYAnchor(33,9)
YShift(33,65)
YShift(65,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA64C">
/* Y direction */
ResYAnchor(11,3)
YShift(11,12,57)
YShift(57,56)

ResYAnchor(0,9)
YShift(0,23)
YShift(0,34)
YShift(34,45)

YDist(0,39)
YShift(39,28)
/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA64D">
/* Y direction */
ResYAnchor(11,11)
YShift(11,0)
ResYAnchor(22,7)
YShift(22,23)
YIPAnchor(11,5,22)
YShift(5,62)
YShift(22,46)
YShift(46,45)
ResYAnchor(57,11)
YShift(57,34)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA64E">
/* Y direction */
ResYAnchor(1,2)
YShift(1,0)
YShift(1,16)
YAnchor(15,8)
YShift(15,18)
YIPAnchor(1,28,15)
YShift(28,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA64F">
/* Y direction */
YAnchor(11,10)
YShift(11,16)
ResYAnchor(14,6)
YShift(14,13)
YIPAnchor(11,0,14)
YShift(0,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA652">
/* Y direction */
YAnchor(6,8)
YShift(6,19)
YShift(19,22)
ResYAnchor(7,2)
YShift(7,20)
YIPAnchor(6,32,7)
YShift(32,8)
YShift(8,2)
YAnchor(2)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA653">
/* Y direction */
YAnchor(30,10)
YShift(30,10)
YShift(10,13)
ResYAnchor(31,0)
YShift(31,11)
YAnchor(11)
YIPAnchor(30,23,31)
YShift(23,0)
YShift(0,26)
YAnchor(26)
YShift(26,27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA654">
/* Y direction */
ResYAnchor(0,9)
YShift(0,24)
ResYAnchor(12,3)
YShift(12,36)
YIPAnchor(0,55,12)
YShift(55,54)
YAnchor(48,8)
ResYAnchor(49,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA655">
/* Y direction */
ResYAnchor(10,7)
YShift(10,43)
ResYAnchor(21,11)
YShift(21,32)
YIPAnchor(21,1,10)
YShift(1,0)
YAnchor(50,10)
ResYAnchor(51,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA656">
/* Y direction */
ResYAnchor(4,2)
YAnchor(5,8)
YIPAnchor(5,2,4)
YShift(2,3)
YShift(2,20)
YShift(20,21)
YShift(5,10)
YShift(10,13)
ResYAnchor(11,2)
YShift(11,15)
YShift(15,14)
YShift(14,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA657">
/* Y direction */
ResYAnchor(4,6)
YAnchor(5,10)
YIPAnchor(5,2,4)
YShift(2,3)
ResYAnchor(23,7)
YShift(23,13)
YAnchor(33,10)
ResYAnchor(57,11)
YShift(57,47)
YIPAnchor(57,38,23)
YShift(38,66)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA658">
/* Y direction */
YAnchor(2,8)
YShift(2,5)
YShift(5,9)
ResYAnchor(7,2)
YShift(7,11)
YShift(11,10)
YShift(10,4)
YIPAnchor(2,16,7)
YShift(16,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA659">
/* Y direction */
YAnchor(2,10)
YShift(2,16)
YShift(16,5)
YShift(16,17)
YDist(16,12,&gt;=2)
YShift(12,13)
ResYAnchor(3,6)
YShift(3,6)
YShift(3,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA65A">
/* Y direction */
YAnchor(5,8)
YShift(5,43)
YShift(43,17)
ResYAnchor(40,2)
YShift(40,32)
YIPAnchor(5,2,40)
YShift(2,3)
YShift(2,44)
YShift(40,30)
YShift(30,29)

YDist(2,23,&gt;=2)

YShift(23,10)
YShift(23,34)
YShift(23,39)


/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA65B">
/* Y direction */
YAnchor(1,10)
YShift(1,13)
YShift(1,38)
ResYAnchor(35,6)
YShift(35,27)
YShift(27,26)
YShift(27,30)
YIPAnchor(1,42,27)
YShift(42,43)
YDist(42,19,&gt;=2)
YShift(19,6)
YShift(19,31)
YShift(19,34)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA65C">
/* Y direction */
YAnchor(11,2)
YShift(11,15)
YShift(11,14)
YShift(14,8)
YAnchor(24,8)
YShift(24,2)
YShift(2,3)
YShift(2,9)
YShift(9,13)
ResYAnchor(25,2)
YIPAnchor(24,6,25)
YShift(6,7)
YShift(6,20)
YAnchor(20)
YShift(20,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA65D">
/* Y direction */
YAnchor(1,6)
YShift(1,8)
YShift(1,6)
YShift(6,3)
YAnchor(23,10)
YShift(23,0)
YShift(0,14)
YAnchor(14)
YShift(14,5)
YShift(14,15)
YDist(14,21,&gt;=2)
YShift(21,18)
YShift(21,12)
YShift(12,13)
ResYAnchor(25,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA65E">
/* Y direction */
YAnchor(4)
YAnchor(5)
ResYAnchor(13,2)
YShift(13,2)
YShift(13,21)
YShift(13,3)
YShift(3,11)
YAnchor(22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA65F">
/* Y direction */
YAnchor(4)
YAnchor(5)
YShift(5,17)
ResYAnchor(12,6)
YShift(12,2)
YShift(12,20)
YShift(12,3)
YShift(3,10)
YAnchor(21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA660">
/* Y direction */
ResYAnchor(12,2)
YShift(12,8)
YAnchor(13,8)
YShift(13,0)
YDist(13,1,&gt;=)
YShift(13,3)
YShift(13,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA661">
/* Y direction */
ResYAnchor(6,6)
YShift(6,2)
YAnchor(11,10)
YShift(11,4)
YShift(11,7)
YShift(11,8)
YDist(11,10,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA662">
/* Y direction */
ResYAnchor(24,2)
YShift(24,19)
YShift(19,3)
YShift(19,18)
YShift(19,23)
YAnchor(34,8)
YShift(34,22)
YDist(34,10,&gt;=)
YShift(10,14)
YShift(34,35)
YShift(35,11)
YShift(11,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA663">
/* Y direction */
ResYAnchor(4,6)
YShift(4,3)
YShift(4,20)
YShift(20,25)
YAnchor(31,10)
YShift(31,23)
YShift(31,11)
YShift(11,13)
YShift(13,26)
YDist(31,32,&gt;=)
YShift(32,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA664">
/* Y direction */
YAnchor(10,8)
ResYAnchor(12,2)
YShift(12,7)
YShift(7,6)
YShift(7,11)
YShift(7,3)
YShift(3,2)
ResYAnchor(20,8)
YShift(20,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA665">
/* Y direction */
YAnchor(10,10)
ResYAnchor(12,6)
YShift(12,7)
YShift(7,6)
YShift(7,3)
YShift(3,11)
YAnchor(20,10)
YShift(20,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA666">
/* Y direction */
ResYAnchor(11,2)
YShift(11,4)
YShift(4,7)
YShift(7,16)
YShift(16,3)
YShift(3,2)
YAnchor(15,8)
YInterpolate(15,6,11)
YShift(15,10)
YShift(10,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA667">
/* Y direction */
YAnchor(13,10)
YShift(13,8)
YShift(8,15)
ResYAnchor(14,6)
YInterpolate(13,4,14)
YShift(14,9)
YShift(9,5)
YShift(5,16)
YShift(16,3)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA669">
/* Y direction */
ResYAnchor(0,11)
YShift(0,22)
ResYAnchor(11,7)
YShift(11,33)
YIPAnchor(0,53,11)
YShift(53,47)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA66A">
/* Y direction */
ResYAnchor(6,9)
YShift(6,43)
ResYAnchor(18,3)
YShift(18,31)
YIPAnchor(6,57,18)
YShift(57,51)
YShift(57,69)
YShift(69,63)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA66B">
/* Y direction */
ResYAnchor(6,7)
YShift(6,39)
ResYAnchor(17,11)
YShift(17,28)
YIPAnchor(17,53,6)
YShift(53,47)
YShift(53,65)
YShift(65,59)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA66F">
/* Y direction */
YAnchor(2)
YShift(2,7)
YDist(2,0,&gt;=)
YShift(0,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA671">
/* Y direction */
YAnchor(7)
YShift(7,2)
YDist(7,0,&gt;=)
YShift(0,4)
YAnchor(10)
YShift(10,15)
YDist(10,9,&gt;=)
YShift(9,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA674">
/* Y direction */
YAnchor(0)
YShift(0,9)
YAnchor(9)
YShift(9,17)
YInterpolate(0,36,35,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA675">
/* VTTTalk glyph 1553, char 0xa675 /
/ GUI generated Mon Nov 23 16:26:43 2020 */

/* Y direction */
YAnchor(7)
YShift(7,5)
YAnchor(5)
YShift(5,0,3)
YShift(5,9)
YShift(7,11)
YShift(11,1)
YShift(11,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA676">
/* Y direction */
YAnchor(2)
YShift(2,3)
YAnchor(3)
YUpToGrid(13)
YShift(3,13)
YAnchor(13)
YShift(13,7)
YShift(13,25)
YShift(25,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA677">
/* Y direction */
YAnchor(7)
YShift(7,14)
YShift(14,21)
YShift(21,20)
YShift(7,22)
YAnchor(22)
YShift(22,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA678">
/* Y direction */
YAnchor(13)
YShift(13,16)
YShift(13,3)
YAnchor(3)
YShift(3,2)
YShift(3,14)
YInterpolate(13,24,4,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA679">
/* Y direction */
YAnchor(13)
YShift(13,2)
YShift(13,16)
YShift(13,14)
YAnchor(14)
YShift(14,3)
YInterpolate(13,24,4,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA67A">
/* Y direction */
YAnchor(9)
YShift(9,12)
YShift(9,10)
YAnchor(10)
YInterpolate(9,20,0,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA67B">
/* Y direction */
YAnchor(6)
YShift(6,3)
YShift(6,17)
YShift(6,0)
YShift(0,28)
YShift(6,11)
YAnchor(11)
YShift(11,22)
YShift(22,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA67D">
/* Y direction */
YAnchor(12)
YDownToGrid(18)
YShift(12,18)
YAnchor(18)
YShift(12,1)
YAnchor(1)
YUpToGrid(19)
YShift(1,19)
YAnchor(19)
YShift(12,5)
YShift(5,8)
YShift(8,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA680">
/* Y direction */
YAnchor(20,8)
YShift(20,7)
YShift(7,9)
YShift(9,29)
YDist(20,27,&gt;=)
YShift(27,24)
YShift(20,36)
YShift(36,18)
YShift(18,25)
ResYAnchor(33,2)
YDist(33,16,&gt;=)
YShift(33,32)
YShift(33,37)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA681">
/* Y direction */
ResYAnchor(16,6)
YDist(16,0,&gt;=)
YShift(16,21)
YAnchor(27,10)
YShift(27,7)
YShift(27,19)
YShift(27,22)
YShift(22,9)
YDist(27,28,&gt;=)
YShift(28,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA682">
/* Y direction */
ResYAnchor(13,3)
YDist(13,18,&gt;=)
YShift(13,22)
YAnchor(38)
YDist(38,44,&gt;=)
YShift(38,49)
YInterpolate(38,34,0,26,9,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA683">
/* Y direction */
ResYAnchor(12,7)
YShift(12,21)
ResYAnchor(37,15)
YShift(37,46)
YInterpolate(37,0,25,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA684">
/* Y direction */
YAnchor(2,8)
YShift(2,10)
ResYAnchor(3,2)
YShift(3,9)
YIPAnchor(2,5,3)
YShift(5,11)
YShift(5,8)
YShift(8,12)
ResYAnchor(35,3)
YShift(35,25)
ResYAnchor(56,9)
YShift(56,66)
YIPAnchor(56,75,35)
YShift(75,14)
YShift(75,17)
YShift(17,46)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA685">
/* Y direction */
YAnchor(2,10)
YShift(2,10)
ResYAnchor(3,6)
YShift(3,9)
YIPAnchor(2,5,3)
YShift(5,8)
YShift(5,11)
YShift(11,12)
ResYAnchor(34,7)
YShift(34,25)
ResYAnchor(55,11)
YShift(55,64)
YIPAnchor(55,72,34)
YShift(72,14)
YShift(72,17)
YShift(17,45)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA686">
/* Y direction */
ResYAnchor(0,2)
YShift(0,22)
YShift(0,26)
YAnchor(25,8)
YIPAnchor(25,16,0)
YShift(16,7)
YShift(16,40)
YShift(40,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA687">
/* Y direction */
YAnchor(2,10)
ResYAnchor(14,6)
YIPAnchor(2,8,14)
YShift(8,21)
YShift(8,29)
YShift(29,42)
YShift(14,35)
YShift(35,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA688">
/* Y direction */
YAnchor(50,8)
YShift(50,49)
YShift(49,15)
YShift(15,9)
ResYAnchor(65,2)
YShift(65,59)
YShift(65,64)
YAnchor(74,8)
YShift(74,63)
YDist(74,54,&gt;=)
YShift(54,32)
YAnchor(32)
YShift(32,40)
YInterpolate(32,48,2,15)
YShift(74,77)
YShift(77,56)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA689">
/* Y direction */
ResYAnchor(0,6)
YShift(0,16)
YShift(16,21)
YAnchor(7,10)
YShift(7,25)
YShift(7,9)
YShift(9,22)
YShift(7,19)
YShift(19,23)
YShift(23,43)
YShift(43,37)
YDist(7,26,&gt;=)
YShift(26,60)
YAnchor(60)
YShift(60,68)
YInterpolate(60,75,31,43)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA68A">
/* Y direction */
YAnchor(2,8)
ResYAnchor(7,2)
YShift(7,3)
YShift(7,6)
ResYAnchor(14,6)
YShift(14,41)
ResYAnchor(24,15)
YShift(24,31)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA68B">
/* Y direction */
YAnchor(2,10)
YShift(2,21)
YShift(2,32)
ResYAnchor(7,6)
YShift(7,3)
YShift(7,6)
YDownToGrid(14)
YShift(6,14)
YAnchor(14)
YShift(14,27)
ResYAnchor(39,15)
YShift(39,46)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA68C">
/* Y direction */
ResYAnchor(7,2)
YShift(7,3)
YShift(7,6)
ResYAnchor(22,9)
YShift(22,15)
YShift(22,8)
YShift(8,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA68D">
/* Y direction */
ResYAnchor(14,11)
YShift(14,7)
YShift(14,22)
YShift(22,0)
ResYAnchor(27,6)
YShift(27,23)
YShift(27,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA68E">
/* Y direction */
YAnchor(0,8)
YShift(0,3)
YShift(3,8)
YShift(0,26)
YAnchor(26)
YShift(26,18)
ResYAnchor(1,2)
YAnchor(5,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA68F">
/* Y direction */
YAnchor(0,10)
YShift(0,3)
YShift(3,8)
YShift(0,25)
YAnchor(25)
YShift(25,17)
ResYAnchor(1,6)
YShift(1,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA690">
/* Y direction */
YAnchor(24,8)
YDist(24,16,&gt;=2)
YShift(16,9)
YShift(24,25)
YShift(25,0)
YShift(25,2)
ResYAnchor(30,2)
YShift(30,26)
YShift(30,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA691">
/* Y direction */
YAnchor(24,10)
YShift(24,2)
YDist(24,16,&gt;=2)
YShift(16,9)
YAnchor(25,10)
YShift(25,1)
ResYAnchor(30,6)
YShift(30,26)
YShift(30,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA692">
/* Y direction */
ResYAnchor(3,2)
YShift(3,2)
YShift(3,4)
YShift(3,26)
YAnchor(29,8)
YIPAnchor(29,21,3)
YShift(21,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA693">
/* Y direction */
ResYAnchor(3,6)
YShift(3,2)
YShift(3,7)
YShift(3,18)
YAnchor(6,10)
YIPAnchor(6,13,3)
YShift(13,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA694">
/* Y direction */
YAnchor(20,8)
YShift(20,1)
ResYAnchor(30,3)
YShift(30,37)
YIPAnchor(20,15,30)
YShift(15,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA695">
/* Y direction */
YAnchor(2,10)
YShift(2,17)
ResYAnchor(10,7)
YShift(10,23)
ResYAnchor(35,1)
YShift(35,42)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA696">
/* Y direction */
ResYAnchor(0,2)
YShift(0,4)
YShift(4,8)
YAnchor(11,8)
YShift(11,2)
YShift(2,6)
YShift(6,12)
YShift(12,39)
YShift(11,30)
YAnchor(30)
YShift(30,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA697">
/* Y direction */
ResYAnchor(27,6)
YShift(27,31)
YShift(31,35)
YAnchor(38,10)
YShift(38,26)
YShift(38,17)
YAnchor(17)
YShift(17,9)
YShift(38,29)
YShift(29,33)
YShift(33,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA699">
/* Y direction */
ResYAnchor(6,7)
YShift(6,39)
YShift(6,50)
YShift(50,83)
ResYAnchor(17,11)
YShift(17,28)
YShift(17,61)
YShift(61,72)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA69A">
/* Y direction */
ResYAnchor(14,9)
YShift(14,1)
YShift(14,51)
ResYAnchor(26,3)
YShift(26,3)
YShift(26,39)
YIPAnchor(14,5,26)
YShift(5,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA69B">
/* Y direction */
ResYAnchor(14,7)
YShift(14,3)
YShift(14,47)
ResYAnchor(25,11)
YShift(25,2)
YShift(25,36)
YIPAnchor(25,5,14)
YShift(5,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA69C">
/* Y direction */
ResYAnchor(22,2)
YShift(22,2)
YShift(22,25)
YShift(22,1)
YAnchor(1)
YShift(1,4)
YIPAnchor(1,13,22)
YShift(13,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA69D">
/* Y direction */
ResYAnchor(2,2)
YShift(2,1)
YAnchor(1)
YShift(1,4)
YIPAnchor(1,13,2)
YShift(13,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA69F">
/* Y direction */
YAnchor(7,5)
YDownToGrid(6)
YShift(7,6)
YAnchor(6)
YInterpolate(6,2,7)
YShift(2,41)
YShift(2,3)
YShift(3,42)
YShift(6,8)
YShift(8,34)
YShift(7,17)
YShift(17,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA700">
/* Y direction */
YAnchor(10)
YShift(10,13)
YDist(10,1,&gt;=)
YShift(1,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA701">
/* Y direction */
YAnchor(14)
YShift(14,17)
YDist(14,5,&gt;=)
YShift(5,26)
YDist(5,3,&gt;=)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA703">
/* Y direction */
YAnchor(14)
YShift(14,17)
YDist(14,5,&gt;=)
YShift(5,26)
YDist(5,3,&gt;=)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA704">
/* Y direction */
YAnchor(13)
YShift(13,12)
YDist(13,0,&gt;=)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA705">
/* Y direction */
YAnchor(17)
YShift(17,16)
YDist(17,4,&gt;=)
YShift(4,5)
YDist(4,3,&gt;=)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA706">
/* Y direction */
YAnchor(13)
YShift(13,12)
YShift(13,0)
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA707">
/* Y direction */
YAnchor(17)
YShift(17,16)
YDist(17,4,&gt;=)
YShift(4,5)
YDist(4,3,&gt;=)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA708">
/* Y direction */
YAnchor(2)
YAnchor(3,2)
YShift(3,7)
YAnchor(7)
YShift(7,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA709">
/* Y direction */
YAnchor(2)
YAnchor(3,2)
YShift(3,7)
YAnchor(7)
YShift(7,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA70A">
/* Y direction */
YAnchor(2)
YAnchor(3,2)
YShift(3,7)
YShift(7,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA70B">
/* Y direction */
YAnchor(2)
YAnchor(3,2)
YShift(3,7)
YAnchor(7)
YShift(7,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA70C">
/* Y direction */
YAnchor(2)
YShift(2,13)
YAnchor(13)
YShift(13,7)
YAnchor(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA70D">
/* Y direction */
YAnchor(2)
YAnchor(3,2)
YShift(3,7)
YAnchor(7)
YShift(7,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA70E">
/* Y direction */
YAnchor(2)
YAnchor(3,2)
YShift(3,7)
YAnchor(7)
YShift(7,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA70F">
/* Y direction */
YAnchor(2)
YAnchor(3,2)
YShift(3,7)
YAnchor(7)
YShift(7,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA710">
/* Y direction */
YAnchor(2)
YAnchor(3,2)
YShift(3,7)
YAnchor(7)
YShift(7,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA711">
/* Y direction */
YAnchor(2)
YShift(2,13)
YAnchor(13)
YShift(13,7)
YAnchor(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA712">
/* Y direction */
YAnchor(6,9)
YAnchor(7,2)
YShift(7,2)
YShift(2,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA713">
/* Y direction */
YAnchor(6)
YAnchor(7,2)
YShift(7,2)
YAnchor(2)
YShift(2,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA714">
/* Y direction */
YAnchor(6)
YAnchor(7,2)
YIPAnchor(6,1,7)
YShift(1,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA715">
/* Y direction */
YAnchor(6)
YAnchor(7,2)
YIPAnchor(6,1,7)
YShift(1,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA716">
/* Y direction */
YAnchor(6)
YShift(6,1)
YShift(1,2)
YAnchor(7,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA717">
/* Y direction */
YAnchor(3)
YDist(3,0,&gt;=)
YDist(3,13,&gt;=)
YShift(13,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA718">
/* Y direction */
YAnchor(2)
YDist(2,0,&gt;=)
YShift(0,1)
YShift(2,3)
YShift(3,13)
YAnchor(13)
YShift(13,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA719">
/* Y direction */
YAnchor(3)
YShift(3,2)
YDist(3,13,&gt;=)
YShift(13,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA71A">
/* Y direction */
YAnchor(6)
YDist(6,4,&gt;=)
YShift(6,2)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA71B">
/* Y direction */
YAnchor(10)
YDist(10,1,&gt;=)
YShift(10,2)
YShift(10,7)
YShift(10,11)
YShift(10,8)
YAnchor(8)
YShift(8,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA71C">

/* VTTTalk Unicode 0xa71c */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */
/* Y direction */
YAnchor(10)
YDist(10,1,&gt;=)
YShift(10,2)
YShift(10,7)
YShift(10,11)
YShift(10,8)
YAnchor(8)
YShift(8,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA71D">
/* Y direction */
YAnchor(7)
YShift(7,13)
YDist(7,2,&gt;=)
YDist(2,3,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA71E">
/* Y direction */
YAnchor(7)
YShift(7,13)
YDist(7,2,&gt;=)
YDist(2,3,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA71F">
/* Y direction */
YAnchor(7)
YShift(7,13)
YShift(7,2)
YAnchor(2)
YShift(2,3)
YAnchor(3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA720">
/* Y direction */
YAnchor(9)
YShift(9,1)
YShift(9,5)
YShift(9,8)
YShift(9,0)
YAnchor(0)
YShift(0,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA721">
/* Y direction */
YAnchor(2)
YShift(2,1)
YShift(2,3)
YShift(3,5)
YShift(5,4)
YShift(5,6)
YAnchor(6)
YShift(6,10)
YAnchor(10)
YShift(2,9)
YShift(9,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA722">
/* Y direction */
ResYAnchor(2,2)
YShift(2,23)
YShift(2,12)
YAnchor(12)
YShift(12,13)
YDownToGrid(25)
YShift(12,25)
YAnchor(25)
YShift(25,47)
YShift(25,36)
YAnchor(36)
YShift(36,37)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA723">
/* Y direction */
ResYAnchor(2,6)
YShift(2,21)
YShift(2,12)
YShift(12,13)
ResYAnchor(34,11)
YShift(34,35)
YShift(34,24)
YAnchor(24)
YShift(24,43)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA724">
/* Y direction */
ResYAnchor(22,2)
YShift(22,2)
YShift(22,12)
YAnchor(12)
YShift(12,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA725">
/* Y direction */
ResYAnchor(20,6)
YShift(20,2)
YShift(20,11)
YAnchor(11)
YShift(11,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA726">
/* Y direction */
YAnchor(6)
YShift(6,13)
YAnchor(23,8)
YShift(23,27)
ResYAnchor(24,2)
YShift(24,28)
YIPAnchor(23,19,24)
YShift(19,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA727">
/* Y direction */
ResYAnchor(6,15)
YShift(6,13)
YAnchor(19,10)
YShift(19,0)
YShift(19,34)
ResYAnchor(20,0)
ResYAnchor(27,7)
YShift(27,39)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA728">
/* Y direction */
YAnchor(0)
YShift(0,10)
YAnchor(23)
YShift(23,22)
YShift(23,25)
YIPAnchor(0,19,23)
YShift(19,20)
YShift(19,27)
YAnchor(37,8)
ResYAnchor(43,2)
YShift(43,39)
YShift(43,42)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA729">
/* Y direction */
ResYAnchor(0,15)
YShift(0,10)
ResYAnchor(39,6)
YShift(39,38)
YShift(39,40)
YAnchor(40)
YIPAnchor(0,19,39)
YShift(19,27)
YShift(27,20)
YShift(39,23)
YShift(23,22)
ResYAnchor(53,11)
YShift(53,46)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA72A">
/* Y direction */
ResYAnchor(5,9)
YShift(5,48)
YShift(5,52)
YAnchor(52)
ResYAnchor(20,3)
YShift(20,25)
YAnchor(25)
YShift(20,29)
YIPAnchor(5,39,20)
YShift(39,38)
YInterpolate(38,13,39)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA72B">
/* Y direction */
YAnchor(17)
YShift(17,10)
YAnchor(28)
YShift(28,27)
YShift(28,31)
YIPAnchor(17,2,28)
YShift(2,0)
YShift(2,1)
YShift(2,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA72C">
/* Y direction */
ResYAnchor(4,2)
YShift(4,11)
ResYAnchor(19,9)
YShift(19,26)
YShift(26,2)
YAnchor(2)
YShift(2,7)
YShift(7,10)
YShift(7,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA72D">
/* Y direction */
YAnchor(2)
YShift(2,7)
YShift(7,3)
YShift(7,10)
YShift(10,12)
ResYAnchor(11,6)
YShift(11,4)
YShift(11,6)
ResYAnchor(18,15)
YShift(18,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA72E">
/* Y direction */
YUpToGrid(2)
YAnchor(2,8)
YShift(2,7)
ResYAnchor(11,2)
YShift(11,4)
YShift(11,6)
YAnchor(19,9)
YShift(19,26)
YShift(19,40)
YAnchor(40)
YShift(40,35)
YAnchor(35)
YShift(35,36)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA72F">
/* Y direction */
YUpToGrid(2)
YAnchor(2,10)
YShift(2,7)
YShift(7,3)
ResYAnchor(11,6)
YShift(11,4)
YShift(11,6)
YAnchor(18,15)
YShift(18,25)
YShift(18,39)
YAnchor(39)
YShift(39,34)
YAnchor(34)
YShift(34,35)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA730">
/* Y direction */
YAnchor(8,10)
ResYAnchor(9,6)
YShift(9,6)
YIPAnchor(8,2,9)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA732">
/* Y direction */
YAnchor(16,8)
YShift(16,19)
YShift(19,5)
ResYAnchor(17,2)
YShift(17,21)
YShift(17,3)
YShift(3,7)
YShift(17,20)
YShift(20,14)
YShift(14,6)
YShift(6,0)
YIPAnchor(16,26,17)
YShift(26,27)
YShift(26,11)
YShift(11,1)
YShift(11,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA733">
/* Y direction */
ResYAnchor(15,7)
YShift(15,5)
ResYAnchor(42,11)
YShift(42,32)
YIPAnchor(42,22,15)
YShift(22,21)
YShift(22,81)
YShift(81,80)
ResYAnchor(67,7)
YShift(67,57)
YAnchor(77,10)
ResYAnchor(101,11)
YShift(101,91)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA734">
/* Y direction */
YAnchor(5,8)
ResYAnchor(7,2)
YShift(7,12)
YIPAnchor(5,2,7)
YShift(2,3)
YShift(3,10)
YShift(7,11)
YShift(11,4)
ResYAnchor(20,9)
YShift(20,57)
ResYAnchor(32,3)
YShift(32,45)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA735">
/* Y direction */
ResYAnchor(20,11)
YShift(20,11)
ResYAnchor(46,7)
YShift(46,36)
YIPAnchor(20,2,46)
YShift(2,29)
YShift(29,31)
ResYAnchor(57,7)
YShift(57,90)
ResYAnchor(68,11)
YShift(68,79)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA736">
/* Y direction */
ResYAnchor(1,8)
ResYAnchor(3,2)
YShift(3,9)
YShift(3,20)
YIPAnchor(1,7,3)
YShift(7,8)
ResYAnchor(15,9)
YShift(15,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA737">
/* Y direction */
ResYAnchor(20,11)
YShift(20,11)
ResYAnchor(46,7)
YShift(46,36)
YIPAnchor(20,2,46)
YShift(2,29)
YShift(29,68)
YShift(68,30)
ResYAnchor(52,6)
ResYAnchor(55,10)
ResYAnchor(62,11)
YShift(62,75)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA738">
/* Y direction */
ResYAnchor(1,8)
YShift(1,17)
YShift(17,13)
ResYAnchor(4,2)
YShift(4,0)
YShift(4,10)
YShift(4,18)
YIPAnchor(1,7,4)
YShift(7,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA739">
/* Y direction */
ResYAnchor(1,6)
ResYAnchor(4,10)
ResYAnchor(20,7)
YShift(20,10)
ResYAnchor(26,10)
ResYAnchor(50,11)
YShift(50,40)
YIPAnchor(50,31,20)
YShift(31,59)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA73A">
/* Y direction */
YAnchor(1,8)
YShift(1,17)
YShift(17,13)
YShift(13,9)
YShift(9,15)
ResYAnchor(4,2)
YShift(4,10)
YIPAnchor(1,7,4)
YShift(7,8)
YShift(4,14)
YShift(14,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA73B">
/* Y direction */
ResYAnchor(1,6)
YAnchor(3,10)
YAnchor(26,11)
YShift(26,16)
ResYAnchor(51,7)
YShift(51,41)
YIPAnchor(26,7,51)
YShift(7,35)
YAnchor(57,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA73C">
/* Y direction */
YAnchor(7)
YShift(7,14)
YAnchor(19,8)
YShift(19,23)
ResYAnchor(21,2)
YShift(21,1)
YShift(21,25)
YShift(21,24)
YShift(24,18)
YIPAnchor(19,30,21)
YShift(30,31)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA73D">
/* Y direction */
ResYAnchor(14,15)
YShift(14,21)
ResYAnchor(30,11)
YShift(30,0)
ResYAnchor(55,7)
YShift(55,45)
YIPAnchor(30,5,55)
YShift(5,39)
ResYAnchor(61,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA73E">
/* Y direction */
ResYAnchor(25,3)
YShift(25,16)
ResYAnchor(36,9)
YShift(36,5)
YIPAnchor(36,49,25)
YShift(49,43)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA73F">
/* Y direction */
ResYAnchor(25,7)
YShift(25,16)
ResYAnchor(36,11)
YShift(36,5)
YIPAnchor(36,49,25)
YShift(49,43)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA742">
/* Y direction */
YAnchor(6,8)
YShift(6,14)
ResYAnchor(7,2)
YShift(7,13)
YInterpolate(6,2,3,10,1,11,15,0,9,16,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA743">
/* Y direction */
YAnchor(6,10)
YShift(6,14)
ResYAnchor(7,0)
ResYAnchor(13,6)
YInterpolate(6,2,3,10,11,15,1,9,0,16,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA744">
/* Y direction */
YAnchor(6,8)
YShift(6,14)
ResYAnchor(7,2)
YShift(7,13)
YInterpolate(6,2,3,10,1,11,15,0,9,16,7)
YShift(7,21)
YAnchor(21)
YShift(21,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA745">
/* Y direction */
YAnchor(6,10)
YShift(6,14)
ResYAnchor(7,0)
YShift(7,21)
YAnchor(21)
YShift(21,20)
ResYAnchor(13,6)
YInterpolate(6,2,3,10,11,15,1,9,0,16,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA746">
/* Y direction */
YAnchor(7,8)
YShift(7,2)
YShift(7,3)
ResYAnchor(10,2)
YIPAnchor(7,9,10)
YShift(9,4)
YShift(9,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA747">
/* Y direction */
YAnchor(3,10)
ResYAnchor(6,0)
YIPAnchor(3,5,6)
YShift(5,0)
YShift(5,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA74A">
/* Y direction */
ResYAnchor(10,9)
YShift(10,47)
ResYAnchor(22,3)
YShift(22,35)
YIPAnchor(10,2,22)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA74B">
/* Y direction */
ResYAnchor(10,7)
YShift(10,43)
ResYAnchor(21,11)
YShift(21,32)
YIPAnchor(21,2,10)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA74C">
/* Y direction */
ResYAnchor(29,9)
YShift(29,66)
ResYAnchor(41,3)
YShift(41,54)
YShift(41,15)
YShift(15,8)
YShift(15,0)
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA74D">
/* Y direction */
ResYAnchor(23,11)
YShift(23,45)
ResYAnchor(34,7)
YShift(34,56)
YShift(34,15)
YAnchor(15)
YShift(15,0)
YAnchor(0)
YShift(0,1)
YShift(15,8)
YShift(8,11)
YShift(8,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA752">
/* Y direction */
YAnchor(32,8)
ResYAnchor(33,2)
YShift(33,30)
YIPAnchor(32,18,33)
YShift(18,21)
YShift(18,2)
YShift(2,9)
YAnchor(9)
YShift(2,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA753">
/* Y direction */
ResYAnchor(24,14)
ResYAnchor(26,6)
ResYAnchor(34,7)
YShift(34,63)
ResYAnchor(45,11)
YShift(45,22)
YAnchor(22)
YShift(45,52)
YShift(45,12)
YShift(12,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA754">
/* Y direction */
YAnchor(38,8)
ResYAnchor(39,2)
YShift(39,0)
YAnchor(0)
YShift(39,36)
YIPAnchor(38,25,39)
YShift(25,26)
YShift(25,12)
YShift(12,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA755">
/* Y direction */
ResYAnchor(26,14)
ResYAnchor(29,6)
ResYAnchor(36,7)
YShift(36,0)
YAnchor(0)
YShift(36,65)
ResYAnchor(47,11)
YShift(47,54)
YShift(47,12)
YShift(12,30)
YShift(12,11)
YShift(11,50)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA756">
/* Y direction */
ResYAnchor(14,9)
YShift(14,47)
YShift(14,2)
YAnchor(2)
YShift(2,3)
YShift(2,6)
YShift(6,5)
YShift(5,0)
YShift(0,1)
YShift(14,7)
YShift(7,4)
ResYAnchor(25,3)
YShift(25,36)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA758">
/* Y direction */
ResYAnchor(28,9)
YShift(28,17)
YShift(28,47)
YShift(47,44)
YShift(28,54)
YAnchor(54)
YShift(54,55)
YShift(54,46)
YShift(46,45)
ResYAnchor(39,3)
YShift(39,6)
YIPAnchor(28,49,39)
YShift(49,48)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA759">
/* Y direction */
ResYAnchor(13,14)
YShift(13,6)
YShift(6,7)
ResYAnchor(15,6)
ResYAnchor(24,7)
YShift(24,56)
ResYAnchor(35,11)
YShift(35,46)
YIPAnchor(35,1,24)
YShift(1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA75A">
/* Y direction */
ResYAnchor(4,3)
YShift(4,23)
YAnchor(26,8)
YInterpolate(26,13,28,14,27,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA75B">
/* Y direction */
ResYAnchor(5,7)
YShift(5,23)
YAnchor(26,10)
YInterpolate(26,14,27,15,28,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA75C">
/* Y direction */
ResYAnchor(4,3)
YShift(4,25)
YAnchor(34,8)
YShift(34,14)
YDist(34,30,&gt;=)
YIPAnchor(34,31,4)
YShift(34,36)
YShift(36,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA75D">
/* Y direction */
YAnchor(4)
YShift(4,24)
YAnchor(33,8)
YShift(33,14)
YDist(33,29,&gt;=)
YIPAnchor(33,30,4)
YShift(33,35)
YShift(35,34)
YShift(34,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA75E">
/* Y direction */
YAnchor(12,8)
YShift(12,1)
YAnchor(1)
YShift(12,8)
YShift(12,4)
YShift(4,10)
ResYAnchor(13,2)
YDist(13,3,&gt;=)
YShift(13,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA75F">
/* Y direction */
YAnchor(12,10)
YDist(12,1,&gt;=)
YShift(12,8)
YShift(12,4)
YShift(4,10)
ResYAnchor(13,6)
YDist(13,3,&gt;=)
YShift(13,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA760">
/* Y direction */
YAnchor(3,18)
YShift(3,10)
YShift(3,14)
YShift(3,24)
YAnchor(24)
YShift(24,31)
ResYAnchor(4,2)
YShift(4,6)
YShift(6,16)
YShift(6,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA762">
/* Y direction */
YAnchor(11)
YShift(11,16)
YAnchor(16)
YShift(11,20)
ResYAnchor(42,9)
YShift(42,48)
YAnchor(48)
YShift(42,52)
YIPAnchor(42,61,1,11)
YShift(61,62)
YShift(61,66)
YShift(61,32)
YShift(32,31)
YShift(31,68)
YShift(1,29)
YShift(29,63)
YShift(63,65)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA763">
/* Y direction */
YAnchor(11)
YShift(11,16)
YAnchor(16)
YShift(11,20)
YAnchor(40)
YShift(40,46)
YAnchor(46)
YShift(40,50)
YIPAnchor(40,58,1,11)
YShift(58,63)
YShift(58,31)
YShift(31,65)
YShift(1,28)
YShift(28,60)
YShift(60,62)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA764">
/* Y direction */
ResYAnchor(0,2)
YShift(0,31)
YAnchor(31)
YShift(31,30)
YDist(31,4,&gt;=2)
YShift(4,27)
YAnchor(3,8)
YIPAnchor(3,16,0)
YShift(16,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA765">
/* Y direction */
ResYAnchor(1,14)
ResYAnchor(11,11)
YShift(11,44)
ResYAnchor(22,7)
YShift(22,33)
YShift(22,54)
YAnchor(54)
YShift(54,53)
ResYAnchor(52,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA766">
/* Y direction */
ResYAnchor(0,2)
YAnchor(3)
YIPAnchor(3,14,4,0)
YShift(14,15)
YShift(4,25)
YShift(3,27)
YAnchor(27)
YShift(27,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA767">
/* Y direction */
ResYAnchor(6,11)
YShift(6,38)
YDownToGrid(46)
YShift(6,46)
YAnchor(46)
YShift(46,45)
ResYAnchor(17,7)
YShift(17,28)
ResYAnchor(48,14)
ResYAnchor(49,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA768">
/* VTTTalk Unicode 0xa768 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 3 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
YAnchor(0,2)	/* max */

/* Contour #1 */
YShift(0,5) /* max */
YShift(1,7) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA769">
/* Y direction */
ResYAnchor(2,14)
ResYAnchor(3,6)
YShift(3,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA76A">
/* Y direction */
ResYAnchor(20,3)
YShift(20,11)
YAnchor(40,8)
YShift(40,43)
YIPAnchor(40,53,20)
YShift(53,1)
YShift(53,2)
YShift(2,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA76B">
/* Y direction */
ResYAnchor(10,14)
YShift(10,13)
ResYAnchor(44,7)
YShift(44,35)
YIPAnchor(10,22,44)
YShift(22,24)
YShift(22,0)
YShift(0,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA76C">
/* Y direction */
ResYAnchor(23,0)
YShift(23,7)
ResYAnchor(43,11)
YShift(43,50)
YIPAnchor(43,31,23)
YShift(31,18)
YShift(31,1)
YShift(1,38)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA76D">
/* Y direction */
ResYAnchor(5,1)
YShift(5,27)
ResYAnchor(44,15)
YShift(44,51)
YIPAnchor(44,13,5)
YShift(13,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA76E">
/* Y direction */
ResYAnchor(0,13)
YShift(0,1)
ResYAnchor(42,5)
YShift(42,12)
YIPAnchor(0,32,42)
YShift(32,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA76F">
/* Y direction */
ResYAnchor(0,15)
YShift(0,1)
ResYAnchor(42,7)
YShift(42,12)
YIPAnchor(0,32,42)
YShift(32,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA770">
/* Y direction */
YAnchor(37,5)
YShift(37,11)
YShift(37,0)
YAnchor(0)
YShift(0,1)
YIPAnchor(0,29,37)
YShift(29,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA771">
/* Y direction */
ResYAnchor(5,0)
ResYAnchor(22,7)
YShift(22,54)
ResYAnchor(33,11)
YDist(33,2,&gt;=)
YShift(33,12)
YShift(33,44)
YIPAnchor(33,3,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA772">
/* Y direction */
ResYAnchor(0,0)
ResYAnchor(7,11)
YShift(7,6)
YDist(7,12,&gt;=)
YDist(7,13,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA773">
/* Y direction */
ResYAnchor(20,7)
YShift(20,9)
YAnchor(37,10)
YDist(37,2,&gt;=)
YShift(37,53)
YShift(53,31)
YAnchor(31)
YDist(31,0,&gt;=)
YShift(31,30)
ResYAnchor(39,6)
ResYAnchor(46,7)
YShift(46,58)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA774">
/* Y direction */
ResYAnchor(20,7)
YShift(20,9)
YAnchor(36,10)
YDist(36,2,&gt;=)
YShift(36,31)
YAnchor(31)
YDist(31,3,&gt;=)
YShift(31,30)
ResYAnchor(39,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA775">
/* Y direction */
YAnchor(6,18)
ResYAnchor(7,6)
ResYAnchor(20,7)
YDist(20,3,&gt;=)
YShift(20,9)
YIPAnchor(6,2,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA776">
/* Y direction */
ResYAnchor(0,6)
YShift(0,23)
YAnchor(25,10)
YDist(25,34,&gt;=)
YDist(25,35,&gt;=)
YIPAnchor(25,12,0)
YShift(12,13)
YShift(12,26)
YShift(26,27)
YShift(25,31)
YShift(31,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA777">
/* Y direction */
ResYAnchor(3,6)
YShift(3,2)
YShift(3,6)
YAnchor(6)
YDist(3,8,&gt;=)
YShift(8,7)
YAnchor(7)
ResYAnchor(21,11)
YShift(21,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA778">
/* Y direction */
ResYAnchor(18,3)
YShift(18,37)
YAnchor(52,8)
YShift(52,2)
YDist(52,27,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA779">
/* Y direction */
YAnchor(1)
YShift(1,0)
ResYAnchor(12,9)
YShift(12,40)
YIPAnchor(12,22,1)
YShift(22,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA77A">
/* Y direction */
YAnchor(1)
YShift(1,0)
ResYAnchor(12,11)
YShift(12,41)
YIPAnchor(12,22,1)
YShift(22,31)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA77B">
/* Y direction */
ResYAnchor(12,3)
YShift(12,5)
YAnchor(16)
ResYAnchor(18,2)
YAnchor(22,8)
YShift(22,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA77C">
/* Y direction */
ResYAnchor(1,14)
ResYAnchor(3,6)
ResYAnchor(20,7)
YShift(20,9)
YAnchor(25)
YShift(25,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA77D">
/* Y direction */
ResYAnchor(3,2)
YShift(3,2)
YShift(3,33)
ResYAnchor(4,9)
YShift(4,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA77E">
/* Y direction */
YAnchor(0,9)
YShift(0,1)
YShift(1,34)
ResYAnchor(4,2)
YShift(4,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA77F">
/* Y direction */
ResYAnchor(16,7)
YShift(16,25)
ResYAnchor(42,14)
YShift(42,43)
YShift(43,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA780">
/* Y direction */
YAnchor(1,2)
YShift(1,0)
YShift(1,6)
YAnchor(4,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA782">
/* Y direction */
YAnchor(1,8)
ResYAnchor(13,3)
YShift(13,6)
YAnchor(18)
ResYAnchor(20,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA783">
/* Y direction */
ResYAnchor(1,14)
ResYAnchor(3,6)
ResYAnchor(11,7)
YShift(11,24)
YAnchor(18,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA784">
/* Y direction */
ResYAnchor(11,3)
YShift(11,4)
YAnchor(14)
ResYAnchor(16,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA785">
/* Y direction */
ResYAnchor(1,14)
ResYAnchor(3,6)
ResYAnchor(20,7)
YShift(20,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA786">
/* Y direction */
ResYAnchor(21,9)
YShift(21,12)
YDist(21,16,&gt;=)
ResYAnchor(35,2)
YShift(35,0)
YShift(35,34)
YShift(34,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA787">
/* Y direction */
ResYAnchor(21,11)
YShift(21,12)
ResYAnchor(34,6)
YShift(34,33)
YShift(34,0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA789">
/* VTTTalk Unicode 0xa789 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(21)	/* min */
ResYAnchor(3,7)	/* max */

/* YDir: Stroke #0 */
YShift(3,9) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(21,15) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA78A">
/* Y direction */
YAnchor(7)
YShift(7,6)
YDist(7,2,&gt;=)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA78B">
/* Y direction */
YAnchor(0)
YDist(0,2,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA78C">
/* Y direction */
YAnchor(0)
YDist(0,2,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA78D">
/* Y direction */
ResYAnchor(0,2)
YShift(0,6)
ResYAnchor(9,8)
YIPAnchor(9,4,0)
YShift(4,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA78E">
/* Y direction */
ResYAnchor(37,0)
ResYAnchor(50,11)
YShift(50,43)
YIPAnchor(50,6,37)
YShift(6,36)
YShift(6,14)
YAnchor(14)
YShift(14,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA792">
/* Y direction */
ResYAnchor(0,9)
YShift(0,32)
ResYAnchor(11,3)
YShift(11,20)
YIPAnchor(0,44,11)
YShift(44,43)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA793">
/* Y direction */
ResYAnchor(0,11)
YShift(0,31)
ResYAnchor(11,7)
YShift(11,20)
YIPAnchor(0,43,11)
YShift(43,42)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA794">
/* Y direction */
ResYAnchor(6,15)
YShift(6,13)
ResYAnchor(27,11)
YShift(27,18)
YShift(18,22)
YShift(22,0)
ResYAnchor(38,7)
YShift(38,47)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA795">
/* Y direction */
ResYAnchor(6,15)
YShift(6,13)
YAnchor(20,10)
YShift(20,35)
YShift(35,0)
ResYAnchor(21,0)
ResYAnchor(28,7)
YShift(28,40)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA796">
/* Y direction */
YAnchor(32,8)
YShift(32,45)
YShift(32,46)
ResYAnchor(33,2)
YShift(33,30)
YIPAnchor(33,2,32)
YShift(2,19)
YShift(2,17)
YShift(17,20)
YShift(2,56)
YShift(56,43)
YShift(43,59)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA797">
/* Y direction */
ResYAnchor(0,0)
YAnchor(3,10)
YShift(3,65)
YAnchor(65)
ResYAnchor(11,11)
YShift(11,42)
ResYAnchor(22,7)
YShift(22,33)
YInterpolate(11,37,58,17,57,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA798">
/* Y direction */
YAnchor(8)
YShift(8,15)
ResYAnchor(20,2)
YIPAnchor(8,2,20)
YShift(2,3)
YShift(20,7)
YShift(7,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA799">
/* Y direction */
YAnchor(5,10)
ResYAnchor(10,1)
YShift(10,17)
ResYAnchor(25,6)
YShift(25,24)
YDist(25,3,&gt;=)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA79A">
/* Y direction */
ResYAnchor(0,9)
YShift(0,34)
ResYAnchor(7,9)
YShift(7,4)
YShift(7,41)
ResYAnchor(23,3)
YShift(23,50)
YIPAnchor(7,61,23)
YShift(61,60)
YInterpolate(60,15,61)
ResYAnchor(27,2)
YShift(27,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA79B">
/* Y direction */
ResYAnchor(0,6)
ResYAnchor(14,11)
YShift(14,7)
ResYAnchor(30,7)
YShift(30,39)
ResYAnchor(69,11)
YShift(69,60)
YIPAnchor(69,51,30)
YShift(51,20)
YShift(51,48)
YShift(48,50)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA79C">
/* Y direction */
ResYAnchor(0,9)
YShift(0,28)
ResYAnchor(16,3)
YShift(16,40)
YIPAnchor(0,51,16)
YShift(51,50)
YInterpolate(51,8,50)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA79D">
/* Y direction */
YAnchor(0,11)
ResYAnchor(35,7)
YShift(35,12)
YIPAnchor(0,48,35)
YShift(48,24)
YShift(48,45)
YShift(45,47)
ResYAnchor(58,11)
YShift(58,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA79E">
/* Y direction */
ResYAnchor(6,9)
YShift(6,26)
ResYAnchor(36,2)
YShift(36,35)
YShift(36,31)
YIPAnchor(6,17,31)
YShift(17,16)
YShift(17,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA79F">
/* Y direction */
ResYAnchor(2,6)
YShift(2,29)
ResYAnchor(4,11)
YShift(4,24)
YIPAnchor(4,15,2)
YShift(15,14)
YShift(15,0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA7A0">
/* Y direction */
ResYAnchor(9,9)
YShift(9,41)
ResYAnchor(20,3)
YDist(20,25,&gt;=)
YShift(20,29)
YIPAnchor(9,2,48,20)
YShift(2,3)
YShift(2,1)
YAnchor(1)
YShift(1,0)
YShift(48,47)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA7A1">
/* Y direction */
YAnchor(4,6)
ResYAnchor(10,15)
YShift(10,18)
ResYAnchor(30,7)
YShift(30,62)
ResYAnchor(41,11)
YShift(41,52)
YIPAnchor(41,2,30)
YShift(2,3)
YShift(2,1)
YAnchor(1)
YShift(1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA7A2">
/* Y direction */
YAnchor(6,8)
YShift(6,14)
ResYAnchor(7,2)
YShift(7,13)
YInterpolate(6,2,3,10,1,0,11,15,9,16,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA7A3">
/* Y direction */
YAnchor(6,10)
ResYAnchor(7,0)
ResYAnchor(13,6)
YInterpolate(6,2,3,10,1,11,15,0,9,16,12,13)
YAnchor(14,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA7A4">
/* Y direction */
YAnchor(9,8)
YShift(9,6)
ResYAnchor(10,2)
YShift(10,13)
YIPAnchor(9,2,10)
YInterpolate(9,12,2)
YInterpolate(2,7,10)
YShift(2,3)
YShift(2,1)
YAnchor(1)
YShift(1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA7A5">
/* Y direction */
YAnchor(6,10)
YShift(6,22)
ResYAnchor(7,6)
ResYAnchor(15,7)
YShift(15,27)
YIPAnchor(6,2,15)
YShift(2,3)
YShift(2,1)
YAnchor(1)
YShift(1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA7A6">
/* Y direction */
ResYAnchor(4,2)
YShift(4,26)
YAnchor(28,8)
YShift(28,29)
YIPAnchor(28,15,4)
YShift(15,30)
YShift(15,16)
YInterpolate(16,2,3,1,0,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA7A7">
/* Y direction */
YAnchor(6,10)
ResYAnchor(7,6)
YInterpolate(6,2,3,1,0,7)
ResYAnchor(24,7)
YShift(24,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA7A8">
/* Y direction */
ResYAnchor(19,3)
YShift(19,28)
ResYAnchor(47,9)
YShift(47,58)
YInterpolate(47,4,2,3,1,0,32,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA7A9">
/* Y direction */
ResYAnchor(18,7)
YShift(18,27)
ResYAnchor(45,11)
YShift(45,54)
YInterpolate(45,4,40,2,3,1,0,13,31,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA7AA">
/* Y direction */
ResYAnchor(0,2)
YShift(0,23)
YShift(0,1)
YShift(1,9)
YAnchor(9)
YShift(0,30)
YAnchor(25)
YShift(25,29)
YIPAnchor(29,20,30)
YShift(20,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA7AC">
/* Y direction */
ResYAnchor(0,2)
YAnchor(7,9)
YShift(7,14)
ResYAnchor(24,9)
YShift(24,56)
ResYAnchor(36,3)
YShift(36,44)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA7AD">
/* Y direction */
YAnchor(39,8)
YShift(39,40)
YShift(39,43)
ResYAnchor(44,2)
YIPAnchor(43,25,44)
YShift(25,18)
YDist(25,33,&gt;=3)
YShift(33,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA7B0">
/* Y direction */
YAnchor(5,8)
YShift(5,10)
ResYAnchor(9,2)
YShift(9,11)
YInterpolate(5,4,8,1,7,3,2,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA7B1">
/* Y direction */
ResYAnchor(2,2)
YAnchor(7,8)
YShift(7,3)
YShift(7,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA7F7">
/* Y direction */
YAnchor(3)
YShift(3,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA7F8">
/* Y direction */
YAnchor(11)
YShift(11,15)
YDist(11,10,&gt;=)
YShift(10,14)
YIPAnchor(10,2,11)
YShift(2,3)
YDist(2,7,&gt;=)
YShift(7,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA7FA">
/* Y direction */
YAnchor(2,10)
YShift(2,3)
YShift(2,14)
YShift(2,6)
YShift(6,9)
ResYAnchor(15,6)
YShift(15,7)
YShift(7,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA7FB">
/* Y direction */
ResYAnchor(0,2)
YShift(0,9)
YShift(0,11)
YAnchor(1,18)
YIPAnchor(1,6,0)
YShift(6,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA7FC">
/* VTTTalk Unicode 0xa7fc */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 9 16  DISABLED for a NON-LATIN glyph */
/* CVT 11 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(11)	/* min */
ResYAnchor(9,2)	/* max */

/* YDir: Stroke #0 */
YShift(9,14) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(9,1,11)
YAnchor(1)
YShift(1,22) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA7FD">
/* Y direction */
YAnchor(0)
YShift(0,4)
YShift(0,7)
YShift(0,12)
ResYAnchor(5,2)
YShift(5,10)
YShift(5,14)
YInterpolate(0,2,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA7FE">
/* VTTTalk Unicode 0xa7fe */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(1)	/* min */
ResYAnchor(0,0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA7FF">
/* Y direction */
YAnchor(1)
YShift(1,9)
YShift(1,13)
YShift(1,17)
YShift(1,5)
ResYAnchor(3,2)
YShift(3,8)
YShift(3,15)
YShift(3,16)
YShift(3,4)
YInterpolate(5,12,0,14,2,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA92E">
/* Y direction */
YAnchor(17)
YShift(17,6)
YDist(17,0,&gt;=2)
YShift(0,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB30">
/* Y direction */
ResYAnchor(10,7)
YShift(10,44)
ResYAnchor(22,11)
YShift(22,33)
YIPAnchor(22,2,10)
YShift(2,3)
ResYAnchor(49,6)
ResYAnchor(63,11)
YShift(63,56)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB31">
/* Y direction */
ResYAnchor(0,11)
YShift(0,58)
ResYAnchor(7,11)
YShift(7,69)
ResYAnchor(32,7)
YShift(32,22)
YIPAnchor(7,73,32)
YShift(73,17)
YShift(73,64)
YShift(64,51)
ResYAnchor(39,7)
YShift(39,36)
YShift(39,46)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB32">
/* Y direction */
ResYAnchor(4,11)
YShift(4,5)
YShift(4,3)
YShift(3,2)
YShift(3,9)
YShift(9,8)
YShift(9,10)
YShift(10,0)
ResYAnchor(7,7)
YShift(7,1)
YShift(1,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB33">
/* Y direction */
ResYAnchor(4,11)
YShift(4,40)
ResYAnchor(15,7)
YShift(15,29)
YIPAnchor(4,23,15)
YShift(23,22)
YDownToGrid(3)
YShift(22,3)
YAnchor(3)
YShift(3,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB34">
/* Y direction */
ResYAnchor(18,11)
YShift(18,55)
ResYAnchor(29,7)
YShift(29,44)
YIPAnchor(18,35,29)
YShift(35,1)
YShift(35,38)
YShift(38,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB36">
/* Y direction */
YAnchor(34,6)
ResYAnchor(43,7)
YShift(43,75)
ResYAnchor(54,11)
YShift(54,65)
YShift(54,23)
YAnchor(23)
YShift(23,12)
YShift(54,31)
YShift(31,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB37">
/* Y direction */
ResYAnchor(19,7)
YShift(19,0)
YShift(19,38)
YAnchor(38)
YShift(38,37)
YShift(19,48)
YAnchor(48)
YShift(48,29)
YShift(48,9)
YShift(9,8)
YAnchor(60,10)
ResYAnchor(61,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB38">
/* Y direction */
YAnchor(2,10)
ResYAnchor(3,0)
YIPAnchor(2,9,3)
YShift(9,27)
YShift(9,22)
YAnchor(22)
YShift(22,14)
YDownToGrid(48)
YShift(9,48)
YAnchor(48)
YShift(48,40)
YShift(48,35)
YAnchor(35)
YShift(35,53)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB39">
/* Y direction */
YAnchor(31,10)
ResYAnchor(32,0)
YIPAnchor(31,12,32)
YShift(12,19)
YShift(12,4)
YAnchor(4)
YShift(4,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB3A">
/* Y direction */
ResYAnchor(5,11)
YShift(5,26)
YShift(5,12)
YAnchor(12)
YShift(12,19)
YAnchor(34,10)
ResYAnchor(35,6)
ResYAnchor(43,7)
YShift(43,55)
YAnchor(50,10)
ResYAnchor(66,7)
YShift(66,78)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB3B">
/* Y direction */
ResYAnchor(24,11)
YShift(24,13)
YShift(24,31)
YAnchor(31)
YShift(31,6)
YAnchor(34,10)
ResYAnchor(35,6)
ResYAnchor(43,7)
YShift(43,56)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB3C">
/* Y direction */
ResYAnchor(5,15)
YShift(5,25)
YShift(5,12)
YAnchor(12)
YShift(12,19)
YAnchor(37,10)
ResYAnchor(39,6)
ResYAnchor(47,7)
YShift(47,59)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB3D">
/* Y direction */
ResYAnchor(4,11)
YShift(4,3)
YShift(4,7)
ResYAnchor(10,7)
YShift(10,1)
YShift(10,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB3E">
/* Y direction */
ResYAnchor(1,7)
YDist(1,3,&gt;=)
YShift(1,2)
YShift(2,5)
YShift(5,6)
YShift(1,18)
YShift(18,0)
YShift(18,17)
YShift(17,16)
ResYAnchor(8,11)
YDist(8,10,&gt;=)
YShift(8,9)
YShift(9,12)
YShift(12,13)
YShift(8,15)
YShift(15,7)
YShift(15,14)
YShift(14,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB3F">
/* Y direction */
ResYAnchor(22,7)
YShift(22,15)
YDist(22,39,&gt;=)
ResYAnchor(33,11)
YShift(33,4)
YDist(33,37,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB40">
/* Y direction */
ResYAnchor(6,7)
YShift(6,39)
ResYAnchor(17,11)
YShift(17,28)
YIPAnchor(17,69,6)
YShift(69,71)
ResYAnchor(44,7)
YShift(44,51)
ResYAnchor(77,11)
YShift(77,62)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB41">
/* Y direction */
ResYAnchor(4,7)
YShift(4,40)
ResYAnchor(15,11)
YShift(15,29)
YIPAnchor(15,24,4)
YShift(24,21)
ResYAnchor(53,11)
YDist(53,1,&gt;=)
YShift(53,86)
ResYAnchor(64,7)
YDist(64,3,&gt;=)
YShift(64,75)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB42">
/* Y direction */
ResYAnchor(4,7)
YShift(4,40)
ResYAnchor(15,11)
YShift(15,29)
YIPAnchor(15,24,4)
YShift(24,21)
YShift(24,1)
YAnchor(1)
YShift(1,0)
ResYAnchor(53,11)
YShift(53,86)
ResYAnchor(64,7)
YShift(64,75)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB43">
/* Y direction */
ResYAnchor(18,11)
YShift(18,11)
ResYAnchor(29,7)
YShift(29,0)
ResYAnchor(36,7)
YShift(36,69)
ResYAnchor(47,11)
YShift(47,58)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB44">
/* Y direction */
ResYAnchor(18,11)
YShift(18,11)
YDownToGrid(32)
YShift(18,32)
YAnchor(32)
ResYAnchor(40,7)
YShift(40,33)
YAnchor(33)
YShift(40,73)
YShift(40,29)
YShift(29,0)
ResYAnchor(51,11)
YShift(51,62)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB45">
/* Y direction */
YAnchor(14,10)
YShift(14,1)
ResYAnchor(29,6)
YIPAnchor(14,20,29)
YShift(20,7)
YShift(7,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB46">
/* Y direction */
ResYAnchor(12,14)
ResYAnchor(20,6)
YShift(20,43)
YAnchor(45,10)
YIPAnchor(45,32,20)
YShift(32,33)
YShift(32,0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB47">
/* Y direction */
YAnchor(2,18)
ResYAnchor(3,6)
YShift(3,5)
YShift(5,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB48">
/* Y direction */
YAnchor(2,10)
ResYAnchor(3,6)
ResYAnchor(28,7)
YShift(28,31)
YShift(28,16)
YShift(16,13)
ResYAnchor(34,7)
YShift(34,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB49">
/* Y direction */
ResYAnchor(3,6)
ResYAnchor(20,7)
YShift(20,9)
ResYAnchor(33,11)
YShift(33,53)
YShift(33,40)
YAnchor(40)
YShift(40,47)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB4A">
/* Y direction */
ResYAnchor(3,6)
ResYAnchor(15,11)
YShift(15,36)
YShift(15,23)
YAnchor(23)
YShift(23,30)
ResYAnchor(70,7)
YShift(70,58)
YShift(58,55)
ResYAnchor(76,7)
YShift(76,51)
YShift(76,73)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB4B">
/* Y direction */
ResYAnchor(14,11)
YShift(14,7)
ResYAnchor(30,7)
YShift(30,21)
YAnchor(21)
YShift(21,1)
YShift(30,25)
YAnchor(25)
YShift(25,35)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB4C">
/* Y direction */
ResYAnchor(10,7)
YShift(10,5)
YAnchor(5)
YShift(5,15)
YShift(10,41)
YAnchor(41)
YShift(41,1)
ResYAnchor(35,11)
YShift(35,19)
YAnchor(46,6)
YShift(46,27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB4D">
/* Y direction */
ResYAnchor(6,1)
YShift(6,13)
ResYAnchor(24,11)
YShift(24,31)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB4E">
/* Y direction */
YAnchor(4,10)
ResYAnchor(11,11)
YShift(11,1)
YAnchor(1)
YShift(11,24)
ResYAnchor(17,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB4F">
/* Y direction */
YAnchor(8,10)
ResYAnchor(15,11)
YShift(15,28)
YShift(15,2)
YAnchor(2)
YShift(2,3)
YShift(3,5)
ResYAnchor(21,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB50">
/* Y direction */
ResYAnchor(3,7)
YShift(3,9)
YDownToGrid(29)
YShift(9,29)
YAnchor(29)
YAnchor(16,10)
ResYAnchor(23,11)
YShift(23,35)
ResYAnchor(46,11)
YShift(46,58)
ResYAnchor(52,6)
YShift(52,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB51">
/* Y direction */
ResYAnchor(3,11)
YShift(3,9)
YShift(9,30)
YAnchor(30)
ResYAnchor(13,10)
ResYAnchor(15,6)
ResYAnchor(23,7)
YShift(23,35)
YShift(35,12)
YInterpolate(30,41,40,35)
ResYAnchor(46,7)
YShift(46,58)
YAnchor(53,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB52">
/* Y direction */
ResYAnchor(14,7)
YShift(14,7)
YAnchor(21,6)
YAnchor(24,10)
ResYAnchor(31,11)
YShift(31,44)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB53">
/* Y direction */
ResYAnchor(9,14)
YShift(9,6)
ResYAnchor(11,6)
YShift(11,2)
YInterpolate(9,7,10,4,1,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB54">
/* Y direction */
ResYAnchor(12,14)
ResYAnchor(15,6)
YShift(15,2)
ResYAnchor(28,15)
YShift(28,7)
YShift(28,32)
YShift(28,20)
YAnchor(20)
YShift(20,38)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB55">
/* Y direction */
ResYAnchor(12,14)
YShift(12,10)
YShift(12,3)
YShift(3,2)
ResYAnchor(15,6)
YShift(15,6)
YInterpolate(12,11,14,8,5,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB56">
/* Y direction */
YAnchor(13,10)
ResYAnchor(16,6)
YShift(16,2)
YInterpolate(13,12,15,4,1,16)
ResYAnchor(29,11)
YShift(29,7)
YShift(29,33)
YShift(29,21)
YAnchor(21)
YShift(21,39)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB57">
/* Y direction */
YAnchor(6,10)
YAnchor(8,14)
ResYAnchor(11,6)
YShift(11,2)
YInterpolate(6,7,10,4,1,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB58">
/* Y direction */
ResYAnchor(24,11)
YShift(24,0)
YShift(24,16)
YAnchor(16)
YShift(16,6)
ResYAnchor(30,14)
ResYAnchor(33,6)
YShift(33,36)
YInterpolate(24,29,32,38,35,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB59">
/* Y direction */
YAnchor(6,10)
ResYAnchor(8,14)
YShift(8,15)
YShift(15,14)
ResYAnchor(11,6)
YShift(11,2)
YInterpolate(6,7,4,10,1,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB5A">
/* Y direction */
YAnchor(1)
ResYAnchor(8,15)
YShift(8,15)
ResYAnchor(24,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB5B">
/* Y direction */
YAnchor(8,2)
YShift(8,0)
YDist(8,5,&gt;=2)
YShift(5,13)
YDist(5,28,&gt;=)
YShift(28,20)
YDist(28,24,&gt;=2)
YShift(24,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB5C">
/* Y direction */
YAnchor(27,2)
YShift(27,17)
YAnchor(17)
YShift(27,38)
YShift(27,18)
YAnchor(18)
YShift(18,7)
YAnchor(7)
YShift(7,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB5D">
/* Y direction */
YAnchor(52)
YShift(52,51)
YAnchor(51)
YIPAnchor(51,16,52)
YShift(16,0)
YShift(16,32)
YShift(32,31)
YShift(16,40)
YAnchor(40)
YShift(40,24)
YShift(40,8)
YShift(8,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB5E">
/* Y direction */
YAnchor(27)
YShift(27,26)
YAnchor(26)
YIPAnchor(26,17,27)
YShift(17,9)
YShift(17,0)
YShift(0,1)
YShift(17,5)
YAnchor(5)
YShift(5,21)
YShift(5,12)
YShift(12,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB5F">
/* Y direction */
ResYAnchor(37,2)
YShift(37,22)
YAnchor(22)
YShift(37,30)
YShift(37,6)
YAnchor(6)
YShift(6,17)
YShift(6,25)
YAnchor(25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB64">
/* Y direction */
ResYAnchor(0,11)
YShift(0,24)
ResYAnchor(12,7)
YShift(12,35)
YAnchor(46,10)
ResYAnchor(53,7)
YShift(53,60)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniAB65">
/* Y direction */
ResYAnchor(28,7)
YShift(28,6)
YAnchor(49,10)
YShift(49,45)
YShift(49,50)
YShift(50,16)
YShift(16,40)
YShift(16,17)
YShift(17,39)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniFE20">
/* Y direction */
YAnchor(6)
YDist(6,0,&gt;=)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniFE21">
/* Y direction */
YAnchor(6)
YDist(6,1,&gt;=)
YShift(1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniFE24">
/* Y direction */
YAnchor(2)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniFE25">
/* Y direction */
YAnchor(2)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniFE26">
/* Y direction */
YAnchor(2)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniFE27">
/* Y direction */
YAnchor(6)
YDist(6,1,&gt;=2)
YShift(1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniFE28">
/* Y direction */
YAnchor(0)
YDist(0,7,&gt;=2)
YShift(7,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniFE29">
/* Y direction */
YAnchor(14)
YShift(14,5)
YDist(14,9,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniFE2A">
/* Y direction */
YAnchor(16)
YShift(16,7)
YDist(16,11,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniFEFF">
/* VTTTalk Unicode 0xfeff */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uogonek">
/* Y direction */
ResYAnchor(11,11)
YShift(11,24)
YShift(11,4)
YShift(4,29)
YShift(29,28)
ResYAnchor(17,6)
YShift(17,1)
ResYAnchor(43,15)
YShift(43,36)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="upsilon">
/* VTTTalk Unicode 0x3c5 */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 6 */
/* CVT 25 11 */
/* Min and Max */
ResYAnchor(25,11)	/* min, CVT */
ResYAnchor(0,6)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(25,7) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(0,16)

Smooth()

    </glyphProgram>

    <glyphProgram name="upsilonlatin">
/* Y direction */
ResYAnchor(15,7)
YShift(15,16)
YShift(15,45)
YShift(45,44)
ResYAnchor(30,11)
YShift(30,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="v">
/* Y direction */
ResYAnchor(8,10)
YShift(8,3)
ResYAnchor(9,6)
YShift(9,1)
YInterpolate(8,6,0,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="versicle">
/* Y direction */
YAnchor(14,8)
YDist(14,1,&gt;=)
YShift(14,10)
ResYAnchor(15,2)
YShift(15,7)
YDist(15,5,&gt;=)
YShift(5,0)
YShift(5,4)
YShift(4,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="vscript">
/* Y direction */
ResYAnchor(1,11)
ResYAnchor(8,6)
ResYAnchor(31,7)
YShift(31,24)
YShift(1,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="vturn">
/* Y direction */
YAnchor(1)
YShift(1,5)
ResYAnchor(3,6)
YShift(3,7)
YInterpolate(1,0,6,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="w">
/* Y direction */
ResYAnchor(9,10)
YShift(9,4)
YShift(9,14)
YShift(9,18)
ResYAnchor(10,6)
YShift(10,1)
YShift(10,12)
YShift(10,16)
YInterpolate(9,7,11,0,17,3,20,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="whiteCircle">
/* VTTTalk Unicode 0x25cb */
/* ACT generated Tue Sep 16 09:34:43 2025 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(8)	/* max */

/* YDir: Stroke #0 */
ResYDist(8,24) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
ResYDist(0,16) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="won">
/* Y direction */
YAnchor(17,12)
YShift(17,8)
YShift(17,27)
YShift(27,19)
ResYAnchor(18,4)
YIPAnchor(17,2,18)
YShift(2,3)
YDist(2,7,&gt;=)
YShift(7,6)
YShift(18,10)
YShift(10,21)
YShift(10,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="wsuper">
/* Y direction */
YAnchor(6,2)
YShift(6,0)
YShift(0,11)
YShift(0,16)
YAnchor(10)
YShift(10,4)
YInterpolate(10,18,8,2,6)
YShift(10,20)
YShift(20,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="wturn">
/* Y direction */
ResYAnchor(3,6)
YShift(3,7)
YShift(7,15)
YShift(15,19)
YAnchor(5)
YShift(5,1)
YShift(5,13)
YShift(13,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="wynn">
/* Y direction */
YAnchor(1)
ResYAnchor(4,6)
ResYAnchor(11,7)
YIPAnchor(1,22,11)
YShift(22,23)
YShift(11,34)
YShift(34,0)
YShift(0,5)
YShift(5,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="x">
/* Y direction */
ResYAnchor(9,10)
YShift(9,6)
ResYAnchor(11,6)
YShift(11,3)
YInterpolate(9,7,4,10,1,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="xi">
/* Y direction */
ResYAnchor(27,3)
YShift(27,5)
YAnchor(51)
YIPAnchor(51,33,27)
YShift(33,15)
YInterpolate(33,17,31,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="xsuper">
/* Y direction */
ResYAnchor(0,2)
YShift(0,3)
YDist(0,5)
YShift(5,9)
YInterpolate(5,7,10,4,1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="xsupnosp">
/* Y direction */
YAnchor(6)
YShift(6,2)
YDist(6,4,&gt;=3)
YShift(4,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="y">
/* Y direction */
ResYAnchor(8,15)
YShift(8,15)
ResYAnchor(24,6)
YShift(24,2)
YInterpolate(8,23,22,21,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="yen">
/* Y direction */
ResYAnchor(17,4)
YShift(17,9)
ResYAnchor(20,12)
YIPAnchor(17,2,20)
YShift(2,3)
YInterpolate(2,14,8,3)
YShift(3,21)
YShift(21,18)
YDist(2,7,&gt;=)
YShift(7,6)
YShift(2,16)
YShift(16,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="yen.smcp">
/* Y direction */
YAnchor(17,125)
YShift(17,9)
YAnchor(20,10)
YUpToGrid(2)
YIPAnchor(20,2,17)
YShift(2,3)
YDist(2,7,&gt;=)
YShift(7,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="yhook">
/* Y direction */
YAnchor(6)
YShift(6,13)
ResYAnchor(36,6)
YAnchor(24)
YShift(24,31)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ysuper">
/* Y direction */
YAnchor(7)
YShift(7,14)
YShift(7,22)
YShift(22,21)
YAnchor(23,2)
YShift(23,1)
YInterpolate(7,20,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="yturn">
/* Y direction */
YAnchor(1)
YShift(1,20)
ResYAnchor(8,1)
YShift(8,15)
YInterpolate(20,21,0,22,23,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="z">
/* Y direction */
YAnchor(2,18)
YShift(2,6)
YShift(2,3)
YShift(3,7)
ResYAnchor(13,6)
YShift(13,9)
YShift(13,12)
YShift(12,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="zbar">
/* Y direction */
YAnchor(6)
YShift(6,10)
YShift(6,7)
YShift(7,11)
ResYAnchor(12,6)
YIPAnchor(12,17,2,6)
YShift(17,16)
YShift(16,8)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="zcurl">
/* Y direction */
YAnchor(38,10)
YShift(38,34)
YShift(34,0)
YShift(0,1)
YShift(1,39)

YShift(34,16)
YAnchor(16)
YShift(16,17)
YShift(17,18)
YShift(16,24)
YAnchor(24)
YShift(24,9)
ResYAnchor(45,6)
YShift(45,40)
YShift(45,44)
YShift(44,36)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="zero">
/* VTTTalk Unicode 0x30 (0) */
/* ACT generated Thu Dec  5 13:36:29 2019 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 6 13 */
/* CVT 18 5 */
/* Min and Max */
ResYAnchor(6,13)	/* min, CVT */
ResYAnchor(18,5)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(18,31) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(6,43) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="zero.onum">
/* Y direction */
YAnchor(6,11)
YShift(6,39)
YAnchor(17,126)
YShift(17,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="zero.smcp">
/* Y direction */
YAnchor(6,11)
YShift(6,39)
YAnchor(17,126)
YShift(17,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="zero.sup">
/* Y direction */
YAnchor(5)
YShift(5,32)
YDist(5,14)
YShift(14,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="zeta">
/* Y direction */
ResYAnchor(0,2)
YShift(0,41)
YAnchor(41)
YShift(41,44)
YShift(44,2)
YAnchor(21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="zrthook">
/* Y direction */
YAnchor(2,10)
YShift(2,3)
YShift(2,5)
ResYAnchor(13,6)
YShift(13,8)
YShift(13,12)
YShift(12,4)
YAnchor(28,15)
YShift(28,21)

/* X direction */

Smooth()

    </glyphProgram>

  </TSI3>

  <TSI5>
    <glyphgroup name=".notdef" value="1"/>
    <glyphgroup name=".null" value="1"/>
    <glyphgroup name="A" value="1"/>
    <glyphgroup name="A.smcp" value="1"/>
    <glyphgroup name="A.unic" value="1"/>
    <glyphgroup name="AE" value="1"/>
    <glyphgroup name="AE.smcp" value="1"/>
    <glyphgroup name="AEacute" value="1"/>
    <glyphgroup name="AEacute.smcp" value="1"/>
    <glyphgroup name="AEmacron" value="1"/>
    <glyphgroup name="Aacute" value="1"/>
    <glyphgroup name="Aacute.smcp" value="1"/>
    <glyphgroup name="Aacute.unic" value="1"/>
    <glyphgroup name="Abreve" value="1"/>
    <glyphgroup name="Abreve.smcp" value="1"/>
    <glyphgroup name="Abreve.unic" value="1"/>
    <glyphgroup name="Acaron" value="1"/>
    <glyphgroup name="Acircumflex" value="1"/>
    <glyphgroup name="Acircumflex.smcp" value="1"/>
    <glyphgroup name="Acircumflex.unic" value="1"/>
    <glyphgroup name="Adieresis" value="1"/>
    <glyphgroup name="Adieresis.smcp" value="1"/>
    <glyphgroup name="Adieresis.unic" value="1"/>
    <glyphgroup name="Agrave" value="1"/>
    <glyphgroup name="Agrave.smcp" value="1"/>
    <glyphgroup name="Agrave.unic" value="1"/>
    <glyphgroup name="Alpha" value="1"/>
    <glyphgroup name="Alpha.smcp" value="1"/>
    <glyphgroup name="Alphatonos" value="1"/>
    <glyphgroup name="Alphatonos.smcp" value="1"/>
    <glyphgroup name="Amacron" value="1"/>
    <glyphgroup name="Amacron.smcp" value="1"/>
    <glyphgroup name="Amacron.unic" value="1"/>
    <glyphgroup name="Aogonek" value="1"/>
    <glyphgroup name="Aogonek.NAV" value="1"/>
    <glyphgroup name="Aogonek.smcp" value="1"/>
    <glyphgroup name="Aogonek.smcp.NAV" value="1"/>
    <glyphgroup name="Aogonek.unic" value="1"/>
    <glyphgroup name="Aring" value="1"/>
    <glyphgroup name="Aring.smcp" value="1"/>
    <glyphgroup name="Aring.unic" value="1"/>
    <glyphgroup name="Aringacute" value="1"/>
    <glyphgroup name="Aringacute.smcp" value="1"/>
    <glyphgroup name="Aringacute.unic" value="1"/>
    <glyphgroup name="Atilde" value="1"/>
    <glyphgroup name="Atilde.smcp" value="1"/>
    <glyphgroup name="Atilde.unic" value="1"/>
    <glyphgroup name="B" value="1"/>
    <glyphgroup name="B.smcp" value="1"/>
    <glyphgroup name="Beta" value="1"/>
    <glyphgroup name="Beta.smcp" value="1"/>
    <glyphgroup name="Bhook" value="1"/>
    <glyphgroup name="Btopbar" value="1"/>
    <glyphgroup name="C" value="1"/>
    <glyphgroup name="C.smcp" value="1"/>
    <glyphgroup name="C.ss06" value="1"/>
    <glyphgroup name="CR" value="1"/>
    <glyphgroup name="Cacute" value="1"/>
    <glyphgroup name="Cacute.smcp" value="1"/>
    <glyphgroup name="Ccaron" value="1"/>
    <glyphgroup name="Ccaron.smcp" value="1"/>
    <glyphgroup name="Ccedilla" value="1"/>
    <glyphgroup name="Ccedilla.smcp" value="1"/>
    <glyphgroup name="Ccircumflex" value="1"/>
    <glyphgroup name="Ccircumflex.smcp" value="1"/>
    <glyphgroup name="Chi" value="1"/>
    <glyphgroup name="Chi.smcp" value="1"/>
    <glyphgroup name="Chook" value="1"/>
    <glyphgroup name="D" value="1"/>
    <glyphgroup name="D.cn" value="1"/>
    <glyphgroup name="D.smcp" value="1"/>
    <glyphgroup name="D.ss06" value="1"/>
    <glyphgroup name="Dbar1" value="1"/>
    <glyphgroup name="Dcaron" value="1"/>
    <glyphgroup name="Dcaron.smcp" value="1"/>
    <glyphgroup name="Dcroat" value="1"/>
    <glyphgroup name="Dcroat.smcp" value="1"/>
    <glyphgroup name="Delta" value="1"/>
    <glyphgroup name="Delta.smcp" value="1"/>
    <glyphgroup name="Dhook" value="1"/>
    <glyphgroup name="Digamma" value="1"/>
    <glyphgroup name="Dtopbar" value="1"/>
    <glyphgroup name="E" value="1"/>
    <glyphgroup name="E.smcp" value="1"/>
    <glyphgroup name="E.unic" value="1"/>
    <glyphgroup name="Eacute" value="1"/>
    <glyphgroup name="Eacute.smcp" value="1"/>
    <glyphgroup name="Eacute.unic" value="1"/>
    <glyphgroup name="Ebreve" value="1"/>
    <glyphgroup name="Ebreve.smcp" value="1"/>
    <glyphgroup name="Ebreve.unic" value="1"/>
    <glyphgroup name="Ecaron" value="1"/>
    <glyphgroup name="Ecaron.smcp" value="1"/>
    <glyphgroup name="Ecaron.unic" value="1"/>
    <glyphgroup name="Ecircumflex" value="1"/>
    <glyphgroup name="Ecircumflex.smcp" value="1"/>
    <glyphgroup name="Ecircumflex.unic" value="1"/>
    <glyphgroup name="Edieresis" value="1"/>
    <glyphgroup name="Edieresis.smcp" value="1"/>
    <glyphgroup name="Edieresis.unic" value="1"/>
    <glyphgroup name="Edotaccent" value="1"/>
    <glyphgroup name="Edotaccent.smcp" value="1"/>
    <glyphgroup name="Edotaccent.unic" value="1"/>
    <glyphgroup name="Egrave" value="1"/>
    <glyphgroup name="Egrave.smcp" value="1"/>
    <glyphgroup name="Egrave.unic" value="1"/>
    <glyphgroup name="Emacron" value="1"/>
    <glyphgroup name="Emacron.smcp" value="1"/>
    <glyphgroup name="Emacron.unic" value="1"/>
    <glyphgroup name="Eng" value="1"/>
    <glyphgroup name="Eng.smcp" value="1"/>
    <glyphgroup name="Eogonek" value="1"/>
    <glyphgroup name="Eogonek.NAV" value="1"/>
    <glyphgroup name="Eogonek.smcp" value="1"/>
    <glyphgroup name="Eogonek.smcp.NAV" value="1"/>
    <glyphgroup name="Eogonek.unic" value="1"/>
    <glyphgroup name="Epsilon" value="1"/>
    <glyphgroup name="Epsilon.smcp" value="1"/>
    <glyphgroup name="Epsilon1" value="1"/>
    <glyphgroup name="Epsilontonos" value="1"/>
    <glyphgroup name="Epsilontonos.smcp" value="1"/>
    <glyphgroup name="Esh" value="1"/>
    <glyphgroup name="Eta" value="1"/>
    <glyphgroup name="Eta.smcp" value="1"/>
    <glyphgroup name="Etatonos" value="1"/>
    <glyphgroup name="Etatonos.smcp" value="1"/>
    <glyphgroup name="Eth" value="1"/>
    <glyphgroup name="Eth.smcp" value="1"/>
    <glyphgroup name="Eturn" value="1"/>
    <glyphgroup name="Euro" value="1"/>
    <glyphgroup name="Euro.smcp" value="1"/>
    <glyphgroup name="F" value="1"/>
    <glyphgroup name="F.smcp" value="1"/>
    <glyphgroup name="Fhook" value="1"/>
    <glyphgroup name="Fturn" value="1"/>
    <glyphgroup name="G" value="1"/>
    <glyphgroup name="G.alt" value="1"/>
    <glyphgroup name="G.smcp" value="1"/>
    <glyphgroup name="G.ss06" value="1"/>
    <glyphgroup name="Gacute" value="1"/>
    <glyphgroup name="Gamma" value="1"/>
    <glyphgroup name="Gamma.smcp" value="1"/>
    <glyphgroup name="Gamma1" value="1"/>
    <glyphgroup name="Gbar" value="1"/>
    <glyphgroup name="Gbreve" value="1"/>
    <glyphgroup name="Gbreve.smcp" value="1"/>
    <glyphgroup name="Gcaron" value="1"/>
    <glyphgroup name="Gcircumflex" value="1"/>
    <glyphgroup name="Gcircumflex.smcp" value="1"/>
    <glyphgroup name="Gcommaaccent" value="1"/>
    <glyphgroup name="Gcommaaccent.smcp" value="1"/>
    <glyphgroup name="Germandbls" value="1"/>
    <glyphgroup name="Germandbls.smcp" value="1"/>
    <glyphgroup name="Ghook" value="1"/>
    <glyphgroup name="Gsmallcap" value="1"/>
    <glyphgroup name="Gsmallcaphook" value="1"/>
    <glyphgroup name="H" value="1"/>
    <glyphgroup name="H.smcp" value="1"/>
    <glyphgroup name="Hbar" value="1"/>
    <glyphgroup name="Hbar.smcp" value="1"/>
    <glyphgroup name="Hcircumflex" value="1"/>
    <glyphgroup name="Hcircumflex.smcp" value="1"/>
    <glyphgroup name="I" value="1"/>
    <glyphgroup name="I.smcp" value="1"/>
    <glyphgroup name="IJ" value="1"/>
    <glyphgroup name="IJ.smcp" value="1"/>
    <glyphgroup name="Iacute" value="1"/>
    <glyphgroup name="Iacute.smcp" value="1"/>
    <glyphgroup name="Ibar" value="1"/>
    <glyphgroup name="Ibreve" value="1"/>
    <glyphgroup name="Ibreve.smcp" value="1"/>
    <glyphgroup name="Icaron" value="1"/>
    <glyphgroup name="Icircumflex" value="1"/>
    <glyphgroup name="Icircumflex.smcp" value="1"/>
    <glyphgroup name="Idieresis" value="1"/>
    <glyphgroup name="Idieresis.smcp" value="1"/>
    <glyphgroup name="Idotaccent" value="1"/>
    <glyphgroup name="Idotaccent.smcp" value="1"/>
    <glyphgroup name="Igrave" value="1"/>
    <glyphgroup name="Igrave.smcp" value="1"/>
    <glyphgroup name="Imacron" value="1"/>
    <glyphgroup name="Imacron.smcp" value="1"/>
    <glyphgroup name="Iogonek" value="1"/>
    <glyphgroup name="Iogonek.smcp" value="1"/>
    <glyphgroup name="Iota" value="1"/>
    <glyphgroup name="Iota.smcp" value="1"/>
    <glyphgroup name="Iota1" value="1"/>
    <glyphgroup name="Iotadieresis" value="1"/>
    <glyphgroup name="Iotadieresis.smcp" value="1"/>
    <glyphgroup name="Iotatonos" value="1"/>
    <glyphgroup name="Iotatonos.smcp" value="1"/>
    <glyphgroup name="Ismallcap" value="1"/>
    <glyphgroup name="Itilde" value="1"/>
    <glyphgroup name="Itilde.smcp" value="1"/>
    <glyphgroup name="J" value="1"/>
    <glyphgroup name="J.smcp" value="1"/>
    <glyphgroup name="Jcircumflex" value="1"/>
    <glyphgroup name="Jcircumflex.smcp" value="1"/>
    <glyphgroup name="K" value="1"/>
    <glyphgroup name="K.alt" value="1"/>
    <glyphgroup name="K.alt2" value="1"/>
    <glyphgroup name="K.smcp" value="1"/>
    <glyphgroup name="Kappa" value="1"/>
    <glyphgroup name="Kappa.smcp" value="1"/>
    <glyphgroup name="Kcaron" value="1"/>
    <glyphgroup name="Kcommaaccent" value="1"/>
    <glyphgroup name="Kcommaaccent.smcp" value="1"/>
    <glyphgroup name="Khook" value="1"/>
    <glyphgroup name="Koppa" value="1"/>
    <glyphgroup name="L" value="1"/>
    <glyphgroup name="L.smcp" value="1"/>
    <glyphgroup name="LJ" value="1"/>
    <glyphgroup name="Lacute" value="1"/>
    <glyphgroup name="Lacute.smcp" value="1"/>
    <glyphgroup name="Lambda" value="1"/>
    <glyphgroup name="Lambda.smcp" value="1"/>
    <glyphgroup name="Lcaron" value="1"/>
    <glyphgroup name="Lcaron.smcp" value="1"/>
    <glyphgroup name="Lcommaaccent" value="1"/>
    <glyphgroup name="Lcommaaccent.smcp" value="1"/>
    <glyphgroup name="Ldot" value="1"/>
    <glyphgroup name="Ldot.smcp" value="1"/>
    <glyphgroup name="Lj" value="1"/>
    <glyphgroup name="Lslash" value="1"/>
    <glyphgroup name="Lslash.smcp" value="1"/>
    <glyphgroup name="Lsmallcap" value="1"/>
    <glyphgroup name="M" value="1"/>
    <glyphgroup name="M.smcp" value="1"/>
    <glyphgroup name="M.unic" value="1"/>
    <glyphgroup name="Mu" value="1"/>
    <glyphgroup name="Mu.smcp" value="1"/>
    <glyphgroup name="N" value="1"/>
    <glyphgroup name="N.smcp" value="1"/>
    <glyphgroup name="N.unic" value="1"/>
    <glyphgroup name="NJ" value="1"/>
    <glyphgroup name="Nacute" value="1"/>
    <glyphgroup name="Nacute.smcp" value="1"/>
    <glyphgroup name="Nacute.unic" value="1"/>
    <glyphgroup name="Ncaron" value="1"/>
    <glyphgroup name="Ncaron.smcp" value="1"/>
    <glyphgroup name="Ncaron.unic" value="1"/>
    <glyphgroup name="Ncommaaccent" value="1"/>
    <glyphgroup name="Ncommaaccent.smcp" value="1"/>
    <glyphgroup name="Ncommaaccent.unic" value="1"/>
    <glyphgroup name="Nhook" value="1"/>
    <glyphgroup name="Nj" value="1"/>
    <glyphgroup name="Nsmallcap" value="1"/>
    <glyphgroup name="Ntilde" value="1"/>
    <glyphgroup name="Ntilde.smcp" value="1"/>
    <glyphgroup name="Ntilde.unic" value="1"/>
    <glyphgroup name="Nu" value="1"/>
    <glyphgroup name="Nu.smcp" value="1"/>
    <glyphgroup name="O" value="1"/>
    <glyphgroup name="O.smcp" value="1"/>
    <glyphgroup name="O.ss06" value="1"/>
    <glyphgroup name="OE" value="1"/>
    <glyphgroup name="OE.smcp" value="1"/>
    <glyphgroup name="OEsmallcap" value="1"/>
    <glyphgroup name="OI" value="1"/>
    <glyphgroup name="Oacute" value="1"/>
    <glyphgroup name="Oacute.smcp" value="1"/>
    <glyphgroup name="Obar" value="1"/>
    <glyphgroup name="Obreve" value="1"/>
    <glyphgroup name="Obreve.smcp" value="1"/>
    <glyphgroup name="Ocaron" value="1"/>
    <glyphgroup name="Ocircumflex" value="1"/>
    <glyphgroup name="Ocircumflex.smcp" value="1"/>
    <glyphgroup name="Odieresis" value="1"/>
    <glyphgroup name="Odieresis.smcp" value="1"/>
    <glyphgroup name="Ograve" value="1"/>
    <glyphgroup name="Ograve.smcp" value="1"/>
    <glyphgroup name="Ohorn" value="1"/>
    <glyphgroup name="Ohungarumlaut" value="1"/>
    <glyphgroup name="Ohungarumlaut.smcp" value="1"/>
    <glyphgroup name="Omacron" value="1"/>
    <glyphgroup name="Omacron.smcp" value="1"/>
    <glyphgroup name="Omega" value="1"/>
    <glyphgroup name="Omega.smcp" value="1"/>
    <glyphgroup name="Omegatonos" value="1"/>
    <glyphgroup name="Omegatonos.smcp" value="1"/>
    <glyphgroup name="Omicron" value="1"/>
    <glyphgroup name="Omicron.smcp" value="1"/>
    <glyphgroup name="Omicrontonos" value="1"/>
    <glyphgroup name="Omicrontonos.smcp" value="1"/>
    <glyphgroup name="Oogonek" value="1"/>
    <glyphgroup name="Oogonek.NAV" value="1"/>
    <glyphgroup name="Oogonek.smcp" value="1"/>
    <glyphgroup name="Oogonek.smcp.NAV" value="1"/>
    <glyphgroup name="Oopen" value="1"/>
    <glyphgroup name="Oslash" value="1"/>
    <glyphgroup name="Oslash.smcp" value="1"/>
    <glyphgroup name="Oslashacute" value="1"/>
    <glyphgroup name="Oslashacute.smcp" value="1"/>
    <glyphgroup name="Otilde" value="1"/>
    <glyphgroup name="Otilde.smcp" value="1"/>
    <glyphgroup name="P" value="1"/>
    <glyphgroup name="P.smcp" value="1"/>
    <glyphgroup name="Phi" value="1"/>
    <glyphgroup name="Phi.smcp" value="1"/>
    <glyphgroup name="Phook" value="1"/>
    <glyphgroup name="Pi" value="1"/>
    <glyphgroup name="Pi.smcp" value="1"/>
    <glyphgroup name="Psi" value="1"/>
    <glyphgroup name="Psi.smcp" value="1"/>
    <glyphgroup name="Q" value="1"/>
    <glyphgroup name="Q.cn" value="1"/>
    <glyphgroup name="Q.smcp" value="1"/>
    <glyphgroup name="Q.ss06" value="1"/>
    <glyphgroup name="R" value="1"/>
    <glyphgroup name="R.alt" value="1"/>
    <glyphgroup name="R.smcp" value="1"/>
    <glyphgroup name="Racute" value="1"/>
    <glyphgroup name="Racute.smcp" value="1"/>
    <glyphgroup name="Rcaron" value="1"/>
    <glyphgroup name="Rcaron.smcp" value="1"/>
    <glyphgroup name="Rcommaaccent" value="1"/>
    <glyphgroup name="Rcommaaccent.smcp" value="1"/>
    <glyphgroup name="Rho" value="1"/>
    <glyphgroup name="Rho.smcp" value="1"/>
    <glyphgroup name="Rsmallcap" value="1"/>
    <glyphgroup name="Rsmallcapinv" value="1"/>
    <glyphgroup name="Rturnsuper" value="1"/>
    <glyphgroup name="Rx" value="1"/>
    <glyphgroup name="S" value="1"/>
    <glyphgroup name="S.smcp" value="1"/>
    <glyphgroup name="Sacute" value="1"/>
    <glyphgroup name="Sacute.smcp" value="1"/>
    <glyphgroup name="Sampi" value="1"/>
    <glyphgroup name="Scaron" value="1"/>
    <glyphgroup name="Scaron.smcp" value="1"/>
    <glyphgroup name="Scedilla" value="1"/>
    <glyphgroup name="Scedilla.smcp" value="1"/>
    <glyphgroup name="Schwa" value="1"/>
    <glyphgroup name="Scircumflex" value="1"/>
    <glyphgroup name="Scircumflex.smcp" value="1"/>
    <glyphgroup name="Scommaaccent.smcp" value="1"/>
    <glyphgroup name="Sigma" value="1"/>
    <glyphgroup name="Sigma.smcp" value="1"/>
    <glyphgroup name="Stigma" value="1"/>
    <glyphgroup name="T" value="1"/>
    <glyphgroup name="T.smcp" value="1"/>
    <glyphgroup name="Tau" value="1"/>
    <glyphgroup name="Tau.smcp" value="1"/>
    <glyphgroup name="Tbar" value="1"/>
    <glyphgroup name="Tbar.smcp" value="1"/>
    <glyphgroup name="Tcaron" value="1"/>
    <glyphgroup name="Tcaron.smcp" value="1"/>
    <glyphgroup name="Tcommaaccent.smcp" value="1"/>
    <glyphgroup name="Theta" value="1"/>
    <glyphgroup name="Theta.smcp" value="1"/>
    <glyphgroup name="Thook" value="1"/>
    <glyphgroup name="Thorn" value="1"/>
    <glyphgroup name="Thorn.smcp" value="1"/>
    <glyphgroup name="Tonefive" value="1"/>
    <glyphgroup name="Tonesix" value="1"/>
    <glyphgroup name="Tonetwo" value="1"/>
    <glyphgroup name="Trthook" value="1"/>
    <glyphgroup name="U" value="1"/>
    <glyphgroup name="U.smcp" value="1"/>
    <glyphgroup name="U.unic" value="1"/>
    <glyphgroup name="Uacute" value="1"/>
    <glyphgroup name="Uacute.smcp" value="1"/>
    <glyphgroup name="Uacute.unic" value="1"/>
    <glyphgroup name="Ubreve" value="1"/>
    <glyphgroup name="Ubreve.smcp" value="1"/>
    <glyphgroup name="Ubreve.unic" value="1"/>
    <glyphgroup name="Ucaron" value="1"/>
    <glyphgroup name="Ucircumflex" value="1"/>
    <glyphgroup name="Ucircumflex.smcp" value="1"/>
    <glyphgroup name="Udieresis" value="1"/>
    <glyphgroup name="Udieresis.smcp" value="1"/>
    <glyphgroup name="Udieresis.unic" value="1"/>
    <glyphgroup name="Ugrave" value="1"/>
    <glyphgroup name="Ugrave.smcp" value="1"/>
    <glyphgroup name="Ugrave.unic" value="1"/>
    <glyphgroup name="Uhorn" value="1"/>
    <glyphgroup name="Uhungarumlaut" value="1"/>
    <glyphgroup name="Uhungarumlaut.smcp" value="1"/>
    <glyphgroup name="Uhungarumlaut.unic" value="1"/>
    <glyphgroup name="Umacron" value="1"/>
    <glyphgroup name="Umacron.smcp" value="1"/>
    <glyphgroup name="Umacron.unic" value="1"/>
    <glyphgroup name="Uogonek" value="1"/>
    <glyphgroup name="Uogonek.smcp" value="1"/>
    <glyphgroup name="Uogonek.unic" value="1"/>
    <glyphgroup name="Upsilon" value="1"/>
    <glyphgroup name="Upsilon.smcp" value="1"/>
    <glyphgroup name="Upsilon2" value="1"/>
    <glyphgroup name="Upsilondieresis" value="1"/>
    <glyphgroup name="Upsilondieresis.smcp" value="1"/>
    <glyphgroup name="Upsilontonos" value="1"/>
    <glyphgroup name="Upsilontonos.smcp" value="1"/>
    <glyphgroup name="Uring" value="1"/>
    <glyphgroup name="Uring.smcp" value="1"/>
    <glyphgroup name="Uring.unic" value="1"/>
    <glyphgroup name="Utilde" value="1"/>
    <glyphgroup name="Utilde.smcp" value="1"/>
    <glyphgroup name="Utilde.unic" value="1"/>
    <glyphgroup name="V" value="1"/>
    <glyphgroup name="V.smcp" value="1"/>
    <glyphgroup name="Vcursive" value="1"/>
    <glyphgroup name="W" value="1"/>
    <glyphgroup name="W.smcp" value="1"/>
    <glyphgroup name="Wacute" value="1"/>
    <glyphgroup name="Wacute.smcp" value="1"/>
    <glyphgroup name="Wcircumflex" value="1"/>
    <glyphgroup name="Wcircumflex.smcp" value="1"/>
    <glyphgroup name="Wdieresis" value="1"/>
    <glyphgroup name="Wdieresis.smcp" value="1"/>
    <glyphgroup name="Wgrave" value="1"/>
    <glyphgroup name="Wgrave.smcp" value="1"/>
    <glyphgroup name="X" value="1"/>
    <glyphgroup name="X.smcp" value="1"/>
    <glyphgroup name="Xi" value="1"/>
    <glyphgroup name="Xi.smcp" value="1"/>
    <glyphgroup name="Y" value="1"/>
    <glyphgroup name="Y.smcp" value="1"/>
    <glyphgroup name="YR" value="1"/>
    <glyphgroup name="Yacute" value="1"/>
    <glyphgroup name="Yacute.smcp" value="1"/>
    <glyphgroup name="Ycircumflex" value="1"/>
    <glyphgroup name="Ycircumflex.smcp" value="1"/>
    <glyphgroup name="Ydieresis" value="1"/>
    <glyphgroup name="Ydieresis.smcp" value="1"/>
    <glyphgroup name="Ygrave" value="1"/>
    <glyphgroup name="Ygrave.smcp" value="1"/>
    <glyphgroup name="Yhook" value="1"/>
    <glyphgroup name="Ysmallcap" value="1"/>
    <glyphgroup name="Z" value="1"/>
    <glyphgroup name="Z.smcp" value="1"/>
    <glyphgroup name="Zacute" value="1"/>
    <glyphgroup name="Zacute.smcp" value="1"/>
    <glyphgroup name="Zbar" value="1"/>
    <glyphgroup name="Zcaron" value="1"/>
    <glyphgroup name="Zcaron.smcp" value="1"/>
    <glyphgroup name="Zdotaccent" value="1"/>
    <glyphgroup name="Zdotaccent.smcp" value="1"/>
    <glyphgroup name="Zeta" value="1"/>
    <glyphgroup name="Zeta.smcp" value="1"/>
    <glyphgroup name="a" value="1"/>
    <glyphgroup name="a.cn" value="1"/>
    <glyphgroup name="a_uni02DE" value="1"/>
    <glyphgroup name="aacute" value="3"/>
    <glyphgroup name="abreve" value="1"/>
    <glyphgroup name="acaron" value="1"/>
    <glyphgroup name="accountof" value="1"/>
    <glyphgroup name="acircumflex" value="1"/>
    <glyphgroup name="acute" value="1"/>
    <glyphgroup name="acutecomb" value="1"/>
    <glyphgroup name="acutedblnosp" value="1"/>
    <glyphgroup name="acutedotcomb" value="1"/>
    <glyphgroup name="acutedotcomb.lc" value="1"/>
    <glyphgroup name="acuterightnosp" value="1"/>
    <glyphgroup name="acutesubnosp" value="1"/>
    <glyphgroup name="addresssubject" value="1"/>
    <glyphgroup name="adieresis" value="1"/>
    <glyphgroup name="ae" value="1"/>
    <glyphgroup name="aeacute" value="1"/>
    <glyphgroup name="aemacron" value="1"/>
    <glyphgroup name="afii300" value="1"/>
    <glyphgroup name="afii57596" value="1"/>
    <glyphgroup name="afii57598" value="1"/>
    <glyphgroup name="afii57636" value="1"/>
    <glyphgroup name="afii61664" value="1"/>
    <glyphgroup name="agrave" value="1"/>
    <glyphgroup name="alpha" value="1"/>
    <glyphgroup name="alpha.alt" value="1"/>
    <glyphgroup name="alphatonos" value="1"/>
    <glyphgroup name="amacron" value="1"/>
    <glyphgroup name="ampersand" value="1"/>
    <glyphgroup name="ampersand.smcp" value="1"/>
    <glyphgroup name="anglesupnosp" value="1"/>
    <glyphgroup name="angstrom" value="1"/>
    <glyphgroup name="anoteleia" value="1"/>
    <glyphgroup name="aogonek" value="1"/>
    <glyphgroup name="aogonek.NAV" value="1"/>
    <glyphgroup name="approxequal" value="1"/>
    <glyphgroup name="archdblsubnosp" value="1"/>
    <glyphgroup name="aring" value="1"/>
    <glyphgroup name="aringacute" value="1"/>
    <glyphgroup name="arrowdown" value="1"/>
    <glyphgroup name="arrowup" value="1"/>
    <glyphgroup name="asciicircum" value="1"/>
    <glyphgroup name="asciitilde" value="1"/>
    <glyphgroup name="ascript" value="1"/>
    <glyphgroup name="ascript_uni02DE" value="1"/>
    <glyphgroup name="ascriptturn" value="1"/>
    <glyphgroup name="ascriptturn_uni02DE" value="1"/>
    <glyphgroup name="asterisk" value="1"/>
    <glyphgroup name="asterism" value="1"/>
    <glyphgroup name="at" value="1"/>
    <glyphgroup name="atilde" value="1"/>
    <glyphgroup name="aturn" value="1"/>
    <glyphgroup name="aturn_uni02DE" value="1"/>
    <glyphgroup name="b" value="1"/>
    <glyphgroup name="b.ss06" value="1"/>
    <glyphgroup name="babygamma" value="1"/>
    <glyphgroup name="backslash" value="1"/>
    <glyphgroup name="bar" value="1"/>
    <glyphgroup name="barmidlongnosp" value="1"/>
    <glyphgroup name="barmidshortnosp" value="1"/>
    <glyphgroup name="bbar" value="1"/>
    <glyphgroup name="bbar_uni1ABE" value="1"/>
    <glyphgroup name="beta" value="1"/>
    <glyphgroup name="beta1" value="1"/>
    <glyphgroup name="bhook" value="1"/>
    <glyphgroup name="blackCircle" value="0"/>
    <glyphgroup name="blackSquare" value="0"/>
    <glyphgroup name="braceleft" value="1"/>
    <glyphgroup name="braceright" value="1"/>
    <glyphgroup name="bracketleft" value="1"/>
    <glyphgroup name="bracketright" value="1"/>
    <glyphgroup name="breve" value="1"/>
    <glyphgroup name="breveacutecomb" value="1"/>
    <glyphgroup name="brevegravecomb" value="1"/>
    <glyphgroup name="brevehookcomb" value="1"/>
    <glyphgroup name="breveinvnosp" value="1"/>
    <glyphgroup name="breveinvsubnosp" value="1"/>
    <glyphgroup name="breveinvsubnosp_uni1ABD" value="1"/>
    <glyphgroup name="brevenosp" value="1"/>
    <glyphgroup name="brevesubnosp" value="1"/>
    <glyphgroup name="brevetildecomb" value="1"/>
    <glyphgroup name="bridgeinvsubnosp" value="1"/>
    <glyphgroup name="bridgesubnosp" value="1"/>
    <glyphgroup name="brokenbar" value="1"/>
    <glyphgroup name="btopbar" value="1"/>
    <glyphgroup name="bullet" value="1"/>
    <glyphgroup name="bullseye" value="1"/>
    <glyphgroup name="c" value="1"/>
    <glyphgroup name="c.ss06" value="1"/>
    <glyphgroup name="c.ss07" value="1"/>
    <glyphgroup name="cacute" value="1"/>
    <glyphgroup name="cadauna" value="1"/>
    <glyphgroup name="candrabindunosp" value="1"/>
    <glyphgroup name="caret" value="1"/>
    <glyphgroup name="caretinsertionpoint" value="1"/>
    <glyphgroup name="caron" value="1"/>
    <glyphgroup name="carondotcomb" value="1"/>
    <glyphgroup name="carondotcomb.lc" value="1"/>
    <glyphgroup name="caronnosp" value="1"/>
    <glyphgroup name="caronsubnosp" value="1"/>
    <glyphgroup name="ccaron" value="1"/>
    <glyphgroup name="ccedilla" value="1"/>
    <glyphgroup name="ccircumflex" value="1"/>
    <glyphgroup name="ccurl" value="1"/>
    <glyphgroup name="cedilla" value="1"/>
    <glyphgroup name="cedillanosp" value="1"/>
    <glyphgroup name="cent" value="1"/>
    <glyphgroup name="charactertie" value="1"/>
    <glyphgroup name="chi" value="1"/>
    <glyphgroup name="chi.alt" value="1"/>
    <glyphgroup name="chook" value="1"/>
    <glyphgroup name="circumflex" value="1"/>
    <glyphgroup name="circumflexacutecomb" value="1"/>
    <glyphgroup name="circumflexgravecomb" value="1"/>
    <glyphgroup name="circumflexhookcomb" value="1"/>
    <glyphgroup name="circumflexnosp" value="1"/>
    <glyphgroup name="circumflexsubnosp" value="1"/>
    <glyphgroup name="circumflextildecomb" value="1"/>
    <glyphgroup name="colon" value="1"/>
    <glyphgroup name="colon.pnum" value="1"/>
    <glyphgroup name="coloncurrency" value="1"/>
    <glyphgroup name="comma" value="1"/>
    <glyphgroup name="commaaboverightcomb" value="1"/>
    <glyphgroup name="commaaccent" value="1"/>
    <glyphgroup name="commaaccentrotate" value="1"/>
    <glyphgroup name="commasuprevnosp" value="1"/>
    <glyphgroup name="commaturnsupnosp" value="1"/>
    <glyphgroup name="copyright" value="1"/>
    <glyphgroup name="crossbar" value="1"/>
    <glyphgroup name="cruzeiro" value="1"/>
    <glyphgroup name="cstretch" value="1"/>
    <glyphgroup name="currency" value="1"/>
    <glyphgroup name="cyrillicbreve" value="1"/>
    <glyphgroup name="cyrillichook" value="1"/>
    <glyphgroup name="cyrillichookleft" value="1"/>
    <glyphgroup name="cyrillictic" value="1"/>
    <glyphgroup name="d" value="1"/>
    <glyphgroup name="d.ss06" value="1"/>
    <glyphgroup name="dagger" value="1"/>
    <glyphgroup name="daggerdbl" value="1"/>
    <glyphgroup name="dasiaoxia" value="1"/>
    <glyphgroup name="dblapostrophe" value="1"/>
    <glyphgroup name="dcaron" value="1"/>
    <glyphgroup name="dcroat" value="1"/>
    <glyphgroup name="dcroat_uni1ABE" value="1"/>
    <glyphgroup name="degree" value="1"/>
    <glyphgroup name="degreecentigrade" value="1"/>
    <glyphgroup name="degreefarenheit" value="1"/>
    <glyphgroup name="degreekelvin" value="1"/>
    <glyphgroup name="delta" value="1"/>
    <glyphgroup name="delta.alt" value="1"/>
    <glyphgroup name="deltaturn" value="1"/>
    <glyphgroup name="dhook" value="1"/>
    <glyphgroup name="diaeresistonosnosp" value="1"/>
    <glyphgroup name="dieresis" value="1"/>
    <glyphgroup name="dieresisacutecomb" value="1"/>
    <glyphgroup name="dieresisacutecomb.lc" value="1"/>
    <glyphgroup name="dieresiscaroncomb" value="1"/>
    <glyphgroup name="dieresiscaroncomb.lc" value="1"/>
    <glyphgroup name="dieresisgravecomb" value="1"/>
    <glyphgroup name="dieresisgravecomb.lc" value="1"/>
    <glyphgroup name="dieresismacroncomb" value="1"/>
    <glyphgroup name="dieresismacroncomb.lc" value="1"/>
    <glyphgroup name="dieresisnosp" value="1"/>
    <glyphgroup name="dieresisnosp_uni1ABB" value="1"/>
    <glyphgroup name="dieresistonos" value="1"/>
    <glyphgroup name="digamma" value="1"/>
    <glyphgroup name="divide" value="1"/>
    <glyphgroup name="dollar" value="1"/>
    <glyphgroup name="dollar.smcp" value="1"/>
    <glyphgroup name="dotaccent" value="1"/>
    <glyphgroup name="dotbelow" value="1"/>
    <glyphgroup name="dotbelow_uni1ABD" value="1"/>
    <glyphgroup name="dotdblsubnosp" value="1"/>
    <glyphgroup name="dotdblsubnosp_uni1ABD" value="1"/>
    <glyphgroup name="dotlessi" value="1"/>
    <glyphgroup name="dotmacroncomb" value="1"/>
    <glyphgroup name="dotmacroncomb.lc" value="1"/>
    <glyphgroup name="dotnosp" value="1"/>
    <glyphgroup name="drthook" value="1"/>
    <glyphgroup name="dtopbar" value="1"/>
    <glyphgroup name="dyogh" value="1"/>
    <glyphgroup name="dz" value="1"/>
    <glyphgroup name="dzcurl" value="1"/>
    <glyphgroup name="e" value="1"/>
    <glyphgroup name="e.ss07" value="1"/>
    <glyphgroup name="eacute" value="1"/>
    <glyphgroup name="ebreve" value="1"/>
    <glyphgroup name="ecaron" value="1"/>
    <glyphgroup name="ecircumflex" value="1"/>
    <glyphgroup name="edieresis" value="1"/>
    <glyphgroup name="edotaccent" value="1"/>
    <glyphgroup name="egrave" value="1"/>
    <glyphgroup name="eight" value="1"/>
    <glyphgroup name="eight.frac" value="1"/>
    <glyphgroup name="eight.pnum" value="1"/>
    <glyphgroup name="eight.smcp" value="1"/>
    <glyphgroup name="eight.sup" value="1"/>
    <glyphgroup name="eight.tnum" value="1"/>
    <glyphgroup name="eightsub" value="1"/>
    <glyphgroup name="eightsuperior" value="1"/>
    <glyphgroup name="ellipsis" value="1"/>
    <glyphgroup name="emacron" value="1"/>
    <glyphgroup name="emdash" value="1"/>
    <glyphgroup name="endash" value="1"/>
    <glyphgroup name="eng" value="1"/>
    <glyphgroup name="eng_uni1ABE" value="1"/>
    <glyphgroup name="eogonek" value="1"/>
    <glyphgroup name="eogonek.NAV" value="1"/>
    <glyphgroup name="epsilon" value="1"/>
    <glyphgroup name="epsilon1" value="1"/>
    <glyphgroup name="epsilon1rev" value="1"/>
    <glyphgroup name="epsilon1revclosed" value="1"/>
    <glyphgroup name="epsilon1revclosed_uni02DE" value="1"/>
    <glyphgroup name="epsilon1revhook" value="1"/>
    <glyphgroup name="epsilonclosed" value="1"/>
    <glyphgroup name="epsilontonos" value="1"/>
    <glyphgroup name="equal" value="1"/>
    <glyphgroup name="equalsub" value="1"/>
    <glyphgroup name="equalsuperior" value="1"/>
    <glyphgroup name="erev" value="1"/>
    <glyphgroup name="esh" value="1"/>
    <glyphgroup name="eshcurl" value="1"/>
    <glyphgroup name="eshlooprev" value="1"/>
    <glyphgroup name="eshshortrev" value="1"/>
    <glyphgroup name="estimated" value="1"/>
    <glyphgroup name="eta" value="1"/>
    <glyphgroup name="etatonos" value="1"/>
    <glyphgroup name="eth" value="1"/>
    <glyphgroup name="eturn" value="1"/>
    <glyphgroup name="eurocurrency" value="1"/>
    <glyphgroup name="exclam" value="1"/>
    <glyphgroup name="exclam1" value="1"/>
    <glyphgroup name="exclamdbl" value="1"/>
    <glyphgroup name="exclamdown" value="1"/>
    <glyphgroup name="f" value="1"/>
    <glyphgroup name="f_f" value="1"/>
    <glyphgroup name="f_f_i" value="1"/>
    <glyphgroup name="f_f_l" value="1"/>
    <glyphgroup name="f_l" value="1"/>
    <glyphgroup name="fi" value="1"/>
    <glyphgroup name="figuredash" value="1"/>
    <glyphgroup name="finalkaf" value="1"/>
    <glyphgroup name="finalmem" value="1"/>
    <glyphgroup name="finalnun" value="1"/>
    <glyphgroup name="finaltsadi" value="1"/>
    <glyphgroup name="five" value="1"/>
    <glyphgroup name="five.frac" value="1"/>
    <glyphgroup name="five.onum" value="1"/>
    <glyphgroup name="five.pnum" value="1"/>
    <glyphgroup name="five.smcp" value="1"/>
    <glyphgroup name="five.sup" value="1"/>
    <glyphgroup name="five.tnum" value="1"/>
    <glyphgroup name="fiveeighths" value="1"/>
    <glyphgroup name="fivesub" value="1"/>
    <glyphgroup name="fivesuperior" value="1"/>
    <glyphgroup name="florin" value="1"/>
    <glyphgroup name="four" value="1"/>
    <glyphgroup name="four.frac" value="1"/>
    <glyphgroup name="four.onum" value="1"/>
    <glyphgroup name="four.pnum" value="1"/>
    <glyphgroup name="four.smcp" value="1"/>
    <glyphgroup name="four.sup" value="1"/>
    <glyphgroup name="four.tnum" value="1"/>
    <glyphgroup name="foursub" value="1"/>
    <glyphgroup name="fraction" value="1"/>
    <glyphgroup name="franc" value="1"/>
    <glyphgroup name="g" value="1"/>
    <glyphgroup name="g.alt" value="1"/>
    <glyphgroup name="g.ss06" value="1"/>
    <glyphgroup name="g.ss07" value="1"/>
    <glyphgroup name="gacute" value="1"/>
    <glyphgroup name="gamma" value="1"/>
    <glyphgroup name="gamma1" value="1"/>
    <glyphgroup name="gammasuper" value="1"/>
    <glyphgroup name="gbar" value="1"/>
    <glyphgroup name="gbar_uni1ABE" value="1"/>
    <glyphgroup name="gbreve" value="1"/>
    <glyphgroup name="gcaron" value="1"/>
    <glyphgroup name="gcircumflex" value="1"/>
    <glyphgroup name="gcommaaccent" value="1"/>
    <glyphgroup name="gcursive" value="1"/>
    <glyphgroup name="germandbls" value="1"/>
    <glyphgroup name="ghook" value="1"/>
    <glyphgroup name="glottalstop" value="1"/>
    <glyphgroup name="glottalstopbar" value="1"/>
    <glyphgroup name="glottalstopbarinv" value="1"/>
    <glyphgroup name="glottalstopbarrev" value="1"/>
    <glyphgroup name="glottalstopinv" value="1"/>
    <glyphgroup name="glottalstoprevinv" value="1"/>
    <glyphgroup name="grave" value="1"/>
    <glyphgroup name="gravecomb" value="1"/>
    <glyphgroup name="graveleftnosp" value="1"/>
    <glyphgroup name="gravesubnosp" value="1"/>
    <glyphgroup name="greater" value="1"/>
    <glyphgroup name="greaterequal" value="4"/>
    <glyphgroup name="guillemotleft" value="1"/>
    <glyphgroup name="guillemotright" value="1"/>
    <glyphgroup name="guilsinglleft" value="1"/>
    <glyphgroup name="guilsinglright" value="1"/>
    <glyphgroup name="h" value="1"/>
    <glyphgroup name="hbar" value="1"/>
    <glyphgroup name="hcircumflex" value="1"/>
    <glyphgroup name="henghook" value="1"/>
    <glyphgroup name="hhook" value="1"/>
    <glyphgroup name="hhooksuper" value="1"/>
    <glyphgroup name="hook" value="1"/>
    <glyphgroup name="hooksubpalatnosp" value="1"/>
    <glyphgroup name="hooksubretronosp" value="1"/>
    <glyphgroup name="hornnosp" value="1"/>
    <glyphgroup name="hsuper" value="1"/>
    <glyphgroup name="hturn" value="1"/>
    <glyphgroup name="hungarumlaut" value="1"/>
    <glyphgroup name="hv" value="1"/>
    <glyphgroup name="hyphen" value="1"/>
    <glyphgroup name="hyphen__" value="1"/>
    <glyphgroup name="hyphenbullet" value="1"/>
    <glyphgroup name="hyphendot" value="1"/>
    <glyphgroup name="hyphennobreak" value="1"/>
    <glyphgroup name="i" value="1"/>
    <glyphgroup name="iacute" value="1"/>
    <glyphgroup name="ibar" value="1"/>
    <glyphgroup name="ibreve" value="1"/>
    <glyphgroup name="icaron" value="1"/>
    <glyphgroup name="icircumflex" value="1"/>
    <glyphgroup name="idieresis" value="1"/>
    <glyphgroup name="igrave" value="1"/>
    <glyphgroup name="ij" value="1"/>
    <glyphgroup name="imacron" value="1"/>
    <glyphgroup name="infinity" value="1"/>
    <glyphgroup name="integral" value="1"/>
    <glyphgroup name="interrobang" value="1"/>
    <glyphgroup name="iogonek" value="1"/>
    <glyphgroup name="iota" value="1"/>
    <glyphgroup name="iota1" value="1"/>
    <glyphgroup name="iota1_uni02DE" value="1"/>
    <glyphgroup name="iotadieresis" value="1"/>
    <glyphgroup name="iotadieresistonos" value="1"/>
    <glyphgroup name="iotasubnosp" value="1"/>
    <glyphgroup name="iotasubnosp_uni1ABD" value="1"/>
    <glyphgroup name="iotatonos" value="1"/>
    <glyphgroup name="itilde" value="1"/>
    <glyphgroup name="j" value="1"/>
    <glyphgroup name="jcircumflex" value="1"/>
    <glyphgroup name="jcrosstail" value="1"/>
    <glyphgroup name="jdotlessbar" value="1"/>
    <glyphgroup name="jhookdblbar" value="1"/>
    <glyphgroup name="jsuper" value="1"/>
    <glyphgroup name="k" value="1"/>
    <glyphgroup name="k.alt" value="1"/>
    <glyphgroup name="k.alt2" value="1"/>
    <glyphgroup name="kappa" value="1"/>
    <glyphgroup name="kappa1" value="1"/>
    <glyphgroup name="kcaron" value="1"/>
    <glyphgroup name="kcommaaccent" value="1"/>
    <glyphgroup name="kgreenlandic" value="1"/>
    <glyphgroup name="khook" value="1"/>
    <glyphgroup name="koppa" value="1"/>
    <glyphgroup name="kturn" value="1"/>
    <glyphgroup name="l" value="1"/>
    <glyphgroup name="lacute" value="1"/>
    <glyphgroup name="lambda" value="1"/>
    <glyphgroup name="lambdabar" value="1"/>
    <glyphgroup name="largerighthook" value="1"/>
    <glyphgroup name="lbar" value="1"/>
    <glyphgroup name="lbelt" value="1"/>
    <glyphgroup name="lcaron" value="1"/>
    <glyphgroup name="lcommaaccent" value="1"/>
    <glyphgroup name="ldot" value="1"/>
    <glyphgroup name="less" value="1"/>
    <glyphgroup name="lessequal" value="4"/>
    <glyphgroup name="linevert" value="1"/>
    <glyphgroup name="linevertdblnosp" value="1"/>
    <glyphgroup name="linevertnosp" value="1"/>
    <glyphgroup name="linevertsubnosp" value="1"/>
    <glyphgroup name="linevertsubnosp_uni1ABD" value="1"/>
    <glyphgroup name="lira" value="1"/>
    <glyphgroup name="lira.smcp" value="1"/>
    <glyphgroup name="lj" value="1"/>
    <glyphgroup name="lmidtilde" value="1"/>
    <glyphgroup name="lmidtilde_uni1ABE" value="1"/>
    <glyphgroup name="logicalnot" value="1"/>
    <glyphgroup name="longs" value="1"/>
    <glyphgroup name="longst" value="1"/>
    <glyphgroup name="lozenge" value="1"/>
    <glyphgroup name="lrthook" value="1"/>
    <glyphgroup name="lslash" value="1"/>
    <glyphgroup name="lyogh" value="1"/>
    <glyphgroup name="m" value="1"/>
    <glyphgroup name="macron" value="1"/>
    <glyphgroup name="macronacutecomb" value="1"/>
    <glyphgroup name="macronacutecomb.lc" value="1"/>
    <glyphgroup name="macroncomb" value="1"/>
    <glyphgroup name="macroncomb_uni1ABB" value="1"/>
    <glyphgroup name="macrondieresiscomb" value="1"/>
    <glyphgroup name="macrondieresiscomb.lc" value="1"/>
    <glyphgroup name="macrongravecomb" value="1"/>
    <glyphgroup name="macrongravecomb.lc" value="1"/>
    <glyphgroup name="macronsub" value="1"/>
    <glyphgroup name="macronsubnosp" value="1"/>
    <glyphgroup name="mcapturn" value="1"/>
    <glyphgroup name="mhook" value="1"/>
    <glyphgroup name="mill" value="1"/>
    <glyphgroup name="minus" value="1"/>
    <glyphgroup name="minussub" value="1"/>
    <glyphgroup name="minussubnosp" value="1"/>
    <glyphgroup name="minussuperior" value="1"/>
    <glyphgroup name="minute" value="1"/>
    <glyphgroup name="mturn" value="1"/>
    <glyphgroup name="mturndescend" value="1"/>
    <glyphgroup name="mu" value="1"/>
    <glyphgroup name="multiply" value="1"/>
    <glyphgroup name="n" value="1"/>
    <glyphgroup name="nacute" value="1"/>
    <glyphgroup name="naira" value="1"/>
    <glyphgroup name="napostrophe" value="1"/>
    <glyphgroup name="nbspace" value="1"/>
    <glyphgroup name="ncaron" value="1"/>
    <glyphgroup name="ncommaaccent" value="1"/>
    <glyphgroup name="nine" value="1"/>
    <glyphgroup name="nine.alt" value="1"/>
    <glyphgroup name="nine.frac" value="1"/>
    <glyphgroup name="nine.onum" value="1"/>
    <glyphgroup name="nine.pnum" value="1"/>
    <glyphgroup name="nine.smcp" value="1"/>
    <glyphgroup name="nine.sup" value="1"/>
    <glyphgroup name="nine.tnum" value="1"/>
    <glyphgroup name="nineinferior" value="1"/>
    <glyphgroup name="ninesuperior" value="1"/>
    <glyphgroup name="nj" value="1"/>
    <glyphgroup name="nlfthook" value="1"/>
    <glyphgroup name="notequal" value="1"/>
    <glyphgroup name="nrthook" value="1"/>
    <glyphgroup name="nsuperior" value="1"/>
    <glyphgroup name="ntilde" value="1"/>
    <glyphgroup name="nu" value="1"/>
    <glyphgroup name="numbersign" value="1"/>
    <glyphgroup name="numeralgreek" value="1"/>
    <glyphgroup name="numeralgreeksub" value="1"/>
    <glyphgroup name="o" value="1"/>
    <glyphgroup name="o.ss06" value="1"/>
    <glyphgroup name="o_uni02DE" value="1"/>
    <glyphgroup name="oacute" value="1"/>
    <glyphgroup name="obar" value="1"/>
    <glyphgroup name="obreve" value="1"/>
    <glyphgroup name="ocaron" value="1"/>
    <glyphgroup name="ocircumflex" value="1"/>
    <glyphgroup name="odieresis" value="1"/>
    <glyphgroup name="oe" value="1"/>
    <glyphgroup name="ogonek" value="1"/>
    <glyphgroup name="ogoneknosp" value="1"/>
    <glyphgroup name="ograve" value="1"/>
    <glyphgroup name="ohorn" value="1"/>
    <glyphgroup name="ohungarumlaut" value="1"/>
    <glyphgroup name="oi" value="1"/>
    <glyphgroup name="omacron" value="1"/>
    <glyphgroup name="omega" value="1"/>
    <glyphgroup name="omegaclosed" value="1"/>
    <glyphgroup name="omegatonos" value="1"/>
    <glyphgroup name="omicron" value="1"/>
    <glyphgroup name="omicrontonos" value="1"/>
    <glyphgroup name="one" value="1"/>
    <glyphgroup name="one.onum" value="1"/>
    <glyphgroup name="one.pnum" value="1"/>
    <glyphgroup name="one.smcp" value="1"/>
    <glyphgroup name="one.sup" value="1"/>
    <glyphgroup name="one.tnum" value="1"/>
    <glyphgroup name="onedotleader" value="1"/>
    <glyphgroup name="oneeighth" value="1"/>
    <glyphgroup name="onehalf" value="1"/>
    <glyphgroup name="oneinferior" value="1"/>
    <glyphgroup name="onequarter" value="1"/>
    <glyphgroup name="onesuperior" value="1"/>
    <glyphgroup name="onethird" value="1"/>
    <glyphgroup name="oogonek" value="1"/>
    <glyphgroup name="oogonek.NAV" value="1"/>
    <glyphgroup name="oopen" value="1"/>
    <glyphgroup name="oopen_uni02DE" value="1"/>
    <glyphgroup name="ordfeminine" value="1"/>
    <glyphgroup name="ordmasculine" value="1"/>
    <glyphgroup name="oslash" value="1"/>
    <glyphgroup name="oslashacute" value="1"/>
    <glyphgroup name="otilde" value="1"/>
    <glyphgroup name="ounce" value="1"/>
    <glyphgroup name="overline" value="1"/>
    <glyphgroup name="overscoredblnosp" value="1"/>
    <glyphgroup name="overscorenosp" value="1"/>
    <glyphgroup name="p" value="1"/>
    <glyphgroup name="p.ss06" value="1"/>
    <glyphgroup name="paragraph" value="1"/>
    <glyphgroup name="parenleft" value="1"/>
    <glyphgroup name="parenleftinferior" value="1"/>
    <glyphgroup name="parenleftsuperior" value="1"/>
    <glyphgroup name="parenright" value="1"/>
    <glyphgroup name="parenrightsub" value="1"/>
    <glyphgroup name="parenrightsuperior" value="1"/>
    <glyphgroup name="partialdiff" value="1"/>
    <glyphgroup name="percent" value="1"/>
    <glyphgroup name="period" value="1"/>
    <glyphgroup name="periodcentered" value="1"/>
    <glyphgroup name="periodcentered.tnum" value="1"/>
    <glyphgroup name="pertenthousand" value="1"/>
    <glyphgroup name="perthousand" value="1"/>
    <glyphgroup name="peseta" value="1"/>
    <glyphgroup name="phi" value="1"/>
    <glyphgroup name="phi1" value="1"/>
    <glyphgroup name="philatin" value="1"/>
    <glyphgroup name="phook" value="1"/>
    <glyphgroup name="pi" value="1"/>
    <glyphgroup name="pipe" value="1"/>
    <glyphgroup name="pipedbl" value="1"/>
    <glyphgroup name="pipedblbar" value="1"/>
    <glyphgroup name="plus" value="1"/>
    <glyphgroup name="plusminus" value="1"/>
    <glyphgroup name="plussub" value="1"/>
    <glyphgroup name="plussubnosp" value="1"/>
    <glyphgroup name="plussuperior" value="1"/>
    <glyphgroup name="primerev1" value="1"/>
    <glyphgroup name="primetripl1" value="1"/>
    <glyphgroup name="primetriplerev1" value="1"/>
    <glyphgroup name="product" value="1"/>
    <glyphgroup name="psi" value="1"/>
    <glyphgroup name="published" value="1"/>
    <glyphgroup name="q" value="1"/>
    <glyphgroup name="q.ss06" value="1"/>
    <glyphgroup name="qhook" value="1"/>
    <glyphgroup name="qofdagesh" value="1"/>
    <glyphgroup name="question" value="1"/>
    <glyphgroup name="questiondown" value="1"/>
    <glyphgroup name="questiongreek" value="1"/>
    <glyphgroup name="quotedbl" value="1"/>
    <glyphgroup name="quotedblbase" value="1"/>
    <glyphgroup name="quotedblleft" value="1"/>
    <glyphgroup name="quotedblreversed" value="1"/>
    <glyphgroup name="quotedblright" value="1"/>
    <glyphgroup name="quotedblx" value="1"/>
    <glyphgroup name="quoteleft" value="1"/>
    <glyphgroup name="quotereversed" value="1"/>
    <glyphgroup name="quoteright" value="1"/>
    <glyphgroup name="quotesinglbase" value="1"/>
    <glyphgroup name="quotesingle" value="1"/>
    <glyphgroup name="r" value="1"/>
    <glyphgroup name="racute" value="1"/>
    <glyphgroup name="radical" value="1"/>
    <glyphgroup name="rcaron" value="1"/>
    <glyphgroup name="rcommaaccent" value="1"/>
    <glyphgroup name="rdescend" value="1"/>
    <glyphgroup name="referencemark" value="1"/>
    <glyphgroup name="registered" value="1"/>
    <glyphgroup name="response" value="1"/>
    <glyphgroup name="reverseddblprime" value="1"/>
    <glyphgroup name="rfishhook" value="1"/>
    <glyphgroup name="rfishhookrev" value="1"/>
    <glyphgroup name="rho" value="1"/>
    <glyphgroup name="rho1" value="1"/>
    <glyphgroup name="ring" value="1"/>
    <glyphgroup name="ringacute" value="1"/>
    <glyphgroup name="ringlefthalfsubnosp" value="1"/>
    <glyphgroup name="ringnosp" value="1"/>
    <glyphgroup name="ringrighthalfsubnosp" value="1"/>
    <glyphgroup name="ringsubnosp" value="1"/>
    <glyphgroup name="ringsubnosp_uni1ABD" value="1"/>
    <glyphgroup name="romaneight" value="1"/>
    <glyphgroup name="romaneleven" value="1"/>
    <glyphgroup name="romanfifty" value="1"/>
    <glyphgroup name="romanfive" value="1"/>
    <glyphgroup name="romanfivehundred" value="1"/>
    <glyphgroup name="romanfour" value="1"/>
    <glyphgroup name="romanhundred" value="1"/>
    <glyphgroup name="romannine" value="1"/>
    <glyphgroup name="romanone" value="1"/>
    <glyphgroup name="romanseven" value="1"/>
    <glyphgroup name="romansix" value="1"/>
    <glyphgroup name="romanten" value="1"/>
    <glyphgroup name="romanthousand" value="1"/>
    <glyphgroup name="romanthree" value="1"/>
    <glyphgroup name="romantwelve" value="1"/>
    <glyphgroup name="romantwo" value="1"/>
    <glyphgroup name="rrthook" value="1"/>
    <glyphgroup name="rrthook_uni1ABE" value="1"/>
    <glyphgroup name="rsuper" value="1"/>
    <glyphgroup name="rturn" value="1"/>
    <glyphgroup name="rturnascend" value="1"/>
    <glyphgroup name="rturnrthook" value="1"/>
    <glyphgroup name="rturnsuper" value="1"/>
    <glyphgroup name="rupee" value="1"/>
    <glyphgroup name="s" value="1"/>
    <glyphgroup name="sacute" value="1"/>
    <glyphgroup name="sampi" value="1"/>
    <glyphgroup name="scaron" value="1"/>
    <glyphgroup name="scedilla" value="1"/>
    <glyphgroup name="schwa" value="1"/>
    <glyphgroup name="schwahook" value="1"/>
    <glyphgroup name="scircumflex" value="1"/>
    <glyphgroup name="seagullsubnosp" value="1"/>
    <glyphgroup name="second" value="1"/>
    <glyphgroup name="section" value="1"/>
    <glyphgroup name="semicolon" value="1"/>
    <glyphgroup name="servicemark" value="1"/>
    <glyphgroup name="seven" value="1"/>
    <glyphgroup name="seven.alt" value="1"/>
    <glyphgroup name="seven.frac" value="1"/>
    <glyphgroup name="seven.onum" value="1"/>
    <glyphgroup name="seven.pnum" value="1"/>
    <glyphgroup name="seven.smcp" value="1"/>
    <glyphgroup name="seven.sup" value="1"/>
    <glyphgroup name="seven.tnum" value="1"/>
    <glyphgroup name="seveneighths" value="1"/>
    <glyphgroup name="sevensub" value="1"/>
    <glyphgroup name="sevensuperior" value="1"/>
    <glyphgroup name="shindagesh" value="1"/>
    <glyphgroup name="sigma" value="1"/>
    <glyphgroup name="sigma1" value="1"/>
    <glyphgroup name="six" value="1"/>
    <glyphgroup name="six.alt" value="1"/>
    <glyphgroup name="six.frac" value="1"/>
    <glyphgroup name="six.pnum" value="1"/>
    <glyphgroup name="six.smcp" value="1"/>
    <glyphgroup name="six.sup" value="1"/>
    <glyphgroup name="six.tnum" value="1"/>
    <glyphgroup name="sixinferior" value="1"/>
    <glyphgroup name="sixsuperior" value="1"/>
    <glyphgroup name="slash" value="1"/>
    <glyphgroup name="slashlongnosp" value="1"/>
    <glyphgroup name="slashshortnosp" value="1"/>
    <glyphgroup name="space" value="1"/>
    <glyphgroup name="spaceopenbox" value="1"/>
    <glyphgroup name="squaresubnosp" value="1"/>
    <glyphgroup name="srthook" value="1"/>
    <glyphgroup name="st" value="1"/>
    <glyphgroup name="sterling" value="1"/>
    <glyphgroup name="sterling.smcp" value="1"/>
    <glyphgroup name="stigma" value="1"/>
    <glyphgroup name="summation" value="1"/>
    <glyphgroup name="t" value="1"/>
    <glyphgroup name="tackdownsubnosp" value="1"/>
    <glyphgroup name="tackleftsubnosp" value="1"/>
    <glyphgroup name="tackrightsubnosp" value="1"/>
    <glyphgroup name="tackupsubnosp" value="1"/>
    <glyphgroup name="tau" value="1"/>
    <glyphgroup name="tavdages" value="1"/>
    <glyphgroup name="tbar" value="1"/>
    <glyphgroup name="tcaron" value="1"/>
    <glyphgroup name="tccurl" value="1"/>
    <glyphgroup name="tel" value="1"/>
    <glyphgroup name="tesh" value="1"/>
    <glyphgroup name="theta" value="1"/>
    <glyphgroup name="thook" value="1"/>
    <glyphgroup name="thorn" value="1"/>
    <glyphgroup name="three" value="1"/>
    <glyphgroup name="three.onum" value="1"/>
    <glyphgroup name="three.pnum" value="1"/>
    <glyphgroup name="three.smcp" value="1"/>
    <glyphgroup name="three.sup" value="1"/>
    <glyphgroup name="three.tnum" value="1"/>
    <glyphgroup name="threeeighths" value="1"/>
    <glyphgroup name="threequarters" value="1"/>
    <glyphgroup name="threesub" value="1"/>
    <glyphgroup name="threesuperior" value="1"/>
    <glyphgroup name="tilde" value="1"/>
    <glyphgroup name="tildeacutecomb" value="1"/>
    <glyphgroup name="tildeacutecomb.lc" value="1"/>
    <glyphgroup name="tildecomb" value="1"/>
    <glyphgroup name="tildecomb_uni1ABB" value="1"/>
    <glyphgroup name="tildecomb_uni1ABC" value="1"/>
    <glyphgroup name="tildedieresiscomb" value="1"/>
    <glyphgroup name="tildedieresiscomb.lc" value="1"/>
    <glyphgroup name="tildemacroncomb" value="1"/>
    <glyphgroup name="tildemacroncomb.lc" value="1"/>
    <glyphgroup name="tildemidnosp" value="1"/>
    <glyphgroup name="tildesubnosp" value="1"/>
    <glyphgroup name="tildesubnosp_uni1ABD" value="1"/>
    <glyphgroup name="tildevertsupnosp" value="1"/>
    <glyphgroup name="tonefive" value="1"/>
    <glyphgroup name="tonesix" value="1"/>
    <glyphgroup name="tonetwo" value="1"/>
    <glyphgroup name="tonos" value="1"/>
    <glyphgroup name="tpalatalhook" value="1"/>
    <glyphgroup name="trademark" value="1"/>
    <glyphgroup name="trianglebullet" value="1"/>
    <glyphgroup name="trthook" value="1"/>
    <glyphgroup name="ts" value="1"/>
    <glyphgroup name="tturn" value="1"/>
    <glyphgroup name="two" value="1"/>
    <glyphgroup name="two.onum" value="1"/>
    <glyphgroup name="two.pnum" value="1"/>
    <glyphgroup name="two.smcp" value="1"/>
    <glyphgroup name="two.sup" value="1"/>
    <glyphgroup name="two.tnum" value="1"/>
    <glyphgroup name="twosub" value="1"/>
    <glyphgroup name="twosuperior" value="1"/>
    <glyphgroup name="twothirds" value="1"/>
    <glyphgroup name="u" value="1"/>
    <glyphgroup name="uacute" value="1"/>
    <glyphgroup name="ubar" value="1"/>
    <glyphgroup name="ubreve" value="1"/>
    <glyphgroup name="ucaron" value="1"/>
    <glyphgroup name="ucircumflex" value="1"/>
    <glyphgroup name="udieresis" value="1"/>
    <glyphgroup name="ugrave" value="1"/>
    <glyphgroup name="uhorn" value="1"/>
    <glyphgroup name="uhungarumlaut" value="1"/>
    <glyphgroup name="umacron" value="1"/>
    <glyphgroup name="underscore" value="1"/>
    <glyphgroup name="underscoredbl" value="1"/>
    <glyphgroup name="underscoredblnosp" value="1"/>
    <glyphgroup name="underscorenosp" value="1"/>
    <glyphgroup name="undertie" value="1"/>
    <glyphgroup name="uni0002" value="1"/>
    <glyphgroup name="uni0009" value="1"/>
    <glyphgroup name="uni0069.ccmp" value="1"/>
    <glyphgroup name="uni006A.ccmp" value="1"/>
    <glyphgroup name="uni00AD" value="1"/>
    <glyphgroup name="uni010A" value="1"/>
    <glyphgroup name="uni010A.smcp" value="1"/>
    <glyphgroup name="uni010B" value="1"/>
    <glyphgroup name="uni0120" value="1"/>
    <glyphgroup name="uni0120.smcp" value="1"/>
    <glyphgroup name="uni0121" value="1"/>
    <glyphgroup name="uni012F.ccmp" value="1"/>
    <glyphgroup name="uni0162" value="1"/>
    <glyphgroup name="uni0162.smcp" value="1"/>
    <glyphgroup name="uni0163" value="1"/>
    <glyphgroup name="uni019E" value="1"/>
    <glyphgroup name="uni01B7" value="1"/>
    <glyphgroup name="uni01B8" value="1"/>
    <glyphgroup name="uni01B9" value="1"/>
    <glyphgroup name="uni01BA" value="1"/>
    <glyphgroup name="uni01BB" value="1"/>
    <glyphgroup name="uni01C4" value="1"/>
    <glyphgroup name="uni01C5" value="1"/>
    <glyphgroup name="uni01C6" value="1"/>
    <glyphgroup name="uni01D5" value="1"/>
    <glyphgroup name="uni01D6" value="1"/>
    <glyphgroup name="uni01D7" value="1"/>
    <glyphgroup name="uni01D8" value="1"/>
    <glyphgroup name="uni01D9" value="1"/>
    <glyphgroup name="uni01DA" value="1"/>
    <glyphgroup name="uni01DB" value="1"/>
    <glyphgroup name="uni01DC" value="1"/>
    <glyphgroup name="uni01DE" value="1"/>
    <glyphgroup name="uni01DF" value="1"/>
    <glyphgroup name="uni01E0" value="1"/>
    <glyphgroup name="uni01E1" value="1"/>
    <glyphgroup name="uni01EC" value="1"/>
    <glyphgroup name="uni01ED" value="1"/>
    <glyphgroup name="uni01EE" value="1"/>
    <glyphgroup name="uni01EF" value="1"/>
    <glyphgroup name="uni01F0" value="1"/>
    <glyphgroup name="uni01F1" value="1"/>
    <glyphgroup name="uni01F2" value="1"/>
    <glyphgroup name="uni01F3" value="1"/>
    <glyphgroup name="uni01F6" value="1"/>
    <glyphgroup name="uni01F7" value="1"/>
    <glyphgroup name="uni01F8" value="1"/>
    <glyphgroup name="uni01F9" value="1"/>
    <glyphgroup name="uni0200" value="1"/>
    <glyphgroup name="uni0201" value="1"/>
    <glyphgroup name="uni0202" value="1"/>
    <glyphgroup name="uni0203" value="1"/>
    <glyphgroup name="uni0204" value="1"/>
    <glyphgroup name="uni0205" value="1"/>
    <glyphgroup name="uni0206" value="1"/>
    <glyphgroup name="uni0207" value="1"/>
    <glyphgroup name="uni0208" value="1"/>
    <glyphgroup name="uni0209" value="1"/>
    <glyphgroup name="uni020A" value="1"/>
    <glyphgroup name="uni020B" value="1"/>
    <glyphgroup name="uni020C" value="1"/>
    <glyphgroup name="uni020D" value="1"/>
    <glyphgroup name="uni020E" value="1"/>
    <glyphgroup name="uni020F" value="1"/>
    <glyphgroup name="uni0210" value="1"/>
    <glyphgroup name="uni0211" value="1"/>
    <glyphgroup name="uni0212" value="1"/>
    <glyphgroup name="uni0213" value="1"/>
    <glyphgroup name="uni0214" value="1"/>
    <glyphgroup name="uni0215" value="1"/>
    <glyphgroup name="uni0216" value="1"/>
    <glyphgroup name="uni0217" value="1"/>
    <glyphgroup name="uni0218" value="1"/>
    <glyphgroup name="uni0219" value="1"/>
    <glyphgroup name="uni021A" value="1"/>
    <glyphgroup name="uni021B" value="1"/>
    <glyphgroup name="uni021C" value="1"/>
    <glyphgroup name="uni021D" value="1"/>
    <glyphgroup name="uni021E" value="1"/>
    <glyphgroup name="uni021F" value="1"/>
    <glyphgroup name="uni0220" value="1"/>
    <glyphgroup name="uni0221" value="1"/>
    <glyphgroup name="uni0222" value="1"/>
    <glyphgroup name="uni0223" value="1"/>
    <glyphgroup name="uni0224" value="1"/>
    <glyphgroup name="uni0225" value="1"/>
    <glyphgroup name="uni0226" value="1"/>
    <glyphgroup name="uni0227" value="1"/>
    <glyphgroup name="uni0228" value="1"/>
    <glyphgroup name="uni0229" value="1"/>
    <glyphgroup name="uni022A" value="1"/>
    <glyphgroup name="uni022B" value="1"/>
    <glyphgroup name="uni022C" value="1"/>
    <glyphgroup name="uni022D" value="1"/>
    <glyphgroup name="uni022E" value="1"/>
    <glyphgroup name="uni022F" value="1"/>
    <glyphgroup name="uni0230" value="1"/>
    <glyphgroup name="uni0231" value="1"/>
    <glyphgroup name="uni0232" value="1"/>
    <glyphgroup name="uni0233" value="1"/>
    <glyphgroup name="uni0234" value="1"/>
    <glyphgroup name="uni0235" value="1"/>
    <glyphgroup name="uni0236" value="1"/>
    <glyphgroup name="uni0237" value="1"/>
    <glyphgroup name="uni0238" value="1"/>
    <glyphgroup name="uni0239" value="1"/>
    <glyphgroup name="uni023A" value="1"/>
    <glyphgroup name="uni023B" value="1"/>
    <glyphgroup name="uni023C" value="1"/>
    <glyphgroup name="uni023D" value="1"/>
    <glyphgroup name="uni023E" value="1"/>
    <glyphgroup name="uni023F" value="1"/>
    <glyphgroup name="uni0240" value="1"/>
    <glyphgroup name="uni0241" value="1"/>
    <glyphgroup name="uni0242" value="1"/>
    <glyphgroup name="uni0243" value="1"/>
    <glyphgroup name="uni0244" value="1"/>
    <glyphgroup name="uni0245" value="1"/>
    <glyphgroup name="uni0246" value="1"/>
    <glyphgroup name="uni0247" value="1"/>
    <glyphgroup name="uni0248" value="1"/>
    <glyphgroup name="uni0249" value="1"/>
    <glyphgroup name="uni0249.ccmp" value="1"/>
    <glyphgroup name="uni024A" value="1"/>
    <glyphgroup name="uni024B" value="1"/>
    <glyphgroup name="uni024C" value="1"/>
    <glyphgroup name="uni024D" value="1"/>
    <glyphgroup name="uni024E" value="1"/>
    <glyphgroup name="uni024F" value="1"/>
    <glyphgroup name="uni0268.ccmp" value="1"/>
    <glyphgroup name="uni0292" value="1"/>
    <glyphgroup name="uni0293" value="1"/>
    <glyphgroup name="uni0299" value="1"/>
    <glyphgroup name="uni029C" value="1"/>
    <glyphgroup name="uni029D.ccmp" value="1"/>
    <glyphgroup name="uni02A9" value="1"/>
    <glyphgroup name="uni02AB" value="1"/>
    <glyphgroup name="uni02AC" value="1"/>
    <glyphgroup name="uni02AE" value="1"/>
    <glyphgroup name="uni02B2.ccmp" value="1"/>
    <glyphgroup name="uni02B9" value="1"/>
    <glyphgroup name="uni02BA" value="1"/>
    <glyphgroup name="uni02BB" value="1"/>
    <glyphgroup name="uni02BC" value="1"/>
    <glyphgroup name="uni02BD" value="1"/>
    <glyphgroup name="uni02BE" value="1"/>
    <glyphgroup name="uni02BF" value="1"/>
    <glyphgroup name="uni02C0" value="1"/>
    <glyphgroup name="uni02C1" value="1"/>
    <glyphgroup name="uni02C2" value="1"/>
    <glyphgroup name="uni02C3" value="1"/>
    <glyphgroup name="uni02C4" value="1"/>
    <glyphgroup name="uni02C5" value="1"/>
    <glyphgroup name="uni02C9" value="1"/>
    <glyphgroup name="uni02CA" value="1"/>
    <glyphgroup name="uni02CB" value="1"/>
    <glyphgroup name="uni02CC" value="1"/>
    <glyphgroup name="uni02CE" value="1"/>
    <glyphgroup name="uni02CF" value="1"/>
    <glyphgroup name="uni02D0" value="1"/>
    <glyphgroup name="uni02D1" value="1"/>
    <glyphgroup name="uni02D2" value="1"/>
    <glyphgroup name="uni02D3" value="1"/>
    <glyphgroup name="uni02D4" value="1"/>
    <glyphgroup name="uni02D5" value="1"/>
    <glyphgroup name="uni02D6" value="1"/>
    <glyphgroup name="uni02D7" value="1"/>
    <glyphgroup name="uni02DE" value="1"/>
    <glyphgroup name="uni02E4" value="1"/>
    <glyphgroup name="uni02E5" value="1"/>
    <glyphgroup name="uni02E5_uni02E5_uni02E6" value="1"/>
    <glyphgroup name="uni02E5_uni02E5_uni02E7" value="1"/>
    <glyphgroup name="uni02E5_uni02E5_uni02E8" value="1"/>
    <glyphgroup name="uni02E5_uni02E5_uni02E9" value="1"/>
    <glyphgroup name="uni02E5_uni02E6" value="1"/>
    <glyphgroup name="uni02E5_uni02E6_uni02E5" value="1"/>
    <glyphgroup name="uni02E5_uni02E6_uni02E6" value="1"/>
    <glyphgroup name="uni02E5_uni02E6_uni02E7" value="1"/>
    <glyphgroup name="uni02E5_uni02E6_uni02E8" value="1"/>
    <glyphgroup name="uni02E5_uni02E6_uni02E9" value="1"/>
    <glyphgroup name="uni02E5_uni02E7" value="1"/>
    <glyphgroup name="uni02E5_uni02E7_uni02E5" value="1"/>
    <glyphgroup name="uni02E5_uni02E7_uni02E6" value="1"/>
    <glyphgroup name="uni02E5_uni02E7_uni02E7" value="1"/>
    <glyphgroup name="uni02E5_uni02E7_uni02E8" value="1"/>
    <glyphgroup name="uni02E5_uni02E7_uni02E9" value="1"/>
    <glyphgroup name="uni02E5_uni02E8" value="1"/>
    <glyphgroup name="uni02E5_uni02E8_uni02E5" value="1"/>
    <glyphgroup name="uni02E5_uni02E8_uni02E6" value="1"/>
    <glyphgroup name="uni02E5_uni02E8_uni02E7" value="1"/>
    <glyphgroup name="uni02E5_uni02E8_uni02E8" value="1"/>
    <glyphgroup name="uni02E5_uni02E8_uni02E9" value="1"/>
    <glyphgroup name="uni02E5_uni02E9" value="1"/>
    <glyphgroup name="uni02E5_uni02E9_uni02E5" value="1"/>
    <glyphgroup name="uni02E5_uni02E9_uni02E6" value="1"/>
    <glyphgroup name="uni02E5_uni02E9_uni02E7" value="1"/>
    <glyphgroup name="uni02E5_uni02E9_uni02E8" value="1"/>
    <glyphgroup name="uni02E5_uni02E9_uni02E9" value="1"/>
    <glyphgroup name="uni02E6" value="1"/>
    <glyphgroup name="uni02E6_uni02E5" value="1"/>
    <glyphgroup name="uni02E6_uni02E5_uni02E5" value="1"/>
    <glyphgroup name="uni02E6_uni02E5_uni02E6" value="1"/>
    <glyphgroup name="uni02E6_uni02E5_uni02E7" value="1"/>
    <glyphgroup name="uni02E6_uni02E5_uni02E8" value="1"/>
    <glyphgroup name="uni02E6_uni02E5_uni02E9" value="1"/>
    <glyphgroup name="uni02E6_uni02E6_uni02E5" value="1"/>
    <glyphgroup name="uni02E6_uni02E6_uni02E7" value="1"/>
    <glyphgroup name="uni02E6_uni02E6_uni02E8" value="1"/>
    <glyphgroup name="uni02E6_uni02E6_uni02E9" value="1"/>
    <glyphgroup name="uni02E6_uni02E7" value="1"/>
    <glyphgroup name="uni02E6_uni02E7_uni02E5" value="1"/>
    <glyphgroup name="uni02E6_uni02E7_uni02E6" value="1"/>
    <glyphgroup name="uni02E6_uni02E7_uni02E7" value="1"/>
    <glyphgroup name="uni02E6_uni02E7_uni02E8" value="1"/>
    <glyphgroup name="uni02E6_uni02E7_uni02E9" value="1"/>
    <glyphgroup name="uni02E6_uni02E8" value="1"/>
    <glyphgroup name="uni02E6_uni02E8_uni02E5" value="1"/>
    <glyphgroup name="uni02E6_uni02E8_uni02E6" value="1"/>
    <glyphgroup name="uni02E6_uni02E8_uni02E7" value="1"/>
    <glyphgroup name="uni02E6_uni02E8_uni02E8" value="1"/>
    <glyphgroup name="uni02E6_uni02E8_uni02E9" value="1"/>
    <glyphgroup name="uni02E6_uni02E9" value="1"/>
    <glyphgroup name="uni02E6_uni02E9_uni02E5" value="1"/>
    <glyphgroup name="uni02E6_uni02E9_uni02E6" value="1"/>
    <glyphgroup name="uni02E6_uni02E9_uni02E7" value="1"/>
    <glyphgroup name="uni02E6_uni02E9_uni02E8" value="1"/>
    <glyphgroup name="uni02E6_uni02E9_uni02E9" value="1"/>
    <glyphgroup name="uni02E7" value="1"/>
    <glyphgroup name="uni02E7_uni02E5" value="1"/>
    <glyphgroup name="uni02E7_uni02E5_uni02E5" value="1"/>
    <glyphgroup name="uni02E7_uni02E5_uni02E6" value="1"/>
    <glyphgroup name="uni02E7_uni02E5_uni02E7" value="1"/>
    <glyphgroup name="uni02E7_uni02E5_uni02E8" value="1"/>
    <glyphgroup name="uni02E7_uni02E5_uni02E9" value="1"/>
    <glyphgroup name="uni02E7_uni02E6" value="1"/>
    <glyphgroup name="uni02E7_uni02E6_uni02E5" value="1"/>
    <glyphgroup name="uni02E7_uni02E6_uni02E6" value="1"/>
    <glyphgroup name="uni02E7_uni02E6_uni02E7" value="1"/>
    <glyphgroup name="uni02E7_uni02E6_uni02E8" value="1"/>
    <glyphgroup name="uni02E7_uni02E6_uni02E9" value="1"/>
    <glyphgroup name="uni02E7_uni02E7_uni02E5" value="1"/>
    <glyphgroup name="uni02E7_uni02E7_uni02E6" value="1"/>
    <glyphgroup name="uni02E7_uni02E7_uni02E8" value="1"/>
    <glyphgroup name="uni02E7_uni02E7_uni02E9" value="1"/>
    <glyphgroup name="uni02E7_uni02E8" value="1"/>
    <glyphgroup name="uni02E7_uni02E8_uni02E5" value="1"/>
    <glyphgroup name="uni02E7_uni02E8_uni02E6" value="1"/>
    <glyphgroup name="uni02E7_uni02E8_uni02E7" value="1"/>
    <glyphgroup name="uni02E7_uni02E8_uni02E8" value="1"/>
    <glyphgroup name="uni02E7_uni02E8_uni02E9" value="1"/>
    <glyphgroup name="uni02E7_uni02E9" value="1"/>
    <glyphgroup name="uni02E7_uni02E9_uni02E5" value="1"/>
    <glyphgroup name="uni02E7_uni02E9_uni02E6" value="1"/>
    <glyphgroup name="uni02E7_uni02E9_uni02E7" value="1"/>
    <glyphgroup name="uni02E7_uni02E9_uni02E8" value="1"/>
    <glyphgroup name="uni02E7_uni02E9_uni02E9" value="1"/>
    <glyphgroup name="uni02E8" value="1"/>
    <glyphgroup name="uni02E8_uni02E5" value="1"/>
    <glyphgroup name="uni02E8_uni02E5_uni02E5" value="1"/>
    <glyphgroup name="uni02E8_uni02E5_uni02E6" value="1"/>
    <glyphgroup name="uni02E8_uni02E5_uni02E7" value="1"/>
    <glyphgroup name="uni02E8_uni02E5_uni02E8" value="1"/>
    <glyphgroup name="uni02E8_uni02E5_uni02E9" value="1"/>
    <glyphgroup name="uni02E8_uni02E6" value="1"/>
    <glyphgroup name="uni02E8_uni02E6_uni02E5" value="1"/>
    <glyphgroup name="uni02E8_uni02E6_uni02E6" value="1"/>
    <glyphgroup name="uni02E8_uni02E6_uni02E7" value="1"/>
    <glyphgroup name="uni02E8_uni02E6_uni02E8" value="1"/>
    <glyphgroup name="uni02E8_uni02E6_uni02E9" value="1"/>
    <glyphgroup name="uni02E8_uni02E7" value="1"/>
    <glyphgroup name="uni02E8_uni02E7_uni02E5" value="1"/>
    <glyphgroup name="uni02E8_uni02E7_uni02E6" value="1"/>
    <glyphgroup name="uni02E8_uni02E7_uni02E7" value="1"/>
    <glyphgroup name="uni02E8_uni02E7_uni02E8" value="1"/>
    <glyphgroup name="uni02E8_uni02E7_uni02E9" value="1"/>
    <glyphgroup name="uni02E8_uni02E8_uni02E5" value="1"/>
    <glyphgroup name="uni02E8_uni02E8_uni02E6" value="1"/>
    <glyphgroup name="uni02E8_uni02E8_uni02E7" value="1"/>
    <glyphgroup name="uni02E8_uni02E8_uni02E9" value="1"/>
    <glyphgroup name="uni02E8_uni02E9" value="1"/>
    <glyphgroup name="uni02E8_uni02E9_uni02E5" value="1"/>
    <glyphgroup name="uni02E8_uni02E9_uni02E6" value="1"/>
    <glyphgroup name="uni02E8_uni02E9_uni02E7" value="1"/>
    <glyphgroup name="uni02E8_uni02E9_uni02E8" value="1"/>
    <glyphgroup name="uni02E8_uni02E9_uni02E9" value="1"/>
    <glyphgroup name="uni02E9" value="1"/>
    <glyphgroup name="uni02E9_uni02E5" value="1"/>
    <glyphgroup name="uni02E9_uni02E5_uni02E5" value="1"/>
    <glyphgroup name="uni02E9_uni02E5_uni02E6" value="1"/>
    <glyphgroup name="uni02E9_uni02E5_uni02E7" value="1"/>
    <glyphgroup name="uni02E9_uni02E5_uni02E8" value="1"/>
    <glyphgroup name="uni02E9_uni02E5_uni02E9" value="1"/>
    <glyphgroup name="uni02E9_uni02E6" value="1"/>
    <glyphgroup name="uni02E9_uni02E6_uni02E5" value="1"/>
    <glyphgroup name="uni02E9_uni02E6_uni02E6" value="1"/>
    <glyphgroup name="uni02E9_uni02E6_uni02E7" value="1"/>
    <glyphgroup name="uni02E9_uni02E6_uni02E8" value="1"/>
    <glyphgroup name="uni02E9_uni02E6_uni02E9" value="1"/>
    <glyphgroup name="uni02E9_uni02E7" value="1"/>
    <glyphgroup name="uni02E9_uni02E7_uni02E5" value="1"/>
    <glyphgroup name="uni02E9_uni02E7_uni02E6" value="1"/>
    <glyphgroup name="uni02E9_uni02E7_uni02E7" value="1"/>
    <glyphgroup name="uni02E9_uni02E7_uni02E8" value="1"/>
    <glyphgroup name="uni02E9_uni02E7_uni02E9" value="1"/>
    <glyphgroup name="uni02E9_uni02E8" value="1"/>
    <glyphgroup name="uni02E9_uni02E8_uni02E5" value="1"/>
    <glyphgroup name="uni02E9_uni02E8_uni02E6" value="1"/>
    <glyphgroup name="uni02E9_uni02E8_uni02E7" value="1"/>
    <glyphgroup name="uni02E9_uni02E8_uni02E8" value="1"/>
    <glyphgroup name="uni02E9_uni02E8_uni02E9" value="1"/>
    <glyphgroup name="uni02E9_uni02E9_uni02E5" value="1"/>
    <glyphgroup name="uni02E9_uni02E9_uni02E6" value="1"/>
    <glyphgroup name="uni02E9_uni02E9_uni02E7" value="1"/>
    <glyphgroup name="uni02E9_uni02E9_uni02E8" value="1"/>
    <glyphgroup name="uni02EA" value="1"/>
    <glyphgroup name="uni02EB" value="1"/>
    <glyphgroup name="uni02EC" value="1"/>
    <glyphgroup name="uni02ED" value="1"/>
    <glyphgroup name="uni02EF" value="1"/>
    <glyphgroup name="uni02F0" value="1"/>
    <glyphgroup name="uni02F1" value="1"/>
    <glyphgroup name="uni02F2" value="1"/>
    <glyphgroup name="uni02F3" value="1"/>
    <glyphgroup name="uni02F4" value="1"/>
    <glyphgroup name="uni02F5" value="1"/>
    <glyphgroup name="uni02F6" value="1"/>
    <glyphgroup name="uni02F7" value="1"/>
    <glyphgroup name="uni02F8" value="1"/>
    <glyphgroup name="uni02F9" value="1"/>
    <glyphgroup name="uni02FA" value="1"/>
    <glyphgroup name="uni02FB" value="1"/>
    <glyphgroup name="uni02FC" value="1"/>
    <glyphgroup name="uni02FD" value="1"/>
    <glyphgroup name="uni02FE" value="1"/>
    <glyphgroup name="uni02FF" value="1"/>
    <glyphgroup name="uni030C" value="1"/>
    <glyphgroup name="uni030C_uni1ABB" value="1"/>
    <glyphgroup name="uni030F" value="1"/>
    <glyphgroup name="uni0313" value="1"/>
    <glyphgroup name="uni0315" value="1"/>
    <glyphgroup name="uni0326" value="1"/>
    <glyphgroup name="uni032C" value="1"/>
    <glyphgroup name="uni0342" value="1"/>
    <glyphgroup name="uni0343" value="1"/>
    <glyphgroup name="uni0346" value="1"/>
    <glyphgroup name="uni0347" value="1"/>
    <glyphgroup name="uni0348" value="1"/>
    <glyphgroup name="uni0349" value="1"/>
    <glyphgroup name="uni034A" value="1"/>
    <glyphgroup name="uni034B" value="1"/>
    <glyphgroup name="uni034C" value="1"/>
    <glyphgroup name="uni034D" value="1"/>
    <glyphgroup name="uni034E" value="1"/>
    <glyphgroup name="uni034F" value="1"/>
    <glyphgroup name="uni0350" value="1"/>
    <glyphgroup name="uni0351" value="1"/>
    <glyphgroup name="uni0352" value="1"/>
    <glyphgroup name="uni0353" value="1"/>
    <glyphgroup name="uni0354" value="1"/>
    <glyphgroup name="uni0355" value="1"/>
    <glyphgroup name="uni0356" value="1"/>
    <glyphgroup name="uni0357" value="1"/>
    <glyphgroup name="uni0358" value="1"/>
    <glyphgroup name="uni0359" value="1"/>
    <glyphgroup name="uni035A" value="1"/>
    <glyphgroup name="uni035B" value="1"/>
    <glyphgroup name="uni035C" value="1"/>
    <glyphgroup name="uni035D" value="1"/>
    <glyphgroup name="uni035E" value="1"/>
    <glyphgroup name="uni035F" value="1"/>
    <glyphgroup name="uni0360" value="1"/>
    <glyphgroup name="uni0361" value="1"/>
    <glyphgroup name="uni0362" value="1"/>
    <glyphgroup name="uni0363" value="1"/>
    <glyphgroup name="uni0364" value="1"/>
    <glyphgroup name="uni0365" value="1"/>
    <glyphgroup name="uni0366" value="1"/>
    <glyphgroup name="uni0367" value="1"/>
    <glyphgroup name="uni0368" value="1"/>
    <glyphgroup name="uni0369" value="1"/>
    <glyphgroup name="uni036A" value="1"/>
    <glyphgroup name="uni036B" value="1"/>
    <glyphgroup name="uni036C" value="1"/>
    <glyphgroup name="uni036D" value="1"/>
    <glyphgroup name="uni036E" value="1"/>
    <glyphgroup name="uni036F" value="1"/>
    <glyphgroup name="uni0370" value="1"/>
    <glyphgroup name="uni0371" value="1"/>
    <glyphgroup name="uni0372" value="1"/>
    <glyphgroup name="uni0373" value="1"/>
    <glyphgroup name="uni0376" value="1"/>
    <glyphgroup name="uni0377" value="1"/>
    <glyphgroup name="uni037A" value="1"/>
    <glyphgroup name="uni037B" value="1"/>
    <glyphgroup name="uni037C" value="1"/>
    <glyphgroup name="uni037D" value="1"/>
    <glyphgroup name="uni037F" value="1"/>
    <glyphgroup name="uni037F.smcp" value="1"/>
    <glyphgroup name="uni03BC" value="1"/>
    <glyphgroup name="uni03CF" value="1"/>
    <glyphgroup name="uni03D1" value="1"/>
    <glyphgroup name="uni03D2" value="1"/>
    <glyphgroup name="uni03D3" value="1"/>
    <glyphgroup name="uni03D4" value="1"/>
    <glyphgroup name="uni03D6" value="1"/>
    <glyphgroup name="uni03D7" value="1"/>
    <glyphgroup name="uni03D8" value="1"/>
    <glyphgroup name="uni03D9" value="1"/>
    <glyphgroup name="uni03F2" value="1"/>
    <glyphgroup name="uni03F3" value="1"/>
    <glyphgroup name="uni03F3.ccmp" value="1"/>
    <glyphgroup name="uni03F4" value="1"/>
    <glyphgroup name="uni03F5" value="1"/>
    <glyphgroup name="uni03F6" value="1"/>
    <glyphgroup name="uni03F7" value="1"/>
    <glyphgroup name="uni03F8" value="1"/>
    <glyphgroup name="uni03F9" value="1"/>
    <glyphgroup name="uni03FA" value="1"/>
    <glyphgroup name="uni03FB" value="1"/>
    <glyphgroup name="uni03FC" value="1"/>
    <glyphgroup name="uni03FD" value="1"/>
    <glyphgroup name="uni03FE" value="1"/>
    <glyphgroup name="uni03FF" value="1"/>
    <glyphgroup name="uni0400" value="1"/>
    <glyphgroup name="uni0401" value="1"/>
    <glyphgroup name="uni0401.smcp" value="1"/>
    <glyphgroup name="uni0402" value="1"/>
    <glyphgroup name="uni0402.smcp" value="1"/>
    <glyphgroup name="uni0403" value="1"/>
    <glyphgroup name="uni0403.smcp" value="1"/>
    <glyphgroup name="uni0404" value="1"/>
    <glyphgroup name="uni0404.smcp" value="1"/>
    <glyphgroup name="uni0405" value="1"/>
    <glyphgroup name="uni0405.smcp" value="1"/>
    <glyphgroup name="uni0406" value="1"/>
    <glyphgroup name="uni0406.smcp" value="1"/>
    <glyphgroup name="uni0407" value="1"/>
    <glyphgroup name="uni0407.smcp" value="1"/>
    <glyphgroup name="uni0408" value="1"/>
    <glyphgroup name="uni0408.smcp" value="1"/>
    <glyphgroup name="uni0409" value="1"/>
    <glyphgroup name="uni0409.smcp" value="1"/>
    <glyphgroup name="uni040A" value="1"/>
    <glyphgroup name="uni040A.smcp" value="1"/>
    <glyphgroup name="uni040B" value="1"/>
    <glyphgroup name="uni040B.smcp" value="1"/>
    <glyphgroup name="uni040C" value="1"/>
    <glyphgroup name="uni040C.smcp" value="1"/>
    <glyphgroup name="uni040D" value="1"/>
    <glyphgroup name="uni040E" value="1"/>
    <glyphgroup name="uni040E.smcp" value="1"/>
    <glyphgroup name="uni040F" value="1"/>
    <glyphgroup name="uni040F.smcp" value="1"/>
    <glyphgroup name="uni0410" value="1"/>
    <glyphgroup name="uni0410.smcp" value="1"/>
    <glyphgroup name="uni0411" value="1"/>
    <glyphgroup name="uni0411.smcp" value="1"/>
    <glyphgroup name="uni0412" value="1"/>
    <glyphgroup name="uni0412.smcp" value="1"/>
    <glyphgroup name="uni0413" value="1"/>
    <glyphgroup name="uni0413.smcp" value="1"/>
    <glyphgroup name="uni0414" value="1"/>
    <glyphgroup name="uni0414.smcp" value="1"/>
    <glyphgroup name="uni0415" value="1"/>
    <glyphgroup name="uni0415.smcp" value="1"/>
    <glyphgroup name="uni0416" value="1"/>
    <glyphgroup name="uni0416.smcp" value="1"/>
    <glyphgroup name="uni0417" value="1"/>
    <glyphgroup name="uni0417.smcp" value="1"/>
    <glyphgroup name="uni0418" value="1"/>
    <glyphgroup name="uni0418.smcp" value="1"/>
    <glyphgroup name="uni0419" value="1"/>
    <glyphgroup name="uni0419.smcp" value="1"/>
    <glyphgroup name="uni041A" value="1"/>
    <glyphgroup name="uni041A.smcp" value="1"/>
    <glyphgroup name="uni041B" value="1"/>
    <glyphgroup name="uni041B.smcp" value="1"/>
    <glyphgroup name="uni041C" value="1"/>
    <glyphgroup name="uni041C.smcp" value="1"/>
    <glyphgroup name="uni041D" value="1"/>
    <glyphgroup name="uni041D.smcp" value="1"/>
    <glyphgroup name="uni041E" value="1"/>
    <glyphgroup name="uni041E.smcp" value="1"/>
    <glyphgroup name="uni041F" value="1"/>
    <glyphgroup name="uni041F.smcp" value="1"/>
    <glyphgroup name="uni0420" value="1"/>
    <glyphgroup name="uni0420.smcp" value="1"/>
    <glyphgroup name="uni0421" value="1"/>
    <glyphgroup name="uni0421.smcp" value="1"/>
    <glyphgroup name="uni0422" value="1"/>
    <glyphgroup name="uni0422.smcp" value="1"/>
    <glyphgroup name="uni0423" value="1"/>
    <glyphgroup name="uni0423.smcp" value="1"/>
    <glyphgroup name="uni0424" value="1"/>
    <glyphgroup name="uni0424.smcp" value="1"/>
    <glyphgroup name="uni0425" value="1"/>
    <glyphgroup name="uni0425.smcp" value="1"/>
    <glyphgroup name="uni0426" value="1"/>
    <glyphgroup name="uni0426.smcp" value="1"/>
    <glyphgroup name="uni0427" value="1"/>
    <glyphgroup name="uni0427.smcp" value="1"/>
    <glyphgroup name="uni0428" value="1"/>
    <glyphgroup name="uni0428.smcp" value="1"/>
    <glyphgroup name="uni0429" value="1"/>
    <glyphgroup name="uni0429.smcp" value="1"/>
    <glyphgroup name="uni042A" value="1"/>
    <glyphgroup name="uni042A.smcp" value="1"/>
    <glyphgroup name="uni042B" value="1"/>
    <glyphgroup name="uni042B.smcp" value="1"/>
    <glyphgroup name="uni042C" value="1"/>
    <glyphgroup name="uni042C.smcp" value="1"/>
    <glyphgroup name="uni042D" value="1"/>
    <glyphgroup name="uni042D.smcp" value="1"/>
    <glyphgroup name="uni042E" value="1"/>
    <glyphgroup name="uni042E.smcp" value="1"/>
    <glyphgroup name="uni042F" value="1"/>
    <glyphgroup name="uni042F.smcp" value="1"/>
    <glyphgroup name="uni0430" value="1"/>
    <glyphgroup name="uni0431" value="1"/>
    <glyphgroup name="uni0432" value="1"/>
    <glyphgroup name="uni0433" value="1"/>
    <glyphgroup name="uni0434" value="1"/>
    <glyphgroup name="uni0435" value="1"/>
    <glyphgroup name="uni0436" value="1"/>
    <glyphgroup name="uni0437" value="1"/>
    <glyphgroup name="uni0438" value="1"/>
    <glyphgroup name="uni0439" value="1"/>
    <glyphgroup name="uni043A" value="1"/>
    <glyphgroup name="uni043B" value="1"/>
    <glyphgroup name="uni043C" value="1"/>
    <glyphgroup name="uni043D" value="1"/>
    <glyphgroup name="uni043E" value="1"/>
    <glyphgroup name="uni043F" value="1"/>
    <glyphgroup name="uni0440" value="1"/>
    <glyphgroup name="uni0441" value="1"/>
    <glyphgroup name="uni0442" value="1"/>
    <glyphgroup name="uni0443" value="1"/>
    <glyphgroup name="uni0444" value="1"/>
    <glyphgroup name="uni0445" value="1"/>
    <glyphgroup name="uni0446" value="1"/>
    <glyphgroup name="uni0447" value="1"/>
    <glyphgroup name="uni0448" value="1"/>
    <glyphgroup name="uni0449" value="1"/>
    <glyphgroup name="uni044A" value="1"/>
    <glyphgroup name="uni044B" value="1"/>
    <glyphgroup name="uni044C" value="1"/>
    <glyphgroup name="uni044D" value="1"/>
    <glyphgroup name="uni044E" value="1"/>
    <glyphgroup name="uni044F" value="1"/>
    <glyphgroup name="uni0450" value="1"/>
    <glyphgroup name="uni0451" value="1"/>
    <glyphgroup name="uni0452" value="1"/>
    <glyphgroup name="uni0453" value="1"/>
    <glyphgroup name="uni0454" value="1"/>
    <glyphgroup name="uni0455" value="1"/>
    <glyphgroup name="uni0456" value="1"/>
    <glyphgroup name="uni0456.ccmp" value="1"/>
    <glyphgroup name="uni0457" value="1"/>
    <glyphgroup name="uni0458" value="1"/>
    <glyphgroup name="uni0458.ccmp" value="1"/>
    <glyphgroup name="uni0459" value="1"/>
    <glyphgroup name="uni045A" value="1"/>
    <glyphgroup name="uni045B" value="1"/>
    <glyphgroup name="uni045C" value="1"/>
    <glyphgroup name="uni045D" value="1"/>
    <glyphgroup name="uni045E" value="1"/>
    <glyphgroup name="uni045F" value="1"/>
    <glyphgroup name="uni0460" value="1"/>
    <glyphgroup name="uni0461" value="1"/>
    <glyphgroup name="uni0462" value="1"/>
    <glyphgroup name="uni0463" value="1"/>
    <glyphgroup name="uni0464" value="1"/>
    <glyphgroup name="uni0465" value="1"/>
    <glyphgroup name="uni0466" value="1"/>
    <glyphgroup name="uni0467" value="1"/>
    <glyphgroup name="uni0468" value="1"/>
    <glyphgroup name="uni0469" value="1"/>
    <glyphgroup name="uni046A" value="1"/>
    <glyphgroup name="uni046B" value="1"/>
    <glyphgroup name="uni046C" value="1"/>
    <glyphgroup name="uni046D" value="1"/>
    <glyphgroup name="uni046E" value="1"/>
    <glyphgroup name="uni046F" value="1"/>
    <glyphgroup name="uni0470" value="1"/>
    <glyphgroup name="uni0471" value="1"/>
    <glyphgroup name="uni0472" value="1"/>
    <glyphgroup name="uni0473" value="1"/>
    <glyphgroup name="uni0474" value="1"/>
    <glyphgroup name="uni0475" value="1"/>
    <glyphgroup name="uni0476" value="1"/>
    <glyphgroup name="uni0477" value="1"/>
    <glyphgroup name="uni0478" value="1"/>
    <glyphgroup name="uni0479" value="1"/>
    <glyphgroup name="uni047A" value="1"/>
    <glyphgroup name="uni047B" value="1"/>
    <glyphgroup name="uni047C" value="1"/>
    <glyphgroup name="uni047D" value="1"/>
    <glyphgroup name="uni047E" value="1"/>
    <glyphgroup name="uni047F" value="1"/>
    <glyphgroup name="uni0480" value="1"/>
    <glyphgroup name="uni0481" value="1"/>
    <glyphgroup name="uni0482" value="1"/>
    <glyphgroup name="uni0483" value="1"/>
    <glyphgroup name="uni0484" value="1"/>
    <glyphgroup name="uni0485" value="1"/>
    <glyphgroup name="uni0486" value="1"/>
    <glyphgroup name="uni0487" value="1"/>
    <glyphgroup name="uni0488" value="1"/>
    <glyphgroup name="uni0489" value="1"/>
    <glyphgroup name="uni048A" value="1"/>
    <glyphgroup name="uni048B" value="1"/>
    <glyphgroup name="uni048C" value="1"/>
    <glyphgroup name="uni048D" value="1"/>
    <glyphgroup name="uni048E" value="1"/>
    <glyphgroup name="uni048F" value="1"/>
    <glyphgroup name="uni0490" value="1"/>
    <glyphgroup name="uni0490.smcp" value="1"/>
    <glyphgroup name="uni0491" value="1"/>
    <glyphgroup name="uni0492" value="1"/>
    <glyphgroup name="uni0492.smcp" value="1"/>
    <glyphgroup name="uni0493" value="1"/>
    <glyphgroup name="uni0494" value="1"/>
    <glyphgroup name="uni0495" value="1"/>
    <glyphgroup name="uni0496" value="1"/>
    <glyphgroup name="uni0496.smcp" value="1"/>
    <glyphgroup name="uni0497" value="1"/>
    <glyphgroup name="uni0498" value="1"/>
    <glyphgroup name="uni0498.smcp" value="1"/>
    <glyphgroup name="uni0499" value="1"/>
    <glyphgroup name="uni049A" value="1"/>
    <glyphgroup name="uni049A.smcp" value="1"/>
    <glyphgroup name="uni049B" value="1"/>
    <glyphgroup name="uni049C" value="1"/>
    <glyphgroup name="uni049C.smcp" value="1"/>
    <glyphgroup name="uni049D" value="1"/>
    <glyphgroup name="uni049E" value="1"/>
    <glyphgroup name="uni049F" value="1"/>
    <glyphgroup name="uni04A0" value="1"/>
    <glyphgroup name="uni04A0.smcp" value="1"/>
    <glyphgroup name="uni04A1" value="1"/>
    <glyphgroup name="uni04A2" value="1"/>
    <glyphgroup name="uni04A2.smcp" value="1"/>
    <glyphgroup name="uni04A3" value="1"/>
    <glyphgroup name="uni04A4" value="1"/>
    <glyphgroup name="uni04A5" value="1"/>
    <glyphgroup name="uni04A6" value="1"/>
    <glyphgroup name="uni04A7" value="1"/>
    <glyphgroup name="uni04A8" value="1"/>
    <glyphgroup name="uni04A8.smcp" value="1"/>
    <glyphgroup name="uni04A9" value="1"/>
    <glyphgroup name="uni04AA" value="1"/>
    <glyphgroup name="uni04AA.smcp" value="1"/>
    <glyphgroup name="uni04AB" value="1"/>
    <glyphgroup name="uni04AC" value="1"/>
    <glyphgroup name="uni04AD" value="1"/>
    <glyphgroup name="uni04AE" value="1"/>
    <glyphgroup name="uni04AE.smcp" value="1"/>
    <glyphgroup name="uni04AF" value="1"/>
    <glyphgroup name="uni04B0" value="1"/>
    <glyphgroup name="uni04B0.smcp" value="1"/>
    <glyphgroup name="uni04B1" value="1"/>
    <glyphgroup name="uni04B2" value="1"/>
    <glyphgroup name="uni04B2.smcp" value="1"/>
    <glyphgroup name="uni04B3" value="1"/>
    <glyphgroup name="uni04B4" value="1"/>
    <glyphgroup name="uni04B4.smcp" value="1"/>
    <glyphgroup name="uni04B5" value="1"/>
    <glyphgroup name="uni04B6" value="1"/>
    <glyphgroup name="uni04B7" value="1"/>
    <glyphgroup name="uni04B8" value="1"/>
    <glyphgroup name="uni04B8.smcp" value="1"/>
    <glyphgroup name="uni04B9" value="1"/>
    <glyphgroup name="uni04BA" value="1"/>
    <glyphgroup name="uni04BA.smcp" value="1"/>
    <glyphgroup name="uni04BB" value="1"/>
    <glyphgroup name="uni04BC" value="1"/>
    <glyphgroup name="uni04BC.smcp" value="1"/>
    <glyphgroup name="uni04BD" value="1"/>
    <glyphgroup name="uni04BE" value="1"/>
    <glyphgroup name="uni04BE.smcp" value="1"/>
    <glyphgroup name="uni04BF" value="1"/>
    <glyphgroup name="uni04C0" value="1"/>
    <glyphgroup name="uni04C1" value="1"/>
    <glyphgroup name="uni04C2" value="1"/>
    <glyphgroup name="uni04C3" value="1"/>
    <glyphgroup name="uni04C4" value="1"/>
    <glyphgroup name="uni04C5" value="1"/>
    <glyphgroup name="uni04C6" value="1"/>
    <glyphgroup name="uni04C7" value="1"/>
    <glyphgroup name="uni04C8" value="1"/>
    <glyphgroup name="uni04C9" value="1"/>
    <glyphgroup name="uni04CA" value="1"/>
    <glyphgroup name="uni04CB" value="1"/>
    <glyphgroup name="uni04CC" value="1"/>
    <glyphgroup name="uni04CD" value="1"/>
    <glyphgroup name="uni04CE" value="1"/>
    <glyphgroup name="uni04CF" value="1"/>
    <glyphgroup name="uni04D0" value="1"/>
    <glyphgroup name="uni04D1" value="1"/>
    <glyphgroup name="uni04D2" value="1"/>
    <glyphgroup name="uni04D3" value="1"/>
    <glyphgroup name="uni04D4" value="1"/>
    <glyphgroup name="uni04D5" value="1"/>
    <glyphgroup name="uni04D6" value="1"/>
    <glyphgroup name="uni04D7" value="1"/>
    <glyphgroup name="uni04D8" value="1"/>
    <glyphgroup name="uni04D8.smcp" value="1"/>
    <glyphgroup name="uni04D9" value="1"/>
    <glyphgroup name="uni04DA" value="1"/>
    <glyphgroup name="uni04DB" value="1"/>
    <glyphgroup name="uni04DC" value="1"/>
    <glyphgroup name="uni04DD" value="1"/>
    <glyphgroup name="uni04DE" value="1"/>
    <glyphgroup name="uni04DF" value="1"/>
    <glyphgroup name="uni04E0" value="1"/>
    <glyphgroup name="uni04E0.smcp" value="1"/>
    <glyphgroup name="uni04E1" value="1"/>
    <glyphgroup name="uni04E2" value="1"/>
    <glyphgroup name="uni04E2.smcp" value="1"/>
    <glyphgroup name="uni04E3" value="1"/>
    <glyphgroup name="uni04E4" value="1"/>
    <glyphgroup name="uni04E5" value="1"/>
    <glyphgroup name="uni04E6" value="1"/>
    <glyphgroup name="uni04E7" value="1"/>
    <glyphgroup name="uni04E8" value="1"/>
    <glyphgroup name="uni04E8.smcp" value="1"/>
    <glyphgroup name="uni04E9" value="1"/>
    <glyphgroup name="uni04EA" value="1"/>
    <glyphgroup name="uni04EB" value="1"/>
    <glyphgroup name="uni04EC" value="1"/>
    <glyphgroup name="uni04ED" value="1"/>
    <glyphgroup name="uni04EE" value="1"/>
    <glyphgroup name="uni04EE.smcp" value="1"/>
    <glyphgroup name="uni04EF" value="1"/>
    <glyphgroup name="uni04F0" value="1"/>
    <glyphgroup name="uni04F1" value="1"/>
    <glyphgroup name="uni04F2" value="1"/>
    <glyphgroup name="uni04F3" value="1"/>
    <glyphgroup name="uni04F4" value="1"/>
    <glyphgroup name="uni04F5" value="1"/>
    <glyphgroup name="uni04F6" value="1"/>
    <glyphgroup name="uni04F7" value="1"/>
    <glyphgroup name="uni04F8" value="1"/>
    <glyphgroup name="uni04F9" value="1"/>
    <glyphgroup name="uni04FA" value="1"/>
    <glyphgroup name="uni04FB" value="1"/>
    <glyphgroup name="uni04FC" value="1"/>
    <glyphgroup name="uni04FD" value="1"/>
    <glyphgroup name="uni04FE" value="1"/>
    <glyphgroup name="uni04FF" value="1"/>
    <glyphgroup name="uni0500" value="1"/>
    <glyphgroup name="uni0501" value="1"/>
    <glyphgroup name="uni0502" value="1"/>
    <glyphgroup name="uni0503" value="1"/>
    <glyphgroup name="uni0504" value="1"/>
    <glyphgroup name="uni0505" value="1"/>
    <glyphgroup name="uni0506" value="1"/>
    <glyphgroup name="uni0507" value="1"/>
    <glyphgroup name="uni0508" value="1"/>
    <glyphgroup name="uni0509" value="1"/>
    <glyphgroup name="uni050A" value="1"/>
    <glyphgroup name="uni050B" value="1"/>
    <glyphgroup name="uni050C" value="1"/>
    <glyphgroup name="uni050D" value="1"/>
    <glyphgroup name="uni050E" value="1"/>
    <glyphgroup name="uni050F" value="1"/>
    <glyphgroup name="uni0510" value="1"/>
    <glyphgroup name="uni0511" value="1"/>
    <glyphgroup name="uni0512" value="1"/>
    <glyphgroup name="uni0513" value="1"/>
    <glyphgroup name="uni0514" value="1"/>
    <glyphgroup name="uni0515" value="1"/>
    <glyphgroup name="uni0516" value="1"/>
    <glyphgroup name="uni0517" value="1"/>
    <glyphgroup name="uni0518" value="1"/>
    <glyphgroup name="uni0519" value="1"/>
    <glyphgroup name="uni051A" value="1"/>
    <glyphgroup name="uni051B" value="1"/>
    <glyphgroup name="uni051C" value="1"/>
    <glyphgroup name="uni051D" value="1"/>
    <glyphgroup name="uni051E" value="1"/>
    <glyphgroup name="uni051F" value="1"/>
    <glyphgroup name="uni0520" value="1"/>
    <glyphgroup name="uni0521" value="1"/>
    <glyphgroup name="uni0522" value="1"/>
    <glyphgroup name="uni0523" value="1"/>
    <glyphgroup name="uni0524" value="1"/>
    <glyphgroup name="uni0525" value="1"/>
    <glyphgroup name="uni0526" value="1"/>
    <glyphgroup name="uni0527" value="1"/>
    <glyphgroup name="uni0528" value="1"/>
    <glyphgroup name="uni0529" value="1"/>
    <glyphgroup name="uni052A" value="1"/>
    <glyphgroup name="uni052B" value="1"/>
    <glyphgroup name="uni052C" value="1"/>
    <glyphgroup name="uni052D" value="1"/>
    <glyphgroup name="uni052E" value="1"/>
    <glyphgroup name="uni052F" value="1"/>
    <glyphgroup name="uni1AB0" value="1"/>
    <glyphgroup name="uni1AB1" value="1"/>
    <glyphgroup name="uni1AB2" value="1"/>
    <glyphgroup name="uni1AB3" value="1"/>
    <glyphgroup name="uni1AB4" value="1"/>
    <glyphgroup name="uni1AB5" value="1"/>
    <glyphgroup name="uni1AB6" value="1"/>
    <glyphgroup name="uni1AB7" value="1"/>
    <glyphgroup name="uni1AB8" value="1"/>
    <glyphgroup name="uni1AB8_uni1ABD" value="1"/>
    <glyphgroup name="uni1AB9" value="1"/>
    <glyphgroup name="uni1AB9_uni1ABD" value="1"/>
    <glyphgroup name="uni1ABA" value="1"/>
    <glyphgroup name="uni1ABA_uni1ABD" value="1"/>
    <glyphgroup name="uni1ABB" value="1"/>
    <glyphgroup name="uni1ABC" value="1"/>
    <glyphgroup name="uni1ABC.w1" value="1"/>
    <glyphgroup name="uni1ABC.w2" value="1"/>
    <glyphgroup name="uni1ABC.w3" value="1"/>
    <glyphgroup name="uni1ABD" value="1"/>
    <glyphgroup name="uni1ABE" value="1"/>
    <glyphgroup name="uni1ABE.w1" value="1"/>
    <glyphgroup name="uni1ABE.w2" value="1"/>
    <glyphgroup name="uni1ABE.w3" value="1"/>
    <glyphgroup name="uni1D00" value="1"/>
    <glyphgroup name="uni1D01" value="1"/>
    <glyphgroup name="uni1D02" value="1"/>
    <glyphgroup name="uni1D03" value="1"/>
    <glyphgroup name="uni1D04" value="1"/>
    <glyphgroup name="uni1D05" value="1"/>
    <glyphgroup name="uni1D06" value="1"/>
    <glyphgroup name="uni1D07" value="1"/>
    <glyphgroup name="uni1D08" value="1"/>
    <glyphgroup name="uni1D09" value="1"/>
    <glyphgroup name="uni1D0A" value="1"/>
    <glyphgroup name="uni1D0B" value="1"/>
    <glyphgroup name="uni1D0C" value="1"/>
    <glyphgroup name="uni1D0D" value="1"/>
    <glyphgroup name="uni1D0E" value="1"/>
    <glyphgroup name="uni1D0F" value="1"/>
    <glyphgroup name="uni1D10" value="1"/>
    <glyphgroup name="uni1D11" value="1"/>
    <glyphgroup name="uni1D12" value="1"/>
    <glyphgroup name="uni1D13" value="1"/>
    <glyphgroup name="uni1D14" value="1"/>
    <glyphgroup name="uni1D15" value="1"/>
    <glyphgroup name="uni1D16" value="1"/>
    <glyphgroup name="uni1D17" value="1"/>
    <glyphgroup name="uni1D18" value="1"/>
    <glyphgroup name="uni1D19" value="1"/>
    <glyphgroup name="uni1D1A" value="1"/>
    <glyphgroup name="uni1D1B" value="1"/>
    <glyphgroup name="uni1D1C" value="1"/>
    <glyphgroup name="uni1D1D" value="1"/>
    <glyphgroup name="uni1D1E" value="1"/>
    <glyphgroup name="uni1D1F" value="1"/>
    <glyphgroup name="uni1D20" value="1"/>
    <glyphgroup name="uni1D21" value="1"/>
    <glyphgroup name="uni1D22" value="1"/>
    <glyphgroup name="uni1D23" value="1"/>
    <glyphgroup name="uni1D24" value="1"/>
    <glyphgroup name="uni1D25" value="1"/>
    <glyphgroup name="uni1D26" value="1"/>
    <glyphgroup name="uni1D27" value="1"/>
    <glyphgroup name="uni1D28" value="1"/>
    <glyphgroup name="uni1D29" value="1"/>
    <glyphgroup name="uni1D2A" value="1"/>
    <glyphgroup name="uni1D2B" value="1"/>
    <glyphgroup name="uni1D2C" value="1"/>
    <glyphgroup name="uni1D2D" value="1"/>
    <glyphgroup name="uni1D2E" value="1"/>
    <glyphgroup name="uni1D2F" value="1"/>
    <glyphgroup name="uni1D30" value="1"/>
    <glyphgroup name="uni1D31" value="1"/>
    <glyphgroup name="uni1D32" value="1"/>
    <glyphgroup name="uni1D33" value="1"/>
    <glyphgroup name="uni1D34" value="1"/>
    <glyphgroup name="uni1D35" value="1"/>
    <glyphgroup name="uni1D36" value="1"/>
    <glyphgroup name="uni1D37" value="1"/>
    <glyphgroup name="uni1D38" value="1"/>
    <glyphgroup name="uni1D39" value="1"/>
    <glyphgroup name="uni1D3A" value="1"/>
    <glyphgroup name="uni1D3B" value="1"/>
    <glyphgroup name="uni1D3C" value="1"/>
    <glyphgroup name="uni1D3D" value="1"/>
    <glyphgroup name="uni1D3E" value="1"/>
    <glyphgroup name="uni1D3F" value="1"/>
    <glyphgroup name="uni1D40" value="1"/>
    <glyphgroup name="uni1D41" value="1"/>
    <glyphgroup name="uni1D42" value="1"/>
    <glyphgroup name="uni1D43" value="1"/>
    <glyphgroup name="uni1D44" value="1"/>
    <glyphgroup name="uni1D45" value="1"/>
    <glyphgroup name="uni1D46" value="1"/>
    <glyphgroup name="uni1D47" value="1"/>
    <glyphgroup name="uni1D48" value="1"/>
    <glyphgroup name="uni1D49" value="1"/>
    <glyphgroup name="uni1D4A" value="1"/>
    <glyphgroup name="uni1D4B" value="1"/>
    <glyphgroup name="uni1D4C" value="1"/>
    <glyphgroup name="uni1D4D" value="1"/>
    <glyphgroup name="uni1D4E" value="1"/>
    <glyphgroup name="uni1D4F" value="1"/>
    <glyphgroup name="uni1D50" value="1"/>
    <glyphgroup name="uni1D51" value="1"/>
    <glyphgroup name="uni1D52" value="1"/>
    <glyphgroup name="uni1D53" value="1"/>
    <glyphgroup name="uni1D54" value="1"/>
    <glyphgroup name="uni1D55" value="1"/>
    <glyphgroup name="uni1D56" value="1"/>
    <glyphgroup name="uni1D57" value="1"/>
    <glyphgroup name="uni1D58" value="1"/>
    <glyphgroup name="uni1D59" value="1"/>
    <glyphgroup name="uni1D5A" value="1"/>
    <glyphgroup name="uni1D5B" value="1"/>
    <glyphgroup name="uni1D5C" value="1"/>
    <glyphgroup name="uni1D5D" value="1"/>
    <glyphgroup name="uni1D5E" value="1"/>
    <glyphgroup name="uni1D5F" value="1"/>
    <glyphgroup name="uni1D60" value="1"/>
    <glyphgroup name="uni1D61" value="1"/>
    <glyphgroup name="uni1D62" value="1"/>
    <glyphgroup name="uni1D62.ccmp" value="1"/>
    <glyphgroup name="uni1D63" value="1"/>
    <glyphgroup name="uni1D64" value="1"/>
    <glyphgroup name="uni1D65" value="1"/>
    <glyphgroup name="uni1D66" value="1"/>
    <glyphgroup name="uni1D67" value="1"/>
    <glyphgroup name="uni1D68" value="1"/>
    <glyphgroup name="uni1D69" value="1"/>
    <glyphgroup name="uni1D6A" value="1"/>
    <glyphgroup name="uni1D6B" value="1"/>
    <glyphgroup name="uni1D6C" value="1"/>
    <glyphgroup name="uni1D6D" value="1"/>
    <glyphgroup name="uni1D6E" value="1"/>
    <glyphgroup name="uni1D6F" value="1"/>
    <glyphgroup name="uni1D70" value="1"/>
    <glyphgroup name="uni1D71" value="1"/>
    <glyphgroup name="uni1D72" value="1"/>
    <glyphgroup name="uni1D73" value="1"/>
    <glyphgroup name="uni1D74" value="1"/>
    <glyphgroup name="uni1D75" value="1"/>
    <glyphgroup name="uni1D76" value="1"/>
    <glyphgroup name="uni1D77" value="1"/>
    <glyphgroup name="uni1D78" value="1"/>
    <glyphgroup name="uni1D79" value="1"/>
    <glyphgroup name="uni1D7A" value="1"/>
    <glyphgroup name="uni1D7B" value="1"/>
    <glyphgroup name="uni1D7C" value="1"/>
    <glyphgroup name="uni1D7D" value="1"/>
    <glyphgroup name="uni1D7E" value="1"/>
    <glyphgroup name="uni1D7F" value="1"/>
    <glyphgroup name="uni1D80" value="1"/>
    <glyphgroup name="uni1D81" value="1"/>
    <glyphgroup name="uni1D82" value="1"/>
    <glyphgroup name="uni1D83" value="1"/>
    <glyphgroup name="uni1D84" value="1"/>
    <glyphgroup name="uni1D85" value="1"/>
    <glyphgroup name="uni1D86" value="1"/>
    <glyphgroup name="uni1D87" value="1"/>
    <glyphgroup name="uni1D88" value="1"/>
    <glyphgroup name="uni1D89" value="1"/>
    <glyphgroup name="uni1D8A" value="1"/>
    <glyphgroup name="uni1D8B" value="1"/>
    <glyphgroup name="uni1D8C" value="1"/>
    <glyphgroup name="uni1D8D" value="1"/>
    <glyphgroup name="uni1D8E" value="1"/>
    <glyphgroup name="uni1D8F" value="1"/>
    <glyphgroup name="uni1D90" value="1"/>
    <glyphgroup name="uni1D91" value="1"/>
    <glyphgroup name="uni1D92" value="1"/>
    <glyphgroup name="uni1D93" value="1"/>
    <glyphgroup name="uni1D94" value="1"/>
    <glyphgroup name="uni1D95" value="1"/>
    <glyphgroup name="uni1D96" value="1"/>
    <glyphgroup name="uni1D96.ccmp" value="1"/>
    <glyphgroup name="uni1D97" value="1"/>
    <glyphgroup name="uni1D98" value="1"/>
    <glyphgroup name="uni1D99" value="1"/>
    <glyphgroup name="uni1D9A" value="1"/>
    <glyphgroup name="uni1D9B" value="1"/>
    <glyphgroup name="uni1D9C" value="1"/>
    <glyphgroup name="uni1D9D" value="1"/>
    <glyphgroup name="uni1D9E" value="1"/>
    <glyphgroup name="uni1D9F" value="1"/>
    <glyphgroup name="uni1DA0" value="1"/>
    <glyphgroup name="uni1DA1" value="1"/>
    <glyphgroup name="uni1DA2" value="1"/>
    <glyphgroup name="uni1DA3" value="1"/>
    <glyphgroup name="uni1DA4" value="1"/>
    <glyphgroup name="uni1DA4.ccmp" value="1"/>
    <glyphgroup name="uni1DA5" value="1"/>
    <glyphgroup name="uni1DA6" value="1"/>
    <glyphgroup name="uni1DA7" value="1"/>
    <glyphgroup name="uni1DA8" value="1"/>
    <glyphgroup name="uni1DA8.ccmp" value="1"/>
    <glyphgroup name="uni1DA9" value="1"/>
    <glyphgroup name="uni1DAA" value="1"/>
    <glyphgroup name="uni1DAB" value="1"/>
    <glyphgroup name="uni1DAC" value="1"/>
    <glyphgroup name="uni1DAD" value="1"/>
    <glyphgroup name="uni1DAE" value="1"/>
    <glyphgroup name="uni1DAF" value="1"/>
    <glyphgroup name="uni1DB0" value="1"/>
    <glyphgroup name="uni1DB1" value="1"/>
    <glyphgroup name="uni1DB2" value="1"/>
    <glyphgroup name="uni1DB3" value="1"/>
    <glyphgroup name="uni1DB4" value="1"/>
    <glyphgroup name="uni1DB5" value="1"/>
    <glyphgroup name="uni1DB6" value="1"/>
    <glyphgroup name="uni1DB7" value="1"/>
    <glyphgroup name="uni1DB8" value="1"/>
    <glyphgroup name="uni1DB9" value="1"/>
    <glyphgroup name="uni1DBA" value="1"/>
    <glyphgroup name="uni1DBB" value="1"/>
    <glyphgroup name="uni1DBC" value="1"/>
    <glyphgroup name="uni1DBD" value="1"/>
    <glyphgroup name="uni1DBE" value="1"/>
    <glyphgroup name="uni1DBF" value="1"/>
    <glyphgroup name="uni1DC0" value="1"/>
    <glyphgroup name="uni1DC1" value="1"/>
    <glyphgroup name="uni1DC2" value="1"/>
    <glyphgroup name="uni1DC3" value="1"/>
    <glyphgroup name="uni1DC4" value="1"/>
    <glyphgroup name="uni1DC5" value="1"/>
    <glyphgroup name="uni1DC6" value="1"/>
    <glyphgroup name="uni1DC7" value="1"/>
    <glyphgroup name="uni1DC8" value="1"/>
    <glyphgroup name="uni1DC9" value="1"/>
    <glyphgroup name="uni1DCA" value="1"/>
    <glyphgroup name="uni1DCB" value="1"/>
    <glyphgroup name="uni1DCC" value="1"/>
    <glyphgroup name="uni1DCD" value="1"/>
    <glyphgroup name="uni1DCE" value="1"/>
    <glyphgroup name="uni1DCF" value="1"/>
    <glyphgroup name="uni1DD0" value="1"/>
    <glyphgroup name="uni1DD1" value="1"/>
    <glyphgroup name="uni1DD2" value="1"/>
    <glyphgroup name="uni1DD3" value="1"/>
    <glyphgroup name="uni1DD4" value="1"/>
    <glyphgroup name="uni1DD5" value="1"/>
    <glyphgroup name="uni1DD6" value="1"/>
    <glyphgroup name="uni1DD7" value="1"/>
    <glyphgroup name="uni1DD8" value="1"/>
    <glyphgroup name="uni1DD9" value="1"/>
    <glyphgroup name="uni1DDA" value="1"/>
    <glyphgroup name="uni1DDB" value="1"/>
    <glyphgroup name="uni1DDC" value="1"/>
    <glyphgroup name="uni1DDD" value="1"/>
    <glyphgroup name="uni1DDE" value="1"/>
    <glyphgroup name="uni1DDF" value="1"/>
    <glyphgroup name="uni1DE0" value="1"/>
    <glyphgroup name="uni1DE1" value="1"/>
    <glyphgroup name="uni1DE2" value="1"/>
    <glyphgroup name="uni1DE3" value="1"/>
    <glyphgroup name="uni1DE4" value="1"/>
    <glyphgroup name="uni1DE5" value="1"/>
    <glyphgroup name="uni1DE6" value="1"/>
    <glyphgroup name="uni1DE7" value="1"/>
    <glyphgroup name="uni1DE8" value="1"/>
    <glyphgroup name="uni1DE9" value="1"/>
    <glyphgroup name="uni1DEA" value="1"/>
    <glyphgroup name="uni1DEB" value="1"/>
    <glyphgroup name="uni1DEC" value="1"/>
    <glyphgroup name="uni1DED" value="1"/>
    <glyphgroup name="uni1DEE" value="1"/>
    <glyphgroup name="uni1DEF" value="1"/>
    <glyphgroup name="uni1DF0" value="1"/>
    <glyphgroup name="uni1DF1" value="1"/>
    <glyphgroup name="uni1DF2" value="1"/>
    <glyphgroup name="uni1DF3" value="1"/>
    <glyphgroup name="uni1DF4" value="1"/>
    <glyphgroup name="uni1DF5" value="1"/>
    <glyphgroup name="uni1DFC" value="1"/>
    <glyphgroup name="uni1DFD" value="1"/>
    <glyphgroup name="uni1DFE" value="1"/>
    <glyphgroup name="uni1DFF" value="1"/>
    <glyphgroup name="uni1E00" value="1"/>
    <glyphgroup name="uni1E01" value="1"/>
    <glyphgroup name="uni1E02" value="1"/>
    <glyphgroup name="uni1E03" value="1"/>
    <glyphgroup name="uni1E04" value="1"/>
    <glyphgroup name="uni1E05" value="1"/>
    <glyphgroup name="uni1E06" value="1"/>
    <glyphgroup name="uni1E07" value="1"/>
    <glyphgroup name="uni1E08" value="1"/>
    <glyphgroup name="uni1E09" value="1"/>
    <glyphgroup name="uni1E0A" value="1"/>
    <glyphgroup name="uni1E0B" value="1"/>
    <glyphgroup name="uni1E0C" value="1"/>
    <glyphgroup name="uni1E0D" value="1"/>
    <glyphgroup name="uni1E0E" value="1"/>
    <glyphgroup name="uni1E0F" value="1"/>
    <glyphgroup name="uni1E10" value="1"/>
    <glyphgroup name="uni1E11" value="1"/>
    <glyphgroup name="uni1E12" value="1"/>
    <glyphgroup name="uni1E13" value="1"/>
    <glyphgroup name="uni1E14" value="1"/>
    <glyphgroup name="uni1E15" value="1"/>
    <glyphgroup name="uni1E16" value="1"/>
    <glyphgroup name="uni1E17" value="1"/>
    <glyphgroup name="uni1E18" value="1"/>
    <glyphgroup name="uni1E19" value="1"/>
    <glyphgroup name="uni1E1A" value="1"/>
    <glyphgroup name="uni1E1B" value="1"/>
    <glyphgroup name="uni1E1C" value="1"/>
    <glyphgroup name="uni1E1D" value="1"/>
    <glyphgroup name="uni1E1E" value="1"/>
    <glyphgroup name="uni1E1F" value="1"/>
    <glyphgroup name="uni1E20" value="1"/>
    <glyphgroup name="uni1E21" value="1"/>
    <glyphgroup name="uni1E22" value="1"/>
    <glyphgroup name="uni1E23" value="1"/>
    <glyphgroup name="uni1E24" value="1"/>
    <glyphgroup name="uni1E25" value="1"/>
    <glyphgroup name="uni1E26" value="1"/>
    <glyphgroup name="uni1E27" value="1"/>
    <glyphgroup name="uni1E28" value="1"/>
    <glyphgroup name="uni1E29" value="1"/>
    <glyphgroup name="uni1E2A" value="1"/>
    <glyphgroup name="uni1E2B" value="1"/>
    <glyphgroup name="uni1E2C" value="1"/>
    <glyphgroup name="uni1E2D" value="1"/>
    <glyphgroup name="uni1E2D.ccmp" value="1"/>
    <glyphgroup name="uni1E2E" value="1"/>
    <glyphgroup name="uni1E2F" value="1"/>
    <glyphgroup name="uni1E30" value="1"/>
    <glyphgroup name="uni1E31" value="1"/>
    <glyphgroup name="uni1E32" value="1"/>
    <glyphgroup name="uni1E33" value="1"/>
    <glyphgroup name="uni1E34" value="1"/>
    <glyphgroup name="uni1E35" value="1"/>
    <glyphgroup name="uni1E36" value="1"/>
    <glyphgroup name="uni1E37" value="1"/>
    <glyphgroup name="uni1E38" value="1"/>
    <glyphgroup name="uni1E39" value="1"/>
    <glyphgroup name="uni1E3A" value="1"/>
    <glyphgroup name="uni1E3B" value="1"/>
    <glyphgroup name="uni1E3C" value="1"/>
    <glyphgroup name="uni1E3D" value="1"/>
    <glyphgroup name="uni1E3E" value="1"/>
    <glyphgroup name="uni1E3F" value="1"/>
    <glyphgroup name="uni1E40" value="1"/>
    <glyphgroup name="uni1E41" value="1"/>
    <glyphgroup name="uni1E42" value="1"/>
    <glyphgroup name="uni1E43" value="1"/>
    <glyphgroup name="uni1E44" value="1"/>
    <glyphgroup name="uni1E45" value="1"/>
    <glyphgroup name="uni1E46" value="1"/>
    <glyphgroup name="uni1E47" value="1"/>
    <glyphgroup name="uni1E48" value="1"/>
    <glyphgroup name="uni1E49" value="1"/>
    <glyphgroup name="uni1E4A" value="1"/>
    <glyphgroup name="uni1E4B" value="1"/>
    <glyphgroup name="uni1E4C" value="1"/>
    <glyphgroup name="uni1E4D" value="1"/>
    <glyphgroup name="uni1E4E" value="1"/>
    <glyphgroup name="uni1E4F" value="1"/>
    <glyphgroup name="uni1E50" value="1"/>
    <glyphgroup name="uni1E51" value="1"/>
    <glyphgroup name="uni1E52" value="1"/>
    <glyphgroup name="uni1E53" value="1"/>
    <glyphgroup name="uni1E54" value="1"/>
    <glyphgroup name="uni1E55" value="1"/>
    <glyphgroup name="uni1E56" value="1"/>
    <glyphgroup name="uni1E57" value="1"/>
    <glyphgroup name="uni1E58" value="1"/>
    <glyphgroup name="uni1E59" value="1"/>
    <glyphgroup name="uni1E5A" value="1"/>
    <glyphgroup name="uni1E5B" value="1"/>
    <glyphgroup name="uni1E5C" value="1"/>
    <glyphgroup name="uni1E5D" value="1"/>
    <glyphgroup name="uni1E5E" value="1"/>
    <glyphgroup name="uni1E5F" value="1"/>
    <glyphgroup name="uni1E60" value="1"/>
    <glyphgroup name="uni1E61" value="1"/>
    <glyphgroup name="uni1E62" value="1"/>
    <glyphgroup name="uni1E63" value="1"/>
    <glyphgroup name="uni1E64" value="1"/>
    <glyphgroup name="uni1E65" value="1"/>
    <glyphgroup name="uni1E66" value="1"/>
    <glyphgroup name="uni1E67" value="1"/>
    <glyphgroup name="uni1E68" value="1"/>
    <glyphgroup name="uni1E69" value="1"/>
    <glyphgroup name="uni1E6A" value="1"/>
    <glyphgroup name="uni1E6B" value="1"/>
    <glyphgroup name="uni1E6C" value="1"/>
    <glyphgroup name="uni1E6D" value="1"/>
    <glyphgroup name="uni1E6E" value="1"/>
    <glyphgroup name="uni1E6F" value="1"/>
    <glyphgroup name="uni1E70" value="1"/>
    <glyphgroup name="uni1E71" value="1"/>
    <glyphgroup name="uni1E72" value="1"/>
    <glyphgroup name="uni1E73" value="1"/>
    <glyphgroup name="uni1E74" value="1"/>
    <glyphgroup name="uni1E75" value="1"/>
    <glyphgroup name="uni1E76" value="1"/>
    <glyphgroup name="uni1E77" value="1"/>
    <glyphgroup name="uni1E78" value="1"/>
    <glyphgroup name="uni1E79" value="1"/>
    <glyphgroup name="uni1E7A" value="1"/>
    <glyphgroup name="uni1E7B" value="1"/>
    <glyphgroup name="uni1E7C" value="1"/>
    <glyphgroup name="uni1E7D" value="1"/>
    <glyphgroup name="uni1E7E" value="1"/>
    <glyphgroup name="uni1E7F" value="1"/>
    <glyphgroup name="uni1E86" value="1"/>
    <glyphgroup name="uni1E87" value="1"/>
    <glyphgroup name="uni1E88" value="1"/>
    <glyphgroup name="uni1E89" value="1"/>
    <glyphgroup name="uni1E8A" value="1"/>
    <glyphgroup name="uni1E8B" value="1"/>
    <glyphgroup name="uni1E8C" value="1"/>
    <glyphgroup name="uni1E8D" value="1"/>
    <glyphgroup name="uni1E8E" value="1"/>
    <glyphgroup name="uni1E8F" value="1"/>
    <glyphgroup name="uni1E90" value="1"/>
    <glyphgroup name="uni1E91" value="1"/>
    <glyphgroup name="uni1E92" value="1"/>
    <glyphgroup name="uni1E93" value="1"/>
    <glyphgroup name="uni1E94" value="1"/>
    <glyphgroup name="uni1E95" value="1"/>
    <glyphgroup name="uni1E96" value="1"/>
    <glyphgroup name="uni1E97" value="1"/>
    <glyphgroup name="uni1E98" value="1"/>
    <glyphgroup name="uni1E99" value="1"/>
    <glyphgroup name="uni1E9A" value="1"/>
    <glyphgroup name="uni1E9B" value="1"/>
    <glyphgroup name="uni1E9C" value="1"/>
    <glyphgroup name="uni1E9D" value="1"/>
    <glyphgroup name="uni1E9F" value="1"/>
    <glyphgroup name="uni1EA0" value="1"/>
    <glyphgroup name="uni1EA1" value="1"/>
    <glyphgroup name="uni1EA2" value="1"/>
    <glyphgroup name="uni1EA3" value="1"/>
    <glyphgroup name="uni1EA4" value="1"/>
    <glyphgroup name="uni1EA5" value="1"/>
    <glyphgroup name="uni1EA6" value="1"/>
    <glyphgroup name="uni1EA7" value="1"/>
    <glyphgroup name="uni1EA8" value="1"/>
    <glyphgroup name="uni1EA9" value="1"/>
    <glyphgroup name="uni1EAA" value="1"/>
    <glyphgroup name="uni1EAB" value="1"/>
    <glyphgroup name="uni1EAC" value="1"/>
    <glyphgroup name="uni1EAD" value="1"/>
    <glyphgroup name="uni1EAE" value="1"/>
    <glyphgroup name="uni1EAF" value="1"/>
    <glyphgroup name="uni1EB0" value="1"/>
    <glyphgroup name="uni1EB1" value="1"/>
    <glyphgroup name="uni1EB2" value="1"/>
    <glyphgroup name="uni1EB3" value="1"/>
    <glyphgroup name="uni1EB4" value="1"/>
    <glyphgroup name="uni1EB5" value="1"/>
    <glyphgroup name="uni1EB6" value="1"/>
    <glyphgroup name="uni1EB7" value="1"/>
    <glyphgroup name="uni1EB8" value="1"/>
    <glyphgroup name="uni1EB9" value="1"/>
    <glyphgroup name="uni1EBA" value="1"/>
    <glyphgroup name="uni1EBB" value="1"/>
    <glyphgroup name="uni1EBC" value="1"/>
    <glyphgroup name="uni1EBD" value="1"/>
    <glyphgroup name="uni1EBE" value="1"/>
    <glyphgroup name="uni1EBF" value="1"/>
    <glyphgroup name="uni1EC0" value="1"/>
    <glyphgroup name="uni1EC1" value="1"/>
    <glyphgroup name="uni1EC2" value="1"/>
    <glyphgroup name="uni1EC3" value="1"/>
    <glyphgroup name="uni1EC4" value="1"/>
    <glyphgroup name="uni1EC5" value="1"/>
    <glyphgroup name="uni1EC6" value="1"/>
    <glyphgroup name="uni1EC7" value="1"/>
    <glyphgroup name="uni1EC8" value="1"/>
    <glyphgroup name="uni1EC9" value="1"/>
    <glyphgroup name="uni1ECA" value="1"/>
    <glyphgroup name="uni1ECB" value="1"/>
    <glyphgroup name="uni1ECB.ccmp" value="1"/>
    <glyphgroup name="uni1ECC" value="1"/>
    <glyphgroup name="uni1ECD" value="1"/>
    <glyphgroup name="uni1ECE" value="1"/>
    <glyphgroup name="uni1ECF" value="1"/>
    <glyphgroup name="uni1ED0" value="1"/>
    <glyphgroup name="uni1ED1" value="1"/>
    <glyphgroup name="uni1ED2" value="1"/>
    <glyphgroup name="uni1ED3" value="1"/>
    <glyphgroup name="uni1ED4" value="1"/>
    <glyphgroup name="uni1ED5" value="1"/>
    <glyphgroup name="uni1ED6" value="1"/>
    <glyphgroup name="uni1ED7" value="1"/>
    <glyphgroup name="uni1ED8" value="1"/>
    <glyphgroup name="uni1ED9" value="1"/>
    <glyphgroup name="uni1EDA" value="1"/>
    <glyphgroup name="uni1EDB" value="1"/>
    <glyphgroup name="uni1EDC" value="1"/>
    <glyphgroup name="uni1EDD" value="1"/>
    <glyphgroup name="uni1EDE" value="1"/>
    <glyphgroup name="uni1EDF" value="1"/>
    <glyphgroup name="uni1EE0" value="1"/>
    <glyphgroup name="uni1EE1" value="1"/>
    <glyphgroup name="uni1EE2" value="1"/>
    <glyphgroup name="uni1EE3" value="1"/>
    <glyphgroup name="uni1EE4" value="1"/>
    <glyphgroup name="uni1EE5" value="1"/>
    <glyphgroup name="uni1EE6" value="1"/>
    <glyphgroup name="uni1EE7" value="1"/>
    <glyphgroup name="uni1EE8" value="1"/>
    <glyphgroup name="uni1EE9" value="1"/>
    <glyphgroup name="uni1EEA" value="1"/>
    <glyphgroup name="uni1EEB" value="1"/>
    <glyphgroup name="uni1EEC" value="1"/>
    <glyphgroup name="uni1EED" value="1"/>
    <glyphgroup name="uni1EEE" value="1"/>
    <glyphgroup name="uni1EEF" value="1"/>
    <glyphgroup name="uni1EF0" value="1"/>
    <glyphgroup name="uni1EF1" value="1"/>
    <glyphgroup name="uni1EF4" value="1"/>
    <glyphgroup name="uni1EF5" value="1"/>
    <glyphgroup name="uni1EF6" value="1"/>
    <glyphgroup name="uni1EF7" value="1"/>
    <glyphgroup name="uni1EF8" value="1"/>
    <glyphgroup name="uni1EF9" value="1"/>
    <glyphgroup name="uni1EFA" value="1"/>
    <glyphgroup name="uni1EFB" value="1"/>
    <glyphgroup name="uni1EFC" value="1"/>
    <glyphgroup name="uni1EFD" value="1"/>
    <glyphgroup name="uni1EFE" value="1"/>
    <glyphgroup name="uni1EFF" value="1"/>
    <glyphgroup name="uni1F00" value="1"/>
    <glyphgroup name="uni1F01" value="1"/>
    <glyphgroup name="uni1F02" value="1"/>
    <glyphgroup name="uni1F03" value="1"/>
    <glyphgroup name="uni1F04" value="1"/>
    <glyphgroup name="uni1F05" value="1"/>
    <glyphgroup name="uni1F06" value="1"/>
    <glyphgroup name="uni1F07" value="1"/>
    <glyphgroup name="uni1F08" value="1"/>
    <glyphgroup name="uni1F09" value="1"/>
    <glyphgroup name="uni1F0A" value="1"/>
    <glyphgroup name="uni1F0B" value="1"/>
    <glyphgroup name="uni1F0C" value="1"/>
    <glyphgroup name="uni1F0D" value="1"/>
    <glyphgroup name="uni1F0E" value="1"/>
    <glyphgroup name="uni1F0F" value="1"/>
    <glyphgroup name="uni1F10" value="1"/>
    <glyphgroup name="uni1F11" value="1"/>
    <glyphgroup name="uni1F12" value="1"/>
    <glyphgroup name="uni1F13" value="1"/>
    <glyphgroup name="uni1F14" value="1"/>
    <glyphgroup name="uni1F15" value="1"/>
    <glyphgroup name="uni1F16A" value="1"/>
    <glyphgroup name="uni1F16B" value="1"/>
    <glyphgroup name="uni1F18" value="1"/>
    <glyphgroup name="uni1F19" value="1"/>
    <glyphgroup name="uni1F1A" value="1"/>
    <glyphgroup name="uni1F1B" value="1"/>
    <glyphgroup name="uni1F1C" value="1"/>
    <glyphgroup name="uni1F1D" value="1"/>
    <glyphgroup name="uni1F20" value="1"/>
    <glyphgroup name="uni1F21" value="1"/>
    <glyphgroup name="uni1F22" value="1"/>
    <glyphgroup name="uni1F23" value="1"/>
    <glyphgroup name="uni1F24" value="1"/>
    <glyphgroup name="uni1F25" value="1"/>
    <glyphgroup name="uni1F26" value="1"/>
    <glyphgroup name="uni1F27" value="1"/>
    <glyphgroup name="uni1F28" value="1"/>
    <glyphgroup name="uni1F29" value="1"/>
    <glyphgroup name="uni1F2A" value="1"/>
    <glyphgroup name="uni1F2B" value="1"/>
    <glyphgroup name="uni1F2C" value="1"/>
    <glyphgroup name="uni1F2D" value="1"/>
    <glyphgroup name="uni1F2E" value="1"/>
    <glyphgroup name="uni1F2F" value="1"/>
    <glyphgroup name="uni1F30" value="1"/>
    <glyphgroup name="uni1F31" value="1"/>
    <glyphgroup name="uni1F32" value="1"/>
    <glyphgroup name="uni1F33" value="1"/>
    <glyphgroup name="uni1F34" value="1"/>
    <glyphgroup name="uni1F35" value="1"/>
    <glyphgroup name="uni1F36" value="1"/>
    <glyphgroup name="uni1F37" value="1"/>
    <glyphgroup name="uni1F38" value="1"/>
    <glyphgroup name="uni1F39" value="1"/>
    <glyphgroup name="uni1F3A" value="1"/>
    <glyphgroup name="uni1F3B" value="1"/>
    <glyphgroup name="uni1F3C" value="1"/>
    <glyphgroup name="uni1F3D" value="1"/>
    <glyphgroup name="uni1F3E" value="1"/>
    <glyphgroup name="uni1F3F" value="1"/>
    <glyphgroup name="uni1F40" value="1"/>
    <glyphgroup name="uni1F41" value="1"/>
    <glyphgroup name="uni1F42" value="1"/>
    <glyphgroup name="uni1F43" value="1"/>
    <glyphgroup name="uni1F44" value="1"/>
    <glyphgroup name="uni1F45" value="1"/>
    <glyphgroup name="uni1F48" value="1"/>
    <glyphgroup name="uni1F49" value="1"/>
    <glyphgroup name="uni1F4A" value="1"/>
    <glyphgroup name="uni1F4B" value="1"/>
    <glyphgroup name="uni1F4C" value="1"/>
    <glyphgroup name="uni1F4D" value="1"/>
    <glyphgroup name="uni1F50" value="1"/>
    <glyphgroup name="uni1F51" value="1"/>
    <glyphgroup name="uni1F52" value="1"/>
    <glyphgroup name="uni1F53" value="1"/>
    <glyphgroup name="uni1F54" value="1"/>
    <glyphgroup name="uni1F55" value="1"/>
    <glyphgroup name="uni1F56" value="1"/>
    <glyphgroup name="uni1F57" value="1"/>
    <glyphgroup name="uni1F59" value="1"/>
    <glyphgroup name="uni1F5B" value="1"/>
    <glyphgroup name="uni1F5D" value="1"/>
    <glyphgroup name="uni1F5F" value="1"/>
    <glyphgroup name="uni1F60" value="1"/>
    <glyphgroup name="uni1F61" value="1"/>
    <glyphgroup name="uni1F62" value="1"/>
    <glyphgroup name="uni1F63" value="1"/>
    <glyphgroup name="uni1F64" value="1"/>
    <glyphgroup name="uni1F65" value="1"/>
    <glyphgroup name="uni1F66" value="1"/>
    <glyphgroup name="uni1F67" value="1"/>
    <glyphgroup name="uni1F68" value="1"/>
    <glyphgroup name="uni1F69" value="1"/>
    <glyphgroup name="uni1F6A" value="1"/>
    <glyphgroup name="uni1F6B" value="1"/>
    <glyphgroup name="uni1F6C" value="1"/>
    <glyphgroup name="uni1F6D" value="1"/>
    <glyphgroup name="uni1F6E" value="1"/>
    <glyphgroup name="uni1F6F" value="1"/>
    <glyphgroup name="uni1F70" value="1"/>
    <glyphgroup name="uni1F71" value="1"/>
    <glyphgroup name="uni1F72" value="1"/>
    <glyphgroup name="uni1F73" value="1"/>
    <glyphgroup name="uni1F74" value="1"/>
    <glyphgroup name="uni1F75" value="1"/>
    <glyphgroup name="uni1F76" value="1"/>
    <glyphgroup name="uni1F77" value="1"/>
    <glyphgroup name="uni1F78" value="1"/>
    <glyphgroup name="uni1F79" value="1"/>
    <glyphgroup name="uni1F7A" value="1"/>
    <glyphgroup name="uni1F7B" value="1"/>
    <glyphgroup name="uni1F7C" value="1"/>
    <glyphgroup name="uni1F7D" value="1"/>
    <glyphgroup name="uni1F80" value="1"/>
    <glyphgroup name="uni1F81" value="1"/>
    <glyphgroup name="uni1F82" value="1"/>
    <glyphgroup name="uni1F83" value="1"/>
    <glyphgroup name="uni1F84" value="1"/>
    <glyphgroup name="uni1F85" value="1"/>
    <glyphgroup name="uni1F86" value="1"/>
    <glyphgroup name="uni1F87" value="1"/>
    <glyphgroup name="uni1F88" value="1"/>
    <glyphgroup name="uni1F89" value="1"/>
    <glyphgroup name="uni1F8A" value="1"/>
    <glyphgroup name="uni1F8B" value="1"/>
    <glyphgroup name="uni1F8C" value="1"/>
    <glyphgroup name="uni1F8D" value="1"/>
    <glyphgroup name="uni1F8E" value="1"/>
    <glyphgroup name="uni1F8F" value="1"/>
    <glyphgroup name="uni1F90" value="1"/>
    <glyphgroup name="uni1F91" value="1"/>
    <glyphgroup name="uni1F92" value="1"/>
    <glyphgroup name="uni1F93" value="1"/>
    <glyphgroup name="uni1F94" value="1"/>
    <glyphgroup name="uni1F95" value="1"/>
    <glyphgroup name="uni1F96" value="1"/>
    <glyphgroup name="uni1F97" value="1"/>
    <glyphgroup name="uni1F98" value="1"/>
    <glyphgroup name="uni1F99" value="1"/>
    <glyphgroup name="uni1F9A" value="1"/>
    <glyphgroup name="uni1F9B" value="1"/>
    <glyphgroup name="uni1F9C" value="1"/>
    <glyphgroup name="uni1F9D" value="1"/>
    <glyphgroup name="uni1F9E" value="1"/>
    <glyphgroup name="uni1F9F" value="1"/>
    <glyphgroup name="uni1FA0" value="1"/>
    <glyphgroup name="uni1FA1" value="1"/>
    <glyphgroup name="uni1FA2" value="1"/>
    <glyphgroup name="uni1FA3" value="1"/>
    <glyphgroup name="uni1FA4" value="1"/>
    <glyphgroup name="uni1FA5" value="1"/>
    <glyphgroup name="uni1FA6" value="1"/>
    <glyphgroup name="uni1FA7" value="1"/>
    <glyphgroup name="uni1FA8" value="1"/>
    <glyphgroup name="uni1FA9" value="1"/>
    <glyphgroup name="uni1FAA" value="1"/>
    <glyphgroup name="uni1FAB" value="1"/>
    <glyphgroup name="uni1FAC" value="1"/>
    <glyphgroup name="uni1FAD" value="1"/>
    <glyphgroup name="uni1FAE" value="1"/>
    <glyphgroup name="uni1FAF" value="1"/>
    <glyphgroup name="uni1FB0" value="1"/>
    <glyphgroup name="uni1FB1" value="1"/>
    <glyphgroup name="uni1FB2" value="1"/>
    <glyphgroup name="uni1FB3" value="1"/>
    <glyphgroup name="uni1FB4" value="1"/>
    <glyphgroup name="uni1FB6" value="1"/>
    <glyphgroup name="uni1FB7" value="1"/>
    <glyphgroup name="uni1FB8" value="1"/>
    <glyphgroup name="uni1FB9" value="1"/>
    <glyphgroup name="uni1FBA" value="1"/>
    <glyphgroup name="uni1FBB" value="1"/>
    <glyphgroup name="uni1FBC" value="1"/>
    <glyphgroup name="uni1FBD" value="1"/>
    <glyphgroup name="uni1FBE" value="1"/>
    <glyphgroup name="uni1FBF" value="1"/>
    <glyphgroup name="uni1FC0" value="1"/>
    <glyphgroup name="uni1FC1" value="1"/>
    <glyphgroup name="uni1FC2" value="1"/>
    <glyphgroup name="uni1FC3" value="1"/>
    <glyphgroup name="uni1FC4" value="1"/>
    <glyphgroup name="uni1FC6" value="1"/>
    <glyphgroup name="uni1FC7" value="1"/>
    <glyphgroup name="uni1FC8" value="1"/>
    <glyphgroup name="uni1FC9" value="1"/>
    <glyphgroup name="uni1FCA" value="1"/>
    <glyphgroup name="uni1FCB" value="1"/>
    <glyphgroup name="uni1FCC" value="1"/>
    <glyphgroup name="uni1FCD" value="1"/>
    <glyphgroup name="uni1FCE" value="1"/>
    <glyphgroup name="uni1FCF" value="1"/>
    <glyphgroup name="uni1FD0" value="1"/>
    <glyphgroup name="uni1FD1" value="1"/>
    <glyphgroup name="uni1FD2" value="1"/>
    <glyphgroup name="uni1FD3" value="1"/>
    <glyphgroup name="uni1FD6" value="1"/>
    <glyphgroup name="uni1FD7" value="1"/>
    <glyphgroup name="uni1FD8" value="1"/>
    <glyphgroup name="uni1FD9" value="1"/>
    <glyphgroup name="uni1FDA" value="1"/>
    <glyphgroup name="uni1FDB" value="1"/>
    <glyphgroup name="uni1FDD" value="1"/>
    <glyphgroup name="uni1FDE" value="1"/>
    <glyphgroup name="uni1FDF" value="1"/>
    <glyphgroup name="uni1FE0" value="1"/>
    <glyphgroup name="uni1FE1" value="1"/>
    <glyphgroup name="uni1FE2" value="1"/>
    <glyphgroup name="uni1FE3" value="1"/>
    <glyphgroup name="uni1FE4" value="1"/>
    <glyphgroup name="uni1FE5" value="1"/>
    <glyphgroup name="uni1FE6" value="1"/>
    <glyphgroup name="uni1FE7" value="1"/>
    <glyphgroup name="uni1FE8" value="1"/>
    <glyphgroup name="uni1FE9" value="1"/>
    <glyphgroup name="uni1FEA" value="1"/>
    <glyphgroup name="uni1FEB" value="1"/>
    <glyphgroup name="uni1FEC" value="1"/>
    <glyphgroup name="uni1FED" value="1"/>
    <glyphgroup name="uni1FEE" value="1"/>
    <glyphgroup name="uni1FEF" value="1"/>
    <glyphgroup name="uni1FF2" value="1"/>
    <glyphgroup name="uni1FF3" value="1"/>
    <glyphgroup name="uni1FF4" value="1"/>
    <glyphgroup name="uni1FF6" value="1"/>
    <glyphgroup name="uni1FF7" value="1"/>
    <glyphgroup name="uni1FF8" value="1"/>
    <glyphgroup name="uni1FF9" value="1"/>
    <glyphgroup name="uni1FFA" value="1"/>
    <glyphgroup name="uni1FFB" value="1"/>
    <glyphgroup name="uni1FFC" value="1"/>
    <glyphgroup name="uni1FFD" value="1"/>
    <glyphgroup name="uni1FFE" value="1"/>
    <glyphgroup name="uni2000" value="1"/>
    <glyphgroup name="uni2001" value="1"/>
    <glyphgroup name="uni2002" value="1"/>
    <glyphgroup name="uni2003" value="1"/>
    <glyphgroup name="uni2004" value="1"/>
    <glyphgroup name="uni2005" value="1"/>
    <glyphgroup name="uni2006" value="1"/>
    <glyphgroup name="uni2007" value="1"/>
    <glyphgroup name="uni2008" value="1"/>
    <glyphgroup name="uni2009" value="1"/>
    <glyphgroup name="uni2009.fra" value="1"/>
    <glyphgroup name="uni200A" value="1"/>
    <glyphgroup name="uni200B" value="1"/>
    <glyphgroup name="uni2015" value="1"/>
    <glyphgroup name="uni2025" value="1"/>
    <glyphgroup name="uni202F" value="1"/>
    <glyphgroup name="uni2045" value="1"/>
    <glyphgroup name="uni2046" value="1"/>
    <glyphgroup name="uni2047" value="1"/>
    <glyphgroup name="uni2048" value="1"/>
    <glyphgroup name="uni2049" value="1"/>
    <glyphgroup name="uni204A" value="1"/>
    <glyphgroup name="uni204B" value="1"/>
    <glyphgroup name="uni204C" value="1"/>
    <glyphgroup name="uni204D" value="1"/>
    <glyphgroup name="uni204E" value="1"/>
    <glyphgroup name="uni204F" value="1"/>
    <glyphgroup name="uni2050" value="1"/>
    <glyphgroup name="uni2051" value="1"/>
    <glyphgroup name="uni2052" value="1"/>
    <glyphgroup name="uni2053" value="1"/>
    <glyphgroup name="uni2054" value="1"/>
    <glyphgroup name="uni2055" value="1"/>
    <glyphgroup name="uni2056" value="1"/>
    <glyphgroup name="uni2057" value="1"/>
    <glyphgroup name="uni2058" value="1"/>
    <glyphgroup name="uni2059" value="1"/>
    <glyphgroup name="uni205A" value="1"/>
    <glyphgroup name="uni205B" value="1"/>
    <glyphgroup name="uni205C" value="1"/>
    <glyphgroup name="uni205D" value="1"/>
    <glyphgroup name="uni205E" value="1"/>
    <glyphgroup name="uni205F" value="1"/>
    <glyphgroup name="uni2071" value="1"/>
    <glyphgroup name="uni2071.ccmp" value="1"/>
    <glyphgroup name="uni2074" value="1"/>
    <glyphgroup name="uni2090" value="1"/>
    <glyphgroup name="uni2091" value="1"/>
    <glyphgroup name="uni2092" value="1"/>
    <glyphgroup name="uni2093" value="1"/>
    <glyphgroup name="uni2094" value="1"/>
    <glyphgroup name="uni2095" value="1"/>
    <glyphgroup name="uni2096" value="1"/>
    <glyphgroup name="uni2097" value="1"/>
    <glyphgroup name="uni2098" value="1"/>
    <glyphgroup name="uni2099" value="1"/>
    <glyphgroup name="uni209A" value="1"/>
    <glyphgroup name="uni209B" value="1"/>
    <glyphgroup name="uni209C" value="1"/>
    <glyphgroup name="uni20AB" value="1"/>
    <glyphgroup name="uni20AD" value="1"/>
    <glyphgroup name="uni20AE" value="1"/>
    <glyphgroup name="uni20AF" value="1"/>
    <glyphgroup name="uni20B0" value="1"/>
    <glyphgroup name="uni20B1" value="1"/>
    <glyphgroup name="uni20B2" value="1"/>
    <glyphgroup name="uni20B3" value="1"/>
    <glyphgroup name="uni20B4" value="1"/>
    <glyphgroup name="uni20B4.smcp" value="1"/>
    <glyphgroup name="uni20B5" value="1"/>
    <glyphgroup name="uni20B6" value="1"/>
    <glyphgroup name="uni20B7" value="1"/>
    <glyphgroup name="uni20B8" value="1"/>
    <glyphgroup name="uni20B8.smcp" value="1"/>
    <glyphgroup name="uni20B9" value="1"/>
    <glyphgroup name="uni20BA" value="1"/>
    <glyphgroup name="uni20BB" value="1"/>
    <glyphgroup name="uni20BC" value="1"/>
    <glyphgroup name="uni20BD" value="1"/>
    <glyphgroup name="uni20BD.smcp" value="1"/>
    <glyphgroup name="uni20BE" value="1"/>
    <glyphgroup name="uni20DB" value="1"/>
    <glyphgroup name="uni20DC" value="1"/>
    <glyphgroup name="uni20E3" value="1"/>
    <glyphgroup name="uni20E8" value="1"/>
    <glyphgroup name="uni20F0" value="1"/>
    <glyphgroup name="uni2105" value="1"/>
    <glyphgroup name="uni2113" value="1"/>
    <glyphgroup name="uni2116" value="1"/>
    <glyphgroup name="uni2116.smcp" value="1"/>
    <glyphgroup name="uni213B" value="1"/>
    <glyphgroup name="uni214D" value="1"/>
    <glyphgroup name="uni214F" value="1"/>
    <glyphgroup name="uni2150" value="1"/>
    <glyphgroup name="uni2151" value="1"/>
    <glyphgroup name="uni2152" value="1"/>
    <glyphgroup name="uni2155" value="1"/>
    <glyphgroup name="uni2156" value="1"/>
    <glyphgroup name="uni2157" value="1"/>
    <glyphgroup name="uni2158" value="1"/>
    <glyphgroup name="uni2159" value="1"/>
    <glyphgroup name="uni215A" value="1"/>
    <glyphgroup name="uni215F" value="1"/>
    <glyphgroup name="uni2170" value="1"/>
    <glyphgroup name="uni2171" value="1"/>
    <glyphgroup name="uni2172" value="1"/>
    <glyphgroup name="uni2173" value="1"/>
    <glyphgroup name="uni2174" value="1"/>
    <glyphgroup name="uni2175" value="1"/>
    <glyphgroup name="uni2176" value="1"/>
    <glyphgroup name="uni2177" value="1"/>
    <glyphgroup name="uni2178" value="1"/>
    <glyphgroup name="uni2179" value="1"/>
    <glyphgroup name="uni217A" value="1"/>
    <glyphgroup name="uni217B" value="1"/>
    <glyphgroup name="uni217C" value="1"/>
    <glyphgroup name="uni217D" value="1"/>
    <glyphgroup name="uni217E" value="1"/>
    <glyphgroup name="uni217F" value="1"/>
    <glyphgroup name="uni2180" value="1"/>
    <glyphgroup name="uni2181" value="1"/>
    <glyphgroup name="uni2182" value="1"/>
    <glyphgroup name="uni2183" value="1"/>
    <glyphgroup name="uni2184" value="1"/>
    <glyphgroup name="uni2185" value="1"/>
    <glyphgroup name="uni2186" value="1"/>
    <glyphgroup name="uni2187" value="1"/>
    <glyphgroup name="uni2188" value="1"/>
    <glyphgroup name="uni2189" value="1"/>
    <glyphgroup name="uni27E6" value="1"/>
    <glyphgroup name="uni27E7" value="1"/>
    <glyphgroup name="uni27E8" value="1"/>
    <glyphgroup name="uni27E9" value="1"/>
    <glyphgroup name="uni27EA" value="1"/>
    <glyphgroup name="uni27EB" value="1"/>
    <glyphgroup name="uni27EC" value="1"/>
    <glyphgroup name="uni27ED" value="1"/>
    <glyphgroup name="uni27EE" value="1"/>
    <glyphgroup name="uni27EF" value="1"/>
    <glyphgroup name="uni2B4E" value="1"/>
    <glyphgroup name="uni2B4F" value="1"/>
    <glyphgroup name="uni2B5A" value="1"/>
    <glyphgroup name="uni2B5B" value="1"/>
    <glyphgroup name="uni2B5C" value="1"/>
    <glyphgroup name="uni2B5D" value="1"/>
    <glyphgroup name="uni2B5E" value="1"/>
    <glyphgroup name="uni2B5F" value="1"/>
    <glyphgroup name="uni2C60" value="1"/>
    <glyphgroup name="uni2C61" value="1"/>
    <glyphgroup name="uni2C62" value="1"/>
    <glyphgroup name="uni2C63" value="1"/>
    <glyphgroup name="uni2C64" value="1"/>
    <glyphgroup name="uni2C65" value="1"/>
    <glyphgroup name="uni2C66" value="1"/>
    <glyphgroup name="uni2C67" value="1"/>
    <glyphgroup name="uni2C68" value="1"/>
    <glyphgroup name="uni2C69" value="1"/>
    <glyphgroup name="uni2C6A" value="1"/>
    <glyphgroup name="uni2C6B" value="1"/>
    <glyphgroup name="uni2C6C" value="1"/>
    <glyphgroup name="uni2C6D" value="1"/>
    <glyphgroup name="uni2C6E" value="1"/>
    <glyphgroup name="uni2C6F" value="1"/>
    <glyphgroup name="uni2C70" value="1"/>
    <glyphgroup name="uni2C71" value="1"/>
    <glyphgroup name="uni2C72" value="1"/>
    <glyphgroup name="uni2C73" value="1"/>
    <glyphgroup name="uni2C74" value="1"/>
    <glyphgroup name="uni2C75" value="1"/>
    <glyphgroup name="uni2C76" value="1"/>
    <glyphgroup name="uni2C77" value="1"/>
    <glyphgroup name="uni2C78" value="1"/>
    <glyphgroup name="uni2C79" value="1"/>
    <glyphgroup name="uni2C7A" value="1"/>
    <glyphgroup name="uni2C7B" value="1"/>
    <glyphgroup name="uni2C7C" value="1"/>
    <glyphgroup name="uni2C7C.ccmp" value="1"/>
    <glyphgroup name="uni2C7D" value="1"/>
    <glyphgroup name="uni2C7E" value="1"/>
    <glyphgroup name="uni2C7F" value="1"/>
    <glyphgroup name="uni2DE0" value="1"/>
    <glyphgroup name="uni2DE1" value="1"/>
    <glyphgroup name="uni2DE2" value="1"/>
    <glyphgroup name="uni2DE3" value="1"/>
    <glyphgroup name="uni2DE4" value="1"/>
    <glyphgroup name="uni2DE5" value="1"/>
    <glyphgroup name="uni2DE6" value="1"/>
    <glyphgroup name="uni2DE7" value="1"/>
    <glyphgroup name="uni2DE8" value="1"/>
    <glyphgroup name="uni2DE9" value="1"/>
    <glyphgroup name="uni2DEA" value="1"/>
    <glyphgroup name="uni2DEB" value="1"/>
    <glyphgroup name="uni2DEC" value="1"/>
    <glyphgroup name="uni2DED" value="1"/>
    <glyphgroup name="uni2DEE" value="1"/>
    <glyphgroup name="uni2DEF" value="1"/>
    <glyphgroup name="uni2DF0" value="1"/>
    <glyphgroup name="uni2DF1" value="1"/>
    <glyphgroup name="uni2DF2" value="1"/>
    <glyphgroup name="uni2DF3" value="1"/>
    <glyphgroup name="uni2DF4" value="1"/>
    <glyphgroup name="uni2DF5" value="1"/>
    <glyphgroup name="uni2DF6" value="1"/>
    <glyphgroup name="uni2DF7" value="1"/>
    <glyphgroup name="uni2DF8" value="1"/>
    <glyphgroup name="uni2DF9" value="1"/>
    <glyphgroup name="uni2DFA" value="1"/>
    <glyphgroup name="uni2DFB" value="1"/>
    <glyphgroup name="uni2DFC" value="1"/>
    <glyphgroup name="uni2DFD" value="1"/>
    <glyphgroup name="uni2DFE" value="1"/>
    <glyphgroup name="uni2DFF" value="1"/>
    <glyphgroup name="uni2E00" value="1"/>
    <glyphgroup name="uni2E01" value="1"/>
    <glyphgroup name="uni2E02" value="1"/>
    <glyphgroup name="uni2E03" value="1"/>
    <glyphgroup name="uni2E04" value="1"/>
    <glyphgroup name="uni2E05" value="1"/>
    <glyphgroup name="uni2E06" value="1"/>
    <glyphgroup name="uni2E07" value="1"/>
    <glyphgroup name="uni2E08" value="1"/>
    <glyphgroup name="uni2E09" value="1"/>
    <glyphgroup name="uni2E0A" value="1"/>
    <glyphgroup name="uni2E0B" value="1"/>
    <glyphgroup name="uni2E0C" value="1"/>
    <glyphgroup name="uni2E0D" value="1"/>
    <glyphgroup name="uni2E0E" value="1"/>
    <glyphgroup name="uni2E0F" value="1"/>
    <glyphgroup name="uni2E10" value="1"/>
    <glyphgroup name="uni2E11" value="1"/>
    <glyphgroup name="uni2E12" value="1"/>
    <glyphgroup name="uni2E13" value="1"/>
    <glyphgroup name="uni2E14" value="1"/>
    <glyphgroup name="uni2E15" value="1"/>
    <glyphgroup name="uni2E16" value="1"/>
    <glyphgroup name="uni2E17" value="1"/>
    <glyphgroup name="uni2E18" value="1"/>
    <glyphgroup name="uni2E19" value="1"/>
    <glyphgroup name="uni2E1A" value="1"/>
    <glyphgroup name="uni2E1B" value="1"/>
    <glyphgroup name="uni2E1C" value="1"/>
    <glyphgroup name="uni2E1D" value="1"/>
    <glyphgroup name="uni2E1E" value="1"/>
    <glyphgroup name="uni2E1F" value="1"/>
    <glyphgroup name="uni2E20" value="1"/>
    <glyphgroup name="uni2E21" value="1"/>
    <glyphgroup name="uni2E22" value="1"/>
    <glyphgroup name="uni2E23" value="1"/>
    <glyphgroup name="uni2E24" value="1"/>
    <glyphgroup name="uni2E25" value="1"/>
    <glyphgroup name="uni2E26" value="1"/>
    <glyphgroup name="uni2E27" value="1"/>
    <glyphgroup name="uni2E28" value="1"/>
    <glyphgroup name="uni2E29" value="1"/>
    <glyphgroup name="uni2E2A" value="1"/>
    <glyphgroup name="uni2E2B" value="1"/>
    <glyphgroup name="uni2E2C" value="1"/>
    <glyphgroup name="uni2E2D" value="1"/>
    <glyphgroup name="uni2E2E" value="1"/>
    <glyphgroup name="uni2E2F" value="1"/>
    <glyphgroup name="uni2E30" value="1"/>
    <glyphgroup name="uni2E31" value="1"/>
    <glyphgroup name="uni2E32" value="1"/>
    <glyphgroup name="uni2E33" value="1"/>
    <glyphgroup name="uni2E34" value="1"/>
    <glyphgroup name="uni2E35" value="1"/>
    <glyphgroup name="uni2E36" value="1"/>
    <glyphgroup name="uni2E37" value="1"/>
    <glyphgroup name="uni2E38" value="1"/>
    <glyphgroup name="uni2E39" value="1"/>
    <glyphgroup name="uni2E3A" value="1"/>
    <glyphgroup name="uni2E3B" value="1"/>
    <glyphgroup name="uni2E3C" value="1"/>
    <glyphgroup name="uni2E3D" value="1"/>
    <glyphgroup name="uni2E3E" value="1"/>
    <glyphgroup name="uni2E3F" value="1"/>
    <glyphgroup name="uni2E40" value="1"/>
    <glyphgroup name="uni2E41" value="1"/>
    <glyphgroup name="uni2E42" value="1"/>
    <glyphgroup name="uniA640" value="1"/>
    <glyphgroup name="uniA641" value="1"/>
    <glyphgroup name="uniA642" value="1"/>
    <glyphgroup name="uniA643" value="1"/>
    <glyphgroup name="uniA644" value="1"/>
    <glyphgroup name="uniA645" value="1"/>
    <glyphgroup name="uniA646" value="1"/>
    <glyphgroup name="uniA647" value="1"/>
    <glyphgroup name="uniA648" value="1"/>
    <glyphgroup name="uniA649" value="1"/>
    <glyphgroup name="uniA64A" value="1"/>
    <glyphgroup name="uniA64B" value="1"/>
    <glyphgroup name="uniA64C" value="1"/>
    <glyphgroup name="uniA64D" value="1"/>
    <glyphgroup name="uniA64E" value="1"/>
    <glyphgroup name="uniA64F" value="1"/>
    <glyphgroup name="uniA650" value="1"/>
    <glyphgroup name="uniA651" value="1"/>
    <glyphgroup name="uniA652" value="1"/>
    <glyphgroup name="uniA653" value="1"/>
    <glyphgroup name="uniA654" value="1"/>
    <glyphgroup name="uniA655" value="1"/>
    <glyphgroup name="uniA656" value="1"/>
    <glyphgroup name="uniA657" value="1"/>
    <glyphgroup name="uniA658" value="1"/>
    <glyphgroup name="uniA659" value="1"/>
    <glyphgroup name="uniA65A" value="1"/>
    <glyphgroup name="uniA65B" value="1"/>
    <glyphgroup name="uniA65C" value="1"/>
    <glyphgroup name="uniA65D" value="1"/>
    <glyphgroup name="uniA65E" value="1"/>
    <glyphgroup name="uniA65F" value="1"/>
    <glyphgroup name="uniA660" value="1"/>
    <glyphgroup name="uniA661" value="1"/>
    <glyphgroup name="uniA662" value="1"/>
    <glyphgroup name="uniA663" value="1"/>
    <glyphgroup name="uniA664" value="1"/>
    <glyphgroup name="uniA665" value="1"/>
    <glyphgroup name="uniA666" value="1"/>
    <glyphgroup name="uniA667" value="1"/>
    <glyphgroup name="uniA668" value="1"/>
    <glyphgroup name="uniA669" value="1"/>
    <glyphgroup name="uniA66A" value="1"/>
    <glyphgroup name="uniA66B" value="1"/>
    <glyphgroup name="uniA66C" value="1"/>
    <glyphgroup name="uniA66D" value="1"/>
    <glyphgroup name="uniA66E" value="1"/>
    <glyphgroup name="uniA66F" value="1"/>
    <glyphgroup name="uniA670" value="1"/>
    <glyphgroup name="uniA671" value="1"/>
    <glyphgroup name="uniA672" value="1"/>
    <glyphgroup name="uniA673" value="1"/>
    <glyphgroup name="uniA674" value="1"/>
    <glyphgroup name="uniA675" value="1"/>
    <glyphgroup name="uniA676" value="1"/>
    <glyphgroup name="uniA677" value="1"/>
    <glyphgroup name="uniA678" value="1"/>
    <glyphgroup name="uniA679" value="1"/>
    <glyphgroup name="uniA67A" value="1"/>
    <glyphgroup name="uniA67B" value="1"/>
    <glyphgroup name="uniA67C" value="1"/>
    <glyphgroup name="uniA67D" value="1"/>
    <glyphgroup name="uniA67E" value="1"/>
    <glyphgroup name="uniA67F" value="1"/>
    <glyphgroup name="uniA680" value="1"/>
    <glyphgroup name="uniA681" value="1"/>
    <glyphgroup name="uniA682" value="1"/>
    <glyphgroup name="uniA683" value="1"/>
    <glyphgroup name="uniA684" value="1"/>
    <glyphgroup name="uniA685" value="1"/>
    <glyphgroup name="uniA686" value="1"/>
    <glyphgroup name="uniA687" value="1"/>
    <glyphgroup name="uniA688" value="1"/>
    <glyphgroup name="uniA689" value="1"/>
    <glyphgroup name="uniA68A" value="1"/>
    <glyphgroup name="uniA68B" value="1"/>
    <glyphgroup name="uniA68C" value="1"/>
    <glyphgroup name="uniA68D" value="1"/>
    <glyphgroup name="uniA68E" value="1"/>
    <glyphgroup name="uniA68F" value="1"/>
    <glyphgroup name="uniA690" value="1"/>
    <glyphgroup name="uniA691" value="1"/>
    <glyphgroup name="uniA692" value="1"/>
    <glyphgroup name="uniA693" value="1"/>
    <glyphgroup name="uniA694" value="1"/>
    <glyphgroup name="uniA695" value="1"/>
    <glyphgroup name="uniA696" value="1"/>
    <glyphgroup name="uniA697" value="1"/>
    <glyphgroup name="uniA698" value="1"/>
    <glyphgroup name="uniA699" value="1"/>
    <glyphgroup name="uniA69A" value="1"/>
    <glyphgroup name="uniA69B" value="1"/>
    <glyphgroup name="uniA69C" value="1"/>
    <glyphgroup name="uniA69D" value="1"/>
    <glyphgroup name="uniA69F" value="1"/>
    <glyphgroup name="uniA700" value="1"/>
    <glyphgroup name="uniA701" value="1"/>
    <glyphgroup name="uniA702" value="1"/>
    <glyphgroup name="uniA703" value="1"/>
    <glyphgroup name="uniA704" value="1"/>
    <glyphgroup name="uniA705" value="1"/>
    <glyphgroup name="uniA706" value="1"/>
    <glyphgroup name="uniA707" value="1"/>
    <glyphgroup name="uniA708" value="1"/>
    <glyphgroup name="uniA709" value="1"/>
    <glyphgroup name="uniA70A" value="1"/>
    <glyphgroup name="uniA70B" value="1"/>
    <glyphgroup name="uniA70C" value="1"/>
    <glyphgroup name="uniA70D" value="1"/>
    <glyphgroup name="uniA70E" value="1"/>
    <glyphgroup name="uniA70F" value="1"/>
    <glyphgroup name="uniA710" value="1"/>
    <glyphgroup name="uniA711" value="1"/>
    <glyphgroup name="uniA712" value="1"/>
    <glyphgroup name="uniA713" value="1"/>
    <glyphgroup name="uniA714" value="1"/>
    <glyphgroup name="uniA715" value="1"/>
    <glyphgroup name="uniA716" value="1"/>
    <glyphgroup name="uniA717" value="1"/>
    <glyphgroup name="uniA718" value="1"/>
    <glyphgroup name="uniA719" value="1"/>
    <glyphgroup name="uniA71A" value="1"/>
    <glyphgroup name="uniA71B" value="1"/>
    <glyphgroup name="uniA71C" value="1"/>
    <glyphgroup name="uniA71D" value="1"/>
    <glyphgroup name="uniA71E" value="1"/>
    <glyphgroup name="uniA71F" value="1"/>
    <glyphgroup name="uniA720" value="1"/>
    <glyphgroup name="uniA721" value="1"/>
    <glyphgroup name="uniA722" value="1"/>
    <glyphgroup name="uniA723" value="1"/>
    <glyphgroup name="uniA724" value="1"/>
    <glyphgroup name="uniA725" value="1"/>
    <glyphgroup name="uniA726" value="1"/>
    <glyphgroup name="uniA727" value="1"/>
    <glyphgroup name="uniA728" value="1"/>
    <glyphgroup name="uniA729" value="1"/>
    <glyphgroup name="uniA72A" value="1"/>
    <glyphgroup name="uniA72B" value="1"/>
    <glyphgroup name="uniA72C" value="1"/>
    <glyphgroup name="uniA72D" value="1"/>
    <glyphgroup name="uniA72E" value="1"/>
    <glyphgroup name="uniA72F" value="1"/>
    <glyphgroup name="uniA730" value="1"/>
    <glyphgroup name="uniA731" value="1"/>
    <glyphgroup name="uniA732" value="1"/>
    <glyphgroup name="uniA733" value="1"/>
    <glyphgroup name="uniA734" value="1"/>
    <glyphgroup name="uniA735" value="1"/>
    <glyphgroup name="uniA736" value="1"/>
    <glyphgroup name="uniA737" value="1"/>
    <glyphgroup name="uniA738" value="1"/>
    <glyphgroup name="uniA739" value="1"/>
    <glyphgroup name="uniA73A" value="1"/>
    <glyphgroup name="uniA73B" value="1"/>
    <glyphgroup name="uniA73C" value="1"/>
    <glyphgroup name="uniA73D" value="1"/>
    <glyphgroup name="uniA73E" value="1"/>
    <glyphgroup name="uniA73F" value="1"/>
    <glyphgroup name="uniA740" value="1"/>
    <glyphgroup name="uniA741" value="1"/>
    <glyphgroup name="uniA742" value="1"/>
    <glyphgroup name="uniA743" value="1"/>
    <glyphgroup name="uniA744" value="1"/>
    <glyphgroup name="uniA745" value="1"/>
    <glyphgroup name="uniA746" value="1"/>
    <glyphgroup name="uniA747" value="1"/>
    <glyphgroup name="uniA748" value="1"/>
    <glyphgroup name="uniA749" value="1"/>
    <glyphgroup name="uniA74A" value="1"/>
    <glyphgroup name="uniA74B" value="1"/>
    <glyphgroup name="uniA74C" value="1"/>
    <glyphgroup name="uniA74D" value="1"/>
    <glyphgroup name="uniA74E" value="1"/>
    <glyphgroup name="uniA74F" value="1"/>
    <glyphgroup name="uniA750" value="1"/>
    <glyphgroup name="uniA751" value="1"/>
    <glyphgroup name="uniA752" value="1"/>
    <glyphgroup name="uniA753" value="1"/>
    <glyphgroup name="uniA754" value="1"/>
    <glyphgroup name="uniA755" value="1"/>
    <glyphgroup name="uniA756" value="1"/>
    <glyphgroup name="uniA757" value="1"/>
    <glyphgroup name="uniA758" value="1"/>
    <glyphgroup name="uniA759" value="1"/>
    <glyphgroup name="uniA75A" value="1"/>
    <glyphgroup name="uniA75B" value="1"/>
    <glyphgroup name="uniA75C" value="1"/>
    <glyphgroup name="uniA75D" value="1"/>
    <glyphgroup name="uniA75E" value="1"/>
    <glyphgroup name="uniA75F" value="1"/>
    <glyphgroup name="uniA760" value="1"/>
    <glyphgroup name="uniA761" value="1"/>
    <glyphgroup name="uniA762" value="1"/>
    <glyphgroup name="uniA763" value="1"/>
    <glyphgroup name="uniA764" value="1"/>
    <glyphgroup name="uniA765" value="1"/>
    <glyphgroup name="uniA766" value="1"/>
    <glyphgroup name="uniA767" value="1"/>
    <glyphgroup name="uniA768" value="1"/>
    <glyphgroup name="uniA769" value="1"/>
    <glyphgroup name="uniA76A" value="1"/>
    <glyphgroup name="uniA76B" value="1"/>
    <glyphgroup name="uniA76C" value="1"/>
    <glyphgroup name="uniA76D" value="1"/>
    <glyphgroup name="uniA76E" value="1"/>
    <glyphgroup name="uniA76F" value="1"/>
    <glyphgroup name="uniA770" value="1"/>
    <glyphgroup name="uniA771" value="1"/>
    <glyphgroup name="uniA772" value="1"/>
    <glyphgroup name="uniA773" value="1"/>
    <glyphgroup name="uniA774" value="1"/>
    <glyphgroup name="uniA775" value="1"/>
    <glyphgroup name="uniA776" value="1"/>
    <glyphgroup name="uniA777" value="1"/>
    <glyphgroup name="uniA778" value="1"/>
    <glyphgroup name="uniA779" value="1"/>
    <glyphgroup name="uniA77A" value="1"/>
    <glyphgroup name="uniA77B" value="1"/>
    <glyphgroup name="uniA77C" value="1"/>
    <glyphgroup name="uniA77D" value="1"/>
    <glyphgroup name="uniA77E" value="1"/>
    <glyphgroup name="uniA77F" value="1"/>
    <glyphgroup name="uniA780" value="1"/>
    <glyphgroup name="uniA781" value="1"/>
    <glyphgroup name="uniA782" value="1"/>
    <glyphgroup name="uniA783" value="1"/>
    <glyphgroup name="uniA784" value="1"/>
    <glyphgroup name="uniA785" value="1"/>
    <glyphgroup name="uniA786" value="1"/>
    <glyphgroup name="uniA787" value="1"/>
    <glyphgroup name="uniA788" value="1"/>
    <glyphgroup name="uniA789" value="1"/>
    <glyphgroup name="uniA78A" value="1"/>
    <glyphgroup name="uniA78B" value="1"/>
    <glyphgroup name="uniA78C" value="1"/>
    <glyphgroup name="uniA78D" value="1"/>
    <glyphgroup name="uniA78E" value="1"/>
    <glyphgroup name="uniA78F" value="1"/>
    <glyphgroup name="uniA790" value="1"/>
    <glyphgroup name="uniA791" value="1"/>
    <glyphgroup name="uniA792" value="1"/>
    <glyphgroup name="uniA793" value="1"/>
    <glyphgroup name="uniA794" value="1"/>
    <glyphgroup name="uniA795" value="1"/>
    <glyphgroup name="uniA796" value="1"/>
    <glyphgroup name="uniA797" value="1"/>
    <glyphgroup name="uniA798" value="1"/>
    <glyphgroup name="uniA799" value="1"/>
    <glyphgroup name="uniA79A" value="1"/>
    <glyphgroup name="uniA79B" value="1"/>
    <glyphgroup name="uniA79C" value="1"/>
    <glyphgroup name="uniA79D" value="1"/>
    <glyphgroup name="uniA79E" value="1"/>
    <glyphgroup name="uniA79F" value="1"/>
    <glyphgroup name="uniA7A0" value="1"/>
    <glyphgroup name="uniA7A1" value="1"/>
    <glyphgroup name="uniA7A2" value="1"/>
    <glyphgroup name="uniA7A3" value="1"/>
    <glyphgroup name="uniA7A4" value="1"/>
    <glyphgroup name="uniA7A5" value="1"/>
    <glyphgroup name="uniA7A6" value="1"/>
    <glyphgroup name="uniA7A7" value="1"/>
    <glyphgroup name="uniA7A8" value="1"/>
    <glyphgroup name="uniA7A9" value="1"/>
    <glyphgroup name="uniA7AA" value="1"/>
    <glyphgroup name="uniA7AB" value="1"/>
    <glyphgroup name="uniA7AC" value="1"/>
    <glyphgroup name="uniA7AD" value="1"/>
    <glyphgroup name="uniA7B0" value="1"/>
    <glyphgroup name="uniA7B1" value="1"/>
    <glyphgroup name="uniA7F7" value="1"/>
    <glyphgroup name="uniA7F8" value="1"/>
    <glyphgroup name="uniA7F9" value="1"/>
    <glyphgroup name="uniA7FA" value="1"/>
    <glyphgroup name="uniA7FB" value="1"/>
    <glyphgroup name="uniA7FC" value="1"/>
    <glyphgroup name="uniA7FD" value="1"/>
    <glyphgroup name="uniA7FE" value="1"/>
    <glyphgroup name="uniA7FF" value="1"/>
    <glyphgroup name="uniA92E" value="1"/>
    <glyphgroup name="uniAB30" value="1"/>
    <glyphgroup name="uniAB31" value="1"/>
    <glyphgroup name="uniAB32" value="1"/>
    <glyphgroup name="uniAB33" value="1"/>
    <glyphgroup name="uniAB34" value="1"/>
    <glyphgroup name="uniAB35" value="1"/>
    <glyphgroup name="uniAB36" value="1"/>
    <glyphgroup name="uniAB37" value="1"/>
    <glyphgroup name="uniAB38" value="1"/>
    <glyphgroup name="uniAB39" value="1"/>
    <glyphgroup name="uniAB3A" value="1"/>
    <glyphgroup name="uniAB3B" value="1"/>
    <glyphgroup name="uniAB3C" value="1"/>
    <glyphgroup name="uniAB3D" value="1"/>
    <glyphgroup name="uniAB3E" value="1"/>
    <glyphgroup name="uniAB3F" value="1"/>
    <glyphgroup name="uniAB40" value="1"/>
    <glyphgroup name="uniAB41" value="1"/>
    <glyphgroup name="uniAB42" value="1"/>
    <glyphgroup name="uniAB43" value="1"/>
    <glyphgroup name="uniAB44" value="1"/>
    <glyphgroup name="uniAB45" value="1"/>
    <glyphgroup name="uniAB46" value="1"/>
    <glyphgroup name="uniAB47" value="1"/>
    <glyphgroup name="uniAB48" value="1"/>
    <glyphgroup name="uniAB49" value="1"/>
    <glyphgroup name="uniAB4A" value="1"/>
    <glyphgroup name="uniAB4B" value="1"/>
    <glyphgroup name="uniAB4C" value="1"/>
    <glyphgroup name="uniAB4D" value="1"/>
    <glyphgroup name="uniAB4E" value="1"/>
    <glyphgroup name="uniAB4F" value="1"/>
    <glyphgroup name="uniAB50" value="1"/>
    <glyphgroup name="uniAB51" value="1"/>
    <glyphgroup name="uniAB52" value="1"/>
    <glyphgroup name="uniAB53" value="1"/>
    <glyphgroup name="uniAB54" value="1"/>
    <glyphgroup name="uniAB55" value="1"/>
    <glyphgroup name="uniAB56" value="1"/>
    <glyphgroup name="uniAB57" value="1"/>
    <glyphgroup name="uniAB58" value="1"/>
    <glyphgroup name="uniAB59" value="1"/>
    <glyphgroup name="uniAB5A" value="1"/>
    <glyphgroup name="uniAB5B" value="1"/>
    <glyphgroup name="uniAB5C" value="1"/>
    <glyphgroup name="uniAB5D" value="1"/>
    <glyphgroup name="uniAB5E" value="1"/>
    <glyphgroup name="uniAB5F" value="1"/>
    <glyphgroup name="uniAB64" value="1"/>
    <glyphgroup name="uniAB65" value="1"/>
    <glyphgroup name="uniFE20" value="1"/>
    <glyphgroup name="uniFE21" value="1"/>
    <glyphgroup name="uniFE22" value="1"/>
    <glyphgroup name="uniFE23" value="1"/>
    <glyphgroup name="uniFE24" value="1"/>
    <glyphgroup name="uniFE25" value="1"/>
    <glyphgroup name="uniFE26" value="1"/>
    <glyphgroup name="uniFE27" value="1"/>
    <glyphgroup name="uniFE28" value="1"/>
    <glyphgroup name="uniFE29" value="1"/>
    <glyphgroup name="uniFE2A" value="1"/>
    <glyphgroup name="uniFE2B" value="1"/>
    <glyphgroup name="uniFE2C" value="1"/>
    <glyphgroup name="uniFE2D" value="1"/>
    <glyphgroup name="uniFEFF" value="1"/>
    <glyphgroup name="uniFFFC" value="1"/>
    <glyphgroup name="uniFFFD" value="1"/>
    <glyphgroup name="uogonek" value="1"/>
    <glyphgroup name="upsilon" value="1"/>
    <glyphgroup name="upsilondieresis" value="1"/>
    <glyphgroup name="upsilondieresistonos" value="1"/>
    <glyphgroup name="upsilonlatin" value="1"/>
    <glyphgroup name="upsilontonos" value="1"/>
    <glyphgroup name="uring" value="1"/>
    <glyphgroup name="utilde" value="1"/>
    <glyphgroup name="v" value="1"/>
    <glyphgroup name="versicle" value="1"/>
    <glyphgroup name="verticalbardbl" value="1"/>
    <glyphgroup name="vscript" value="1"/>
    <glyphgroup name="vturn" value="1"/>
    <glyphgroup name="w" value="1"/>
    <glyphgroup name="wacute" value="1"/>
    <glyphgroup name="wcircumflex" value="1"/>
    <glyphgroup name="wdieresis" value="1"/>
    <glyphgroup name="wgrave" value="1"/>
    <glyphgroup name="whiteCircle" value="0"/>
    <glyphgroup name="won" value="1"/>
    <glyphgroup name="wsuper" value="1"/>
    <glyphgroup name="wturn" value="1"/>
    <glyphgroup name="wynn" value="1"/>
    <glyphgroup name="x" value="1"/>
    <glyphgroup name="xi" value="1"/>
    <glyphgroup name="xsuper" value="1"/>
    <glyphgroup name="xsupnosp" value="1"/>
    <glyphgroup name="y" value="1"/>
    <glyphgroup name="yacute" value="1"/>
    <glyphgroup name="ycircumflex" value="1"/>
    <glyphgroup name="ydieresis" value="1"/>
    <glyphgroup name="yen" value="1"/>
    <glyphgroup name="yen.smcp" value="1"/>
    <glyphgroup name="ygrave" value="1"/>
    <glyphgroup name="yhook" value="1"/>
    <glyphgroup name="ysuper" value="1"/>
    <glyphgroup name="yturn" value="1"/>
    <glyphgroup name="z" value="1"/>
    <glyphgroup name="zacute" value="1"/>
    <glyphgroup name="zbar" value="1"/>
    <glyphgroup name="zcaron" value="1"/>
    <glyphgroup name="zcurl" value="1"/>
    <glyphgroup name="zdotaccent" value="1"/>
    <glyphgroup name="zero" value="1"/>
    <glyphgroup name="zero.frac" value="1"/>
    <glyphgroup name="zero.onum" value="1"/>
    <glyphgroup name="zero.pnum" value="1"/>
    <glyphgroup name="zero.smcp" value="1"/>
    <glyphgroup name="zero.sup" value="1"/>
    <glyphgroup name="zero.tnum" value="1"/>
    <glyphgroup name="zerosub" value="1"/>
    <glyphgroup name="zerosuperior" value="1"/>
    <glyphgroup name="zeta" value="1"/>
    <glyphgroup name="zrthook" value="1"/>
  </TSI5>

  <maxp>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="0x10000"/>
    <numGlyphs value="3390"/>
    <maxPoints value="336"/>
    <maxContours value="21"/>
    <maxCompositePoints value="118"/>
    <maxCompositeContours value="8"/>
    <maxZones value="2"/>
    <maxTwilightPoints value="16"/>
    <maxStorage value="47"/>
    <maxFunctionDefs value="154"/>
    <maxInstructionDefs value="0"/>
    <maxStackElements value="742"/>
    <maxSizeOfInstructions value="3957"/>
    <maxComponentElements value="6"/>
    <maxComponentDepth value="1"/>
  </maxp>

</ttFont>
